import { BasicMintDelegate, Capo, bytesToText, UutName, textToBytes, mkValuesEntry, hasReqts, partialTxn, txn, realMul, toFixedReal, debugMath, realDiv, ContractDataBridge, EnumBridge, impliedSeedActivityMaker, DataBridgeReaderClass, WrappedDgDataContract, dumpAny, displayTokenName, DelegatedDataContract } from '@donecollectively/stellar-contracts';
import { makeCast } from '@helios-lang/contract-utils';
import { makeTxOutput, makeInlineTxOutputDatum, makeValue } from '@helios-lang/ledger';
export { makeSTokMintDelegateBundle } from './contracts-preprod/STokMintDelegate.hlb.mjs';
import { encodeUtf8 } from '@helios-lang/codec-utils';
import './VestingData.mjs';
import './VxfProtocol.mjs';
import '@helios-lang/compiler-utils';
import './contracts-preprod/StellarTokenomics.hlb.mjs';

class STokMintDelegate extends BasicMintDelegate {
  // MAINTAINERS NOTE: DO NOT EXPOSE THIS DATA BRIDGE CLASS.
  // dataBridgeClass = STokMintDelegateDataBridge;
  // INSTEAD, Subclasses should assign their own dataBridgeClass.
  // ditto, scriptBundle()
  // scriptBundle() {
  //     console.warn("STokMintDelegate.scriptBundle(): using default on-chain scripts\n"+
  //         "  ... override this method in your subclass to use custom on-chain scripts\n"+
  //         "  ... also, provide a custom `get delegateName()` and dataBridgeClass = ..."
  //     );
  //     return STokMintDelegateBundle.create()
  // }
  get delegateName() {
    return "STokMintDelegate";
  }
  constructor(...args) {
    super(...args);
    this.scriptBundleClass();
  }
  async scriptBundleClass() {
    throw new Error(`${this.constructor.name}: required method scriptBundleClass not implemented for subclass of STokMintDelegate`);
  }
  // @Activity.redeemer
  // activityMintingParticipantToken(seedFrom: hasSeed) : isActivity {
  //     const seed = this.getSeed(seedFrom)
  //     return  this.mkSeededMintingActivity("MintingParticipantToken", seed);
  // }
  // _m : HeliosModuleSrc
  // get specializedMintDelegate(): HeliosModuleSrc {
  //     if (this._m) return this._m
  //     return this._m = mkHeliosModule(SpecialMintDelegate, "specializedDelegate");
  // }
}

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = __getOwnPropDesc(target, key) ;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (decorator(target, key, result) ) || result;
  if (result) __defProp(target, key, result);
  return result;
};
class StellarTokenomicsCapo extends Capo {
  // including this creates problems with subclassing with different config settings.
  // leaving it here as a pattern to be replicated where needed.
  // async XXXmkAdditionalCharterDatumArgs(initialTcx, charterDatumArgs) {
  //     const promise = this.txnMustGetSeedUtxo(
  //         initialTcx,
  //         "bootstrapping tokenomics delegates",
  //         ["lbm-xxxxxxxx"]
  //     ).then(async (seedUtxo) => {
  //         // mint uuts for all the delegates
  //         const tcx = await this.txnWillMintUuts(
  //             initialTcx,
  //             ["vault"],
  //             {
  //                 vaultDelegate: "vault",
  //             }
  //         );
  //         // create a delegate link for each delegate, using the corresponding UUT.
  //         const vaultDelegate = await this.txnCreateDelegateLink<
  //             StellarDelegate,
  //             "vaultDelegate"
  //         >(tcx, "vaultDelegate");
  //         // construct the config, having each of the needed delegates
  //         //  (or other non-delegate config details for the Charter Datum)
  //         const tokenomicsDatumArgs: TokenomicsDatumArgs = {
  //             ...charterDatumArgs,
  //             config: {
  //                 vaultDelegate,
  //             },
  //         };
  //         // return a typed pair with the updated tranaction context and the new config
  //         return [tcx, tokenomicsDatumArgs] as [
  //             typeof tcx,
  //             typeof tokenomicsDatumArgs
  //         ];
  //     });
  //     return promise;
  // }
  //     importModules() {
  //         const modules = [...super.importModules()]; //CMDBController];
  //         // console.error(modules.map(x => x.moduleName));
  //         return [
  //             ... modules,
  //             FundedPurposeSettingsModule,
  //             TieredScaleModule,
  // // MarketSalePolicy,
  // // MarketSaleDataModule,
  // // SaleStrategiesModule,
  //         ]
  //     }
  static get defaultParams() {
    return {
      ...super.defaultParams
    };
  }
  // initSettingsAdapter() {
  //     return new BaseTokenomicsSettingsAdapter(this);
  // }
  // async mkCharterConfigEntry(
  //     config: Partial<CDT["config"]>
  // ): Promise<CDT["config"]> {
  //     const vaultAuthority = this.mkOnchainDelegateLink(
  //         config.vaultDelegateLink
  //     );
  //     const vestingAuthority = this.mkOnchainDelegateLink(
  //         config.vestingDelegateLink
  //     );
  //     return {
  //         vaultAuthority,
  //         vestingAuthority,
  //         ...config,
  //     };
  // }
  // initDelegateRoles() {
  //     const { mintDelegate: parentMD, ...inherited } = this.basicDelegateRoles()
  //     const { uutPurpose, } = parentMD;
  //     return {
  //         ...inherited,
  //         ownerAuthority: defineRole(
  //             "ownerAuthz",
  //             AuthorityPolicy,
  //             inherited.govAuthority.variants
  //         ),
  //         mintDelegate: defineRole(uutPurpose, baseClass, {
  //             defaultV1: {
  //                 delegateClass: STokMintDelegate,
  //                 // partialConfig: {},
  //                 // validateConfig(args): strategyValidation {
  //                 //     return undefined
  //                 // },
  //             },
  //         }),
  //         // vault
  //         vaultDelegate: defineRole("vaultDelegate", StellarDelegate, {
  //             defaultV1: {
  //                 // @ts-expect-error cannot assign abstract class to non-abstract type
  //                 delegateClass: StellarDelegate,
  //                 // partialConfig: {},
  //                 // validateConfig(args): strategyValidation {
  //                 //     return undefined;
  //                 // },
  //             },
  //         }),
  //         // supplyWarden
  //         // vesting
  //         // tokenSale
  //     };
  // }
  async getMintDelegate(charterData) {
    return super.getMintDelegate(charterData);
  }
  // async mkInitialFPurpSettings() : Promise<FundedPurposeSettings> {
  //     return {
  //         championStake: new Value(100n * ADA),
  //         valuedAssets: [
  //             {
  //                 mph: new helios.MintingPolicyHash([]),
  //                 tokenName: [],
  //                 minCount: BigInt(50),
  //             }
  //         ],
  //     };
  // }
  async getMarketSaleController(charterData) {
    if (!charterData) {
      charterData = await this.findCharterData();
    }
    return this.getDgDataController("Agreement", {
      charterData
    });
  }
  mkUutName(purpose, txin) {
    const tokenNames = txin.value.assets.getPolicyTokenNames(this.mph).map((x) => bytesToText(x)).filter((x) => x.startsWith(`${purpose}-`));
    if (tokenNames.length > 1)
      console.warn(
        `mkUutName() found multiple ${purpose} tokens in one Utxo.  This one has ${tokenNames.length} that match: ` + tokenNames.join(", ")
      );
    return new UutName(purpose, tokenNames[0]);
  }
  // async getMintDelegate<
  //     THIS extends StellarTokenomics<any>,
  //     R extends StellarDelegate = THIS[
  //         "delegateRoles"]["mintDelegate"
  //     ] extends RoleInfo<infer DT, any, any> ? DT : any
  // >(
  //     this: THIS,
  // ) : Promise< R> {
  //     return (await super.getMintDelegate()) as unknown as R & STokMintDelegate;
  // }
  /**
   * Finds the user's member token and adds it to the transaction context
   * @remarks
   * Includes a seed-utxo in the transaction context for use in any aspect
   * of the transaction that may need it (i.e. minting a discount token or ?)
   */
  async mkTxnWithMemberInfo(skipReturningToken, tcx = this.mkTcx()) {
    const memberInfo = await this.mustFindMemberInfo();
    const maybeSkipReturningToken = skipReturningToken;
    if (tcx.state.memberToken) {
      return tcx;
    }
    return this.txnAddMemberToken(tcx, memberInfo, maybeSkipReturningToken);
  }
  async mustFindMemberInfo() {
    const i = await this.findMemberInfo();
    if (!i) throw new Error(`no member token found`);
    return i;
  }
  async findMemberInfo() {
    return this.findActorUut("member");
  }
  async txnAddMemberToken(tcx, memberInfo, skipReturningToken) {
    const resolvedMemberInfo = memberInfo || await this.findMemberInfo();
    if (!resolvedMemberInfo) {
      throw new Error("No member token found");
    }
    const tcx2 = tcx.addInput(resolvedMemberInfo.utxo);
    tcx2.state.memberToken = resolvedMemberInfo.uut;
    const tcx3 = await this.tcxWithSeedUtxo(tcx2, resolvedMemberInfo.utxo);
    if (skipReturningToken) return tcx3;
    return tcx3.addOutput(
      makeTxOutput(
        resolvedMemberInfo.utxo.address,
        this.uh.mkMinTv(this.mph, resolvedMemberInfo.uut)
      )
    );
  }
  async mkTxnMintParticipantToken(addr) {
    const tcx = await this.tcxWithSeedUtxo(
      this.mkTcx("minting participant token")
    );
    const mintDelegate = await this.getMintDelegate();
    const tcx2 = await this.txnMintingUuts(tcx, ["member"], {
      mintDelegateActivity: (
        //@ts-expect-error for now; We can add some methods to an abstract-TOKENOMICS-delegate
        // to make this more specific while remaining abstract.
        mintDelegate.activity.MintingActivities.MintingParticipantToken(
          tcx
        )
      )
    });
    console.log("   \u{1F41E}\u{1F41E}\u{1F41E}\u{1F41E}\u{1F41E}\u{1F41E}\u{1F41E}\u{1F41E}\u{1F41E}\u{1F41E}\u{1F41E} mintingUUTs  ^^^");
    return tcx2.addOutput(
      makeTxOutput(
        addr,
        this.uh.mkMinTv(this.mph, tcx2.state.uuts.member)
      )
    );
  }
  async txnMintingFungibleTokens(tcx, tokenName, tokenCount) {
    if (typeof tokenName === "string") {
      tokenName = textToBytes(tokenName);
    }
    const mintDgt = await this.getMintDelegate();
    const tcx2 = await this.tcxWithCharterRef(tcx);
    const tcx2a = await this.txnAddGovAuthority(tcx2);
    const minter = this.minter;
    return minter.txnMintWithDelegateAuthorizing(
      tcx2a,
      [mkValuesEntry(tokenName, tokenCount)],
      mintDgt,
      //@ts-expect-error for now.  We can add some methods to an abstract-TOKENOMICS-delegate
      // to make this more specific while remaining abstract.
      mintDgt.activity.MintingActivities.MintingFungibleTokens(tokenName)
    );
  }
  requirements() {
    return hasReqts({
      "Provides a single entry point dApps can use to get tokenomics for their project": {
        purpose: "to provide a single point of access to tokenomics functions",
        details: [
          "Contains TypeScript classes with interfaces that dApps can use ",
          "  ... to access the essential elements of their tokenomics policy"
        ],
        mech: [],
        requires: [
          // "Supports a Token-sale contract, where people can buy projectTokens",
        ]
      },
      "Uses the Capo (leader) to gather tokenomics-related contracts together": {
        purpose: "keeps the leader contract focused on administrative activities",
        details: [
          "This leader contract provides a simple policy that serves as a hub ",
          "  ... for plugging in other contract scripts, which handle various aspects of tokenomics."
        ],
        mech: [
          // see nested requirements
        ],
        requiresInherited: [],
        requires: [
          "Defines a tokenomics minting delegate",
          "Has a settings data structure where tokenomics plugins can store protocol parameters",
          "issues 'membership card' tokens to participants"
        ]
      },
      "Defines a tokenomics minting delegate": {
        purpose: "establishes a script that enforces tokenomics-related policies when any tokens are minted",
        details: [
          "The minting delegate is a separate contract that is called by the leader contract ",
          "  ... when any tokens are minted.  ",
          "The minting delegate is provided by a specific version of the tokenomics package, ",
          "  ... and it may be updated by a new version, given administrative approval of the change.",
          "The basic minting delegate provides jumping-off points for tokenomics policies related",
          "  ... to different areas of tokenomics functionality, such as staking or vesting.",
          "When a new on-chain minting delegate becomes active, it facilitates migration to it.",
          "A replacement mintingDelegate can only be activated by governance approval of the change."
        ],
        mech: [
          "defines a mintingDelegate role pointing to a separate mintingDelegate contract class"
        ]
      },
      "issues 'membership card' tokens to participants": {
        purpose: "enables single point of authentication for tokenomics functions",
        details: [
          "Anyone can mint a membership card token, which is a unique token",
          "  ... based on utxo uniqueness.",
          "A project MAY require a certain payment when minting a membership card.",
          "Each project can choose the way the member token is named."
        ],
        mech: [
          "can mint a membership card token"
          // "TODO: uses a project-specific prefix from the config for the token name"
        ],
        requires: [
          "Has a settings data structure where tokenomics plugins can store protocol parameters"
        ]
      },
      "Has a settings data structure where tokenomics plugins can store protocol parameters": {
        purpose: "to provide shared storage and a convention for shared settings for cross-contract coordination",
        details: [
          "The settings data is stored in the Capo address.",
          "It is structured as a CIP-68-like map of key-value pairs.",
          "Any tokenomics plugin can define expected keys in it.",
          "Any plugins' script can require the Settings data as a Reference Utxo"
        ],
        mech: [
          "defines a delegated data controller for Settings ",
          "the Settings can be upgraded by the ownerAuthority",
          "the capo contains a settings record containing the current settings",
          "the manifest contains a token-name pointing to currentSettings"
        ]
      },
      "Can upgrade the Settings data": {
        purpose: "to allow for changes to the configuration data structure",
        details: [
          "The SettingsController can be upgraded by the ownerAuthority",
          "Updating settings details only requires creating a new settings record, then installing it",
          "Modifying the structure of the Settings data requires a new SettingsController to be installed",
          "The existing delegates can check the updated data structure is valid by their existing rules",
          "Newly installed delegates of any kind are expected to validate the settings during activation"
        ],
        mech: [
          "new SettingsController is installed in the same way as any data delegate",
          "an updated settings can be queued for installation via the pendingChanges structure",
          "all the existing delegates have a chance to validate all updates to settings"
        ],
        requires: [
          "Has a settings data structure where tokenomics plugins can store protocol parameters"
        ]
      },
      "the settings data can be updated to have new details if backward compatible": {
        purpose: "to allow for changes to the settings data structure",
        details: [
          "The settings data structure can be updated to have new details",
          "The new details must be backward compatible with the old settings data"
        ],
        mech: [
          "the Settings data can't be modified if current delegates find the new settings invalid"
        ],
        requires: [
          "Has a settings data structure where tokenomics plugins can store protocol parameters"
        ]
      },
      "Can find membership card tokens for participants": {
        purpose: "to authenticate participants for on-chain tokenomics functions",
        details: [
          "The Capo can find a membership card token for a participant",
          "uses Capo's findActorUut() method to find the membership card token"
          // added to the imported library.
        ],
        mech: []
      }
    });
  }
}
__decorateClass([
  partialTxn
], StellarTokenomicsCapo.prototype, "txnAddMemberToken");
__decorateClass([
  txn
], StellarTokenomicsCapo.prototype, "mkTxnMintParticipantToken");

class MarketSaleDataWrapper {
  //  todo make the interface work?
  // implements someDataWrapper<MarketSaleData>
  data;
  controller;
  capo;
  constructor(data, controller, capo) {
    this.data = data;
    this.controller = controller;
    this.capo = capo;
  }
  unwrapData() {
    return this.data;
  }
  getUnitPrice(pCtx) {
    return this.getDynamicUnitPrice(pCtx);
  }
  // hasDynamicPrice(x: MarketSaleData): x is MarketSaleData & {
  //     saleStrategy: DynamicPriceSettings;
  //     saleStrategyState: DynamicPriceState;
  // } {
  //     return (x.saleStrategy as any).dynaPaceFasterSaleWeight !== undefined;
  // }
  getDynamicUnitPrice(pCtx) {
    const { prevSale: sale, now, unitCount } = pCtx;
    const s = sale.data.details.V1.fixedSaleDetails.settings;
    console.log("    ---- targetPrice", s.targetPrice);
    const a = realMul(
      s.targetPrice,
      this.pricingFactorOverallProgress(pCtx)
    );
    console.log(
      "    ---- unitPriceForSale: targetPrice * pricingFactorOverallProgress =",
      a
    );
    const price = realMul(a, this.pricingFactorDynamicPace(pCtx));
    console.log("    ---- unitPriceForSale - unclamped", price);
    const result = Math.min(Math.max(price, s.minPrice), s.maxPrice);
    console.log("    ---- unitPriceForSale - clamped", result);
    return result;
  }
  pricingFactorOverallProgress(pCtx) {
    const settings = pCtx.prevSale.data.details.V1.fixedSaleDetails.settings;
    const overallPacingProgress = this.overallPaceIncludingThisPurchase(pCtx);
    const discountEarned = realMul(
      this.progressPricingDiscountDepth(overallPacingProgress, settings),
      settings.progressPricingDiscountWhenSlow
    );
    const clampedMaxDiscount = Math.max(
      0,
      Math.min(discountEarned, settings.progressPricingDiscountWhenSlow)
    );
    const result = realMul(
      toFixedReal(1 - clampedMaxDiscount),
      this.priceExpansion(overallPacingProgress, settings)
    );
    console.log("    ---- pricingFactorOverallProgress", result);
    return result;
  }
  pricingFactorDynamicPace(pCtx) {
    const s = pCtx.prevSale.data.details.V1.fixedSaleDetails.settings;
    const prevWeight = 1;
    const nextPace = this.computeNextSalePace(pCtx);
    const prevPace = this.prevSalePace(pCtx);
    const nextWeight = s.pricingWeightDynaPace;
    const targetSellingPace = this.targetSellingPace(pCtx);
    const r = debugMath(() => {
      const thing1 = realMul(
        prevPace == 0 ? 1 : realDiv(prevPace, targetSellingPace),
        prevWeight
      );
      console.log("    ---- pricingFactorDynamicPace: thing1 ^");
      const thing2 = realMul(
        nextPace == 0 ? 1 : realDiv(nextPace, targetSellingPace),
        nextWeight
      );
      console.log("    ---- pricingFactorDynamicPace: thing2 ^");
      const result = realDiv(thing1 + thing2, prevWeight + nextWeight);
      console.log("    ---- pricingFactorDynamicPace", result);
      return result;
    });
    return r;
  }
  prevSalePace(pCtx) {
    return pCtx.prevSale.data.details.V1.saleState.salePace;
  }
  targetSellingPace(pCtx) {
    const { prevSale: sale } = pCtx;
    const s = sale.data.details.V1.fixedSaleDetails.settings;
    const { chunkUnitCount } = sale.data.details.V1.saleState.progressDetails;
    const tsp = realDiv(
      Number(chunkUnitCount),
      realDiv(Number(s.targetedSellingTime), 60 * 60 * 1e3)
    );
    console.log("    ---- targetSellingPace", tsp);
    return tsp;
  }
  computeNextSalePace(pCtx) {
    const s = pCtx.prevSale.data.details.V1.fixedSaleDetails.settings;
    const inferredPace = this.inferredPace(pCtx);
    const prevSalePace = this.prevSalePace(pCtx);
    if (inferredPace > prevSalePace) {
      console.log("    ---- using dynaPaceFasterSaleWeight");
    } else if (inferredPace > this.targetSellingPace(pCtx)) {
      console.log(
        "    ---- inferred pace faster than target; using 1.0 weight"
      );
    } else {
      console.log(
        "    ---- inferred pace slower than target; using idle decay rate"
      );
    }
    const { dynaPaceFasterSaleWeight, dynaPaceIdleDecayRate } = s;
    const targetSellingPace = this.targetSellingPace(pCtx);
    const hoursSinceLastPurchase = this.hoursSinceLastPurchase(pCtx);
    console.log("    ---- inferredPace", inferredPace);
    console.log("    ---- targetSellingPace", this.targetSellingPace(pCtx));
    const nextWeight = inferredPace > prevSalePace ? (() => {
      console.log(
        "    ---- nextPaceWeight: dynaPaceFasterSaleWeight (sale is speeding up)"
      );
      return dynaPaceFasterSaleWeight;
    })() : inferredPace > targetSellingPace ? (() => {
      console.log(
        "    ---- nextPaceWeight: 1.0 (sale is not slowing under the target pace)"
      );
      return 1;
    })() : (() => {
      console.log(
        "    ---- nextPaceWeight: using dynaPaceIdleDecayRate for hoursSinceLastPurchase "
      );
      console.log(
        `      ---- hoursSinceLastPurchase ${hoursSinceLastPurchase}`
      );
      console.log(
        `      ---- dynaPaceIdleDecayRate ${dynaPaceIdleDecayRate}`
      );
      const result = Math.max(
        1,
        realMul(hoursSinceLastPurchase, dynaPaceIdleDecayRate)
      );
      return result;
    })();
    console.log("    ----  prev salePace", prevSalePace);
    console.log("    ---- nextPaceWeight", nextWeight);
    const nextDynamicPace = realDiv(
      realMul(inferredPace, nextWeight) + prevSalePace,
      nextWeight + 1
    );
    console.log("    ---- next salePace", nextDynamicPace);
    return nextDynamicPace;
  }
  hoursSinceLastPurchase(pCtx) {
    const h = debugMath(() => {
      return realDiv(
        pCtx.now.getTime() - pCtx.prevSale.data.details.V1.saleState.progressDetails.lastPurchaseAt,
        60 * 60 * 1e3
      );
    });
    console.log("    ---- hoursSinceLastPurchase", {
      now: pCtx.now,
      lastPurchaseAt: pCtx.prevSale.data.details.V1.saleState.progressDetails.lastPurchaseAt,
      result: h
    });
    return h;
  }
  overallPaceIncludingThisPurchase(pCtx) {
    const oppp = realDiv(
      this.actualSellingPace(pCtx),
      this.targetSellingPace(pCtx)
    );
    console.log("    ---- overallPaceIncludingThisPurchase", oppp);
    return oppp;
  }
  actualSellingPace(pCtx) {
    const unitsPurchased = pCtx.unitCount;
    const alreadySold = pCtx.prevSale.data.details.V1.saleState.progressDetails.chunkUnitsSold;
    const sp = realDiv(
      Number(unitsPurchased) + Number(alreadySold),
      this.elapsedSaleHours(pCtx)
    );
    console.log("    ---- actualSellingPace", sp);
    return sp;
  }
  elapsedSaleHours(pCtx) {
    const eh = realDiv(
      pCtx.now.getTime() - pCtx.prevSale.data.details.V1.fixedSaleDetails.startAt,
      60 * 60 * 1e3
    );
    console.log("    ---- elapsedSaleHours", eh);
    return eh;
  }
  progressPricingDiscountDepth(overallPacingProgress, settings) {
    const ceilingHeight = toFixedReal(
      1 - settings.progressPricingDiscountFloorPoint
    );
    const aboveFloor = overallPacingProgress > settings.progressPricingDiscountFloorPoint ? toFixedReal(
      overallPacingProgress - settings.progressPricingDiscountFloorPoint
    ) : 0;
    const relativeHeight = aboveFloor <= 0 ? 0 : realDiv(aboveFloor, ceilingHeight);
    console.log(
      "      ---- progressPricingDiscountDepth: ceilingHeight",
      ceilingHeight
    );
    console.log(
      "      ---- progressPricingDiscountDepth: aboveFloor",
      aboveFloor
    );
    console.log(
      "      ---- progressPricingDiscountDepth: relativeHeight",
      relativeHeight
    );
    const ppdd = toFixedReal(1 - relativeHeight);
    console.log("    ---- progressPricingDiscountDepth", ppdd);
    return ppdd;
  }
  inferredPace(pCtx) {
    debugger;
    const ip = realDiv(
      Number(pCtx.unitCount),
      this.hoursSinceLastPurchase(pCtx)
    );
    console.log("    ---- inferredPace", ip);
    return ip;
  }
  priceExpansion(overallPace, settings) {
    const pe = overallPace < 1 ? 1 : 1 + realDiv(
      realMul(
        toFixedReal(overallPace - 1),
        settings.progressPricingExpansionWhenFast
      ),
      3
    );
    console.log("    ---- priceExpansion", pe);
    return pe;
  }
  //     getNextSalePace(pCtx: PurchaseContext) {
  //         return pCtx.sale.nextSalePace(pCtx);
  //     }
}

class MarketSalePolicyDataBridge extends ContractDataBridge {
  static isAbstract = false;
  isAbstract = false;
  /**
   * Helper class for generating TxOutputDatum for the ***datum type (DelegateDatum)***
   * for this contract script. 
   */
  datum = new DelegateDatumHelper$1({ isMainnet: this.isMainnet });
  // datumAccessor/enum
  /**
   * this is the specific type of datum for the `BasicDelegate` script
   */
  DelegateDatum = this.datum;
  readDatum = (d) => {
    return this.reader.DelegateDatum(d);
  };
  /**
   * generates UplcData for the activity type (***DelegateActivity***) for the `BasicDelegate` script
   */
  activity = new DelegateActivityHelper$1({ isMainnet: this.isMainnet, isActivity: true });
  // activityAccessor/enum
  DelegateActivity = this.activity;
  reader = new MarketSalePolicyDataBridgeReader(this, this.isMainnet);
  /**
   * accessors for all the types defined in the `BasicDelegate` script
   * @remarks - these accessors are used to generate UplcData for each type
   */
  types = {
    /**
     * generates UplcData for the enum type ***MarketSaleState*** for the `BasicDelegate` script
     */
    MarketSaleState: new MarketSaleStateHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***VxfExpectedActivity*** for the `BasicDelegate` script
     */
    VxfExpectedActivity: new VxfExpectedActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***VxfDestination*** for the `BasicDelegate` script
     */
    VxfDestination: new VxfDestinationHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***MktSaleDetails*** for the `BasicDelegate` script
     */
    MktSaleDetails: new MktSaleDetailsHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateDatum*** for the `BasicDelegate` script
     */
    DelegateDatum: new DelegateDatumHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateRole*** for the `BasicDelegate` script
     */
    DelegateRole: new DelegateRoleHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***ManifestActivity*** for the `BasicDelegate` script
     */
    ManifestActivity: new ManifestActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***CapoLifecycleActivity*** for the `BasicDelegate` script
     */
    CapoLifecycleActivity: new CapoLifecycleActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateLifecycleActivity*** for the `BasicDelegate` script
     */
    DelegateLifecycleActivity: new DelegateLifecycleActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***SpendingActivity*** for the `BasicDelegate` script
     */
    SpendingActivity: new SpendingActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***MintingActivity*** for the `BasicDelegate` script
     */
    MintingActivity: new MintingActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***BurningActivity*** for the `BasicDelegate` script
     */
    BurningActivity: new BurningActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateActivity*** for the `BasicDelegate` script
     */
    DelegateActivity: new DelegateActivityHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***PendingDelegateAction*** for the `BasicDelegate` script
     */
    PendingDelegateAction: new PendingDelegateActionHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***ManifestEntryType*** for the `BasicDelegate` script
     */
    ManifestEntryType: new ManifestEntryTypeHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***PendingCharterChange*** for the `BasicDelegate` script
     */
    PendingCharterChange: new PendingCharterChangeHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***cctx_CharterInputType*** for the `BasicDelegate` script
     */
    cctx_CharterInputType: new cctx_CharterInputTypeHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***dgd_DataSrc*** for the `BasicDelegate` script
     */
    dgd_DataSrc: new dgd_DataSrcHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***AbstractDelegateActivitiesEnum*** for the `BasicDelegate` script
     */
    AbstractDelegateActivitiesEnum: new AbstractDelegateActivitiesEnumHelper$1({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***AnyData*** for the `BasicDelegate` script
     */
    AnyData: (fields) => {
      return this["\u1C7A\u1C7AAnyDataCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DelegationDetail*** for the `BasicDelegate` script
     */
    DelegationDetail: (fields) => {
      return this["\u1C7A\u1C7ADelegationDetailCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***SaleProgressDetailsV1*** for the `BasicDelegate` script
     */
    SaleProgressDetailsV1: (fields) => {
      return this["\u1C7A\u1C7ASaleProgressDetailsV1Cast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***OtherSaleStateV1*** for the `BasicDelegate` script
     */
    OtherSaleStateV1: (fields) => {
      return this["\u1C7A\u1C7AOtherSaleStateV1Cast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DynamicSaleV1Settings*** for the `BasicDelegate` script
     */
    DynamicSaleV1Settings: (fields) => {
      return this["\u1C7A\u1C7ADynamicSaleV1SettingsCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***RelativeDelegateLink*** for the `BasicDelegate` script
     */
    RelativeDelegateLink: (fields) => {
      return this["\u1C7A\u1C7ARelativeDelegateLinkCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***FixedSaleDetailsV1*** for the `BasicDelegate` script
     */
    FixedSaleDetailsV1: (fields) => {
      return this["\u1C7A\u1C7AFixedSaleDetailsV1Cast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***SaleAssetsV1*** for the `BasicDelegate` script
     */
    SaleAssetsV1: (fields) => {
      return this["\u1C7A\u1C7ASaleAssetsV1Cast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***ThreadInfoV1*** for the `BasicDelegate` script
     */
    ThreadInfoV1: (fields) => {
      return this["\u1C7A\u1C7AThreadInfoV1Cast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***MarketSaleData*** for the `BasicDelegate` script
     */
    MarketSaleData: (fields) => {
      return this["\u1C7A\u1C7AMarketSaleDataCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***PendingDelegateChange*** for the `BasicDelegate` script
     */
    PendingDelegateChange: (fields) => {
      return this["\u1C7A\u1C7APendingDelegateChangeCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***CapoManifestEntry*** for the `BasicDelegate` script
     */
    CapoManifestEntry: (fields) => {
      return this["\u1C7A\u1C7ACapoManifestEntryCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***CapoCtx*** for the `BasicDelegate` script
     */
    CapoCtx: (fields) => {
      return this["\u1C7A\u1C7ACapoCtxCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DgDataDetails*** for the `BasicDelegate` script
     */
    DgDataDetails: (fields) => {
      return this["\u1C7A\u1C7ADgDataDetailsCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DTS_PurchaseInfo*** for the `BasicDelegate` script
     */
    DTS_PurchaseInfo: (fields) => {
      return this["\u1C7A\u1C7ADTS_PurchaseInfoCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DynamicSaleV1*** for the `BasicDelegate` script
     */
    DynamicSaleV1: (fields) => {
      return this["\u1C7A\u1C7ADynamicSaleV1Cast"].toUplcData(fields);
    }
  };
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AAnyDataCast" = makeCast(
    AnyDataSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADelegationDetailCast" = makeCast(
    DelegationDetailSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ASaleProgressDetailsV1Cast" = makeCast(
    SaleProgressDetailsV1Schema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AOtherSaleStateV1Cast" = makeCast(
    OtherSaleStateV1Schema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADynamicSaleV1SettingsCast" = makeCast(
    DynamicSaleV1SettingsSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ARelativeDelegateLinkCast" = makeCast(
    RelativeDelegateLinkSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AFixedSaleDetailsV1Cast" = makeCast(
    FixedSaleDetailsV1Schema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ASaleAssetsV1Cast" = makeCast(
    SaleAssetsV1Schema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AThreadInfoV1Cast" = makeCast(
    ThreadInfoV1Schema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AMarketSaleDataCast" = makeCast(
    MarketSaleDataSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7APendingDelegateChangeCast" = makeCast(
    PendingDelegateChangeSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ACapoManifestEntryCast" = makeCast(
    CapoManifestEntrySchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ACapoCtxCast" = makeCast(
    CapoCtxSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADgDataDetailsCast" = makeCast(
    DgDataDetailsSchema$1,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADTS_PurchaseInfoCast" = makeCast(
    DTS_PurchaseInfoSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADynamicSaleV1Cast" = makeCast(
    DynamicSaleV1Schema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
}
class MarketSalePolicyDataBridgeReader extends DataBridgeReaderClass {
  constructor(bridge, isMainnet) {
    super();
    this.bridge = bridge;
  }
  /**
      * reads UplcData *known to fit the **MarketSaleState*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  MarketSaleState(d) {
    const typeHelper = this.bridge.types.MarketSaleState;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **VxfExpectedActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  VxfExpectedActivity(d) {
    const typeHelper = this.bridge.types.VxfExpectedActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **VxfDestination*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  VxfDestination(d) {
    const typeHelper = this.bridge.types.VxfDestination;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **MktSaleDetails*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  MktSaleDetails(d) {
    const typeHelper = this.bridge.types.MktSaleDetails;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  datum = (d) => {
    return this.DelegateDatum(d);
  };
  /**
      * reads UplcData *known to fit the **DelegateDatum*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateDatum(d) {
    const typeHelper = this.bridge.types.DelegateDatum;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateRole*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateRole(d) {
    const typeHelper = this.bridge.types.DelegateRole;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **ManifestActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ManifestActivity(d) {
    const typeHelper = this.bridge.types.ManifestActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **CapoLifecycleActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoLifecycleActivity(d) {
    const typeHelper = this.bridge.types.CapoLifecycleActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateLifecycleActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateLifecycleActivity(d) {
    const typeHelper = this.bridge.types.DelegateLifecycleActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **SpendingActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  SpendingActivity(d) {
    const typeHelper = this.bridge.types.SpendingActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **MintingActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  MintingActivity(d) {
    const typeHelper = this.bridge.types.MintingActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **BurningActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  BurningActivity(d) {
    const typeHelper = this.bridge.types.BurningActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateActivity(d) {
    const typeHelper = this.bridge.types.DelegateActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **PendingDelegateAction*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingDelegateAction(d) {
    const typeHelper = this.bridge.types.PendingDelegateAction;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **ManifestEntryType*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ManifestEntryType(d) {
    const typeHelper = this.bridge.types.ManifestEntryType;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **PendingCharterChange*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingCharterChange(d) {
    const typeHelper = this.bridge.types.PendingCharterChange;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **cctx_CharterInputType*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  cctx_CharterInputType(d) {
    const typeHelper = this.bridge.types.cctx_CharterInputType;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **dgd_DataSrc*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  dgd_DataSrc(d) {
    const typeHelper = this.bridge.types.dgd_DataSrc;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **AbstractDelegateActivitiesEnum*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  AbstractDelegateActivitiesEnum(d) {
    const typeHelper = this.bridge.types.AbstractDelegateActivitiesEnum;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **AnyData*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  AnyData(d) {
    const cast = this.bridge["\u1C7A\u1C7AAnyDataCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DelegationDetail*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegationDetail(d) {
    const cast = this.bridge["\u1C7A\u1C7ADelegationDetailCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **SaleProgressDetailsV1*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  SaleProgressDetailsV1(d) {
    const cast = this.bridge["\u1C7A\u1C7ASaleProgressDetailsV1Cast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **OtherSaleStateV1*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  OtherSaleStateV1(d) {
    const cast = this.bridge["\u1C7A\u1C7AOtherSaleStateV1Cast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DynamicSaleV1Settings*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DynamicSaleV1Settings(d) {
    const cast = this.bridge["\u1C7A\u1C7ADynamicSaleV1SettingsCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **RelativeDelegateLink*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  RelativeDelegateLink(d) {
    const cast = this.bridge["\u1C7A\u1C7ARelativeDelegateLinkCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **FixedSaleDetailsV1*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  FixedSaleDetailsV1(d) {
    const cast = this.bridge["\u1C7A\u1C7AFixedSaleDetailsV1Cast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **SaleAssetsV1*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  SaleAssetsV1(d) {
    const cast = this.bridge["\u1C7A\u1C7ASaleAssetsV1Cast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **ThreadInfoV1*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ThreadInfoV1(d) {
    const cast = this.bridge["\u1C7A\u1C7AThreadInfoV1Cast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **MarketSaleData*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  MarketSaleData(d) {
    const cast = this.bridge["\u1C7A\u1C7AMarketSaleDataCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **PendingDelegateChange*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingDelegateChange(d) {
    const cast = this.bridge["\u1C7A\u1C7APendingDelegateChangeCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **CapoManifestEntry*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoManifestEntry(d) {
    const cast = this.bridge["\u1C7A\u1C7ACapoManifestEntryCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **CapoCtx*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoCtx(d) {
    const cast = this.bridge["\u1C7A\u1C7ACapoCtxCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DgDataDetails*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DgDataDetails(d) {
    const cast = this.bridge["\u1C7A\u1C7ADgDataDetailsCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DTS_PurchaseInfo*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DTS_PurchaseInfo(d) {
    const cast = this.bridge["\u1C7A\u1C7ADTS_PurchaseInfoCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DynamicSaleV1*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DynamicSaleV1(d) {
    const cast = this.bridge["\u1C7A\u1C7ADynamicSaleV1Cast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
}
class MarketSaleStateHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MarketSaleStateSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"MarketSaleData::MarketSaleState.Pending"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get Pending() {
    const uplc = this.mkUplcData(
      { Pending: {} },
      "MarketSaleData::MarketSaleState.Pending"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"MarketSaleData::MarketSaleState.Active"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Active() {
    const uplc = this.mkUplcData(
      { Active: {} },
      "MarketSaleData::MarketSaleState.Active"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"MarketSaleData::MarketSaleState.Retired"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get Retired() {
    const uplc = this.mkUplcData(
      { Retired: {} },
      "MarketSaleData::MarketSaleState.Retired"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"MarketSaleData::MarketSaleState.SoldOut"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SoldOut() {
    const uplc = this.mkUplcData(
      { SoldOut: {} },
      "MarketSaleData::MarketSaleState.SoldOut"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
let VxfExpectedActivityHelper$1 = class VxfExpectedActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    VxfExpectedActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"VxfProtocol::VxfExpectedActivity.VxfTransfer"***
   */
  VxfTransfer(appData) {
    const uplc = this.mkUplcData({
      VxfTransfer: appData
    }, "VxfProtocol::VxfExpectedActivity.VxfTransfer");
    return uplc;
  }
  /**
   * generates  UplcData for ***"VxfProtocol::VxfExpectedActivity.VxfStorage"***
   */
  VxfStorage(appData) {
    const uplc = this.mkUplcData({
      VxfStorage: appData
    }, "VxfProtocol::VxfExpectedActivity.VxfStorage");
    return uplc;
  }
  /**
   * generates  UplcData for ***"VxfProtocol::VxfExpectedActivity.SpecificRedeemerId"***
   * @remarks - ***VxfExpectedActivity$SpecificRedeemerIdLike*** is the same as the expanded field-types.
   */
  SpecificRedeemerId(fields) {
    const uplc = this.mkUplcData({
      SpecificRedeemerId: fields
    }, "VxfProtocol::VxfExpectedActivity.SpecificRedeemerId");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"VxfProtocol::VxfExpectedActivity.TaggedRedeemer"***
   * @remarks - ***VxfExpectedActivity$TaggedRedeemerLike*** is the same as the expanded field-types.
   */
  TaggedRedeemer(fields) {
    const uplc = this.mkUplcData({
      TaggedRedeemer: fields
    }, "VxfProtocol::VxfExpectedActivity.TaggedRedeemer");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let VxfDestinationHelper$1 = class VxfDestinationHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    VxfDestinationSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"VxfProtocol::VxfDestination.RelativeLink"***
   * @remarks - ***VxfDestination$RelativeLinkLike*** is the same as the expanded field-types.
   */
  RelativeLink(fields) {
    const uplc = this.mkUplcData({
      RelativeLink: fields
    }, "VxfProtocol::VxfDestination.RelativeLink");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"VxfProtocol::VxfDestination.AnyTokenHolder"***
   * @remarks - ***VxfDestination$AnyTokenHolderLike*** is the same as the expanded field-types.
   */
  AnyTokenHolder(fields) {
    const uplc = this.mkUplcData({
      AnyTokenHolder: fields
    }, "VxfProtocol::VxfDestination.AnyTokenHolder");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"VxfProtocol::VxfDestination.PubKey"***
   */
  PubKey(pkh) {
    const uplc = this.mkUplcData({
      PubKey: pkh
    }, "VxfProtocol::VxfDestination.PubKey");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"VxfProtocol::VxfDestination.Anywhere"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#98***
   */
  get Anywhere() {
    const uplc = this.mkUplcData(
      { Anywhere: {} },
      "VxfProtocol::VxfDestination.Anywhere"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"VxfProtocol::VxfDestination.NotYetDefined"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#99***
   */
  get NotYetDefined() {
    const uplc = this.mkUplcData(
      { NotYetDefined: {} },
      "VxfProtocol::VxfDestination.NotYetDefined"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
class MktSaleDetailsHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MktSaleDetailsSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"MarketSaleData::MktSaleDetails.V1"***
   * @remarks - ***MktSaleDetails$V1Like*** is the same as the expanded field-types.
   */
  V1(fields) {
    const uplc = this.mkUplcData({
      V1: fields
    }, "MarketSaleData::MktSaleDetails.V1");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
let DelegateDatumHelper$1 = class DelegateDatumHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateDatumSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  InlineTxOutputDatum for ***"MarketSalePolicy::DelegateDatum.Cip68RefToken"***
   * @remarks - ***DelegateDatum$Cip68RefTokenLike*** is the same as the expanded field-types.
   */
  Cip68RefToken(fields) {
    const uplc = this.mkUplcData({
      Cip68RefToken: fields
    }, "MarketSalePolicy::DelegateDatum.Cip68RefToken");
    return makeInlineTxOutputDatum(uplc);
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  InlineTxOutputDatum for ***"MarketSalePolicy::DelegateDatum.IsDelegation"***
   * @remarks - ***DelegationDetailLike*** is the same as the expanded field-type.
   */
  IsDelegation(dd) {
    const uplc = this.mkUplcData({
      IsDelegation: dd
    }, "MarketSalePolicy::DelegateDatum.IsDelegation");
    return makeInlineTxOutputDatum(uplc);
  }
  /**
   * generates  InlineTxOutputDatum for ***"MarketSalePolicy::DelegateDatum.capoStoredData"***
   * @remarks - ***DelegateDatum$capoStoredDataLike*** is the same as the expanded field-types.
   */
  capoStoredData(fields) {
    const uplc = this.mkUplcData({
      capoStoredData: fields
    }, "MarketSalePolicy::DelegateDatum.capoStoredData");
    return makeInlineTxOutputDatum(uplc);
  }
  /*multiFieldVariant enum accessor*/
};
let DelegateRoleHelper$1 = class DelegateRoleHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let ManifestActivityHelper$1 = class ManifestActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.retiringEntry"***
   */
  retiringEntry(key) {
    const uplc = this.mkUplcData({
      retiringEntry: key
    }, "CapoDelegateHelpers::ManifestActivity.retiringEntry");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.updatingEntry"***
   * @remarks - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.
   */
  updatingEntry(fields) {
    const uplc = this.mkUplcData({
      updatingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.updatingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.addingEntry"***
   * @remarks - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.
   */
  addingEntry(fields) {
    const uplc = this.mkUplcData({
      addingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.addingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.forkingThreadToken"***
   * @remarks - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.
   */
  forkingThreadToken(fields) {
    const uplc = this.mkUplcData({
      forkingThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.forkingThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.burningThreadToken"***
   * @remarks - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.
   */
  burningThreadToken(fields) {
    const uplc = this.mkUplcData({
      burningThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.burningThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let CapoLifecycleActivityHelper$1 = class CapoLifecycleActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    CapoLifecycleActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  CreatingDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegate = impliedSeedActivityMaker(
    this,
    this.CreatingDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get queuePendingChange() {
    const uplc = this.mkUplcData(
      { queuePendingChange: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get commitPendingChanges() {
    const uplc = this.mkUplcData(
      { commitPendingChanges: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"
    );
    return uplc;
  }
  forcingNewSpendDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewSpendDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$forcingNewSpendDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewSpendDelegate
  );
  forcingNewMintDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewMintDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$forcingNewMintDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewMintDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
};
let DelegateLifecycleActivityHelper$1 = class DelegateLifecycleActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateLifecycleActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  ReplacingMe(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        ReplacingMe: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        ReplacingMe: fields
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$ReplacingMe({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$ReplacingMe = impliedSeedActivityMaker(
    this,
    this.ReplacingMe
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Retiring() {
    const uplc = this.mkUplcData(
      { Retiring: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get ValidatingSettings() {
    const uplc = this.mkUplcData(
      { ValidatingSettings: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let SpendingActivityHelper$1 = class SpendingActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SpendingActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"MarketSalePolicy::SpendingActivity.UpdatingRecord"***
   */
  UpdatingRecord(id) {
    const uplc = this.mkUplcData({
      UpdatingRecord: id
    }, "MarketSalePolicy::SpendingActivity.UpdatingRecord");
    return uplc;
  }
  /**
   * generates  UplcData for ***"MarketSalePolicy::SpendingActivity.AddingToSale"***
   * @remarks - ***SpendingActivity$AddingToSaleLike*** is the same as the expanded field-types.
   */
  AddingToSale(fields) {
    const uplc = this.mkUplcData({
      AddingToSale: fields
    }, "MarketSalePolicy::SpendingActivity.AddingToSale");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"MarketSalePolicy::SpendingActivity.Activating"***
   */
  Activating(id) {
    const uplc = this.mkUplcData({
      Activating: id
    }, "MarketSalePolicy::SpendingActivity.Activating");
    return uplc;
  }
  /**
   * generates  UplcData for ***"MarketSalePolicy::SpendingActivity.SellingTokens"***
   * @remarks - ***SpendingActivity$SellingTokensLike*** is the same as the expanded field-types.
   */
  SellingTokens(fields) {
    const uplc = this.mkUplcData({
      SellingTokens: fields
    }, "MarketSalePolicy::SpendingActivity.SellingTokens");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"MarketSalePolicy::SpendingActivity.MergingChildChunk"***
   * @remarks - ***SpendingActivity$MergingChildChunkLike*** is the same as the expanded field-types.
   */
  MergingChildChunk(fields) {
    const uplc = this.mkUplcData({
      MergingChildChunk: fields
    }, "MarketSalePolicy::SpendingActivity.MergingChildChunk");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"MarketSalePolicy::SpendingActivity.Retiring"***
   */
  Retiring(id) {
    const uplc = this.mkUplcData({
      Retiring: id
    }, "MarketSalePolicy::SpendingActivity.Retiring");
    return uplc;
  }
};
let MintingActivityHelper$1 = class MintingActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MintingActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
  * generates  UplcData for ***"MarketSalePolicy::MintingActivity.CreatingRecord"***, 
  * given a transaction-context (or direct arg) with a ***seed utxo*** 
  * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
  *  - to get a transaction context having the seed needed for this argument, 
  *    see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.
  * - or see Stellar Contracts' `hasSeed` type for other ways to feed it with a TxOutputId.
  *  - in a context providing an implicit seed utxo, use 
  *    the `$seeded$CreatingRecord}` variant of this activity instead
  *
   */
  CreatingRecord(thingWithSeed) {
    const seedTxOutputId = this.getSeed(thingWithSeed);
    const uplc = this.mkUplcData({
      CreatingRecord: seedTxOutputId
    }, "MarketSalePolicy::MintingActivity.CreatingRecord");
    return uplc;
  }
  /*singleField/seeded enum variant*/
  /**
   * generates  UplcData for ***"MarketSalePolicy::MintingActivity.CreatingRecord"***
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   * #### Usage
   * Access the activity-creator as a getter: `$seeded$CreatingRecord`
   *
   * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's
   * `mkTxnCreateRecord({activity, ...})` method.
   */
  get $seeded$CreatingRecord() {
    return impliedSeedActivityMaker(this, this.CreatingRecord)();
  }
  SplittingSaleChunkAndBuying(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        SplittingSaleChunkAndBuying: { seed: seedTxOutputId, ...filteredFields }
      }, "MarketSalePolicy::MintingActivity.SplittingSaleChunkAndBuying");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        SplittingSaleChunkAndBuying: fields
      }, "MarketSalePolicy::MintingActivity.SplittingSaleChunkAndBuying");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"MarketSalePolicy::MintingActivity.SplittingSaleChunkAndBuying"***, 
   * @param fields - \{ parentChunkId: string, buyingUnitQuantity: IntLike \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$SplittingSaleChunkAndBuying({ parentChunkId, buyingUnitQuantity })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$SplittingSaleChunkAndBuying = impliedSeedActivityMaker(
    this,
    this.SplittingSaleChunkAndBuying
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
};
let BurningActivityHelper$1 = class BurningActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    BurningActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"MarketSalePolicy::BurningActivity.DeletingRecord"***
   */
  DeletingRecord(id) {
    const uplc = this.mkUplcData({
      DeletingRecord: id
    }, "MarketSalePolicy::BurningActivity.DeletingRecord");
    return uplc;
  }
  /**
   * generates  UplcData for ***"MarketSalePolicy::BurningActivity.JoiningWithParentChunk"***
   * @remarks - ***BurningActivity$JoiningWithParentChunkLike*** is the same as the expanded field-types.
   */
  JoiningWithParentChunk(fields) {
    const uplc = this.mkUplcData({
      JoiningWithParentChunk: fields
    }, "MarketSalePolicy::BurningActivity.JoiningWithParentChunk");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"MarketSalePolicy::BurningActivity.CleanupRetired"***
   */
  CleanupRetired(id) {
    const uplc = this.mkUplcData({
      CleanupRetired: id
    }, "MarketSalePolicy::BurningActivity.CleanupRetired");
    return uplc;
  }
};
let ActivityDelegateRoleHelperNested$1 = class ActivityDelegateRoleHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let ManifestActivityHelperNested$1 = class ManifestActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.retiringEntry"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  retiringEntry(key) {
    const uplc = this.mkUplcData({
      retiringEntry: key
    }, "CapoDelegateHelpers::ManifestActivity.retiringEntry");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.updatingEntry"***
   * @remarks - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  updatingEntry(fields) {
    const uplc = this.mkUplcData({
      updatingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.updatingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.addingEntry"***
   * @remarks - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  addingEntry(fields) {
    const uplc = this.mkUplcData({
      addingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.addingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.forkingThreadToken"***
   * @remarks - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  forkingThreadToken(fields) {
    const uplc = this.mkUplcData({
      forkingThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.forkingThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.burningThreadToken"***
   * @remarks - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  burningThreadToken(fields) {
    const uplc = this.mkUplcData({
      burningThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.burningThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let CapoLifecycleActivityHelperNested$1 = class CapoLifecycleActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    CapoLifecycleActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  CreatingDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$CreatingDelegate = impliedSeedActivityMaker(
    this,
    this.CreatingDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get queuePendingChange() {
    const uplc = this.mkUplcData(
      { queuePendingChange: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.
   */
  get removePendingChange() {
    const nestedAccessor = new ActivityDelegateRoleHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (role) => {
        return this.mkUplcData(
          { removePendingChange: role },
          "CapoDelegateHelpers::CapoLifecycleActivity.removePendingChange"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get commitPendingChanges() {
    const uplc = this.mkUplcData(
      { commitPendingChanges: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"
    );
    return uplc;
  }
  forcingNewSpendDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewSpendDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$forcingNewSpendDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewSpendDelegate
  );
  forcingNewMintDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewMintDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$forcingNewMintDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewMintDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.
   */
  get updatingManifest() {
    const nestedAccessor = new ManifestActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { updatingManifest: activity },
          "CapoDelegateHelpers::CapoLifecycleActivity.updatingManifest"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
};
let DelegateLifecycleActivityHelperNested$1 = class DelegateLifecycleActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateLifecycleActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  ReplacingMe(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        ReplacingMe: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        ReplacingMe: fields
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$ReplacingMe({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$ReplacingMe = impliedSeedActivityMaker(
    this,
    this.ReplacingMe
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Retiring() {
    const uplc = this.mkUplcData(
      { Retiring: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get ValidatingSettings() {
    const uplc = this.mkUplcData(
      { ValidatingSettings: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let SpendingActivityHelperNested$1 = class SpendingActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SpendingActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::SpendingActivity.UpdatingRecord"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  UpdatingRecord(id) {
    const uplc = this.mkUplcData({
      UpdatingRecord: id
    }, "MarketSalePolicy::SpendingActivity.UpdatingRecord");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::SpendingActivity.AddingToSale"***
   * @remarks - ***SpendingActivity$AddingToSaleLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  AddingToSale(fields) {
    const uplc = this.mkUplcData({
      AddingToSale: fields
    }, "MarketSalePolicy::SpendingActivity.AddingToSale");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::SpendingActivity.Activating"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  Activating(id) {
    const uplc = this.mkUplcData({
      Activating: id
    }, "MarketSalePolicy::SpendingActivity.Activating");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::SpendingActivity.SellingTokens"***
   * @remarks - ***SpendingActivity$SellingTokensLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  SellingTokens(fields) {
    const uplc = this.mkUplcData({
      SellingTokens: fields
    }, "MarketSalePolicy::SpendingActivity.SellingTokens");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::SpendingActivity.MergingChildChunk"***
   * @remarks - ***SpendingActivity$MergingChildChunkLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  MergingChildChunk(fields) {
    const uplc = this.mkUplcData({
      MergingChildChunk: fields
    }, "MarketSalePolicy::SpendingActivity.MergingChildChunk");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::SpendingActivity.Retiring"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  Retiring(id) {
    const uplc = this.mkUplcData({
      Retiring: id
    }, "MarketSalePolicy::SpendingActivity.Retiring");
    return uplc;
  }
};
let MintingActivityHelperNested$1 = class MintingActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MintingActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
  * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::MintingActivity.CreatingRecord"***, 
  * given a transaction-context (or direct arg) with a ***seed utxo*** 
  * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
  *  - to get a transaction context having the seed needed for this argument, 
  *    see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.
  * - or see Stellar Contracts' `hasSeed` type for other ways to feed it with a TxOutputId.
  *  - in a context providing an implicit seed utxo, use 
  *    the `$seeded$CreatingRecord}` variant of this activity instead
  *
   * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
  */
  CreatingRecord(thingWithSeed) {
    const seedTxOutputId = this.getSeed(thingWithSeed);
    const uplc = this.mkUplcData({
      CreatingRecord: seedTxOutputId
    }, "MarketSalePolicy::MintingActivity.CreatingRecord");
    return uplc;
  }
  /*singleField/seeded enum variant*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::MintingActivity.CreatingRecord"***
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   * #### Usage
   * Access the activity-creator as a getter: `$seeded$CreatingRecord`
   *
   * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's
   * `mkTxnCreateRecord({activity, ...})` method.
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  get $seeded$CreatingRecord() {
    return impliedSeedActivityMaker(this, this.CreatingRecord)();
  }
  SplittingSaleChunkAndBuying(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        SplittingSaleChunkAndBuying: { seed: seedTxOutputId, ...filteredFields }
      }, "MarketSalePolicy::MintingActivity.SplittingSaleChunkAndBuying");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        SplittingSaleChunkAndBuying: fields
      }, "MarketSalePolicy::MintingActivity.SplittingSaleChunkAndBuying");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::MintingActivity.SplittingSaleChunkAndBuying"***, 
   * @param fields - \{ parentChunkId: string, buyingUnitQuantity: IntLike \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$SplittingSaleChunkAndBuying({ parentChunkId, buyingUnitQuantity })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$SplittingSaleChunkAndBuying = impliedSeedActivityMaker(
    this,
    this.SplittingSaleChunkAndBuying
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
};
let BurningActivityHelperNested$1 = class BurningActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    BurningActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::BurningActivity.DeletingRecord"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DeletingRecord(id) {
    const uplc = this.mkUplcData({
      DeletingRecord: id
    }, "MarketSalePolicy::BurningActivity.DeletingRecord");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::BurningActivity.JoiningWithParentChunk"***
   * @remarks - ***BurningActivity$JoiningWithParentChunkLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  JoiningWithParentChunk(fields) {
    const uplc = this.mkUplcData({
      JoiningWithParentChunk: fields
    }, "MarketSalePolicy::BurningActivity.JoiningWithParentChunk");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::BurningActivity.CleanupRetired"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  CleanupRetired(id) {
    const uplc = this.mkUplcData({
      CleanupRetired: id
    }, "MarketSalePolicy::BurningActivity.CleanupRetired");
    return uplc;
  }
};
let DelegateActivityHelper$1 = class DelegateActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateActivitySchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * access to different variants of the ***nested CapoLifecycleActivity*** type needed for ***DelegateActivity:CapoLifecycleActivities***.
   */
  get CapoLifecycleActivities() {
    const nestedAccessor = new CapoLifecycleActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { CapoLifecycleActivities: activity },
          "MarketSalePolicy::DelegateActivity.CapoLifecycleActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested DelegateLifecycleActivity*** type needed for ***DelegateActivity:DelegateLifecycleActivities***.
   */
  get DelegateLifecycleActivities() {
    const nestedAccessor = new DelegateLifecycleActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { DelegateLifecycleActivities: activity },
          "MarketSalePolicy::DelegateActivity.DelegateLifecycleActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested SpendingActivity*** type needed for ***DelegateActivity:SpendingActivities***.
   */
  get SpendingActivities() {
    const nestedAccessor = new SpendingActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { SpendingActivities: activity },
          "MarketSalePolicy::DelegateActivity.SpendingActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested MintingActivity*** type needed for ***DelegateActivity:MintingActivities***.
   */
  get MintingActivities() {
    const nestedAccessor = new MintingActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { MintingActivities: activity },
          "MarketSalePolicy::DelegateActivity.MintingActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested BurningActivity*** type needed for ***DelegateActivity:BurningActivities***.
   */
  get BurningActivities() {
    const nestedAccessor = new BurningActivityHelperNested$1({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { BurningActivities: activity },
          "MarketSalePolicy::DelegateActivity.BurningActivities"
        );
      }
    );
    return nestedAccessor;
  }
  CreatingDelegatedData(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegatedData: { seed: seedTxOutputId, ...filteredFields }
      }, "MarketSalePolicy::DelegateActivity.CreatingDelegatedData");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegatedData: fields
      }, "MarketSalePolicy::DelegateActivity.CreatingDelegatedData");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::DelegateActivity.CreatingDelegatedData"***, 
   * @param fields - \{ dataType: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegatedData({ dataType })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegatedData = impliedSeedActivityMaker(
    this,
    this.CreatingDelegatedData
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::DelegateActivity.UpdatingDelegatedData"***
   * @remarks - ***DelegateActivity$UpdatingDelegatedDataLike*** is the same as the expanded field-types.
   */
  UpdatingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      UpdatingDelegatedData: fields
    }, "MarketSalePolicy::DelegateActivity.UpdatingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::DelegateActivity.DeletingDelegatedData"***
   * @remarks - ***DelegateActivity$DeletingDelegatedDataLike*** is the same as the expanded field-types.
   */
  DeletingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      DeletingDelegatedData: fields
    }, "MarketSalePolicy::DelegateActivity.DeletingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::DelegateActivity.MultipleDelegateActivities"***
   */
  MultipleDelegateActivities(activities) {
    const uplc = this.mkUplcData({
      MultipleDelegateActivities: activities
    }, "MarketSalePolicy::DelegateActivity.MultipleDelegateActivities");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"MarketSalePolicy::DelegateActivity.OtherActivities"***
   */
  OtherActivities(activity) {
    const uplc = this.mkUplcData({
      OtherActivities: activity
    }, "MarketSalePolicy::DelegateActivity.OtherActivities");
    return uplc;
  }
};
let PendingDelegateActionHelper$1 = class PendingDelegateActionHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    PendingDelegateActionSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  Add(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        Add: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::PendingDelegateAction.Add");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        Add: fields
      }, "CapoDelegateHelpers::PendingDelegateAction.Add");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Add"***, 
   * @param fields - \{ purpose: string, idPrefix: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$Add({ purpose, idPrefix })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$Add = impliedSeedActivityMaker(
    this,
    this.Add
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Remove"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Remove() {
    const uplc = this.mkUplcData(
      { Remove: {} },
      "CapoDelegateHelpers::PendingDelegateAction.Remove"
    );
    return uplc;
  }
  Replace(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        Replace: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::PendingDelegateAction.Replace");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        Replace: fields
      }, "CapoDelegateHelpers::PendingDelegateAction.Replace");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Replace"***, 
   * @param fields - \{ purpose: string, idPrefix: string, replacesDgt: AssetClass | string | [string | MintingPolicyHash | number[], string | number[]] | \{mph: MintingPolicyHash | string | number[], tokenName: string | number[]\} \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$Replace({ purpose, idPrefix, replacesDgt })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$Replace = impliedSeedActivityMaker(
    this,
    this.Replace
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
};
let ManifestEntryTypeHelper$1 = class ManifestEntryTypeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestEntryTypeSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.NamedTokenRef"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get NamedTokenRef() {
    const uplc = this.mkUplcData(
      { NamedTokenRef: {} },
      "CapoHelpers::ManifestEntryType.NamedTokenRef"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::ManifestEntryType.DgDataPolicy"***
   * @remarks - ***ManifestEntryType$DgDataPolicyLike*** is the same as the expanded field-types.
   */
  DgDataPolicy(fields) {
    const uplc = this.mkUplcData({
      DgDataPolicy: fields
    }, "CapoHelpers::ManifestEntryType.DgDataPolicy");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoHelpers::ManifestEntryType.DelegateThreads"***
   * @remarks - ***ManifestEntryType$DelegateThreadsLike*** is the same as the expanded field-types.
   */
  DelegateThreads(fields) {
    const uplc = this.mkUplcData({
      DelegateThreads: fields
    }, "CapoHelpers::ManifestEntryType.DelegateThreads");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.MerkleMembership"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get MerkleMembership() {
    const uplc = this.mkUplcData(
      { MerkleMembership: {} },
      "CapoHelpers::ManifestEntryType.MerkleMembership"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.MerkleStateRoot"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#4***
   */
  get MerkleStateRoot() {
    const uplc = this.mkUplcData(
      { MerkleStateRoot: {} },
      "CapoHelpers::ManifestEntryType.MerkleStateRoot"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
};
let PendingCharterChangeHelper$1 = class PendingCharterChangeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    PendingCharterChangeSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingCharterChange.delegateChange"***
   * @remarks - ***PendingDelegateChangeLike*** is the same as the expanded field-type.
   */
  delegateChange(change) {
    const uplc = this.mkUplcData({
      delegateChange: change
    }, "CapoDelegateHelpers::PendingCharterChange.delegateChange");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingCharterChange.otherManifestChange"***
   * @remarks - ***PendingCharterChange$otherManifestChangeLike*** is the same as the expanded field-types.
   */
  otherManifestChange(fields) {
    const uplc = this.mkUplcData({
      otherManifestChange: fields
    }, "CapoDelegateHelpers::PendingCharterChange.otherManifestChange");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let cctx_CharterInputTypeHelper$1 = class cctx_CharterInputTypeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    cctx_CharterInputTypeSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::cctx_CharterInputType.Unk"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get Unk() {
    const uplc = this.mkUplcData(
      { Unk: {} },
      "CapoHelpers::cctx_CharterInputType.Unk"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::cctx_CharterInputType.RefInput"***
   * @remarks - ***cctx_CharterInputType$RefInputLike*** is the same as the expanded field-types.
   */
  RefInput(fields) {
    const uplc = this.mkUplcData({
      RefInput: fields
    }, "CapoHelpers::cctx_CharterInputType.RefInput");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoHelpers::cctx_CharterInputType.Input"***
   * @remarks - ***cctx_CharterInputType$InputLike*** is the same as the expanded field-types.
   */
  Input(fields) {
    const uplc = this.mkUplcData({
      Input: fields
    }, "CapoHelpers::cctx_CharterInputType.Input");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let dgd_DataSrcHelper$1 = class dgd_DataSrcHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    dgd_DataSrcSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::dgd_DataSrc.Unk"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get Unk() {
    const uplc = this.mkUplcData(
      { Unk: {} },
      "CapoHelpers::dgd_DataSrc.Unk"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::dgd_DataSrc.Input"***
   */
  Input(utxo) {
    const uplc = this.mkUplcData({
      Input: utxo
    }, "CapoHelpers::dgd_DataSrc.Input");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoHelpers::dgd_DataSrc.Output"***
   */
  Output(txo) {
    const uplc = this.mkUplcData({
      Output: txo
    }, "CapoHelpers::dgd_DataSrc.Output");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoHelpers::dgd_DataSrc.Both"***
   * @remarks - ***dgd_DataSrc$BothLike*** is the same as the expanded field-types.
   */
  Both(fields) {
    const uplc = this.mkUplcData({
      Both: fields
    }, "CapoHelpers::dgd_DataSrc.Both");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
};
let AbstractDelegateActivitiesEnumHelper$1 = class AbstractDelegateActivitiesEnumHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    AbstractDelegateActivitiesEnumSchema$1,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.SpendingActivities"***
   */
  SpendingActivities(activity) {
    const uplc = this.mkUplcData({
      SpendingActivities: activity
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.SpendingActivities");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.MintingActivities"***
   */
  MintingActivities(activity) {
    const uplc = this.mkUplcData({
      MintingActivities: activity
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.MintingActivities");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.BurningActivities"***
   */
  BurningActivities(activity) {
    const uplc = this.mkUplcData({
      BurningActivities: activity
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.BurningActivities");
    return uplc;
  }
  CreatingDelegatedData(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegatedData: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.CreatingDelegatedData");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegatedData: fields
      }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.CreatingDelegatedData");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.CreatingDelegatedData"***, 
   * @param fields - \{ dataType: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegatedData({ dataType })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegatedData = impliedSeedActivityMaker(
    this,
    this.CreatingDelegatedData
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.UpdatingDelegatedData"***
   * @remarks - ***AbstractDelegateActivitiesEnum$UpdatingDelegatedDataLike*** is the same as the expanded field-types.
   */
  UpdatingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      UpdatingDelegatedData: fields
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.UpdatingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.DeletingDelegatedData"***
   * @remarks - ***AbstractDelegateActivitiesEnum$DeletingDelegatedDataLike*** is the same as the expanded field-types.
   */
  DeletingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      DeletingDelegatedData: fields
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.DeletingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.MultipleDelegateActivities"***
   */
  MultipleDelegateActivities(activities) {
    const uplc = this.mkUplcData({
      MultipleDelegateActivities: activities
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.MultipleDelegateActivities");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.OtherActivities"***
   */
  OtherActivities(activity) {
    const uplc = this.mkUplcData({
      OtherActivities: activity
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.OtherActivities");
    return uplc;
  }
};
const AnyDataSchema$1 = {
  "kind": "struct",
  "format": "map",
  "id": "__module__StellarHeliosHelpers__AnyData[]",
  "name": "AnyData",
  "fieldTypes": [
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "@id"
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "tpe"
    }
  ]
};
const DelegationDetailSchema$1 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
  "name": "DelegationDetail",
  "fieldTypes": [
    {
      "name": "capoAddr",
      "type": {
        "kind": "internal",
        "name": "Address"
      }
    },
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "tn",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const SaleProgressDetailsV1Schema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__SaleProgressDetails__SaleProgressDetailsV1[]",
  "name": "SaleProgressDetailsV1",
  "fieldTypes": [
    {
      "name": "lastPurchaseAt",
      "type": {
        "kind": "internal",
        "name": "Time"
      }
    },
    {
      "name": "prevPurchaseAt",
      "type": {
        "kind": "internal",
        "name": "Time"
      }
    },
    {
      "name": "chunkUnitCount",
      "type": {
        "kind": "internal",
        "name": "Int"
      }
    },
    {
      "name": "chunkUnitsSold",
      "type": {
        "kind": "internal",
        "name": "Int"
      }
    }
  ]
};
const MarketSaleStateSchema = {
  "kind": "enum",
  "name": "MarketSaleState",
  "id": "__module__MarketSaleData__MarketSaleState[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__MarketSaleData__MarketSaleState[]__Pending",
      "name": "Pending",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__MarketSaleData__MarketSaleState[]__Active",
      "name": "Active",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__MarketSaleData__MarketSaleState[]__Retired",
      "name": "Retired",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__MarketSaleData__MarketSaleState[]__SoldOut",
      "name": "SoldOut",
      "fieldTypes": []
    }
  ]
};
const OtherSaleStateV1Schema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__MarketSaleData__OtherSaleStateV1[]",
  "name": "OtherSaleStateV1",
  "fieldTypes": [
    {
      "name": "progressDetails",
      "type": {
        "kind": "struct",
        "format": "list",
        "id": "__module__SaleProgressDetails__SaleProgressDetailsV1[]",
        "name": "SaleProgressDetailsV1",
        "fieldTypes": [
          {
            "name": "lastPurchaseAt",
            "type": {
              "kind": "internal",
              "name": "Time"
            }
          },
          {
            "name": "prevPurchaseAt",
            "type": {
              "kind": "internal",
              "name": "Time"
            }
          },
          {
            "name": "chunkUnitCount",
            "type": {
              "kind": "internal",
              "name": "Int"
            }
          },
          {
            "name": "chunkUnitsSold",
            "type": {
              "kind": "internal",
              "name": "Int"
            }
          }
        ]
      }
    },
    {
      "name": "salePace",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    },
    {
      "name": "state",
      "type": {
        "kind": "enum",
        "name": "MarketSaleState",
        "id": "__module__MarketSaleData__MarketSaleState[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__MarketSaleData__MarketSaleState[]__Pending",
            "name": "Pending",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__MarketSaleData__MarketSaleState[]__Active",
            "name": "Active",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__MarketSaleData__MarketSaleState[]__Retired",
            "name": "Retired",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__MarketSaleData__MarketSaleState[]__SoldOut",
            "name": "SoldOut",
            "fieldTypes": []
          }
        ]
      }
    }
  ]
};
const DynamicSaleV1SettingsSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]",
  "name": "DynamicSaleV1Settings",
  "fieldTypes": [
    {
      "name": "targetPrice",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    },
    {
      "name": "targetedSellingTime",
      "type": {
        "kind": "internal",
        "name": "Duration"
      }
    },
    {
      "name": "minPrice",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    },
    {
      "name": "maxPrice",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    },
    {
      "name": "progressPricingDiscountFloorPoint",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    },
    {
      "name": "progressPricingDiscountWhenSlow",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    },
    {
      "name": "progressPricingExpansionWhenFast",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    },
    {
      "name": "dynaPaceFasterSaleWeight",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    },
    {
      "name": "dynaPaceIdleDecayRate",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    },
    {
      "name": "pricingWeightDynaPace",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    }
  ]
};
const RelativeDelegateLinkSchema$1 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
  "name": "RelativeDelegateLink",
  "fieldTypes": [
    {
      "name": "uutName",
      "type": {
        "kind": "internal",
        "name": "String"
      }
    },
    {
      "name": "delegateValidatorHash",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "internal",
          "name": "ValidatorHash"
        }
      }
    },
    {
      "name": "config",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const VxfExpectedActivitySchema$1 = {
  "kind": "enum",
  "name": "VxfExpectedActivity",
  "id": "__module__VxfProtocol__VxfExpectedActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 22104,
      "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
      "name": "VxfTransfer",
      "fieldTypes": [
        {
          "name": "appData",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 22106,
      "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
      "name": "VxfStorage",
      "fieldTypes": [
        {
          "name": "appData",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 22107,
      "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
      "name": "SpecificRedeemerId",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "inNestedList",
          "type": {
            "kind": "internal",
            "name": "Bool"
          }
        },
        {
          "name": "nestedListRedeemerId",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "Int"
            }
          }
        },
        {
          "name": "appData",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 22108,
      "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
      "name": "TaggedRedeemer",
      "fieldTypes": [
        {
          "name": "firstFieldConstrTag",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "inNestedList",
          "type": {
            "kind": "internal",
            "name": "Bool"
          }
        },
        {
          "name": "appData",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    }
  ]
};
const VxfDestinationSchema$1 = {
  "kind": "enum",
  "name": "VxfDestination",
  "id": "__module__VxfProtocol__VxfDestination[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
      "name": "RelativeLink",
      "fieldTypes": [
        {
          "name": "link",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
            "name": "RelativeDelegateLink",
            "fieldTypes": [
              {
                "name": "uutName",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "delegateValidatorHash",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "internal",
                    "name": "ValidatorHash"
                  }
                }
              },
              {
                "name": "config",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        },
        {
          "name": "vxfActivity",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "enum",
              "name": "VxfExpectedActivity",
              "id": "__module__VxfProtocol__VxfExpectedActivity[]",
              "variantTypes": [
                {
                  "kind": "variant",
                  "tag": 22104,
                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                  "name": "VxfTransfer",
                  "fieldTypes": [
                    {
                      "name": "appData",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "Data"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 22106,
                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                  "name": "VxfStorage",
                  "fieldTypes": [
                    {
                      "name": "appData",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "Data"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 22107,
                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                  "name": "SpecificRedeemerId",
                  "fieldTypes": [
                    {
                      "name": "id",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      }
                    },
                    {
                      "name": "inNestedList",
                      "type": {
                        "kind": "internal",
                        "name": "Bool"
                      }
                    },
                    {
                      "name": "nestedListRedeemerId",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "Int"
                        }
                      }
                    },
                    {
                      "name": "appData",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "Data"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 22108,
                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                  "name": "TaggedRedeemer",
                  "fieldTypes": [
                    {
                      "name": "firstFieldConstrTag",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      }
                    },
                    {
                      "name": "inNestedList",
                      "type": {
                        "kind": "internal",
                        "name": "Bool"
                      }
                    },
                    {
                      "name": "appData",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "Data"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
      "name": "AnyTokenHolder",
      "fieldTypes": [
        {
          "name": "mph",
          "type": {
            "kind": "internal",
            "name": "MintingPolicyHash"
          }
        },
        {
          "name": "assetName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
      "name": "PubKey",
      "fieldTypes": [
        {
          "name": "pkh",
          "type": {
            "kind": "internal",
            "name": "PubKeyHash"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 98,
      "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
      "name": "Anywhere",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 99,
      "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
      "name": "NotYetDefined",
      "fieldTypes": []
    }
  ]
};
const FixedSaleDetailsV1Schema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__MarketSaleData__FixedSaleDetailsV1[]",
  "name": "FixedSaleDetailsV1",
  "fieldTypes": [
    {
      "name": "settings",
      "type": {
        "kind": "struct",
        "format": "list",
        "id": "__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]",
        "name": "DynamicSaleV1Settings",
        "fieldTypes": [
          {
            "name": "targetPrice",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "targetedSellingTime",
            "type": {
              "kind": "internal",
              "name": "Duration"
            }
          },
          {
            "name": "minPrice",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "maxPrice",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "progressPricingDiscountFloorPoint",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "progressPricingDiscountWhenSlow",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "progressPricingExpansionWhenFast",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "dynaPaceFasterSaleWeight",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "dynaPaceIdleDecayRate",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "pricingWeightDynaPace",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          }
        ]
      }
    },
    {
      "name": "startAt",
      "type": {
        "kind": "internal",
        "name": "Time"
      }
    },
    {
      "name": "vxfTokensTo",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "enum",
          "name": "VxfDestination",
          "id": "__module__VxfProtocol__VxfDestination[]",
          "variantTypes": [
            {
              "kind": "variant",
              "tag": 0,
              "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
              "name": "RelativeLink",
              "fieldTypes": [
                {
                  "name": "link",
                  "type": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "vxfActivity",
                  "type": {
                    "kind": "option",
                    "someType": {
                      "kind": "enum",
                      "name": "VxfExpectedActivity",
                      "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 22104,
                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                          "name": "VxfTransfer",
                          "fieldTypes": [
                            {
                              "name": "appData",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "Data"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 22106,
                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                          "name": "VxfStorage",
                          "fieldTypes": [
                            {
                              "name": "appData",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "Data"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 22107,
                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                          "name": "SpecificRedeemerId",
                          "fieldTypes": [
                            {
                              "name": "id",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            },
                            {
                              "name": "inNestedList",
                              "type": {
                                "kind": "internal",
                                "name": "Bool"
                              }
                            },
                            {
                              "name": "nestedListRedeemerId",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "Int"
                                }
                              }
                            },
                            {
                              "name": "appData",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "Data"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 22108,
                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                          "name": "TaggedRedeemer",
                          "fieldTypes": [
                            {
                              "name": "firstFieldConstrTag",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            },
                            {
                              "name": "inNestedList",
                              "type": {
                                "kind": "internal",
                                "name": "Bool"
                              }
                            },
                            {
                              "name": "appData",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "Data"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 1,
              "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
              "name": "AnyTokenHolder",
              "fieldTypes": [
                {
                  "name": "mph",
                  "type": {
                    "kind": "internal",
                    "name": "MintingPolicyHash"
                  }
                },
                {
                  "name": "assetName",
                  "type": {
                    "kind": "internal",
                    "name": "ByteArray"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 2,
              "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
              "name": "PubKey",
              "fieldTypes": [
                {
                  "name": "pkh",
                  "type": {
                    "kind": "internal",
                    "name": "PubKeyHash"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 98,
              "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
              "name": "Anywhere",
              "fieldTypes": []
            },
            {
              "kind": "variant",
              "tag": 99,
              "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
              "name": "NotYetDefined",
              "fieldTypes": []
            }
          ]
        }
      }
    },
    {
      "name": "vxfFundsTo",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "enum",
          "name": "VxfDestination",
          "id": "__module__VxfProtocol__VxfDestination[]",
          "variantTypes": [
            {
              "kind": "variant",
              "tag": 0,
              "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
              "name": "RelativeLink",
              "fieldTypes": [
                {
                  "name": "link",
                  "type": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                },
                {
                  "name": "vxfActivity",
                  "type": {
                    "kind": "option",
                    "someType": {
                      "kind": "enum",
                      "name": "VxfExpectedActivity",
                      "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 22104,
                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                          "name": "VxfTransfer",
                          "fieldTypes": [
                            {
                              "name": "appData",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "Data"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 22106,
                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                          "name": "VxfStorage",
                          "fieldTypes": [
                            {
                              "name": "appData",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "Data"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 22107,
                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                          "name": "SpecificRedeemerId",
                          "fieldTypes": [
                            {
                              "name": "id",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            },
                            {
                              "name": "inNestedList",
                              "type": {
                                "kind": "internal",
                                "name": "Bool"
                              }
                            },
                            {
                              "name": "nestedListRedeemerId",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "Int"
                                }
                              }
                            },
                            {
                              "name": "appData",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "Data"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 22108,
                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                          "name": "TaggedRedeemer",
                          "fieldTypes": [
                            {
                              "name": "firstFieldConstrTag",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            },
                            {
                              "name": "inNestedList",
                              "type": {
                                "kind": "internal",
                                "name": "Bool"
                              }
                            },
                            {
                              "name": "appData",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "Data"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 1,
              "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
              "name": "AnyTokenHolder",
              "fieldTypes": [
                {
                  "name": "mph",
                  "type": {
                    "kind": "internal",
                    "name": "MintingPolicyHash"
                  }
                },
                {
                  "name": "assetName",
                  "type": {
                    "kind": "internal",
                    "name": "ByteArray"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 2,
              "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
              "name": "PubKey",
              "fieldTypes": [
                {
                  "name": "pkh",
                  "type": {
                    "kind": "internal",
                    "name": "PubKeyHash"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 98,
              "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
              "name": "Anywhere",
              "fieldTypes": []
            },
            {
              "kind": "variant",
              "tag": 99,
              "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
              "name": "NotYetDefined",
              "fieldTypes": []
            }
          ]
        }
      }
    }
  ]
};
const SaleAssetsV1Schema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__MarketSaleData__SaleAssetsV1[]",
  "name": "SaleAssetsV1",
  "fieldTypes": [
    {
      "name": "saleUnitAssets",
      "type": {
        "kind": "internal",
        "name": "Value"
      }
    },
    {
      "name": "singleBuyMaxUnits",
      "type": {
        "kind": "internal",
        "name": "Int"
      }
    },
    {
      "name": "primaryAssetMph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "primaryAssetName",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    },
    {
      "name": "primaryAssetTargetCount",
      "type": {
        "kind": "internal",
        "name": "Int"
      }
    },
    {
      "name": "totalSaleUnits",
      "type": {
        "kind": "internal",
        "name": "Int"
      }
    }
  ]
};
const ThreadInfoV1Schema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__MarketSaleData__ThreadInfoV1[]",
  "name": "ThreadInfoV1",
  "fieldTypes": [
    {
      "name": "nestedThreads",
      "type": {
        "kind": "internal",
        "name": "Int"
      }
    },
    {
      "name": "retiredThreads",
      "type": {
        "kind": "internal",
        "name": "Int"
      }
    },
    {
      "name": "parentChunkId",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    },
    {
      "name": "chunkForkedAt",
      "type": {
        "kind": "internal",
        "name": "Time"
      }
    },
    {
      "name": "saleId",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const MktSaleDetailsSchema = {
  "kind": "enum",
  "name": "MktSaleDetails",
  "id": "__module__MarketSaleData__MktSaleDetails[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 4e3,
      "id": "__module__MarketSaleData__MktSaleDetails[]__V1",
      "name": "V1",
      "fieldTypes": [
        {
          "name": "saleState",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__MarketSaleData__OtherSaleStateV1[]",
            "name": "OtherSaleStateV1",
            "fieldTypes": [
              {
                "name": "progressDetails",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__SaleProgressDetails__SaleProgressDetailsV1[]",
                  "name": "SaleProgressDetailsV1",
                  "fieldTypes": [
                    {
                      "name": "lastPurchaseAt",
                      "type": {
                        "kind": "internal",
                        "name": "Time"
                      }
                    },
                    {
                      "name": "prevPurchaseAt",
                      "type": {
                        "kind": "internal",
                        "name": "Time"
                      }
                    },
                    {
                      "name": "chunkUnitCount",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      }
                    },
                    {
                      "name": "chunkUnitsSold",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      }
                    }
                  ]
                }
              },
              {
                "name": "salePace",
                "type": {
                  "kind": "internal",
                  "name": "Real"
                }
              },
              {
                "name": "state",
                "type": {
                  "kind": "enum",
                  "name": "MarketSaleState",
                  "id": "__module__MarketSaleData__MarketSaleState[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__MarketSaleData__MarketSaleState[]__Pending",
                      "name": "Pending",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__MarketSaleData__MarketSaleState[]__Active",
                      "name": "Active",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__MarketSaleData__MarketSaleState[]__Retired",
                      "name": "Retired",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__MarketSaleData__MarketSaleState[]__SoldOut",
                      "name": "SoldOut",
                      "fieldTypes": []
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "fixedSaleDetails",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__MarketSaleData__FixedSaleDetailsV1[]",
            "name": "FixedSaleDetailsV1",
            "fieldTypes": [
              {
                "name": "settings",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]",
                  "name": "DynamicSaleV1Settings",
                  "fieldTypes": [
                    {
                      "name": "targetPrice",
                      "type": {
                        "kind": "internal",
                        "name": "Real"
                      }
                    },
                    {
                      "name": "targetedSellingTime",
                      "type": {
                        "kind": "internal",
                        "name": "Duration"
                      }
                    },
                    {
                      "name": "minPrice",
                      "type": {
                        "kind": "internal",
                        "name": "Real"
                      }
                    },
                    {
                      "name": "maxPrice",
                      "type": {
                        "kind": "internal",
                        "name": "Real"
                      }
                    },
                    {
                      "name": "progressPricingDiscountFloorPoint",
                      "type": {
                        "kind": "internal",
                        "name": "Real"
                      }
                    },
                    {
                      "name": "progressPricingDiscountWhenSlow",
                      "type": {
                        "kind": "internal",
                        "name": "Real"
                      }
                    },
                    {
                      "name": "progressPricingExpansionWhenFast",
                      "type": {
                        "kind": "internal",
                        "name": "Real"
                      }
                    },
                    {
                      "name": "dynaPaceFasterSaleWeight",
                      "type": {
                        "kind": "internal",
                        "name": "Real"
                      }
                    },
                    {
                      "name": "dynaPaceIdleDecayRate",
                      "type": {
                        "kind": "internal",
                        "name": "Real"
                      }
                    },
                    {
                      "name": "pricingWeightDynaPace",
                      "type": {
                        "kind": "internal",
                        "name": "Real"
                      }
                    }
                  ]
                }
              },
              {
                "name": "startAt",
                "type": {
                  "kind": "internal",
                  "name": "Time"
                }
              },
              {
                "name": "vxfTokensTo",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "enum",
                    "name": "VxfDestination",
                    "id": "__module__VxfProtocol__VxfDestination[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
                        "name": "RelativeLink",
                        "fieldTypes": [
                          {
                            "name": "link",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                              "name": "RelativeDelegateLink",
                              "fieldTypes": [
                                {
                                  "name": "uutName",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "delegateValidatorHash",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "internal",
                                      "name": "ValidatorHash"
                                    }
                                  }
                                },
                                {
                                  "name": "config",
                                  "type": {
                                    "kind": "internal",
                                    "name": "ByteArray"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "vxfActivity",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "enum",
                                "name": "VxfExpectedActivity",
                                "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 22104,
                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                                    "name": "VxfTransfer",
                                    "fieldTypes": [
                                      {
                                        "name": "appData",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "Data"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 22106,
                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                                    "name": "VxfStorage",
                                    "fieldTypes": [
                                      {
                                        "name": "appData",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "Data"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 22107,
                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                                    "name": "SpecificRedeemerId",
                                    "fieldTypes": [
                                      {
                                        "name": "id",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      },
                                      {
                                        "name": "inNestedList",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Bool"
                                        }
                                      },
                                      {
                                        "name": "nestedListRedeemerId",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "Int"
                                          }
                                        }
                                      },
                                      {
                                        "name": "appData",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "Data"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 22108,
                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                                    "name": "TaggedRedeemer",
                                    "fieldTypes": [
                                      {
                                        "name": "firstFieldConstrTag",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      },
                                      {
                                        "name": "inNestedList",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Bool"
                                        }
                                      },
                                      {
                                        "name": "appData",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "Data"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
                        "name": "AnyTokenHolder",
                        "fieldTypes": [
                          {
                            "name": "mph",
                            "type": {
                              "kind": "internal",
                              "name": "MintingPolicyHash"
                            }
                          },
                          {
                            "name": "assetName",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 2,
                        "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
                        "name": "PubKey",
                        "fieldTypes": [
                          {
                            "name": "pkh",
                            "type": {
                              "kind": "internal",
                              "name": "PubKeyHash"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 98,
                        "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
                        "name": "Anywhere",
                        "fieldTypes": []
                      },
                      {
                        "kind": "variant",
                        "tag": 99,
                        "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
                        "name": "NotYetDefined",
                        "fieldTypes": []
                      }
                    ]
                  }
                }
              },
              {
                "name": "vxfFundsTo",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "enum",
                    "name": "VxfDestination",
                    "id": "__module__VxfProtocol__VxfDestination[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
                        "name": "RelativeLink",
                        "fieldTypes": [
                          {
                            "name": "link",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                              "name": "RelativeDelegateLink",
                              "fieldTypes": [
                                {
                                  "name": "uutName",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "delegateValidatorHash",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "internal",
                                      "name": "ValidatorHash"
                                    }
                                  }
                                },
                                {
                                  "name": "config",
                                  "type": {
                                    "kind": "internal",
                                    "name": "ByteArray"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "vxfActivity",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "enum",
                                "name": "VxfExpectedActivity",
                                "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 22104,
                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                                    "name": "VxfTransfer",
                                    "fieldTypes": [
                                      {
                                        "name": "appData",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "Data"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 22106,
                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                                    "name": "VxfStorage",
                                    "fieldTypes": [
                                      {
                                        "name": "appData",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "Data"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 22107,
                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                                    "name": "SpecificRedeemerId",
                                    "fieldTypes": [
                                      {
                                        "name": "id",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      },
                                      {
                                        "name": "inNestedList",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Bool"
                                        }
                                      },
                                      {
                                        "name": "nestedListRedeemerId",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "Int"
                                          }
                                        }
                                      },
                                      {
                                        "name": "appData",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "Data"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 22108,
                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                                    "name": "TaggedRedeemer",
                                    "fieldTypes": [
                                      {
                                        "name": "firstFieldConstrTag",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      },
                                      {
                                        "name": "inNestedList",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Bool"
                                        }
                                      },
                                      {
                                        "name": "appData",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "Data"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
                        "name": "AnyTokenHolder",
                        "fieldTypes": [
                          {
                            "name": "mph",
                            "type": {
                              "kind": "internal",
                              "name": "MintingPolicyHash"
                            }
                          },
                          {
                            "name": "assetName",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 2,
                        "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
                        "name": "PubKey",
                        "fieldTypes": [
                          {
                            "name": "pkh",
                            "type": {
                              "kind": "internal",
                              "name": "PubKeyHash"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 98,
                        "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
                        "name": "Anywhere",
                        "fieldTypes": []
                      },
                      {
                        "kind": "variant",
                        "tag": 99,
                        "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
                        "name": "NotYetDefined",
                        "fieldTypes": []
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "saleAssets",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__MarketSaleData__SaleAssetsV1[]",
            "name": "SaleAssetsV1",
            "fieldTypes": [
              {
                "name": "saleUnitAssets",
                "type": {
                  "kind": "internal",
                  "name": "Value"
                }
              },
              {
                "name": "singleBuyMaxUnits",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              },
              {
                "name": "primaryAssetMph",
                "type": {
                  "kind": "internal",
                  "name": "MintingPolicyHash"
                }
              },
              {
                "name": "primaryAssetName",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              },
              {
                "name": "primaryAssetTargetCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              },
              {
                "name": "totalSaleUnits",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          }
        },
        {
          "name": "threadInfo",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__MarketSaleData__ThreadInfoV1[]",
            "name": "ThreadInfoV1",
            "fieldTypes": [
              {
                "name": "nestedThreads",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              },
              {
                "name": "retiredThreads",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              },
              {
                "name": "parentChunkId",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              },
              {
                "name": "chunkForkedAt",
                "type": {
                  "kind": "internal",
                  "name": "Time"
                }
              },
              {
                "name": "saleId",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        }
      ]
    }
  ]
};
const MarketSaleDataSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__MarketSaleData__MarketSaleData[]",
  "name": "MarketSaleData",
  "fieldTypes": [
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "@id"
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "tpe"
    },
    {
      "name": "name",
      "type": {
        "kind": "internal",
        "name": "String"
      }
    },
    {
      "name": "details",
      "type": {
        "kind": "enum",
        "name": "MktSaleDetails",
        "id": "__module__MarketSaleData__MktSaleDetails[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 4e3,
            "id": "__module__MarketSaleData__MktSaleDetails[]__V1",
            "name": "V1",
            "fieldTypes": [
              {
                "name": "saleState",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__MarketSaleData__OtherSaleStateV1[]",
                  "name": "OtherSaleStateV1",
                  "fieldTypes": [
                    {
                      "name": "progressDetails",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__SaleProgressDetails__SaleProgressDetailsV1[]",
                        "name": "SaleProgressDetailsV1",
                        "fieldTypes": [
                          {
                            "name": "lastPurchaseAt",
                            "type": {
                              "kind": "internal",
                              "name": "Time"
                            }
                          },
                          {
                            "name": "prevPurchaseAt",
                            "type": {
                              "kind": "internal",
                              "name": "Time"
                            }
                          },
                          {
                            "name": "chunkUnitCount",
                            "type": {
                              "kind": "internal",
                              "name": "Int"
                            }
                          },
                          {
                            "name": "chunkUnitsSold",
                            "type": {
                              "kind": "internal",
                              "name": "Int"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "salePace",
                      "type": {
                        "kind": "internal",
                        "name": "Real"
                      }
                    },
                    {
                      "name": "state",
                      "type": {
                        "kind": "enum",
                        "name": "MarketSaleState",
                        "id": "__module__MarketSaleData__MarketSaleState[]",
                        "variantTypes": [
                          {
                            "kind": "variant",
                            "tag": 0,
                            "id": "__module__MarketSaleData__MarketSaleState[]__Pending",
                            "name": "Pending",
                            "fieldTypes": []
                          },
                          {
                            "kind": "variant",
                            "tag": 1,
                            "id": "__module__MarketSaleData__MarketSaleState[]__Active",
                            "name": "Active",
                            "fieldTypes": []
                          },
                          {
                            "kind": "variant",
                            "tag": 2,
                            "id": "__module__MarketSaleData__MarketSaleState[]__Retired",
                            "name": "Retired",
                            "fieldTypes": []
                          },
                          {
                            "kind": "variant",
                            "tag": 3,
                            "id": "__module__MarketSaleData__MarketSaleState[]__SoldOut",
                            "name": "SoldOut",
                            "fieldTypes": []
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "name": "fixedSaleDetails",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__MarketSaleData__FixedSaleDetailsV1[]",
                  "name": "FixedSaleDetailsV1",
                  "fieldTypes": [
                    {
                      "name": "settings",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]",
                        "name": "DynamicSaleV1Settings",
                        "fieldTypes": [
                          {
                            "name": "targetPrice",
                            "type": {
                              "kind": "internal",
                              "name": "Real"
                            }
                          },
                          {
                            "name": "targetedSellingTime",
                            "type": {
                              "kind": "internal",
                              "name": "Duration"
                            }
                          },
                          {
                            "name": "minPrice",
                            "type": {
                              "kind": "internal",
                              "name": "Real"
                            }
                          },
                          {
                            "name": "maxPrice",
                            "type": {
                              "kind": "internal",
                              "name": "Real"
                            }
                          },
                          {
                            "name": "progressPricingDiscountFloorPoint",
                            "type": {
                              "kind": "internal",
                              "name": "Real"
                            }
                          },
                          {
                            "name": "progressPricingDiscountWhenSlow",
                            "type": {
                              "kind": "internal",
                              "name": "Real"
                            }
                          },
                          {
                            "name": "progressPricingExpansionWhenFast",
                            "type": {
                              "kind": "internal",
                              "name": "Real"
                            }
                          },
                          {
                            "name": "dynaPaceFasterSaleWeight",
                            "type": {
                              "kind": "internal",
                              "name": "Real"
                            }
                          },
                          {
                            "name": "dynaPaceIdleDecayRate",
                            "type": {
                              "kind": "internal",
                              "name": "Real"
                            }
                          },
                          {
                            "name": "pricingWeightDynaPace",
                            "type": {
                              "kind": "internal",
                              "name": "Real"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "startAt",
                      "type": {
                        "kind": "internal",
                        "name": "Time"
                      }
                    },
                    {
                      "name": "vxfTokensTo",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "enum",
                          "name": "VxfDestination",
                          "id": "__module__VxfProtocol__VxfDestination[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
                              "name": "RelativeLink",
                              "fieldTypes": [
                                {
                                  "name": "link",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "vxfActivity",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "enum",
                                      "name": "VxfExpectedActivity",
                                      "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 22104,
                                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                                          "name": "VxfTransfer",
                                          "fieldTypes": [
                                            {
                                              "name": "appData",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "Data"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 22106,
                                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                                          "name": "VxfStorage",
                                          "fieldTypes": [
                                            {
                                              "name": "appData",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "Data"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 22107,
                                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                                          "name": "SpecificRedeemerId",
                                          "fieldTypes": [
                                            {
                                              "name": "id",
                                              "type": {
                                                "kind": "internal",
                                                "name": "Int"
                                              }
                                            },
                                            {
                                              "name": "inNestedList",
                                              "type": {
                                                "kind": "internal",
                                                "name": "Bool"
                                              }
                                            },
                                            {
                                              "name": "nestedListRedeemerId",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "Int"
                                                }
                                              }
                                            },
                                            {
                                              "name": "appData",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "Data"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 22108,
                                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                                          "name": "TaggedRedeemer",
                                          "fieldTypes": [
                                            {
                                              "name": "firstFieldConstrTag",
                                              "type": {
                                                "kind": "internal",
                                                "name": "Int"
                                              }
                                            },
                                            {
                                              "name": "inNestedList",
                                              "type": {
                                                "kind": "internal",
                                                "name": "Bool"
                                              }
                                            },
                                            {
                                              "name": "appData",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "Data"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
                              "name": "AnyTokenHolder",
                              "fieldTypes": [
                                {
                                  "name": "mph",
                                  "type": {
                                    "kind": "internal",
                                    "name": "MintingPolicyHash"
                                  }
                                },
                                {
                                  "name": "assetName",
                                  "type": {
                                    "kind": "internal",
                                    "name": "ByteArray"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
                              "name": "PubKey",
                              "fieldTypes": [
                                {
                                  "name": "pkh",
                                  "type": {
                                    "kind": "internal",
                                    "name": "PubKeyHash"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 98,
                              "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
                              "name": "Anywhere",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 99,
                              "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
                              "name": "NotYetDefined",
                              "fieldTypes": []
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "vxfFundsTo",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "enum",
                          "name": "VxfDestination",
                          "id": "__module__VxfProtocol__VxfDestination[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
                              "name": "RelativeLink",
                              "fieldTypes": [
                                {
                                  "name": "link",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "vxfActivity",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "enum",
                                      "name": "VxfExpectedActivity",
                                      "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 22104,
                                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                                          "name": "VxfTransfer",
                                          "fieldTypes": [
                                            {
                                              "name": "appData",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "Data"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 22106,
                                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                                          "name": "VxfStorage",
                                          "fieldTypes": [
                                            {
                                              "name": "appData",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "Data"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 22107,
                                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                                          "name": "SpecificRedeemerId",
                                          "fieldTypes": [
                                            {
                                              "name": "id",
                                              "type": {
                                                "kind": "internal",
                                                "name": "Int"
                                              }
                                            },
                                            {
                                              "name": "inNestedList",
                                              "type": {
                                                "kind": "internal",
                                                "name": "Bool"
                                              }
                                            },
                                            {
                                              "name": "nestedListRedeemerId",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "Int"
                                                }
                                              }
                                            },
                                            {
                                              "name": "appData",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "Data"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 22108,
                                          "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                                          "name": "TaggedRedeemer",
                                          "fieldTypes": [
                                            {
                                              "name": "firstFieldConstrTag",
                                              "type": {
                                                "kind": "internal",
                                                "name": "Int"
                                              }
                                            },
                                            {
                                              "name": "inNestedList",
                                              "type": {
                                                "kind": "internal",
                                                "name": "Bool"
                                              }
                                            },
                                            {
                                              "name": "appData",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "Data"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
                              "name": "AnyTokenHolder",
                              "fieldTypes": [
                                {
                                  "name": "mph",
                                  "type": {
                                    "kind": "internal",
                                    "name": "MintingPolicyHash"
                                  }
                                },
                                {
                                  "name": "assetName",
                                  "type": {
                                    "kind": "internal",
                                    "name": "ByteArray"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
                              "name": "PubKey",
                              "fieldTypes": [
                                {
                                  "name": "pkh",
                                  "type": {
                                    "kind": "internal",
                                    "name": "PubKeyHash"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 98,
                              "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
                              "name": "Anywhere",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 99,
                              "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
                              "name": "NotYetDefined",
                              "fieldTypes": []
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "saleAssets",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__MarketSaleData__SaleAssetsV1[]",
                  "name": "SaleAssetsV1",
                  "fieldTypes": [
                    {
                      "name": "saleUnitAssets",
                      "type": {
                        "kind": "internal",
                        "name": "Value"
                      }
                    },
                    {
                      "name": "singleBuyMaxUnits",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      }
                    },
                    {
                      "name": "primaryAssetMph",
                      "type": {
                        "kind": "internal",
                        "name": "MintingPolicyHash"
                      }
                    },
                    {
                      "name": "primaryAssetName",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    },
                    {
                      "name": "primaryAssetTargetCount",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      }
                    },
                    {
                      "name": "totalSaleUnits",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      }
                    }
                  ]
                }
              },
              {
                "name": "threadInfo",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__MarketSaleData__ThreadInfoV1[]",
                  "name": "ThreadInfoV1",
                  "fieldTypes": [
                    {
                      "name": "nestedThreads",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      }
                    },
                    {
                      "name": "retiredThreads",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      }
                    },
                    {
                      "name": "parentChunkId",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    },
                    {
                      "name": "chunkForkedAt",
                      "type": {
                        "kind": "internal",
                        "name": "Time"
                      }
                    },
                    {
                      "name": "saleId",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "key": "dtl"
    }
  ]
};
const DelegateDatumSchema$1 = {
  "kind": "enum",
  "name": "DelegateDatum",
  "id": "__module__MarketSalePolicy__DelegateDatum[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__MarketSalePolicy__DelegateDatum[]__Cip68RefToken",
      "name": "Cip68RefToken",
      "fieldTypes": [
        {
          "name": "cip68meta",
          "type": {
            "kind": "struct",
            "format": "map",
            "id": "__module__StellarHeliosHelpers__AnyData[]",
            "name": "AnyData",
            "fieldTypes": [
              {
                "name": "id",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "@id"
              },
              {
                "name": "type",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "tpe"
              }
            ]
          }
        },
        {
          "name": "cip68version",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "otherDetails",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__MarketSalePolicy__DelegateDatum[]__IsDelegation",
      "name": "IsDelegation",
      "fieldTypes": [
        {
          "name": "dd",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
            "name": "DelegationDetail",
            "fieldTypes": [
              {
                "name": "capoAddr",
                "type": {
                  "kind": "internal",
                  "name": "Address"
                }
              },
              {
                "name": "mph",
                "type": {
                  "kind": "internal",
                  "name": "MintingPolicyHash"
                }
              },
              {
                "name": "tn",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__MarketSalePolicy__DelegateDatum[]__capoStoredData",
      "name": "capoStoredData",
      "fieldTypes": [
        {
          "name": "data",
          "type": {
            "kind": "struct",
            "format": "map",
            "id": "__module__MarketSaleData__MarketSaleData[]",
            "name": "MarketSaleData",
            "fieldTypes": [
              {
                "name": "id",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "@id"
              },
              {
                "name": "type",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "tpe"
              },
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "details",
                "type": {
                  "kind": "enum",
                  "name": "MktSaleDetails",
                  "id": "__module__MarketSaleData__MktSaleDetails[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 4e3,
                      "id": "__module__MarketSaleData__MktSaleDetails[]__V1",
                      "name": "V1",
                      "fieldTypes": [
                        {
                          "name": "saleState",
                          "type": {
                            "kind": "struct",
                            "format": "list",
                            "id": "__module__MarketSaleData__OtherSaleStateV1[]",
                            "name": "OtherSaleStateV1",
                            "fieldTypes": [
                              {
                                "name": "progressDetails",
                                "type": {
                                  "kind": "struct",
                                  "format": "list",
                                  "id": "__module__SaleProgressDetails__SaleProgressDetailsV1[]",
                                  "name": "SaleProgressDetailsV1",
                                  "fieldTypes": [
                                    {
                                      "name": "lastPurchaseAt",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Time"
                                      }
                                    },
                                    {
                                      "name": "prevPurchaseAt",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Time"
                                      }
                                    },
                                    {
                                      "name": "chunkUnitCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    },
                                    {
                                      "name": "chunkUnitsSold",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "name": "salePace",
                                "type": {
                                  "kind": "internal",
                                  "name": "Real"
                                }
                              },
                              {
                                "name": "state",
                                "type": {
                                  "kind": "enum",
                                  "name": "MarketSaleState",
                                  "id": "__module__MarketSaleData__MarketSaleState[]",
                                  "variantTypes": [
                                    {
                                      "kind": "variant",
                                      "tag": 0,
                                      "id": "__module__MarketSaleData__MarketSaleState[]__Pending",
                                      "name": "Pending",
                                      "fieldTypes": []
                                    },
                                    {
                                      "kind": "variant",
                                      "tag": 1,
                                      "id": "__module__MarketSaleData__MarketSaleState[]__Active",
                                      "name": "Active",
                                      "fieldTypes": []
                                    },
                                    {
                                      "kind": "variant",
                                      "tag": 2,
                                      "id": "__module__MarketSaleData__MarketSaleState[]__Retired",
                                      "name": "Retired",
                                      "fieldTypes": []
                                    },
                                    {
                                      "kind": "variant",
                                      "tag": 3,
                                      "id": "__module__MarketSaleData__MarketSaleState[]__SoldOut",
                                      "name": "SoldOut",
                                      "fieldTypes": []
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "fixedSaleDetails",
                          "type": {
                            "kind": "struct",
                            "format": "list",
                            "id": "__module__MarketSaleData__FixedSaleDetailsV1[]",
                            "name": "FixedSaleDetailsV1",
                            "fieldTypes": [
                              {
                                "name": "settings",
                                "type": {
                                  "kind": "struct",
                                  "format": "list",
                                  "id": "__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]",
                                  "name": "DynamicSaleV1Settings",
                                  "fieldTypes": [
                                    {
                                      "name": "targetPrice",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Real"
                                      }
                                    },
                                    {
                                      "name": "targetedSellingTime",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Duration"
                                      }
                                    },
                                    {
                                      "name": "minPrice",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Real"
                                      }
                                    },
                                    {
                                      "name": "maxPrice",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Real"
                                      }
                                    },
                                    {
                                      "name": "progressPricingDiscountFloorPoint",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Real"
                                      }
                                    },
                                    {
                                      "name": "progressPricingDiscountWhenSlow",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Real"
                                      }
                                    },
                                    {
                                      "name": "progressPricingExpansionWhenFast",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Real"
                                      }
                                    },
                                    {
                                      "name": "dynaPaceFasterSaleWeight",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Real"
                                      }
                                    },
                                    {
                                      "name": "dynaPaceIdleDecayRate",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Real"
                                      }
                                    },
                                    {
                                      "name": "pricingWeightDynaPace",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Real"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "name": "startAt",
                                "type": {
                                  "kind": "internal",
                                  "name": "Time"
                                }
                              },
                              {
                                "name": "vxfTokensTo",
                                "type": {
                                  "kind": "option",
                                  "someType": {
                                    "kind": "enum",
                                    "name": "VxfDestination",
                                    "id": "__module__VxfProtocol__VxfDestination[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
                                        "name": "RelativeLink",
                                        "fieldTypes": [
                                          {
                                            "name": "link",
                                            "type": {
                                              "kind": "struct",
                                              "format": "list",
                                              "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                              "name": "RelativeDelegateLink",
                                              "fieldTypes": [
                                                {
                                                  "name": "uutName",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "delegateValidatorHash",
                                                  "type": {
                                                    "kind": "option",
                                                    "someType": {
                                                      "kind": "internal",
                                                      "name": "ValidatorHash"
                                                    }
                                                  }
                                                },
                                                {
                                                  "name": "config",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "ByteArray"
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "name": "vxfActivity",
                                            "type": {
                                              "kind": "option",
                                              "someType": {
                                                "kind": "enum",
                                                "name": "VxfExpectedActivity",
                                                "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                                                "variantTypes": [
                                                  {
                                                    "kind": "variant",
                                                    "tag": 22104,
                                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                                                    "name": "VxfTransfer",
                                                    "fieldTypes": [
                                                      {
                                                        "name": "appData",
                                                        "type": {
                                                          "kind": "option",
                                                          "someType": {
                                                            "kind": "internal",
                                                            "name": "Data"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "kind": "variant",
                                                    "tag": 22106,
                                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                                                    "name": "VxfStorage",
                                                    "fieldTypes": [
                                                      {
                                                        "name": "appData",
                                                        "type": {
                                                          "kind": "option",
                                                          "someType": {
                                                            "kind": "internal",
                                                            "name": "Data"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "kind": "variant",
                                                    "tag": 22107,
                                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                                                    "name": "SpecificRedeemerId",
                                                    "fieldTypes": [
                                                      {
                                                        "name": "id",
                                                        "type": {
                                                          "kind": "internal",
                                                          "name": "Int"
                                                        }
                                                      },
                                                      {
                                                        "name": "inNestedList",
                                                        "type": {
                                                          "kind": "internal",
                                                          "name": "Bool"
                                                        }
                                                      },
                                                      {
                                                        "name": "nestedListRedeemerId",
                                                        "type": {
                                                          "kind": "option",
                                                          "someType": {
                                                            "kind": "internal",
                                                            "name": "Int"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": "appData",
                                                        "type": {
                                                          "kind": "option",
                                                          "someType": {
                                                            "kind": "internal",
                                                            "name": "Data"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "kind": "variant",
                                                    "tag": 22108,
                                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                                                    "name": "TaggedRedeemer",
                                                    "fieldTypes": [
                                                      {
                                                        "name": "firstFieldConstrTag",
                                                        "type": {
                                                          "kind": "internal",
                                                          "name": "Int"
                                                        }
                                                      },
                                                      {
                                                        "name": "inNestedList",
                                                        "type": {
                                                          "kind": "internal",
                                                          "name": "Bool"
                                                        }
                                                      },
                                                      {
                                                        "name": "appData",
                                                        "type": {
                                                          "kind": "option",
                                                          "someType": {
                                                            "kind": "internal",
                                                            "name": "Data"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
                                        "name": "AnyTokenHolder",
                                        "fieldTypes": [
                                          {
                                            "name": "mph",
                                            "type": {
                                              "kind": "internal",
                                              "name": "MintingPolicyHash"
                                            }
                                          },
                                          {
                                            "name": "assetName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
                                        "name": "PubKey",
                                        "fieldTypes": [
                                          {
                                            "name": "pkh",
                                            "type": {
                                              "kind": "internal",
                                              "name": "PubKeyHash"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 98,
                                        "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
                                        "name": "Anywhere",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 99,
                                        "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
                                        "name": "NotYetDefined",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "name": "vxfFundsTo",
                                "type": {
                                  "kind": "option",
                                  "someType": {
                                    "kind": "enum",
                                    "name": "VxfDestination",
                                    "id": "__module__VxfProtocol__VxfDestination[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
                                        "name": "RelativeLink",
                                        "fieldTypes": [
                                          {
                                            "name": "link",
                                            "type": {
                                              "kind": "struct",
                                              "format": "list",
                                              "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                              "name": "RelativeDelegateLink",
                                              "fieldTypes": [
                                                {
                                                  "name": "uutName",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "delegateValidatorHash",
                                                  "type": {
                                                    "kind": "option",
                                                    "someType": {
                                                      "kind": "internal",
                                                      "name": "ValidatorHash"
                                                    }
                                                  }
                                                },
                                                {
                                                  "name": "config",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "ByteArray"
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "name": "vxfActivity",
                                            "type": {
                                              "kind": "option",
                                              "someType": {
                                                "kind": "enum",
                                                "name": "VxfExpectedActivity",
                                                "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                                                "variantTypes": [
                                                  {
                                                    "kind": "variant",
                                                    "tag": 22104,
                                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                                                    "name": "VxfTransfer",
                                                    "fieldTypes": [
                                                      {
                                                        "name": "appData",
                                                        "type": {
                                                          "kind": "option",
                                                          "someType": {
                                                            "kind": "internal",
                                                            "name": "Data"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "kind": "variant",
                                                    "tag": 22106,
                                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                                                    "name": "VxfStorage",
                                                    "fieldTypes": [
                                                      {
                                                        "name": "appData",
                                                        "type": {
                                                          "kind": "option",
                                                          "someType": {
                                                            "kind": "internal",
                                                            "name": "Data"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "kind": "variant",
                                                    "tag": 22107,
                                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                                                    "name": "SpecificRedeemerId",
                                                    "fieldTypes": [
                                                      {
                                                        "name": "id",
                                                        "type": {
                                                          "kind": "internal",
                                                          "name": "Int"
                                                        }
                                                      },
                                                      {
                                                        "name": "inNestedList",
                                                        "type": {
                                                          "kind": "internal",
                                                          "name": "Bool"
                                                        }
                                                      },
                                                      {
                                                        "name": "nestedListRedeemerId",
                                                        "type": {
                                                          "kind": "option",
                                                          "someType": {
                                                            "kind": "internal",
                                                            "name": "Int"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "name": "appData",
                                                        "type": {
                                                          "kind": "option",
                                                          "someType": {
                                                            "kind": "internal",
                                                            "name": "Data"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "kind": "variant",
                                                    "tag": 22108,
                                                    "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                                                    "name": "TaggedRedeemer",
                                                    "fieldTypes": [
                                                      {
                                                        "name": "firstFieldConstrTag",
                                                        "type": {
                                                          "kind": "internal",
                                                          "name": "Int"
                                                        }
                                                      },
                                                      {
                                                        "name": "inNestedList",
                                                        "type": {
                                                          "kind": "internal",
                                                          "name": "Bool"
                                                        }
                                                      },
                                                      {
                                                        "name": "appData",
                                                        "type": {
                                                          "kind": "option",
                                                          "someType": {
                                                            "kind": "internal",
                                                            "name": "Data"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
                                        "name": "AnyTokenHolder",
                                        "fieldTypes": [
                                          {
                                            "name": "mph",
                                            "type": {
                                              "kind": "internal",
                                              "name": "MintingPolicyHash"
                                            }
                                          },
                                          {
                                            "name": "assetName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
                                        "name": "PubKey",
                                        "fieldTypes": [
                                          {
                                            "name": "pkh",
                                            "type": {
                                              "kind": "internal",
                                              "name": "PubKeyHash"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 98,
                                        "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
                                        "name": "Anywhere",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 99,
                                        "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
                                        "name": "NotYetDefined",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "saleAssets",
                          "type": {
                            "kind": "struct",
                            "format": "list",
                            "id": "__module__MarketSaleData__SaleAssetsV1[]",
                            "name": "SaleAssetsV1",
                            "fieldTypes": [
                              {
                                "name": "saleUnitAssets",
                                "type": {
                                  "kind": "internal",
                                  "name": "Value"
                                }
                              },
                              {
                                "name": "singleBuyMaxUnits",
                                "type": {
                                  "kind": "internal",
                                  "name": "Int"
                                }
                              },
                              {
                                "name": "primaryAssetMph",
                                "type": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              },
                              {
                                "name": "primaryAssetName",
                                "type": {
                                  "kind": "internal",
                                  "name": "ByteArray"
                                }
                              },
                              {
                                "name": "primaryAssetTargetCount",
                                "type": {
                                  "kind": "internal",
                                  "name": "Int"
                                }
                              },
                              {
                                "name": "totalSaleUnits",
                                "type": {
                                  "kind": "internal",
                                  "name": "Int"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "threadInfo",
                          "type": {
                            "kind": "struct",
                            "format": "list",
                            "id": "__module__MarketSaleData__ThreadInfoV1[]",
                            "name": "ThreadInfoV1",
                            "fieldTypes": [
                              {
                                "name": "nestedThreads",
                                "type": {
                                  "kind": "internal",
                                  "name": "Int"
                                }
                              },
                              {
                                "name": "retiredThreads",
                                "type": {
                                  "kind": "internal",
                                  "name": "Int"
                                }
                              },
                              {
                                "name": "parentChunkId",
                                "type": {
                                  "kind": "internal",
                                  "name": "ByteArray"
                                }
                              },
                              {
                                "name": "chunkForkedAt",
                                "type": {
                                  "kind": "internal",
                                  "name": "Time"
                                }
                              },
                              {
                                "name": "saleId",
                                "type": {
                                  "kind": "internal",
                                  "name": "ByteArray"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                "key": "dtl"
              }
            ]
          }
        },
        {
          "name": "version",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "otherDetails",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    }
  ]
};
const DelegateRoleSchema$1 = {
  "kind": "enum",
  "name": "DelegateRole",
  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
      "name": "MintDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
      "name": "SpendDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
      "name": "MintInvariant",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
      "name": "SpendInvariant",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
      "name": "DgDataPolicy",
      "fieldTypes": [
        {
          "name": "name",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
      "name": "OtherNamedDgt",
      "fieldTypes": [
        {
          "name": "name",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
      "name": "BothMintAndSpendDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
      "name": "HandledByCapoOnly",
      "fieldTypes": []
    }
  ]
};
const ManifestActivitySchema$1 = {
  "kind": "enum",
  "name": "ManifestActivity",
  "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
      "name": "retiringEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
      "name": "updatingEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
      "name": "addingEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
      "name": "forkingThreadToken",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "newThreadCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
      "name": "burningThreadToken",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "burnedThreadCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    }
  ]
};
const CapoLifecycleActivitySchema$1 = {
  "kind": "enum",
  "name": "CapoLifecycleActivity",
  "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
      "name": "CreatingDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
      "name": "queuePendingChange",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
      "name": "removePendingChange",
      "fieldTypes": [
        {
          "name": "role",
          "type": {
            "kind": "enum",
            "name": "DelegateRole",
            "id": "__module__CapoDelegateHelpers__DelegateRole[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                "name": "MintDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                "name": "SpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                "name": "MintInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                "name": "SpendInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                "name": "DgDataPolicy",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                "name": "OtherNamedDgt",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                "name": "BothMintAndSpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                "name": "HandledByCapoOnly",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
      "name": "commitPendingChanges",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
      "name": "forcingNewSpendDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
      "name": "forcingNewMintDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
      "name": "updatingManifest",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "ManifestActivity",
            "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                "name": "retiringEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                "name": "updatingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                "name": "addingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                "name": "forkingThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "newThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                "name": "burningThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "burnedThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  ]
};
const DelegateLifecycleActivitySchema$1 = {
  "kind": "enum",
  "name": "DelegateLifecycleActivity",
  "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
      "name": "ReplacingMe",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
      "name": "Retiring",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
      "name": "ValidatingSettings",
      "fieldTypes": []
    }
  ]
};
const SpendingActivitySchema$1 = {
  "kind": "enum",
  "name": "SpendingActivity",
  "id": "__module__MarketSalePolicy__SpendingActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__MarketSalePolicy__SpendingActivity[]__UpdatingRecord",
      "name": "UpdatingRecord",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__MarketSalePolicy__SpendingActivity[]__AddingToSale",
      "name": "AddingToSale",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        },
        {
          "name": "mph",
          "type": {
            "kind": "internal",
            "name": "MintingPolicyHash"
          }
        },
        {
          "name": "tn",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__MarketSalePolicy__SpendingActivity[]__Activating",
      "name": "Activating",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__MarketSalePolicy__SpendingActivity[]__SellingTokens",
      "name": "SellingTokens",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        },
        {
          "name": "sellingUnitQuantity",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "salePrice",
          "type": {
            "kind": "internal",
            "name": "Value"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__MarketSalePolicy__SpendingActivity[]__MergingChildChunk",
      "name": "MergingChildChunk",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        },
        {
          "name": "childChunkId",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__MarketSalePolicy__SpendingActivity[]__Retiring",
      "name": "Retiring",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    }
  ]
};
const MintingActivitySchema$1 = {
  "kind": "enum",
  "name": "MintingActivity",
  "id": "__module__MarketSalePolicy__MintingActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__MarketSalePolicy__MintingActivity[]__CreatingRecord",
      "name": "CreatingRecord",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__MarketSalePolicy__MintingActivity[]__SplittingSaleChunkAndBuying",
      "name": "SplittingSaleChunkAndBuying",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "parentChunkId",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "buyingUnitQuantity",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    }
  ]
};
const BurningActivitySchema$1 = {
  "kind": "enum",
  "name": "BurningActivity",
  "id": "__module__MarketSalePolicy__BurningActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__MarketSalePolicy__BurningActivity[]__DeletingRecord",
      "name": "DeletingRecord",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__MarketSalePolicy__BurningActivity[]__JoiningWithParentChunk",
      "name": "JoiningWithParentChunk",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "parentChunkId",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__MarketSalePolicy__BurningActivity[]__CleanupRetired",
      "name": "CleanupRetired",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    }
  ]
};
const DelegateActivitySchema$1 = {
  "kind": "enum",
  "name": "DelegateActivity",
  "id": "__module__MarketSalePolicy__DelegateActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities",
      "name": "CapoLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "CapoLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
                "name": "CreatingDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
                "name": "queuePendingChange",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
                "name": "removePendingChange",
                "fieldTypes": [
                  {
                    "name": "role",
                    "type": {
                      "kind": "enum",
                      "name": "DelegateRole",
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                          "name": "MintDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                          "name": "SpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                          "name": "MintInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                          "name": "SpendInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                          "name": "DgDataPolicy",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 5,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                          "name": "OtherNamedDgt",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 6,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                          "name": "BothMintAndSpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 7,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                          "name": "HandledByCapoOnly",
                          "fieldTypes": []
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
                "name": "commitPendingChanges",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
                "name": "forcingNewSpendDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
                "name": "forcingNewMintDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
                "name": "updatingManifest",
                "fieldTypes": [
                  {
                    "name": "activity",
                    "type": {
                      "kind": "enum",
                      "name": "ManifestActivity",
                      "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                          "name": "retiringEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                          "name": "updatingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                          "name": "addingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                          "name": "forkingThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "newThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                          "name": "burningThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "burnedThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities",
      "name": "DelegateLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "DelegateLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
                "name": "ReplacingMe",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
                "name": "Retiring",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
                "name": "ValidatingSettings",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__MarketSalePolicy__DelegateActivity[]__SpendingActivities",
      "name": "SpendingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "SpendingActivity",
            "id": "__module__MarketSalePolicy__SpendingActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__MarketSalePolicy__SpendingActivity[]__UpdatingRecord",
                "name": "UpdatingRecord",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__MarketSalePolicy__SpendingActivity[]__AddingToSale",
                "name": "AddingToSale",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  },
                  {
                    "name": "mph",
                    "type": {
                      "kind": "internal",
                      "name": "MintingPolicyHash"
                    }
                  },
                  {
                    "name": "tn",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__MarketSalePolicy__SpendingActivity[]__Activating",
                "name": "Activating",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__MarketSalePolicy__SpendingActivity[]__SellingTokens",
                "name": "SellingTokens",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  },
                  {
                    "name": "sellingUnitQuantity",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  },
                  {
                    "name": "salePrice",
                    "type": {
                      "kind": "internal",
                      "name": "Value"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__MarketSalePolicy__SpendingActivity[]__MergingChildChunk",
                "name": "MergingChildChunk",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  },
                  {
                    "name": "childChunkId",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__MarketSalePolicy__SpendingActivity[]__Retiring",
                "name": "Retiring",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__MarketSalePolicy__DelegateActivity[]__MintingActivities",
      "name": "MintingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "MintingActivity",
            "id": "__module__MarketSalePolicy__MintingActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__MarketSalePolicy__MintingActivity[]__CreatingRecord",
                "name": "CreatingRecord",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__MarketSalePolicy__MintingActivity[]__SplittingSaleChunkAndBuying",
                "name": "SplittingSaleChunkAndBuying",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "parentChunkId",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "buyingUnitQuantity",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__MarketSalePolicy__DelegateActivity[]__BurningActivities",
      "name": "BurningActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "BurningActivity",
            "id": "__module__MarketSalePolicy__BurningActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__MarketSalePolicy__BurningActivity[]__DeletingRecord",
                "name": "DeletingRecord",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__MarketSalePolicy__BurningActivity[]__JoiningWithParentChunk",
                "name": "JoiningWithParentChunk",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "parentChunkId",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__MarketSalePolicy__BurningActivity[]__CleanupRetired",
                "name": "CleanupRetired",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData",
      "name": "CreatingDelegatedData",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData",
      "name": "UpdatingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData",
      "name": "DeletingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 8,
      "id": "__module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities",
      "name": "MultipleDelegateActivities",
      "fieldTypes": [
        {
          "name": "activities",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 9,
      "id": "__module__MarketSalePolicy__DelegateActivity[]__OtherActivities",
      "name": "OtherActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    }
  ]
};
const PendingDelegateActionSchema$1 = {
  "kind": "enum",
  "name": "PendingDelegateAction",
  "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
      "name": "Add",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
      "name": "Remove",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
      "name": "Replace",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "replacesDgt",
          "type": {
            "kind": "internal",
            "name": "AssetClass"
          }
        }
      ]
    }
  ]
};
const PendingDelegateChangeSchema$1 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
  "name": "PendingDelegateChange",
  "fieldTypes": [
    {
      "name": "action",
      "type": {
        "kind": "enum",
        "name": "PendingDelegateAction",
        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
            "name": "Add",
            "fieldTypes": [
              {
                "name": "seed",
                "type": {
                  "kind": "internal",
                  "name": "TxOutputId"
                }
              },
              {
                "name": "purpose",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
            "name": "Remove",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
            "name": "Replace",
            "fieldTypes": [
              {
                "name": "seed",
                "type": {
                  "kind": "internal",
                  "name": "TxOutputId"
                }
              },
              {
                "name": "purpose",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "replacesDgt",
                "type": {
                  "kind": "internal",
                  "name": "AssetClass"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "role",
      "type": {
        "kind": "enum",
        "name": "DelegateRole",
        "id": "__module__CapoDelegateHelpers__DelegateRole[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
            "name": "MintDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
            "name": "SpendDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
            "name": "MintInvariant",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
            "name": "SpendInvariant",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
            "name": "DgDataPolicy",
            "fieldTypes": [
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 5,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
            "name": "OtherNamedDgt",
            "fieldTypes": [
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 6,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
            "name": "BothMintAndSpendDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 7,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
            "name": "HandledByCapoOnly",
            "fieldTypes": []
          }
        ]
      }
    },
    {
      "name": "dgtLink",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "struct",
          "format": "list",
          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
          "name": "RelativeDelegateLink",
          "fieldTypes": [
            {
              "name": "uutName",
              "type": {
                "kind": "internal",
                "name": "String"
              }
            },
            {
              "name": "delegateValidatorHash",
              "type": {
                "kind": "option",
                "someType": {
                  "kind": "internal",
                  "name": "ValidatorHash"
                }
              }
            },
            {
              "name": "config",
              "type": {
                "kind": "internal",
                "name": "ByteArray"
              }
            }
          ]
        }
      }
    }
  ]
};
const ManifestEntryTypeSchema$1 = {
  "kind": "enum",
  "name": "ManifestEntryType",
  "id": "__module__CapoHelpers__ManifestEntryType[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
      "name": "NamedTokenRef",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
      "name": "DgDataPolicy",
      "fieldTypes": [
        {
          "name": "policyLink",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
            "name": "RelativeDelegateLink",
            "fieldTypes": [
              {
                "name": "uutName",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "delegateValidatorHash",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "internal",
                    "name": "ValidatorHash"
                  }
                }
              },
              {
                "name": "config",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "refCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
      "name": "DelegateThreads",
      "fieldTypes": [
        {
          "name": "role",
          "type": {
            "kind": "enum",
            "name": "DelegateRole",
            "id": "__module__CapoDelegateHelpers__DelegateRole[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                "name": "MintDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                "name": "SpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                "name": "MintInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                "name": "SpendInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                "name": "DgDataPolicy",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                "name": "OtherNamedDgt",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                "name": "BothMintAndSpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                "name": "HandledByCapoOnly",
                "fieldTypes": []
              }
            ]
          }
        },
        {
          "name": "refCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
      "name": "MerkleMembership",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
      "name": "MerkleStateRoot",
      "fieldTypes": []
    }
  ]
};
const CapoManifestEntrySchema$1 = {
  "kind": "struct",
  "format": "map",
  "id": "__module__CapoHelpers__CapoManifestEntry[]",
  "name": "CapoManifestEntry",
  "fieldTypes": [
    {
      "name": "entryType",
      "type": {
        "kind": "enum",
        "name": "ManifestEntryType",
        "id": "__module__CapoHelpers__ManifestEntryType[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
            "name": "NamedTokenRef",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
            "name": "DgDataPolicy",
            "fieldTypes": [
              {
                "name": "policyLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "refCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
            "name": "DelegateThreads",
            "fieldTypes": [
              {
                "name": "role",
                "type": {
                  "kind": "enum",
                  "name": "DelegateRole",
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                      "name": "MintDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                      "name": "SpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                      "name": "MintInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                      "name": "SpendInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                      "name": "DgDataPolicy",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 5,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                      "name": "OtherNamedDgt",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 6,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                      "name": "BothMintAndSpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 7,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                      "name": "HandledByCapoOnly",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "refCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
            "name": "MerkleMembership",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
            "name": "MerkleStateRoot",
            "fieldTypes": []
          }
        ]
      },
      "key": "tpe"
    },
    {
      "name": "tokenName",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "tn"
    },
    {
      "name": "mph",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "internal",
          "name": "MintingPolicyHash"
        }
      }
    }
  ]
};
const PendingCharterChangeSchema$1 = {
  "kind": "enum",
  "name": "PendingCharterChange",
  "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
      "name": "delegateChange",
      "fieldTypes": [
        {
          "name": "change",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
            "name": "PendingDelegateChange",
            "fieldTypes": [
              {
                "name": "action",
                "type": {
                  "kind": "enum",
                  "name": "PendingDelegateAction",
                  "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                      "name": "Add",
                      "fieldTypes": [
                        {
                          "name": "seed",
                          "type": {
                            "kind": "internal",
                            "name": "TxOutputId"
                          }
                        },
                        {
                          "name": "purpose",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "idPrefix",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                      "name": "Remove",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                      "name": "Replace",
                      "fieldTypes": [
                        {
                          "name": "seed",
                          "type": {
                            "kind": "internal",
                            "name": "TxOutputId"
                          }
                        },
                        {
                          "name": "purpose",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "idPrefix",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "replacesDgt",
                          "type": {
                            "kind": "internal",
                            "name": "AssetClass"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "name": "role",
                "type": {
                  "kind": "enum",
                  "name": "DelegateRole",
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                      "name": "MintDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                      "name": "SpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                      "name": "MintInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                      "name": "SpendInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                      "name": "DgDataPolicy",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 5,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                      "name": "OtherNamedDgt",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 6,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                      "name": "BothMintAndSpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 7,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                      "name": "HandledByCapoOnly",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "dgtLink",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
      "name": "otherManifestChange",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "ManifestActivity",
            "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                "name": "retiringEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                "name": "updatingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                "name": "addingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                "name": "forkingThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "newThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                "name": "burningThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "burnedThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "name": "remainingDelegateValidations",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "enum",
              "name": "DelegateRole",
              "id": "__module__CapoDelegateHelpers__DelegateRole[]",
              "variantTypes": [
                {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                  "name": "MintDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 1,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                  "name": "SpendDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 2,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                  "name": "MintInvariant",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 3,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                  "name": "SpendInvariant",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 4,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                  "name": "DgDataPolicy",
                  "fieldTypes": [
                    {
                      "name": "name",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 5,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                  "name": "OtherNamedDgt",
                  "fieldTypes": [
                    {
                      "name": "name",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 6,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                  "name": "BothMintAndSpendDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 7,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                  "name": "HandledByCapoOnly",
                  "fieldTypes": []
                }
              ]
            }
          }
        }
      ]
    }
  ]
};
const cctx_CharterInputTypeSchema$1 = {
  "kind": "enum",
  "name": "cctx_CharterInputType",
  "id": "__module__CapoHelpers__cctx_CharterInputType[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__Unk",
      "name": "Unk",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__RefInput",
      "name": "RefInput",
      "fieldTypes": [
        {
          "name": "datum",
          "type": {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
            "name": "CharterData",
            "fieldTypes": [
              {
                "name": "spendDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "spendInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "otherNamedDelegates",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "mintDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "mintInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "govAuthorityLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "manifest",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "map",
                    "id": "__module__CapoHelpers__CapoManifestEntry[]",
                    "name": "CapoManifestEntry",
                    "fieldTypes": [
                      {
                        "name": "entryType",
                        "type": {
                          "kind": "enum",
                          "name": "ManifestEntryType",
                          "id": "__module__CapoHelpers__ManifestEntryType[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                              "name": "NamedTokenRef",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                              "name": "DgDataPolicy",
                              "fieldTypes": [
                                {
                                  "name": "policyLink",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "idPrefix",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                              "name": "DelegateThreads",
                              "fieldTypes": [
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 3,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                              "name": "MerkleMembership",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 4,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                              "name": "MerkleStateRoot",
                              "fieldTypes": []
                            }
                          ]
                        },
                        "key": "tpe"
                      },
                      {
                        "name": "tokenName",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        },
                        "key": "tn"
                      },
                      {
                        "name": "mph",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "pendingChanges",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "enum",
                    "name": "PendingCharterChange",
                    "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                        "name": "delegateChange",
                        "fieldTypes": [
                          {
                            "name": "change",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                              "name": "PendingDelegateChange",
                              "fieldTypes": [
                                {
                                  "name": "action",
                                  "type": {
                                    "kind": "enum",
                                    "name": "PendingDelegateAction",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                        "name": "Add",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                        "name": "Remove",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                        "name": "Replace",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "replacesDgt",
                                            "type": {
                                              "kind": "internal",
                                              "name": "AssetClass"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "dgtLink",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "struct",
                                      "format": "list",
                                      "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                      "name": "RelativeDelegateLink",
                                      "fieldTypes": [
                                        {
                                          "name": "uutName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "String"
                                          }
                                        },
                                        {
                                          "name": "delegateValidatorHash",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "internal",
                                              "name": "ValidatorHash"
                                            }
                                          }
                                        },
                                        {
                                          "name": "config",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                        "name": "otherManifestChange",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "name": "remainingDelegateValidations",
                            "type": {
                              "kind": "list",
                              "itemType": {
                                "kind": "enum",
                                "name": "DelegateRole",
                                "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                    "name": "MintDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                    "name": "SpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                    "name": "MintInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                    "name": "SpendInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 5,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                    "name": "OtherNamedDgt",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 6,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                    "name": "BothMintAndSpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 7,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                    "name": "HandledByCapoOnly",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__Input",
      "name": "Input",
      "fieldTypes": [
        {
          "name": "datum",
          "type": {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
            "name": "CharterData",
            "fieldTypes": [
              {
                "name": "spendDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "spendInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "otherNamedDelegates",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "mintDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "mintInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "govAuthorityLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "manifest",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "map",
                    "id": "__module__CapoHelpers__CapoManifestEntry[]",
                    "name": "CapoManifestEntry",
                    "fieldTypes": [
                      {
                        "name": "entryType",
                        "type": {
                          "kind": "enum",
                          "name": "ManifestEntryType",
                          "id": "__module__CapoHelpers__ManifestEntryType[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                              "name": "NamedTokenRef",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                              "name": "DgDataPolicy",
                              "fieldTypes": [
                                {
                                  "name": "policyLink",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "idPrefix",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                              "name": "DelegateThreads",
                              "fieldTypes": [
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 3,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                              "name": "MerkleMembership",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 4,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                              "name": "MerkleStateRoot",
                              "fieldTypes": []
                            }
                          ]
                        },
                        "key": "tpe"
                      },
                      {
                        "name": "tokenName",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        },
                        "key": "tn"
                      },
                      {
                        "name": "mph",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "pendingChanges",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "enum",
                    "name": "PendingCharterChange",
                    "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                        "name": "delegateChange",
                        "fieldTypes": [
                          {
                            "name": "change",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                              "name": "PendingDelegateChange",
                              "fieldTypes": [
                                {
                                  "name": "action",
                                  "type": {
                                    "kind": "enum",
                                    "name": "PendingDelegateAction",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                        "name": "Add",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                        "name": "Remove",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                        "name": "Replace",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "replacesDgt",
                                            "type": {
                                              "kind": "internal",
                                              "name": "AssetClass"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "dgtLink",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "struct",
                                      "format": "list",
                                      "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                      "name": "RelativeDelegateLink",
                                      "fieldTypes": [
                                        {
                                          "name": "uutName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "String"
                                          }
                                        },
                                        {
                                          "name": "delegateValidatorHash",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "internal",
                                              "name": "ValidatorHash"
                                            }
                                          }
                                        },
                                        {
                                          "name": "config",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                        "name": "otherManifestChange",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "name": "remainingDelegateValidations",
                            "type": {
                              "kind": "list",
                              "itemType": {
                                "kind": "enum",
                                "name": "DelegateRole",
                                "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                    "name": "MintDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                    "name": "SpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                    "name": "MintInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                    "name": "SpendInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 5,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                    "name": "OtherNamedDgt",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 6,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                    "name": "BothMintAndSpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 7,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                    "name": "HandledByCapoOnly",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    }
  ]
};
const CapoCtxSchema$1 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoHelpers__CapoCtx[]",
  "name": "CapoCtx",
  "fieldTypes": [
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "charter",
      "type": {
        "kind": "enum",
        "name": "cctx_CharterInputType",
        "id": "__module__CapoHelpers__cctx_CharterInputType[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__Unk",
            "name": "Unk",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__RefInput",
            "name": "RefInput",
            "fieldTypes": [
              {
                "name": "datum",
                "type": {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
                  "name": "CharterData",
                  "fieldTypes": [
                    {
                      "name": "spendDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "spendInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "otherNamedDelegates",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "mintDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "mintInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "govAuthorityLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "manifest",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "map",
                          "id": "__module__CapoHelpers__CapoManifestEntry[]",
                          "name": "CapoManifestEntry",
                          "fieldTypes": [
                            {
                              "name": "entryType",
                              "type": {
                                "kind": "enum",
                                "name": "ManifestEntryType",
                                "id": "__module__CapoHelpers__ManifestEntryType[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                                    "name": "NamedTokenRef",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "policyLink",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "idPrefix",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                                    "name": "DelegateThreads",
                                    "fieldTypes": [
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                                    "name": "MerkleMembership",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                                    "name": "MerkleStateRoot",
                                    "fieldTypes": []
                                  }
                                ]
                              },
                              "key": "tpe"
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              },
                              "key": "tn"
                            },
                            {
                              "name": "mph",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "pendingChanges",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "PendingCharterChange",
                          "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                              "name": "delegateChange",
                              "fieldTypes": [
                                {
                                  "name": "change",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                                    "name": "PendingDelegateChange",
                                    "fieldTypes": [
                                      {
                                        "name": "action",
                                        "type": {
                                          "kind": "enum",
                                          "name": "PendingDelegateAction",
                                          "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                              "name": "Add",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                              "name": "Remove",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                              "name": "Replace",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "replacesDgt",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "AssetClass"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "dgtLink",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                              "name": "otherManifestChange",
                              "fieldTypes": [
                                {
                                  "name": "activity",
                                  "type": {
                                    "kind": "enum",
                                    "name": "ManifestActivity",
                                    "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                        "name": "retiringEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                        "name": "updatingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                        "name": "addingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                        "name": "forkingThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "newThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                        "name": "burningThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "burnedThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "remainingDelegateValidations",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "DelegateRole",
                                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                          "name": "MintDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                          "name": "SpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                          "name": "MintInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 3,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                          "name": "SpendInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 4,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                          "name": "DgDataPolicy",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 5,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                          "name": "OtherNamedDgt",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 6,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                          "name": "BothMintAndSpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 7,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                          "name": "HandledByCapoOnly",
                                          "fieldTypes": []
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__Input",
            "name": "Input",
            "fieldTypes": [
              {
                "name": "datum",
                "type": {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
                  "name": "CharterData",
                  "fieldTypes": [
                    {
                      "name": "spendDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "spendInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "otherNamedDelegates",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "mintDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "mintInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "govAuthorityLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "manifest",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "map",
                          "id": "__module__CapoHelpers__CapoManifestEntry[]",
                          "name": "CapoManifestEntry",
                          "fieldTypes": [
                            {
                              "name": "entryType",
                              "type": {
                                "kind": "enum",
                                "name": "ManifestEntryType",
                                "id": "__module__CapoHelpers__ManifestEntryType[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                                    "name": "NamedTokenRef",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "policyLink",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "idPrefix",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                                    "name": "DelegateThreads",
                                    "fieldTypes": [
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                                    "name": "MerkleMembership",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                                    "name": "MerkleStateRoot",
                                    "fieldTypes": []
                                  }
                                ]
                              },
                              "key": "tpe"
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              },
                              "key": "tn"
                            },
                            {
                              "name": "mph",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "pendingChanges",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "PendingCharterChange",
                          "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                              "name": "delegateChange",
                              "fieldTypes": [
                                {
                                  "name": "change",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                                    "name": "PendingDelegateChange",
                                    "fieldTypes": [
                                      {
                                        "name": "action",
                                        "type": {
                                          "kind": "enum",
                                          "name": "PendingDelegateAction",
                                          "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                              "name": "Add",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                              "name": "Remove",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                              "name": "Replace",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "replacesDgt",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "AssetClass"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "dgtLink",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                              "name": "otherManifestChange",
                              "fieldTypes": [
                                {
                                  "name": "activity",
                                  "type": {
                                    "kind": "enum",
                                    "name": "ManifestActivity",
                                    "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                        "name": "retiringEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                        "name": "updatingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                        "name": "addingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                        "name": "forkingThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "newThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                        "name": "burningThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "burnedThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "remainingDelegateValidations",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "DelegateRole",
                                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                          "name": "MintDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                          "name": "SpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                          "name": "MintInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 3,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                          "name": "SpendInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 4,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                          "name": "DgDataPolicy",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 5,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                          "name": "OtherNamedDgt",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 6,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                          "name": "BothMintAndSpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 7,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                          "name": "HandledByCapoOnly",
                                          "fieldTypes": []
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          }
        ]
      }
    }
  ]
};
const dgd_DataSrcSchema$1 = {
  "kind": "enum",
  "name": "dgd_DataSrc",
  "id": "__module__CapoHelpers__dgd_DataSrc[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Unk",
      "name": "Unk",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Input",
      "name": "Input",
      "fieldTypes": [
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Output",
      "name": "Output",
      "fieldTypes": [
        {
          "name": "txo",
          "type": {
            "kind": "internal",
            "name": "TxOutput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Both",
      "name": "Both",
      "fieldTypes": [
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        },
        {
          "name": "txo",
          "type": {
            "kind": "internal",
            "name": "TxOutput"
          }
        }
      ]
    }
  ]
};
const AbstractDelegateActivitiesEnumSchema$1 = {
  "kind": "enum",
  "name": "AbstractDelegateActivitiesEnum",
  "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities",
      "name": "CapoLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "CapoLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
                "name": "CreatingDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
                "name": "queuePendingChange",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
                "name": "removePendingChange",
                "fieldTypes": [
                  {
                    "name": "role",
                    "type": {
                      "kind": "enum",
                      "name": "DelegateRole",
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                          "name": "MintDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                          "name": "SpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                          "name": "MintInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                          "name": "SpendInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                          "name": "DgDataPolicy",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 5,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                          "name": "OtherNamedDgt",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 6,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                          "name": "BothMintAndSpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 7,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                          "name": "HandledByCapoOnly",
                          "fieldTypes": []
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
                "name": "commitPendingChanges",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
                "name": "forcingNewSpendDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
                "name": "forcingNewMintDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
                "name": "updatingManifest",
                "fieldTypes": [
                  {
                    "name": "activity",
                    "type": {
                      "kind": "enum",
                      "name": "ManifestActivity",
                      "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                          "name": "retiringEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                          "name": "updatingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                          "name": "addingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                          "name": "forkingThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "newThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                          "name": "burningThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "burnedThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities",
      "name": "DelegateLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "DelegateLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
                "name": "ReplacingMe",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
                "name": "Retiring",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
                "name": "ValidatingSettings",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities",
      "name": "SpendingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities",
      "name": "MintingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities",
      "name": "BurningActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData",
      "name": "CreatingDelegatedData",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData",
      "name": "UpdatingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData",
      "name": "DeletingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 8,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities",
      "name": "MultipleDelegateActivities",
      "fieldTypes": [
        {
          "name": "activities",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 9,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities",
      "name": "OtherActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    }
  ]
};
const DgDataDetailsSchema$1 = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoHelpers__DgDataDetails[]",
  "name": "DgDataDetails",
  "fieldTypes": [
    {
      "name": "dataSrc",
      "type": {
        "kind": "enum",
        "name": "dgd_DataSrc",
        "id": "__module__CapoHelpers__dgd_DataSrc[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Unk",
            "name": "Unk",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Input",
            "name": "Input",
            "fieldTypes": [
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Output",
            "name": "Output",
            "fieldTypes": [
              {
                "name": "txo",
                "type": {
                  "kind": "internal",
                  "name": "TxOutput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Both",
            "name": "Both",
            "fieldTypes": [
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              },
              {
                "name": "txo",
                "type": {
                  "kind": "internal",
                  "name": "TxOutput"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      }
    },
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "activity",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "enum",
          "name": "AbstractDelegateActivitiesEnum",
          "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]",
          "variantTypes": [
            {
              "kind": "variant",
              "tag": 0,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities",
              "name": "CapoLifecycleActivities",
              "fieldTypes": [
                {
                  "name": "activity",
                  "type": {
                    "kind": "enum",
                    "name": "CapoLifecycleActivity",
                    "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
                        "name": "CreatingDelegate",
                        "fieldTypes": [
                          {
                            "name": "seed",
                            "type": {
                              "kind": "internal",
                              "name": "TxOutputId"
                            }
                          },
                          {
                            "name": "purpose",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
                        "name": "queuePendingChange",
                        "fieldTypes": []
                      },
                      {
                        "kind": "variant",
                        "tag": 2,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
                        "name": "removePendingChange",
                        "fieldTypes": [
                          {
                            "name": "role",
                            "type": {
                              "kind": "enum",
                              "name": "DelegateRole",
                              "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                  "name": "MintDgt",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                  "name": "SpendDgt",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                  "name": "MintInvariant",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                  "name": "SpendInvariant",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                  "name": "DgDataPolicy",
                                  "fieldTypes": [
                                    {
                                      "name": "name",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 5,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                  "name": "OtherNamedDgt",
                                  "fieldTypes": [
                                    {
                                      "name": "name",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 6,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                  "name": "BothMintAndSpendDgt",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 7,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                  "name": "HandledByCapoOnly",
                                  "fieldTypes": []
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 3,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
                        "name": "commitPendingChanges",
                        "fieldTypes": []
                      },
                      {
                        "kind": "variant",
                        "tag": 4,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
                        "name": "forcingNewSpendDelegate",
                        "fieldTypes": [
                          {
                            "name": "seed",
                            "type": {
                              "kind": "internal",
                              "name": "TxOutputId"
                            }
                          },
                          {
                            "name": "purpose",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 5,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
                        "name": "forcingNewMintDelegate",
                        "fieldTypes": [
                          {
                            "name": "seed",
                            "type": {
                              "kind": "internal",
                              "name": "TxOutputId"
                            }
                          },
                          {
                            "name": "purpose",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 6,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
                        "name": "updatingManifest",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 1,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities",
              "name": "DelegateLifecycleActivities",
              "fieldTypes": [
                {
                  "name": "activity",
                  "type": {
                    "kind": "enum",
                    "name": "DelegateLifecycleActivity",
                    "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
                        "name": "ReplacingMe",
                        "fieldTypes": [
                          {
                            "name": "seed",
                            "type": {
                              "kind": "internal",
                              "name": "TxOutputId"
                            }
                          },
                          {
                            "name": "purpose",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
                        "name": "Retiring",
                        "fieldTypes": []
                      },
                      {
                        "kind": "variant",
                        "tag": 2,
                        "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
                        "name": "ValidatingSettings",
                        "fieldTypes": []
                      }
                    ]
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 2,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities",
              "name": "SpendingActivities",
              "fieldTypes": [
                {
                  "name": "activity",
                  "type": {
                    "kind": "internal",
                    "name": "Data"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 3,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities",
              "name": "MintingActivities",
              "fieldTypes": [
                {
                  "name": "activity",
                  "type": {
                    "kind": "internal",
                    "name": "Data"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 4,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities",
              "name": "BurningActivities",
              "fieldTypes": [
                {
                  "name": "activity",
                  "type": {
                    "kind": "internal",
                    "name": "Data"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 5,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData",
              "name": "CreatingDelegatedData",
              "fieldTypes": [
                {
                  "name": "seed",
                  "type": {
                    "kind": "internal",
                    "name": "TxOutputId"
                  }
                },
                {
                  "name": "dataType",
                  "type": {
                    "kind": "internal",
                    "name": "String"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 6,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData",
              "name": "UpdatingDelegatedData",
              "fieldTypes": [
                {
                  "name": "dataType",
                  "type": {
                    "kind": "internal",
                    "name": "String"
                  }
                },
                {
                  "name": "recId",
                  "type": {
                    "kind": "internal",
                    "name": "ByteArray"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 7,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData",
              "name": "DeletingDelegatedData",
              "fieldTypes": [
                {
                  "name": "dataType",
                  "type": {
                    "kind": "internal",
                    "name": "String"
                  }
                },
                {
                  "name": "recId",
                  "type": {
                    "kind": "internal",
                    "name": "ByteArray"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 8,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities",
              "name": "MultipleDelegateActivities",
              "fieldTypes": [
                {
                  "name": "activities",
                  "type": {
                    "kind": "list",
                    "itemType": {
                      "kind": "internal",
                      "name": "Data"
                    }
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 9,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities",
              "name": "OtherActivities",
              "fieldTypes": [
                {
                  "name": "activity",
                  "type": {
                    "kind": "internal",
                    "name": "Data"
                  }
                }
              ]
            }
          ]
        }
      }
    }
  ]
};
const DTS_PurchaseInfoSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__DynamicSaleV1__DTS_PurchaseInfo[]",
  "name": "DTS_PurchaseInfo",
  "fieldTypes": [
    {
      "name": "inferredPace",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    },
    {
      "name": "hoursSinceLastPurchase",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    },
    {
      "name": "unitsPurchased",
      "type": {
        "kind": "internal",
        "name": "Int"
      }
    },
    {
      "name": "purchaseTime",
      "type": {
        "kind": "internal",
        "name": "Time"
      }
    },
    {
      "name": "prevSalePace",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    },
    {
      "name": "totalProgress",
      "type": {
        "kind": "struct",
        "format": "list",
        "id": "__module__SaleProgressDetails__SaleProgressDetailsV1[]",
        "name": "SaleProgressDetailsV1",
        "fieldTypes": [
          {
            "name": "lastPurchaseAt",
            "type": {
              "kind": "internal",
              "name": "Time"
            }
          },
          {
            "name": "prevPurchaseAt",
            "type": {
              "kind": "internal",
              "name": "Time"
            }
          },
          {
            "name": "chunkUnitCount",
            "type": {
              "kind": "internal",
              "name": "Int"
            }
          },
          {
            "name": "chunkUnitsSold",
            "type": {
              "kind": "internal",
              "name": "Int"
            }
          }
        ]
      }
    }
  ]
};
const DynamicSaleV1Schema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__DynamicSaleV1__DynamicSaleV1[]",
  "name": "DynamicSaleV1",
  "fieldTypes": [
    {
      "name": "settings",
      "type": {
        "kind": "struct",
        "format": "list",
        "id": "__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]",
        "name": "DynamicSaleV1Settings",
        "fieldTypes": [
          {
            "name": "targetPrice",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "targetedSellingTime",
            "type": {
              "kind": "internal",
              "name": "Duration"
            }
          },
          {
            "name": "minPrice",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "maxPrice",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "progressPricingDiscountFloorPoint",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "progressPricingDiscountWhenSlow",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "progressPricingExpansionWhenFast",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "dynaPaceFasterSaleWeight",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "dynaPaceIdleDecayRate",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "pricingWeightDynaPace",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          }
        ]
      }
    },
    {
      "name": "purchase",
      "type": {
        "kind": "struct",
        "format": "list",
        "id": "__module__DynamicSaleV1__DTS_PurchaseInfo[]",
        "name": "DTS_PurchaseInfo",
        "fieldTypes": [
          {
            "name": "inferredPace",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "hoursSinceLastPurchase",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "unitsPurchased",
            "type": {
              "kind": "internal",
              "name": "Int"
            }
          },
          {
            "name": "purchaseTime",
            "type": {
              "kind": "internal",
              "name": "Time"
            }
          },
          {
            "name": "prevSalePace",
            "type": {
              "kind": "internal",
              "name": "Real"
            }
          },
          {
            "name": "totalProgress",
            "type": {
              "kind": "struct",
              "format": "list",
              "id": "__module__SaleProgressDetails__SaleProgressDetailsV1[]",
              "name": "SaleProgressDetailsV1",
              "fieldTypes": [
                {
                  "name": "lastPurchaseAt",
                  "type": {
                    "kind": "internal",
                    "name": "Time"
                  }
                },
                {
                  "name": "prevPurchaseAt",
                  "type": {
                    "kind": "internal",
                    "name": "Time"
                  }
                },
                {
                  "name": "chunkUnitCount",
                  "type": {
                    "kind": "internal",
                    "name": "Int"
                  }
                },
                {
                  "name": "chunkUnitsSold",
                  "type": {
                    "kind": "internal",
                    "name": "Int"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "sale",
      "type": {
        "kind": "struct",
        "format": "map",
        "id": "__module__MarketSaleData__MarketSaleData[]",
        "name": "MarketSaleData",
        "fieldTypes": [
          {
            "name": "id",
            "type": {
              "kind": "internal",
              "name": "ByteArray"
            },
            "key": "@id"
          },
          {
            "name": "type",
            "type": {
              "kind": "internal",
              "name": "String"
            },
            "key": "tpe"
          },
          {
            "name": "name",
            "type": {
              "kind": "internal",
              "name": "String"
            }
          },
          {
            "name": "details",
            "type": {
              "kind": "enum",
              "name": "MktSaleDetails",
              "id": "__module__MarketSaleData__MktSaleDetails[]",
              "variantTypes": [
                {
                  "kind": "variant",
                  "tag": 4e3,
                  "id": "__module__MarketSaleData__MktSaleDetails[]__V1",
                  "name": "V1",
                  "fieldTypes": [
                    {
                      "name": "saleState",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__MarketSaleData__OtherSaleStateV1[]",
                        "name": "OtherSaleStateV1",
                        "fieldTypes": [
                          {
                            "name": "progressDetails",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__SaleProgressDetails__SaleProgressDetailsV1[]",
                              "name": "SaleProgressDetailsV1",
                              "fieldTypes": [
                                {
                                  "name": "lastPurchaseAt",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Time"
                                  }
                                },
                                {
                                  "name": "prevPurchaseAt",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Time"
                                  }
                                },
                                {
                                  "name": "chunkUnitCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                },
                                {
                                  "name": "chunkUnitsSold",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "salePace",
                            "type": {
                              "kind": "internal",
                              "name": "Real"
                            }
                          },
                          {
                            "name": "state",
                            "type": {
                              "kind": "enum",
                              "name": "MarketSaleState",
                              "id": "__module__MarketSaleData__MarketSaleState[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__MarketSaleData__MarketSaleState[]__Pending",
                                  "name": "Pending",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__MarketSaleData__MarketSaleState[]__Active",
                                  "name": "Active",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__MarketSaleData__MarketSaleState[]__Retired",
                                  "name": "Retired",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__MarketSaleData__MarketSaleState[]__SoldOut",
                                  "name": "SoldOut",
                                  "fieldTypes": []
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "fixedSaleDetails",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__MarketSaleData__FixedSaleDetailsV1[]",
                        "name": "FixedSaleDetailsV1",
                        "fieldTypes": [
                          {
                            "name": "settings",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]",
                              "name": "DynamicSaleV1Settings",
                              "fieldTypes": [
                                {
                                  "name": "targetPrice",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Real"
                                  }
                                },
                                {
                                  "name": "targetedSellingTime",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Duration"
                                  }
                                },
                                {
                                  "name": "minPrice",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Real"
                                  }
                                },
                                {
                                  "name": "maxPrice",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Real"
                                  }
                                },
                                {
                                  "name": "progressPricingDiscountFloorPoint",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Real"
                                  }
                                },
                                {
                                  "name": "progressPricingDiscountWhenSlow",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Real"
                                  }
                                },
                                {
                                  "name": "progressPricingExpansionWhenFast",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Real"
                                  }
                                },
                                {
                                  "name": "dynaPaceFasterSaleWeight",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Real"
                                  }
                                },
                                {
                                  "name": "dynaPaceIdleDecayRate",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Real"
                                  }
                                },
                                {
                                  "name": "pricingWeightDynaPace",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Real"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "name": "startAt",
                            "type": {
                              "kind": "internal",
                              "name": "Time"
                            }
                          },
                          {
                            "name": "vxfTokensTo",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "enum",
                                "name": "VxfDestination",
                                "id": "__module__VxfProtocol__VxfDestination[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
                                    "name": "RelativeLink",
                                    "fieldTypes": [
                                      {
                                        "name": "link",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "vxfActivity",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "enum",
                                            "name": "VxfExpectedActivity",
                                            "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                                            "variantTypes": [
                                              {
                                                "kind": "variant",
                                                "tag": 22104,
                                                "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                                                "name": "VxfTransfer",
                                                "fieldTypes": [
                                                  {
                                                    "name": "appData",
                                                    "type": {
                                                      "kind": "option",
                                                      "someType": {
                                                        "kind": "internal",
                                                        "name": "Data"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "kind": "variant",
                                                "tag": 22106,
                                                "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                                                "name": "VxfStorage",
                                                "fieldTypes": [
                                                  {
                                                    "name": "appData",
                                                    "type": {
                                                      "kind": "option",
                                                      "someType": {
                                                        "kind": "internal",
                                                        "name": "Data"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "kind": "variant",
                                                "tag": 22107,
                                                "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                                                "name": "SpecificRedeemerId",
                                                "fieldTypes": [
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "kind": "internal",
                                                      "name": "Int"
                                                    }
                                                  },
                                                  {
                                                    "name": "inNestedList",
                                                    "type": {
                                                      "kind": "internal",
                                                      "name": "Bool"
                                                    }
                                                  },
                                                  {
                                                    "name": "nestedListRedeemerId",
                                                    "type": {
                                                      "kind": "option",
                                                      "someType": {
                                                        "kind": "internal",
                                                        "name": "Int"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "name": "appData",
                                                    "type": {
                                                      "kind": "option",
                                                      "someType": {
                                                        "kind": "internal",
                                                        "name": "Data"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "kind": "variant",
                                                "tag": 22108,
                                                "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                                                "name": "TaggedRedeemer",
                                                "fieldTypes": [
                                                  {
                                                    "name": "firstFieldConstrTag",
                                                    "type": {
                                                      "kind": "internal",
                                                      "name": "Int"
                                                    }
                                                  },
                                                  {
                                                    "name": "inNestedList",
                                                    "type": {
                                                      "kind": "internal",
                                                      "name": "Bool"
                                                    }
                                                  },
                                                  {
                                                    "name": "appData",
                                                    "type": {
                                                      "kind": "option",
                                                      "someType": {
                                                        "kind": "internal",
                                                        "name": "Data"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
                                    "name": "AnyTokenHolder",
                                    "fieldTypes": [
                                      {
                                        "name": "mph",
                                        "type": {
                                          "kind": "internal",
                                          "name": "MintingPolicyHash"
                                        }
                                      },
                                      {
                                        "name": "assetName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
                                    "name": "PubKey",
                                    "fieldTypes": [
                                      {
                                        "name": "pkh",
                                        "type": {
                                          "kind": "internal",
                                          "name": "PubKeyHash"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 98,
                                    "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
                                    "name": "Anywhere",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 99,
                                    "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
                                    "name": "NotYetDefined",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "name": "vxfFundsTo",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "enum",
                                "name": "VxfDestination",
                                "id": "__module__VxfProtocol__VxfDestination[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
                                    "name": "RelativeLink",
                                    "fieldTypes": [
                                      {
                                        "name": "link",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "vxfActivity",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "enum",
                                            "name": "VxfExpectedActivity",
                                            "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                                            "variantTypes": [
                                              {
                                                "kind": "variant",
                                                "tag": 22104,
                                                "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                                                "name": "VxfTransfer",
                                                "fieldTypes": [
                                                  {
                                                    "name": "appData",
                                                    "type": {
                                                      "kind": "option",
                                                      "someType": {
                                                        "kind": "internal",
                                                        "name": "Data"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "kind": "variant",
                                                "tag": 22106,
                                                "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                                                "name": "VxfStorage",
                                                "fieldTypes": [
                                                  {
                                                    "name": "appData",
                                                    "type": {
                                                      "kind": "option",
                                                      "someType": {
                                                        "kind": "internal",
                                                        "name": "Data"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "kind": "variant",
                                                "tag": 22107,
                                                "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                                                "name": "SpecificRedeemerId",
                                                "fieldTypes": [
                                                  {
                                                    "name": "id",
                                                    "type": {
                                                      "kind": "internal",
                                                      "name": "Int"
                                                    }
                                                  },
                                                  {
                                                    "name": "inNestedList",
                                                    "type": {
                                                      "kind": "internal",
                                                      "name": "Bool"
                                                    }
                                                  },
                                                  {
                                                    "name": "nestedListRedeemerId",
                                                    "type": {
                                                      "kind": "option",
                                                      "someType": {
                                                        "kind": "internal",
                                                        "name": "Int"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "name": "appData",
                                                    "type": {
                                                      "kind": "option",
                                                      "someType": {
                                                        "kind": "internal",
                                                        "name": "Data"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              {
                                                "kind": "variant",
                                                "tag": 22108,
                                                "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                                                "name": "TaggedRedeemer",
                                                "fieldTypes": [
                                                  {
                                                    "name": "firstFieldConstrTag",
                                                    "type": {
                                                      "kind": "internal",
                                                      "name": "Int"
                                                    }
                                                  },
                                                  {
                                                    "name": "inNestedList",
                                                    "type": {
                                                      "kind": "internal",
                                                      "name": "Bool"
                                                    }
                                                  },
                                                  {
                                                    "name": "appData",
                                                    "type": {
                                                      "kind": "option",
                                                      "someType": {
                                                        "kind": "internal",
                                                        "name": "Data"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
                                    "name": "AnyTokenHolder",
                                    "fieldTypes": [
                                      {
                                        "name": "mph",
                                        "type": {
                                          "kind": "internal",
                                          "name": "MintingPolicyHash"
                                        }
                                      },
                                      {
                                        "name": "assetName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
                                    "name": "PubKey",
                                    "fieldTypes": [
                                      {
                                        "name": "pkh",
                                        "type": {
                                          "kind": "internal",
                                          "name": "PubKeyHash"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 98,
                                    "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
                                    "name": "Anywhere",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 99,
                                    "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
                                    "name": "NotYetDefined",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "saleAssets",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__MarketSaleData__SaleAssetsV1[]",
                        "name": "SaleAssetsV1",
                        "fieldTypes": [
                          {
                            "name": "saleUnitAssets",
                            "type": {
                              "kind": "internal",
                              "name": "Value"
                            }
                          },
                          {
                            "name": "singleBuyMaxUnits",
                            "type": {
                              "kind": "internal",
                              "name": "Int"
                            }
                          },
                          {
                            "name": "primaryAssetMph",
                            "type": {
                              "kind": "internal",
                              "name": "MintingPolicyHash"
                            }
                          },
                          {
                            "name": "primaryAssetName",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          },
                          {
                            "name": "primaryAssetTargetCount",
                            "type": {
                              "kind": "internal",
                              "name": "Int"
                            }
                          },
                          {
                            "name": "totalSaleUnits",
                            "type": {
                              "kind": "internal",
                              "name": "Int"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "threadInfo",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__MarketSaleData__ThreadInfoV1[]",
                        "name": "ThreadInfoV1",
                        "fieldTypes": [
                          {
                            "name": "nestedThreads",
                            "type": {
                              "kind": "internal",
                              "name": "Int"
                            }
                          },
                          {
                            "name": "retiredThreads",
                            "type": {
                              "kind": "internal",
                              "name": "Int"
                            }
                          },
                          {
                            "name": "parentChunkId",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          },
                          {
                            "name": "chunkForkedAt",
                            "type": {
                              "kind": "internal",
                              "name": "Time"
                            }
                          },
                          {
                            "name": "saleId",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            },
            "key": "dtl"
          }
        ]
      }
    },
    {
      "name": "updatedSale",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "struct",
          "format": "map",
          "id": "__module__MarketSaleData__MarketSaleData[]",
          "name": "MarketSaleData",
          "fieldTypes": [
            {
              "name": "id",
              "type": {
                "kind": "internal",
                "name": "ByteArray"
              },
              "key": "@id"
            },
            {
              "name": "type",
              "type": {
                "kind": "internal",
                "name": "String"
              },
              "key": "tpe"
            },
            {
              "name": "name",
              "type": {
                "kind": "internal",
                "name": "String"
              }
            },
            {
              "name": "details",
              "type": {
                "kind": "enum",
                "name": "MktSaleDetails",
                "id": "__module__MarketSaleData__MktSaleDetails[]",
                "variantTypes": [
                  {
                    "kind": "variant",
                    "tag": 4e3,
                    "id": "__module__MarketSaleData__MktSaleDetails[]__V1",
                    "name": "V1",
                    "fieldTypes": [
                      {
                        "name": "saleState",
                        "type": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__MarketSaleData__OtherSaleStateV1[]",
                          "name": "OtherSaleStateV1",
                          "fieldTypes": [
                            {
                              "name": "progressDetails",
                              "type": {
                                "kind": "struct",
                                "format": "list",
                                "id": "__module__SaleProgressDetails__SaleProgressDetailsV1[]",
                                "name": "SaleProgressDetailsV1",
                                "fieldTypes": [
                                  {
                                    "name": "lastPurchaseAt",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Time"
                                    }
                                  },
                                  {
                                    "name": "prevPurchaseAt",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Time"
                                    }
                                  },
                                  {
                                    "name": "chunkUnitCount",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Int"
                                    }
                                  },
                                  {
                                    "name": "chunkUnitsSold",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Int"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "name": "salePace",
                              "type": {
                                "kind": "internal",
                                "name": "Real"
                              }
                            },
                            {
                              "name": "state",
                              "type": {
                                "kind": "enum",
                                "name": "MarketSaleState",
                                "id": "__module__MarketSaleData__MarketSaleState[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__MarketSaleData__MarketSaleState[]__Pending",
                                    "name": "Pending",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__MarketSaleData__MarketSaleState[]__Active",
                                    "name": "Active",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__MarketSaleData__MarketSaleState[]__Retired",
                                    "name": "Retired",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__MarketSaleData__MarketSaleState[]__SoldOut",
                                    "name": "SoldOut",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "fixedSaleDetails",
                        "type": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__MarketSaleData__FixedSaleDetailsV1[]",
                          "name": "FixedSaleDetailsV1",
                          "fieldTypes": [
                            {
                              "name": "settings",
                              "type": {
                                "kind": "struct",
                                "format": "list",
                                "id": "__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]",
                                "name": "DynamicSaleV1Settings",
                                "fieldTypes": [
                                  {
                                    "name": "targetPrice",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Real"
                                    }
                                  },
                                  {
                                    "name": "targetedSellingTime",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Duration"
                                    }
                                  },
                                  {
                                    "name": "minPrice",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Real"
                                    }
                                  },
                                  {
                                    "name": "maxPrice",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Real"
                                    }
                                  },
                                  {
                                    "name": "progressPricingDiscountFloorPoint",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Real"
                                    }
                                  },
                                  {
                                    "name": "progressPricingDiscountWhenSlow",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Real"
                                    }
                                  },
                                  {
                                    "name": "progressPricingExpansionWhenFast",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Real"
                                    }
                                  },
                                  {
                                    "name": "dynaPaceFasterSaleWeight",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Real"
                                    }
                                  },
                                  {
                                    "name": "dynaPaceIdleDecayRate",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Real"
                                    }
                                  },
                                  {
                                    "name": "pricingWeightDynaPace",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Real"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "name": "startAt",
                              "type": {
                                "kind": "internal",
                                "name": "Time"
                              }
                            },
                            {
                              "name": "vxfTokensTo",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "enum",
                                  "name": "VxfDestination",
                                  "id": "__module__VxfProtocol__VxfDestination[]",
                                  "variantTypes": [
                                    {
                                      "kind": "variant",
                                      "tag": 0,
                                      "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
                                      "name": "RelativeLink",
                                      "fieldTypes": [
                                        {
                                          "name": "link",
                                          "type": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "name": "vxfActivity",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "enum",
                                              "name": "VxfExpectedActivity",
                                              "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                                              "variantTypes": [
                                                {
                                                  "kind": "variant",
                                                  "tag": 22104,
                                                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                                                  "name": "VxfTransfer",
                                                  "fieldTypes": [
                                                    {
                                                      "name": "appData",
                                                      "type": {
                                                        "kind": "option",
                                                        "someType": {
                                                          "kind": "internal",
                                                          "name": "Data"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                {
                                                  "kind": "variant",
                                                  "tag": 22106,
                                                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                                                  "name": "VxfStorage",
                                                  "fieldTypes": [
                                                    {
                                                      "name": "appData",
                                                      "type": {
                                                        "kind": "option",
                                                        "someType": {
                                                          "kind": "internal",
                                                          "name": "Data"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                {
                                                  "kind": "variant",
                                                  "tag": 22107,
                                                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                                                  "name": "SpecificRedeemerId",
                                                  "fieldTypes": [
                                                    {
                                                      "name": "id",
                                                      "type": {
                                                        "kind": "internal",
                                                        "name": "Int"
                                                      }
                                                    },
                                                    {
                                                      "name": "inNestedList",
                                                      "type": {
                                                        "kind": "internal",
                                                        "name": "Bool"
                                                      }
                                                    },
                                                    {
                                                      "name": "nestedListRedeemerId",
                                                      "type": {
                                                        "kind": "option",
                                                        "someType": {
                                                          "kind": "internal",
                                                          "name": "Int"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "appData",
                                                      "type": {
                                                        "kind": "option",
                                                        "someType": {
                                                          "kind": "internal",
                                                          "name": "Data"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                {
                                                  "kind": "variant",
                                                  "tag": 22108,
                                                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                                                  "name": "TaggedRedeemer",
                                                  "fieldTypes": [
                                                    {
                                                      "name": "firstFieldConstrTag",
                                                      "type": {
                                                        "kind": "internal",
                                                        "name": "Int"
                                                      }
                                                    },
                                                    {
                                                      "name": "inNestedList",
                                                      "type": {
                                                        "kind": "internal",
                                                        "name": "Bool"
                                                      }
                                                    },
                                                    {
                                                      "name": "appData",
                                                      "type": {
                                                        "kind": "option",
                                                        "someType": {
                                                          "kind": "internal",
                                                          "name": "Data"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "kind": "variant",
                                      "tag": 1,
                                      "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
                                      "name": "AnyTokenHolder",
                                      "fieldTypes": [
                                        {
                                          "name": "mph",
                                          "type": {
                                            "kind": "internal",
                                            "name": "MintingPolicyHash"
                                          }
                                        },
                                        {
                                          "name": "assetName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "kind": "variant",
                                      "tag": 2,
                                      "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
                                      "name": "PubKey",
                                      "fieldTypes": [
                                        {
                                          "name": "pkh",
                                          "type": {
                                            "kind": "internal",
                                            "name": "PubKeyHash"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "kind": "variant",
                                      "tag": 98,
                                      "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
                                      "name": "Anywhere",
                                      "fieldTypes": []
                                    },
                                    {
                                      "kind": "variant",
                                      "tag": 99,
                                      "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
                                      "name": "NotYetDefined",
                                      "fieldTypes": []
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "name": "vxfFundsTo",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "enum",
                                  "name": "VxfDestination",
                                  "id": "__module__VxfProtocol__VxfDestination[]",
                                  "variantTypes": [
                                    {
                                      "kind": "variant",
                                      "tag": 0,
                                      "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
                                      "name": "RelativeLink",
                                      "fieldTypes": [
                                        {
                                          "name": "link",
                                          "type": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "name": "vxfActivity",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "enum",
                                              "name": "VxfExpectedActivity",
                                              "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                                              "variantTypes": [
                                                {
                                                  "kind": "variant",
                                                  "tag": 22104,
                                                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                                                  "name": "VxfTransfer",
                                                  "fieldTypes": [
                                                    {
                                                      "name": "appData",
                                                      "type": {
                                                        "kind": "option",
                                                        "someType": {
                                                          "kind": "internal",
                                                          "name": "Data"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                {
                                                  "kind": "variant",
                                                  "tag": 22106,
                                                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                                                  "name": "VxfStorage",
                                                  "fieldTypes": [
                                                    {
                                                      "name": "appData",
                                                      "type": {
                                                        "kind": "option",
                                                        "someType": {
                                                          "kind": "internal",
                                                          "name": "Data"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                {
                                                  "kind": "variant",
                                                  "tag": 22107,
                                                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                                                  "name": "SpecificRedeemerId",
                                                  "fieldTypes": [
                                                    {
                                                      "name": "id",
                                                      "type": {
                                                        "kind": "internal",
                                                        "name": "Int"
                                                      }
                                                    },
                                                    {
                                                      "name": "inNestedList",
                                                      "type": {
                                                        "kind": "internal",
                                                        "name": "Bool"
                                                      }
                                                    },
                                                    {
                                                      "name": "nestedListRedeemerId",
                                                      "type": {
                                                        "kind": "option",
                                                        "someType": {
                                                          "kind": "internal",
                                                          "name": "Int"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "name": "appData",
                                                      "type": {
                                                        "kind": "option",
                                                        "someType": {
                                                          "kind": "internal",
                                                          "name": "Data"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                {
                                                  "kind": "variant",
                                                  "tag": 22108,
                                                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                                                  "name": "TaggedRedeemer",
                                                  "fieldTypes": [
                                                    {
                                                      "name": "firstFieldConstrTag",
                                                      "type": {
                                                        "kind": "internal",
                                                        "name": "Int"
                                                      }
                                                    },
                                                    {
                                                      "name": "inNestedList",
                                                      "type": {
                                                        "kind": "internal",
                                                        "name": "Bool"
                                                      }
                                                    },
                                                    {
                                                      "name": "appData",
                                                      "type": {
                                                        "kind": "option",
                                                        "someType": {
                                                          "kind": "internal",
                                                          "name": "Data"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "kind": "variant",
                                      "tag": 1,
                                      "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
                                      "name": "AnyTokenHolder",
                                      "fieldTypes": [
                                        {
                                          "name": "mph",
                                          "type": {
                                            "kind": "internal",
                                            "name": "MintingPolicyHash"
                                          }
                                        },
                                        {
                                          "name": "assetName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "kind": "variant",
                                      "tag": 2,
                                      "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
                                      "name": "PubKey",
                                      "fieldTypes": [
                                        {
                                          "name": "pkh",
                                          "type": {
                                            "kind": "internal",
                                            "name": "PubKeyHash"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "kind": "variant",
                                      "tag": 98,
                                      "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
                                      "name": "Anywhere",
                                      "fieldTypes": []
                                    },
                                    {
                                      "kind": "variant",
                                      "tag": 99,
                                      "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
                                      "name": "NotYetDefined",
                                      "fieldTypes": []
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "saleAssets",
                        "type": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__MarketSaleData__SaleAssetsV1[]",
                          "name": "SaleAssetsV1",
                          "fieldTypes": [
                            {
                              "name": "saleUnitAssets",
                              "type": {
                                "kind": "internal",
                                "name": "Value"
                              }
                            },
                            {
                              "name": "singleBuyMaxUnits",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            },
                            {
                              "name": "primaryAssetMph",
                              "type": {
                                "kind": "internal",
                                "name": "MintingPolicyHash"
                              }
                            },
                            {
                              "name": "primaryAssetName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            },
                            {
                              "name": "primaryAssetTargetCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            },
                            {
                              "name": "totalSaleUnits",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "name": "threadInfo",
                        "type": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__MarketSaleData__ThreadInfoV1[]",
                          "name": "ThreadInfoV1",
                          "fieldTypes": [
                            {
                              "name": "nestedThreads",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            },
                            {
                              "name": "retiredThreads",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            },
                            {
                              "name": "parentChunkId",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            },
                            {
                              "name": "chunkForkedAt",
                              "type": {
                                "kind": "internal",
                                "name": "Time"
                              }
                            },
                            {
                              "name": "saleId",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              },
              "key": "dtl"
            }
          ]
        }
      }
    }
  ]
};

class MarketSaleController extends WrappedDgDataContract {
  dataBridgeClass = MarketSalePolicyDataBridge;
  get recordTypeName() {
    return "mktSale";
  }
  // get abstractBundleClass() {
  //     return MarketSaleBundle;
  // }
  get idPrefix() {
    return "mktSale";
  }
  async scriptBundleClass() {
    const module = await import('./contracts-preprod/MarketSale.hlb.mjs');
    return module.MarketSaleBundle;
  }
  exampleData() {
    const tn = encodeUtf8("PLANKTON");
    const mph = this.capo.mph;
    const units = 1000n;
    const startTime = (/* @__PURE__ */ new Date()).getTime();
    const data = {
      // id: "mktSale_123",
      // type: "mktSale",
      name: "Sample marketSale",
      details: {
        V1: {
          fixedSaleDetails: {
            settings: {
              targetPrice: 1,
              targetedSellingTime: 75 * 60 * 1e3,
              minPrice: 0.5,
              maxPrice: 4.2,
              progressPricingDiscountFloorPoint: 0.2,
              progressPricingDiscountWhenSlow: 0.25,
              progressPricingExpansionWhenFast: 0.2,
              dynaPaceFasterSaleWeight: 0.3,
              dynaPaceIdleDecayRate: 0.5,
              pricingWeightDynaPace: 5
            },
            startAt: startTime,
            vxfTokensTo: void 0,
            vxfFundsTo: {
              Anywhere: {}
            }
          },
          saleAssets: {
            primaryAssetMph: mph,
            primaryAssetName: tn,
            primaryAssetTargetCount: 100000000n,
            totalSaleUnits: units,
            saleUnitAssets: makeValue(
              mph,
              tn,
              100000000n / units
            ),
            singleBuyMaxUnits: 25n
          },
          saleState: {
            progressDetails: {
              lastPurchaseAt: startTime,
              prevPurchaseAt: startTime,
              chunkUnitCount: units,
              chunkUnitsSold: 0n
            },
            salePace: 1,
            state: { Pending: {} }
          },
          threadInfo: {
            chunkForkedAt: 0n,
            nestedThreads: 0n,
            retiredThreads: 0n,
            parentChunkId: encodeUtf8(""),
            // is changed to match the sale `id` on creation
            // ... or to parentChunkId's saleId, if this is a split chunk
            saleId: encodeUtf8("mktSale-123")
          }
        }
      }
    };
    return data;
  }
  // mkDatumAdapter() {
  //     return new MarketSaleAdapter(this);
  // }
  async findMarketSales({
    saleId,
    parentId,
    isRoot,
    pending,
    active,
    retired
  }) {
    if (isRoot && !!parentId) {
      throw new Error("isRoot and parentId are mutually exclusive");
    }
    const targetSaleId = saleId ? encodeUtf8(saleId) : void 0;
    const targetParentId = parentId ? encodeUtf8(parentId) : void 0;
    return this.capo.findDelegatedDataUtxos({
      type: "mktSale",
      predicate(utxo, data) {
        if (!!saleId && data.details.V1.threadInfo.saleId != targetSaleId)
          return false;
        if (!!parentId && data.details.V1.threadInfo.parentChunkId != targetParentId)
          return false;
        if (!!isRoot && data.id != data.details.V1.threadInfo.saleId)
          return false;
        {
          let stateMatch = false;
          if (pending && "Pending" in data.details.V1.saleState.state)
            stateMatch = true;
          if (active && "Active" in data.details.V1.saleState.state)
            stateMatch = true;
          if (retired && "Retired" in data.details.V1.saleState.state)
            stateMatch = true;
          if (!pending && !active && !retired) stateMatch = true;
          if (!stateMatch) return false;
        }
        return true;
      }
    });
  }
  // @Activity.redeemer
  // activitySplittingAndBuyingFromChunk(
  //     seedFrom: hasSeed,
  //     splitChunkId: string,
  //     buyQuantity: bigint
  // ) {
  //     const seed = this.getSeed(seedFrom);
  //     return this.mkSeededMintingActivity(
  //         "SplittingSaleChunkAndBuying",
  //         {seed,
  //         splitChunkId,
  //         buyQuantity}
  //     );
  // }
  // @Activity.redeemer
  // activityJoiningSaleChunk(chunkId: string, parentChunkId: string) {
  //     return this.mkBurningActivity(
  //         "CreatingMarketSale",
  //         chunkId,
  //         parentChunkId
  //     );
  // }
  // @Activity.redeemer
  // activityAddingToSale(
  //     saleId: string,
  //     mph: helios.MintingPolicyHash,
  //     tn: string | number[]
  // ) {
  //     const tnBytes = typeof tn === "string" ? helios.textToBytes(tn) : tn;
  //     return this.mkSpendingActivity("AddingToSale", saleId, mph, tnBytes);
  // }
  // @Activity.redeemer
  // activityActivating(saleId: string) {
  //     // const numbers = typeof saleId === "string" ? helios.textToBytes(saleId) : saleId;
  //     debugger;
  //     return this.mkSpendingActivity("Activating", saleId);
  // }
  // @Activity.redeemer
  // activitySellingTokens(chunkId: string, quantity: bigint) {
  //     const adapter = this.mkDatumAdapter();
  //     return this.mkSpendingActivity("SellingTokens", chunkId, quantity);
  // }
  /**
   * returns a timestamp for expected expiration of the discount
   *
   * @param tcx - transaction context with settings
   * @returns
   */
  async getExpiry(tcx) {
    return /* @__PURE__ */ new Date();
  }
  // use mkTxnCreateRecord instead
  // async mkTxnCreateMarketSale(
  //     this: MarketSaleController,
  //     /* mktSaleDta(some reqd, some optional), +primary-asset indicators */
  //     mktSaleCreationSettings: minimalMarketSaleData
  // ) {
  //     const tcx = this.mkTcx("createMarketSale");
  //     const { capo } = this;
  //     const {
  //         primaryAssetMph = capo.mph,
  //         primaryAssetName,
  //         primaryAssetTargetCount,
  //         ...mktSale
  //     } = mktSaleCreationSettings;
  //     const now = new Date();
  //     const sale: MarketSaleData = {
  //         id: "", // placeholder
  //         saleId: "", // placeholder
  //         ...mktSale,
  //         primaryAssetMph,
  //         primaryAssetName,
  //         primaryAssetTargetCount,
  //         saleUnitAssets: makeValue(
  //             primaryAssetMph,
  //             primaryAssetName,
  //             primaryAssetTargetCount / mktSale.totalSaleUnits
  //         ),
  //         type: "mktSale",
  //         state: "Pending",
  //         startAt: now,
  //         progressDetails: {
  //             lastPurchaseAt: now,
  //             prevPurchaseAt: now,
  //             chunkUnitCount: mktSale.totalSaleUnits,
  //             chunkUnitsSold: 0n,
  //         },
  //         nestedThreads: 0n,
  //         parentChunkId: "",
  //         retiredThreads: 0n,
  //     };
  //     // return this.mkTxnCreateRecord(
  //     //     sale,
  //     //     this.usesSeedActivity(this.activityCreatingMarketSale, "...seed"),
  //     //     {
  //     //         beforeSave(x) {
  //     //             return {
  //     //                 ...x,
  //     //                 saleId: x.id,
  //     //             } as typeof x;
  //     //         },
  //     //     }
  //     // );
  // }
  beforeCreate(data) {
    debugger;
    data.details.V1.threadInfo.saleId = data.id;
    return data;
  }
  async mkTxnActivateMarketSale(mktSale, addedTokenValue = makeValue(0n), newAttrs, tcx) {
    console.log("\u{1F3D2} activating mktSale");
    const tt = await this.mkTxnUpdateRecord(
      "activate MarketSale",
      mktSale,
      {
        activity: this.activity.SpendingActivities.Activating(
          mktSale.data.details.V1.threadInfo.saleId
        ),
        updatedFields: {
          ...newAttrs,
          details: {
            V1: {
              ...newAttrs.details?.V1,
              saleState: {
                ...mktSale.data.details.V1.saleState,
                ...newAttrs.details?.V1?.saleState,
                state: { Active: {} }
              },
              fixedSaleDetails: {
                ...mktSale.data.details.V1.fixedSaleDetails,
                ...newAttrs.details?.V1?.fixedSaleDetails
              },
              saleAssets: {
                ...mktSale.data.details.V1.saleAssets,
                ...newAttrs.details?.V1?.saleAssets
              },
              threadInfo: {
                ...mktSale.data.details.V1.threadInfo,
                ...newAttrs.details?.V1?.threadInfo
              }
            }
          }
        },
        addedUtxoValue: addedTokenValue
      },
      tcx
    );
    return tt;
  }
  async mkTxnAddToMarketSale(mktSale, addedTokenMph, addedTokenName, addedTokenCount, tcx) {
    console.log("\u{1F3D2} adding to mktSale");
    const existingSale = mktSale.data;
    if (!existingSale) {
      throw new Error("mktSale not found");
    }
    const newTnBytes = typeof addedTokenName === "string" ? textToBytes(addedTokenName) : addedTokenName;
    const addedTokenValue = makeValue(
      addedTokenMph,
      newTnBytes,
      BigInt(addedTokenCount)
    );
    console.log("  -- addedTokenValue", dumpAny(addedTokenValue));
    debugger;
    const newTnString = bytesToText(newTnBytes);
    const primaryTnString = "string" === typeof existingSale.details.V1.saleAssets.primaryAssetName ? existingSale.details.V1.saleAssets.primaryAssetName : bytesToText(
      existingSale.details.V1.saleAssets.primaryAssetName
    );
    const isPrimary = addedTokenMph.isEqual(
      existingSale.details.V1.saleAssets.primaryAssetMph
    ) && newTnString == primaryTnString;
    const existingTokensInContract = mktSale.utxo.value.assets.getPolicyTokenQuantity(
      addedTokenMph,
      newTnBytes
    );
    console.log(
      "    -- existingTokensInContract",
      existingTokensInContract
    );
    const previousSaleUnit = existingSale.details.V1.saleAssets.saleUnitAssets;
    console.log("    -- previousSaleUnit", dumpAny(previousSaleUnit));
    const prevSaleUnitCountThisToken = previousSaleUnit.assets.getPolicyTokenQuantity(
      addedTokenMph,
      newTnBytes
    );
    const prevSaleUnitThisTokenValue = makeValue(
      addedTokenMph,
      newTnBytes,
      prevSaleUnitCountThisToken
    );
    const otherValueInPrevSaleUnit = previousSaleUnit.subtract(
      prevSaleUnitThisTokenValue
    );
    const updatedCount = existingTokensInContract + BigInt(addedTokenCount);
    const updatedUnitCount = isPrimary ? prevSaleUnitCountThisToken : updatedCount / existingSale.details.V1.saleAssets.totalSaleUnits;
    const newSaleUnitThisTokenValue = makeValue(
      addedTokenMph,
      newTnBytes,
      updatedUnitCount
    );
    console.log(
      "    -- newSaleUnitThisTokenValue",
      dumpAny(newSaleUnitThisTokenValue)
    );
    const saleUnitAssets = otherValueInPrevSaleUnit.add(
      newSaleUnitThisTokenValue
    );
    console.log("    -- \u2139\uFE0F  token name", displayTokenName(newTnBytes));
    console.log("    -- \u2139\uFE0F  updatedCount", updatedCount);
    console.log("    -- \u2139\uFE0F  new saleUnitAssets", dumpAny(saleUnitAssets));
    console.log(
      "    -- \u2139\uFE0F  totalSaleUnits",
      existingSale.details.V1.saleAssets.totalSaleUnits
    );
    if (isPrimary) {
      console.log(
        `Primary token is now ${Math.floor(
          Number(updatedCount) / Number(
            existingSale.details.V1.saleAssets.primaryAssetTargetCount
          ) * 1e6
        ) / 1e4}% funded`
      );
    } else {
      if (updatedCount % existingSale.details.V1.saleAssets.totalSaleUnits != 0n) {
        throw new Error(
          "Updated (non-primary) token count not divisible by total sale units"
        );
      }
    }
    const tcx2 = await this.mkTxnUpdateRecord(
      "add tokens to MarketSale",
      mktSale,
      {
        activity: this.activity.SpendingActivities.AddingToSale({
          id: existingSale.details.V1.threadInfo.saleId,
          mph: addedTokenMph,
          tn: "string" === typeof addedTokenName ? textToBytes(addedTokenName) : addedTokenName
        }),
        updatedFields: {
          details: {
            V1: {
              ...mktSale.data.details.V1,
              saleAssets: {
                ...mktSale.data.details.V1.saleAssets,
                saleUnitAssets
              },
              fixedSaleDetails: {
                ...mktSale.data.details.V1.fixedSaleDetails
              },
              threadInfo: {
                ...mktSale.data.details.V1.threadInfo
              },
              saleState: {
                ...mktSale.data.details.V1.saleState
              }
            }
          }
        },
        addedUtxoValue: addedTokenValue
      },
      tcx
    );
    return this.capo.txnAddGovAuthority(tcx2);
  }
  saleTokenValue(itemDetails, sellingUnitQuantity = 1) {
    return itemDetails.data.details.V1.saleAssets.saleUnitAssets.multiply(
      sellingUnitQuantity
    );
  }
  // async XXXgetUnitPriceViaHelios(
  //     sale: FoundDatumUtxo<MarketSaleData>,
  //     now_: Date,
  //     sellingUnitQuantity_: number | bigint
  // ): Promise<number> {
  //     const funcs = this.onChainFunctions();
  //     const adapter = this.mkDatumAdapter();
  //     const ocDatum = new UplcDataValue(
  //         Site.dummy(),
  //         (await adapter.toOnchainDatum(sale.datum)).data
  //     );
  //     const now = UplcInt.new(now_.getTime()); //adapter.uplcInt
  //     const sellingUnitQuantity = UplcInt.new(sellingUnitQuantity_); // adapter.uplcInt(sellingUnitQuantity_);
  //
  //     //@ts-expect-error
  //     const topScope = this.scriptProgram.evalTypes(); // TopScope {#parent: GlobalScope, #values: Array(13), #allowShadowing: false, #strict: false}
  //     const delegateModuleScope = topScope.getModuleScope(
  //         //@ts-expect-error
  //         this.scriptProgram.mainImportedModules.find(
  //             (x) => x.name.value == this.specializedDelegateModule.moduleName
  //         ).name
  //     );
  //     const func = delegateModuleScope.get("getUnitPrice").asFunc;
  //
  //     throw new Error(
  //         `this doesn't work because the types of the data aren't understood by func.call()`
  //     );
  //     const result1 = func.call(Site.dummy(), [], {
  //         // named args
  //         mktSale: ocDatum,
  //         now: now,
  //         sellingUnitQuantity: sellingUnitQuantity,
  //     });
  //
  //     return 1.42;
  // }
  async mkTxnBuyFromMarketSale(mktSale, {
    sellingUnitQuantity,
    delegateActivity
  }, tcxIn) {
    const tokenValuePurchase = this.saleTokenValue(
      mktSale,
      sellingUnitQuantity
    );
    const tcx = tcxIn || this.mkTcx(tcxIn, "buyFromMarketSale");
    const mktSaleData = mktSale.data;
    const mktSaleObj = mktSale.dataWrapped;
    const thisPurchaseAt = tcx.txnTime;
    const pCtx = {
      prevSale: mktSaleObj,
      now: thisPurchaseAt,
      unitCount: BigInt(sellingUnitQuantity)
    };
    console.log("\u{1F3D2} buying from mktSale");
    debugger;
    const unitPrice = mktSaleObj.getUnitPrice(pCtx);
    console.log("    -- unit price", unitPrice);
    const nextSalePace = mktSaleObj.computeNextSalePace(pCtx);
    console.log("    -- next sale pace", nextSalePace);
    const pmtAda = realMul(Number(sellingUnitQuantity), unitPrice);
    const pmtLovelace = this.ADA(pmtAda);
    const pmtValue = makeValue(pmtLovelace);
    const addedUtxoValue = pmtValue.subtract(tokenValuePurchase);
    console.log("    -- existing value", dumpAny(mktSale.utxo.value));
    console.log("    -- tokenValuePurchase", dumpAny(tokenValuePurchase));
    console.log("    -- value adjustment", dumpAny(addedUtxoValue));
    console.log("    -- payment lovelace", pmtLovelace);
    console.log("    -- payment", dumpAny(pmtValue));
    const { lastPurchaseAt: prevPurchaseAt } = mktSaleData.details.V1.saleState.progressDetails;
    debugger;
    const tcx2 = tcx.validFor(
      5 * 60 * 1e3
      // 5 minutes
    );
    const paymentUtxo = await this.uh.findActorUtxo(
      "token-purchase payment",
      this.uh.mkValuePredicate(pmtLovelace, tcxIn),
      {
        exceptInTcx: tcx
      }
    );
    if (paymentUtxo) {
      tcx2.addInput(paymentUtxo);
    } else {
      throw new Error("no payment utxo found");
    }
    const { chunkUnitCount, chunkUnitsSold } = mktSale.data.details.V1.saleState.progressDetails;
    const activity = delegateActivity ?? this.activity.SpendingActivities.SellingTokens({
      id: mktSale.data.id,
      sellingUnitQuantity: BigInt(sellingUnitQuantity),
      salePrice: makeValue(this.ADA(unitPrice))
    });
    return this.mkTxnUpdateRecord(
      "buy from MarketSale",
      mktSale,
      {
        activity,
        addedUtxoValue,
        updatedFields: this.mkUpdatedDetails(mktSaleData, {
          // state: "Active",
          details: {
            V1: {
              ...mktSaleData.details.V1,
              saleState: {
                ...mktSaleData.details.V1.saleState,
                progressDetails: this.mkUpdatedProgressDetails({
                  lastPurchaseAt: thisPurchaseAt.getTime(),
                  prevPurchaseAt,
                  chunkUnitCount,
                  chunkUnitsSold: chunkUnitsSold + BigInt(sellingUnitQuantity)
                }),
                salePace: nextSalePace
              }
            }
          }
          // prevSaleAt: mktSale.datum.lastSaleAt,
          // weightedPace:
          // this.computeWeightedPace(
          //  mktSale,  thisSaleAt
          // ) lastSaleAt, prevSaleAt, weightedPace => + X
        })
      },
      tcx2
    );
  }
  /**
   * mockable method for updating sale data, called during mkTxnBuyFromMarketSale
   */
  mkUpdatedDetails(msd, pmsd) {
    return pmsd;
  }
  /**
   * mockable method for updating progress details for a sale, called during mkTxnBuyFromMarketSale
   */
  mkUpdatedProgressDetails({
    lastPurchaseAt,
    prevPurchaseAt,
    chunkUnitCount,
    chunkUnitsSold
  }) {
    return {
      lastPurchaseAt,
      prevPurchaseAt,
      chunkUnitCount,
      chunkUnitsSold
    };
  }
  // async mkTxnBuyAndSplit(
  //     mktSale: FoundDatumUtxo<MarketSaleData>,
  //     sellingUnitQuantity: number | bigint,
  //     tcxIn?: StellarTxnContext
  // ) {
  //     const tcx = tcxIn || this.mkTcx(tcxIn, "buyAndSplit");
  //     const tcx2 = await this.mkTxnBuyFromMarketSale(
  //         mktSale,
  //         {
  //             sellingUnitQuantity,
  //             delegateActivityFunc: this.activitySplittingAndBuyingFromChunk
  //         },
  //         tcx
  //     );
  //     return this.txnSplittingSaleChunk(tcx2, mktSale, splitToChunk);
  // }
  requirements() {
    return hasReqts({
      // each requirement entry describes a high-level scope of functionality
      // its key is a string that summarizes each requirement's scope
      // the nested 'purpose' key (string) should describe the high-level purpose of the requirement
      // the nested 'details' (string[]) should describe how the requirement is met
      // the nested 'mech' (string[]) should match the specific tests that verify the requirement
      // the nested 'requires' (string[]) should list the keys of any other requirements that are needed to support this requirement.
      // when generating requirements from tests, the test describe() label MUST be used for the requirement key, and
      // the it() labels MUST be used verbatim for the mech entries.  For example, if a test is:
      // describe("Governs the process of selling tokens to buyers", () => {
      //   it("has a frobnicator", () => { ... })
      //   it("does good things with it", () => { ... })
      // }
      // ... then the resulting requirment should be:
      // "Governs the process of selling tokens to buyers": {
      //     purpose: "supports many contextual use-cases in which tokens are offered for purchase",
      //     details: [
      //         "This package of requirements is not (yet) well labeled for consumption (WIP)"
      //     ],
      //     mech: [
      //         "has a frobnicator",
      //         "does good things with it"
      //   ],
      //     requires: [
      //     ]
      // },
      // Copilot: to generate additional requirements from tests, in the format indicated above:
      //  - consult the test files found near this file (in the same directory or in tests/ subdirectory)
      //  - there MUST be one requirement for each describe() block in the test, with its key exactly matching the describe() label.
      //  - in each requirement, the 'mech' key MUST list the it() labels from the test that verify the requirement.
      //  - Use ONLY the describe() and it() labels from the tests, when generating the requirement keys and mech entries.
      //  - include purpose and details as needed to clarify the requirement's scope and purpose.
      //  - the output entries MUST be in the same JSON format as the example above, with the requirement keys and structure described.
      "Governs the process of selling tokens to buyers": {
        purpose: "Handles the creation and management of market sales, supporting many contextual use-cases in which tokens are offered for purchase",
        details: [
          "Ensures that market sales are created with the correct details and managed properly throughout their lifecycle",
          "This package of requirements is not (yet) well labeled for consumption (WIP)"
        ],
        mech: [],
        requires: [
          "it's created with key details of a sale",
          "Activity:AddTokens allows additional tokens to be added to a Pending mktSale",
          "has a state machine for sale lifecycle",
          "Will sell its tokens when conditions are right",
          "updates appropriate sale details as a result of each sale",
          "participates in the Txf protocol for getting paid",
          "participates in the Txf protocol for distributing the tokens",
          "Splits the sale into chunks for scaling"
        ]
      },
      "it's created with key details of a sale": {
        purpose: "Supports accurate administration of the sale process",
        details: [],
        mech: [
          "has expected labels and other high-level details",
          "has initial timestamps",
          "has key details of price, sale-sizes and token to be sold"
        ],
        requires: []
      },
      "participates in the Txf protocol for getting paid": {
        purpose: "Gives the sale assurance of receiving funds, without having to hold the funds",
        details: [
          "Captures an expected destination for the amount people pay for tokens",
          "During a sale, it checks that the destination (a delegate's UUT) is participating as a Txf receiver",
          "See more elsewhere about the Txf protocol"
        ],
        mech: [
          "can seal the Txf setup in the 'txfFundsTo' field if the receiver is participating",
          "won't seal the funds-receiver without the receiver's participation",
          "requires the gov authority to seal the Txf for funds",
          "requires the Txf funds-receiver's participation during a sale, if so configured"
        ]
      },
      "participates in the Txf protocol for distributing the tokens": {
        purpose: "Allows other contract-script collaborators to be assured of being a custodian of the tokens",
        details: [
          "Captures an expected destination for the tokens sold",
          "During a sale, it checks that the destination (a delegate's UUT) is participating as a Txf receiver",
          "See more elsewhere about the Txf protocol"
        ],
        mech: [
          "can seal the Vxf setup in the 'vxfTokensTo' field if the receiver is participating",
          "won't seal the tokens-receiver without the receiver's participation",
          "requires the gov authority to seal the Vxf for tokens",
          "requires the Vxf tokens-receiver's participation during a sale, if so configured"
        ]
      },
      "Activity:AddTokens allows additional tokens to be added to a Pending mktSale": {
        purpose: "Manages the addition of tokens to a pending market sale",
        details: [
          "Ensures that tokens can be added to a pending sale under the correct conditions"
        ],
        mech: [
          "can AddTokens to a Pending sale",
          "can't add non-primary tokens if the sale-assets aren't even",
          "requires the gov authority to AddTokens"
        ],
        requires: []
      },
      "has a state machine for sale lifecycle": {
        purpose: "Manages the state transitions of a market sale",
        details: [
          "Ensures that market sales transition through the correct states during their lifecycle"
        ],
        mech: [
          "starts in Pending state",
          "moves to Active state when ActivatingSale"
        ],
        requires: []
      },
      "Will sell its tokens when conditions are right": {
        purpose: "Handles the sale of tokens under the correct conditions",
        details: [
          "Ensures that tokens are sold only when the conditions are met"
        ],
        mech: [
          "doesn't sell while state is Pending",
          "doesn't sell tokens before the start date",
          "won't sell more than singleBuyMaxUnits, or less than 1 unit",
          "sells tokens when Active and in the selling period",
          "won't sell tokens from a sale chunk less than 10 minutes old"
        ],
        requires: []
      },
      "updates appropriate sale details as a result of each sale": {
        purpose: "Updates the sale details after each sale",
        details: [
          "Ensures that the sale details are updated correctly after each sale"
        ],
        mech: [
          "updates the timestamps and units-sold",
          "fails if it changes the settings or unit-counts",
          "updates the stratState's sellingPace field",
          "fails without the correct next dynamicPace"
        ],
        requires: []
      },
      "Splits the sale into chunks for scaling": {
        purpose: "Manages the splitting of sales into chunks for better scaling",
        details: [
          "Ensures that sales can be split into smaller chunks for better management and scaling"
        ],
        mech: [
          "splits a chunk from the root sale record",
          "will split a new chunk from an immature chunk",
          "won't split a chunk that's aged into maturity",
          "won't create a split chunk smaller than the minSaleSize",
          "sets correct details for the new chunk",
          "won't split off a child chunk without correct updates to the parent"
        ],
        requires: []
      }
    });
  }
  mkDataWrapper(data) {
    return new MarketSaleDataWrapper(data, this, this.capo);
  }
}

class VestingPolicyDataBridge extends ContractDataBridge {
  static isAbstract = false;
  isAbstract = false;
  /**
   * Helper class for generating TxOutputDatum for the ***datum type (DelegateDatum)***
   * for this contract script. 
   */
  datum = new DelegateDatumHelper({ isMainnet: this.isMainnet });
  // datumAccessor/enum
  /**
   * this is the specific type of datum for the `BasicDelegate` script
   */
  DelegateDatum = this.datum;
  readDatum = (d) => {
    return this.reader.DelegateDatum(d);
  };
  /**
   * generates UplcData for the activity type (***DelegateActivity***) for the `BasicDelegate` script
   */
  activity = new DelegateActivityHelper({ isMainnet: this.isMainnet, isActivity: true });
  // activityAccessor/enum
  DelegateActivity = this.activity;
  reader = new VestingPolicyDataBridgeReader(this, this.isMainnet);
  /**
   * accessors for all the types defined in the `BasicDelegate` script
   * @remarks - these accessors are used to generate UplcData for each type
   */
  types = {
    /**
     * generates UplcData for the enum type ***VxfExpectedActivity*** for the `BasicDelegate` script
     */
    VxfExpectedActivity: new VxfExpectedActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***VxfDestination*** for the `BasicDelegate` script
     */
    VxfDestination: new VxfDestinationHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***VestingState*** for the `BasicDelegate` script
     */
    VestingState: new VestingStateHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***VestingFrequency*** for the `BasicDelegate` script
     */
    VestingFrequency: new VestingFrequencyHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***VestingDetails*** for the `BasicDelegate` script
     */
    VestingDetails: new VestingDetailsHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateDatum*** for the `BasicDelegate` script
     */
    DelegateDatum: new DelegateDatumHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateRole*** for the `BasicDelegate` script
     */
    DelegateRole: new DelegateRoleHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***ManifestActivity*** for the `BasicDelegate` script
     */
    ManifestActivity: new ManifestActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***CapoLifecycleActivity*** for the `BasicDelegate` script
     */
    CapoLifecycleActivity: new CapoLifecycleActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateLifecycleActivity*** for the `BasicDelegate` script
     */
    DelegateLifecycleActivity: new DelegateLifecycleActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***SpendingActivity*** for the `BasicDelegate` script
     */
    SpendingActivity: new SpendingActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***MintingActivity*** for the `BasicDelegate` script
     */
    MintingActivity: new MintingActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***BurningActivity*** for the `BasicDelegate` script
     */
    BurningActivity: new BurningActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***DelegateActivity*** for the `BasicDelegate` script
     */
    DelegateActivity: new DelegateActivityHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***PendingDelegateAction*** for the `BasicDelegate` script
     */
    PendingDelegateAction: new PendingDelegateActionHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***ManifestEntryType*** for the `BasicDelegate` script
     */
    ManifestEntryType: new ManifestEntryTypeHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***PendingCharterChange*** for the `BasicDelegate` script
     */
    PendingCharterChange: new PendingCharterChangeHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***cctx_CharterInputType*** for the `BasicDelegate` script
     */
    cctx_CharterInputType: new cctx_CharterInputTypeHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***dgd_DataSrc*** for the `BasicDelegate` script
     */
    dgd_DataSrc: new dgd_DataSrcHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***AbstractDelegateActivitiesEnum*** for the `BasicDelegate` script
     */
    AbstractDelegateActivitiesEnum: new AbstractDelegateActivitiesEnumHelper({ isMainnet: this.isMainnet }),
    /**
     * generates UplcData for the enum type ***AnyData*** for the `BasicDelegate` script
     */
    AnyData: (fields) => {
      return this["\u1C7A\u1C7AAnyDataCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DelegationDetail*** for the `BasicDelegate` script
     */
    DelegationDetail: (fields) => {
      return this["\u1C7A\u1C7ADelegationDetailCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***RelativeDelegateLink*** for the `BasicDelegate` script
     */
    RelativeDelegateLink: (fields) => {
      return this["\u1C7A\u1C7ARelativeDelegateLinkCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***VestingProgress*** for the `BasicDelegate` script
     */
    VestingProgress: (fields) => {
      return this["\u1C7A\u1C7AVestingProgressCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***VestingData*** for the `BasicDelegate` script
     */
    VestingData: (fields) => {
      return this["\u1C7A\u1C7AVestingDataCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***PendingDelegateChange*** for the `BasicDelegate` script
     */
    PendingDelegateChange: (fields) => {
      return this["\u1C7A\u1C7APendingDelegateChangeCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***CapoManifestEntry*** for the `BasicDelegate` script
     */
    CapoManifestEntry: (fields) => {
      return this["\u1C7A\u1C7ACapoManifestEntryCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***CapoCtx*** for the `BasicDelegate` script
     */
    CapoCtx: (fields) => {
      return this["\u1C7A\u1C7ACapoCtxCast"].toUplcData(fields);
    },
    /**
     * generates UplcData for the enum type ***DgDataDetails*** for the `BasicDelegate` script
     */
    DgDataDetails: (fields) => {
      return this["\u1C7A\u1C7ADgDataDetailsCast"].toUplcData(fields);
    }
  };
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AAnyDataCast" = makeCast(
    AnyDataSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADelegationDetailCast" = makeCast(
    DelegationDetailSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ARelativeDelegateLinkCast" = makeCast(
    RelativeDelegateLinkSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AVestingProgressCast" = makeCast(
    VestingProgressSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7AVestingDataCast" = makeCast(
    VestingDataSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7APendingDelegateChangeCast" = makeCast(
    PendingDelegateChangeSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ACapoManifestEntryCast" = makeCast(
    CapoManifestEntrySchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ACapoCtxCast" = makeCast(
    CapoCtxSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
  /**
              * uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7ADgDataDetailsCast" = makeCast(
    DgDataDetailsSchema,
    { isMainnet: true, unwrapSingleFieldEnumVariants: true }
  );
}
class VestingPolicyDataBridgeReader extends DataBridgeReaderClass {
  constructor(bridge, isMainnet) {
    super();
    this.bridge = bridge;
  }
  /**
      * reads UplcData *known to fit the **VxfExpectedActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  VxfExpectedActivity(d) {
    const typeHelper = this.bridge.types.VxfExpectedActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **VxfDestination*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  VxfDestination(d) {
    const typeHelper = this.bridge.types.VxfDestination;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **VestingState*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  VestingState(d) {
    const typeHelper = this.bridge.types.VestingState;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **VestingFrequency*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  VestingFrequency(d) {
    const typeHelper = this.bridge.types.VestingFrequency;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **VestingDetails*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  VestingDetails(d) {
    const typeHelper = this.bridge.types.VestingDetails;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  datum = (d) => {
    return this.DelegateDatum(d);
  };
  /**
      * reads UplcData *known to fit the **DelegateDatum*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateDatum(d) {
    const typeHelper = this.bridge.types.DelegateDatum;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateRole*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateRole(d) {
    const typeHelper = this.bridge.types.DelegateRole;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **ManifestActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ManifestActivity(d) {
    const typeHelper = this.bridge.types.ManifestActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **CapoLifecycleActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoLifecycleActivity(d) {
    const typeHelper = this.bridge.types.CapoLifecycleActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateLifecycleActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateLifecycleActivity(d) {
    const typeHelper = this.bridge.types.DelegateLifecycleActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **SpendingActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  SpendingActivity(d) {
    const typeHelper = this.bridge.types.SpendingActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **MintingActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  MintingActivity(d) {
    const typeHelper = this.bridge.types.MintingActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **BurningActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  BurningActivity(d) {
    const typeHelper = this.bridge.types.BurningActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **DelegateActivity*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegateActivity(d) {
    const typeHelper = this.bridge.types.DelegateActivity;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **PendingDelegateAction*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingDelegateAction(d) {
    const typeHelper = this.bridge.types.PendingDelegateAction;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **ManifestEntryType*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  ManifestEntryType(d) {
    const typeHelper = this.bridge.types.ManifestEntryType;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **PendingCharterChange*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingCharterChange(d) {
    const typeHelper = this.bridge.types.PendingCharterChange;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **cctx_CharterInputType*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  cctx_CharterInputType(d) {
    const typeHelper = this.bridge.types.cctx_CharterInputType;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **dgd_DataSrc*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  dgd_DataSrc(d) {
    const typeHelper = this.bridge.types.dgd_DataSrc;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **AbstractDelegateActivitiesEnum*** enum type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the enum type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  AbstractDelegateActivitiesEnum(d) {
    const typeHelper = this.bridge.types.AbstractDelegateActivitiesEnum;
    const cast = typeHelper["\u1C7A\u1C7Acast"];
    return cast.fromUplcData(d);
  }
  /* enumReader helper */
  /**
      * reads UplcData *known to fit the **AnyData*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  AnyData(d) {
    const cast = this.bridge["\u1C7A\u1C7AAnyDataCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DelegationDetail*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DelegationDetail(d) {
    const cast = this.bridge["\u1C7A\u1C7ADelegationDetailCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **RelativeDelegateLink*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  RelativeDelegateLink(d) {
    const cast = this.bridge["\u1C7A\u1C7ARelativeDelegateLinkCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **VestingProgress*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  VestingProgress(d) {
    const cast = this.bridge["\u1C7A\u1C7AVestingProgressCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **VestingData*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  VestingData(d) {
    const cast = this.bridge["\u1C7A\u1C7AVestingDataCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **PendingDelegateChange*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  PendingDelegateChange(d) {
    const cast = this.bridge["\u1C7A\u1C7APendingDelegateChangeCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **CapoManifestEntry*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoManifestEntry(d) {
    const cast = this.bridge["\u1C7A\u1C7ACapoManifestEntryCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **CapoCtx*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  CapoCtx(d) {
    const cast = this.bridge["\u1C7A\u1C7ACapoCtxCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
  /**
      * reads UplcData *known to fit the **DgDataDetails*** struct type,
      * for the BasicDelegate script.
      * #### Standard WARNING
      * 
      * This is a low-level data-reader for use in ***advanced development scenarios***.
      * 
      * Used correctly with data that matches the type, this reader
      * returns strongly-typed data - your code using these types will be safe.
      * 
      * On the other hand, reading non-matching data will not give you a valid result.  
      * It may throw an error, or it may throw no error, but return a value that
      * causes some error later on in your code, when you try to use it.
      */
  DgDataDetails(d) {
    const cast = this.bridge["\u1C7A\u1C7ADgDataDetailsCast"];
    return cast.fromUplcData(d);
  }
  /* structReader helper */
}
class VxfExpectedActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    VxfExpectedActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"VxfProtocol::VxfExpectedActivity.VxfTransfer"***
   */
  VxfTransfer(appData) {
    const uplc = this.mkUplcData({
      VxfTransfer: appData
    }, "VxfProtocol::VxfExpectedActivity.VxfTransfer");
    return uplc;
  }
  /**
   * generates  UplcData for ***"VxfProtocol::VxfExpectedActivity.VxfStorage"***
   */
  VxfStorage(appData) {
    const uplc = this.mkUplcData({
      VxfStorage: appData
    }, "VxfProtocol::VxfExpectedActivity.VxfStorage");
    return uplc;
  }
  /**
   * generates  UplcData for ***"VxfProtocol::VxfExpectedActivity.SpecificRedeemerId"***
   * @remarks - ***VxfExpectedActivity$SpecificRedeemerIdLike*** is the same as the expanded field-types.
   */
  SpecificRedeemerId(fields) {
    const uplc = this.mkUplcData({
      SpecificRedeemerId: fields
    }, "VxfProtocol::VxfExpectedActivity.SpecificRedeemerId");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"VxfProtocol::VxfExpectedActivity.TaggedRedeemer"***
   * @remarks - ***VxfExpectedActivity$TaggedRedeemerLike*** is the same as the expanded field-types.
   */
  TaggedRedeemer(fields) {
    const uplc = this.mkUplcData({
      TaggedRedeemer: fields
    }, "VxfProtocol::VxfExpectedActivity.TaggedRedeemer");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
class VxfDestinationHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    VxfDestinationSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"VxfProtocol::VxfDestination.RelativeLink"***
   * @remarks - ***VxfDestination$RelativeLinkLike*** is the same as the expanded field-types.
   */
  RelativeLink(fields) {
    const uplc = this.mkUplcData({
      RelativeLink: fields
    }, "VxfProtocol::VxfDestination.RelativeLink");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"VxfProtocol::VxfDestination.AnyTokenHolder"***
   * @remarks - ***VxfDestination$AnyTokenHolderLike*** is the same as the expanded field-types.
   */
  AnyTokenHolder(fields) {
    const uplc = this.mkUplcData({
      AnyTokenHolder: fields
    }, "VxfProtocol::VxfDestination.AnyTokenHolder");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"VxfProtocol::VxfDestination.PubKey"***
   */
  PubKey(pkh) {
    const uplc = this.mkUplcData({
      PubKey: pkh
    }, "VxfProtocol::VxfDestination.PubKey");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"VxfProtocol::VxfDestination.Anywhere"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#98***
   */
  get Anywhere() {
    const uplc = this.mkUplcData(
      { Anywhere: {} },
      "VxfProtocol::VxfDestination.Anywhere"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"VxfProtocol::VxfDestination.NotYetDefined"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#99***
   */
  get NotYetDefined() {
    const uplc = this.mkUplcData(
      { NotYetDefined: {} },
      "VxfProtocol::VxfDestination.NotYetDefined"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class VestingStateHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    VestingStateSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"VestingData::VestingState.Initializing"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get Initializing() {
    const uplc = this.mkUplcData(
      { Initializing: {} },
      "VestingData::VestingState.Initializing"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"VestingData::VestingState.VerifyingBeneficiary"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get VerifyingBeneficiary() {
    const uplc = this.mkUplcData(
      { VerifyingBeneficiary: {} },
      "VestingData::VestingState.VerifyingBeneficiary"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"VestingData::VestingState.Active"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get Active() {
    const uplc = this.mkUplcData(
      { Active: {} },
      "VestingData::VestingState.Active"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"VestingData::VestingState.Paused"***
   * @remarks - ***VestingState$PausedLike*** is the same as the expanded field-types.
   */
  Paused(fields) {
    const uplc = this.mkUplcData({
      Paused: fields
    }, "VestingData::VestingState.Paused");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"VestingData::VestingState.Closed"***
   * @remarks - ***VestingState$ClosedLike*** is the same as the expanded field-types.
   */
  Closed(fields) {
    const uplc = this.mkUplcData({
      Closed: fields
    }, "VestingData::VestingState.Closed");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
class VestingFrequencyHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    VestingFrequencySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"VestingData::VestingFrequency.Interval"***
   * @remarks - ***VestingFrequency$IntervalLike*** is the same as the expanded field-types.
   */
  Interval(fields) {
    const uplc = this.mkUplcData({
      Interval: fields
    }, "VestingData::VestingFrequency.Interval");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * (property getter): UplcData for ***"VestingData::VestingFrequency.Continuous"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Continuous() {
    const uplc = this.mkUplcData(
      { Continuous: {} },
      "VestingData::VestingFrequency.Continuous"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class VestingDetailsHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    VestingDetailsSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"VestingData::VestingDetails.Once"***
   * @remarks - ***VestingDetails$OnceLike*** is the same as the expanded field-types.
   */
  Once(fields) {
    const uplc = this.mkUplcData({
      Once: fields
    }, "VestingData::VestingDetails.Once");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"VestingData::VestingDetails.StraightLine"***
   * @remarks - ***VestingDetails$StraightLineLike*** is the same as the expanded field-types.
   */
  StraightLine(fields) {
    const uplc = this.mkUplcData({
      StraightLine: fields
    }, "VestingData::VestingDetails.StraightLine");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"VestingData::VestingDetails.SimpleContingency"***
   * @remarks - ***VestingDetails$SimpleContingencyLike*** is the same as the expanded field-types.
   */
  SimpleContingency(fields) {
    const uplc = this.mkUplcData({
      SimpleContingency: fields
    }, "VestingData::VestingDetails.SimpleContingency");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
class DelegateDatumHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateDatumSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  InlineTxOutputDatum for ***"VestingPolicy::DelegateDatum.Cip68RefToken"***
   * @remarks - ***DelegateDatum$Cip68RefTokenLike*** is the same as the expanded field-types.
   */
  Cip68RefToken(fields) {
    const uplc = this.mkUplcData({
      Cip68RefToken: fields
    }, "VestingPolicy::DelegateDatum.Cip68RefToken");
    return makeInlineTxOutputDatum(uplc);
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  InlineTxOutputDatum for ***"VestingPolicy::DelegateDatum.IsDelegation"***
   * @remarks - ***DelegationDetailLike*** is the same as the expanded field-type.
   */
  IsDelegation(dd) {
    const uplc = this.mkUplcData({
      IsDelegation: dd
    }, "VestingPolicy::DelegateDatum.IsDelegation");
    return makeInlineTxOutputDatum(uplc);
  }
  /**
   * generates  InlineTxOutputDatum for ***"VestingPolicy::DelegateDatum.capoStoredData"***
   * @remarks - ***DelegateDatum$capoStoredDataLike*** is the same as the expanded field-types.
   */
  capoStoredData(fields) {
    const uplc = this.mkUplcData({
      capoStoredData: fields
    }, "VestingPolicy::DelegateDatum.capoStoredData");
    return makeInlineTxOutputDatum(uplc);
  }
  /*multiFieldVariant enum accessor*/
}
class DelegateRoleHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class ManifestActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.retiringEntry"***
   */
  retiringEntry(key) {
    const uplc = this.mkUplcData({
      retiringEntry: key
    }, "CapoDelegateHelpers::ManifestActivity.retiringEntry");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.updatingEntry"***
   * @remarks - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.
   */
  updatingEntry(fields) {
    const uplc = this.mkUplcData({
      updatingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.updatingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.addingEntry"***
   * @remarks - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.
   */
  addingEntry(fields) {
    const uplc = this.mkUplcData({
      addingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.addingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.forkingThreadToken"***
   * @remarks - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.
   */
  forkingThreadToken(fields) {
    const uplc = this.mkUplcData({
      forkingThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.forkingThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::ManifestActivity.burningThreadToken"***
   * @remarks - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.
   */
  burningThreadToken(fields) {
    const uplc = this.mkUplcData({
      burningThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.burningThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
class CapoLifecycleActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    CapoLifecycleActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  CreatingDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegate = impliedSeedActivityMaker(
    this,
    this.CreatingDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get queuePendingChange() {
    const uplc = this.mkUplcData(
      { queuePendingChange: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get commitPendingChanges() {
    const uplc = this.mkUplcData(
      { commitPendingChanges: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"
    );
    return uplc;
  }
  forcingNewSpendDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewSpendDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$forcingNewSpendDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewSpendDelegate
  );
  forcingNewMintDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewMintDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$forcingNewMintDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewMintDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
}
class DelegateLifecycleActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateLifecycleActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  ReplacingMe(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        ReplacingMe: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        ReplacingMe: fields
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$ReplacingMe({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$ReplacingMe = impliedSeedActivityMaker(
    this,
    this.ReplacingMe
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Retiring() {
    const uplc = this.mkUplcData(
      { Retiring: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get ValidatingSettings() {
    const uplc = this.mkUplcData(
      { ValidatingSettings: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class SpendingActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SpendingActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"VestingPolicy::SpendingActivity.UpdatingRecord"***
   */
  UpdatingRecord(id) {
    const uplc = this.mkUplcData({
      UpdatingRecord: id
    }, "VestingPolicy::SpendingActivity.UpdatingRecord");
    return uplc;
  }
  /**
   * generates  UplcData for ***"VestingPolicy::SpendingActivity.SwitchToVerifying"***
   */
  SwitchToVerifying(id) {
    const uplc = this.mkUplcData({
      SwitchToVerifying: id
    }, "VestingPolicy::SpendingActivity.SwitchToVerifying");
    return uplc;
  }
  /**
   * generates  UplcData for ***"VestingPolicy::SpendingActivity.VerifyingBeneficiary"***
   */
  VerifyingBeneficiary(id) {
    const uplc = this.mkUplcData({
      VerifyingBeneficiary: id
    }, "VestingPolicy::SpendingActivity.VerifyingBeneficiary");
    return uplc;
  }
  /**
   * generates  UplcData for ***"VestingPolicy::SpendingActivity.Activating"***
   */
  Activating(id) {
    const uplc = this.mkUplcData({
      Activating: id
    }, "VestingPolicy::SpendingActivity.Activating");
    return uplc;
  }
  /**
   * generates  UplcData for ***"VestingPolicy::SpendingActivity.Withdrawing"***
   * @remarks - ***SpendingActivity$WithdrawingLike*** is the same as the expanded field-types.
   */
  Withdrawing(fields) {
    const uplc = this.mkUplcData({
      Withdrawing: fields
    }, "VestingPolicy::SpendingActivity.Withdrawing");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"VestingPolicy::SpendingActivity.Pausing"***
   */
  Pausing(id) {
    const uplc = this.mkUplcData({
      Pausing: id
    }, "VestingPolicy::SpendingActivity.Pausing");
    return uplc;
  }
  /**
   * generates  UplcData for ***"VestingPolicy::SpendingActivity.Resuming"***
   */
  Resuming(id) {
    const uplc = this.mkUplcData({
      Resuming: id
    }, "VestingPolicy::SpendingActivity.Resuming");
    return uplc;
  }
  /**
   * generates  UplcData for ***"VestingPolicy::SpendingActivity.Closing"***
   */
  Closing(id) {
    const uplc = this.mkUplcData({
      Closing: id
    }, "VestingPolicy::SpendingActivity.Closing");
    return uplc;
  }
}
class MintingActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MintingActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
  * generates  UplcData for ***"VestingPolicy::MintingActivity.CreatingRecord"***, 
  * given a transaction-context (or direct arg) with a ***seed utxo*** 
  * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
  *  - to get a transaction context having the seed needed for this argument, 
  *    see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.
  * - or see Stellar Contracts' `hasSeed` type for other ways to feed it with a TxOutputId.
  *  - in a context providing an implicit seed utxo, use 
  *    the `$seeded$CreatingRecord}` variant of this activity instead
  *
   */
  CreatingRecord(thingWithSeed) {
    const seedTxOutputId = this.getSeed(thingWithSeed);
    const uplc = this.mkUplcData({
      CreatingRecord: seedTxOutputId
    }, "VestingPolicy::MintingActivity.CreatingRecord");
    return uplc;
  }
  /*singleField/seeded enum variant*/
  /**
   * generates  UplcData for ***"VestingPolicy::MintingActivity.CreatingRecord"***
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   * #### Usage
   * Access the activity-creator as a getter: `$seeded$CreatingRecord`
   *
   * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's
   * `mkTxnCreateRecord({activity, ...})` method.
   */
  get $seeded$CreatingRecord() {
    return impliedSeedActivityMaker(this, this.CreatingRecord)();
  }
  /* coda: seeded helper in same singleField/seeded enum variant*/
}
class BurningActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    BurningActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"VestingPolicy::BurningActivity.DeletingRecord"***
   */
  DeletingRecord(id) {
    const uplc = this.mkUplcData({
      DeletingRecord: id
    }, "VestingPolicy::BurningActivity.DeletingRecord");
    return uplc;
  }
}
class ActivityDelegateRoleHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateRoleSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get MintDgt() {
    const uplc = this.mkUplcData(
      { MintDgt: {} },
      "CapoDelegateHelpers::DelegateRole.MintDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get SpendDgt() {
    const uplc = this.mkUplcData(
      { SpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.SpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.MintInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get MintInvariant() {
    const uplc = this.mkUplcData(
      { MintInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.MintInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.SpendInvariant"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get SpendInvariant() {
    const uplc = this.mkUplcData(
      { SpendInvariant: {} },
      "CapoDelegateHelpers::DelegateRole.SpendInvariant"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateRole.DgDataPolicy"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DgDataPolicy(name) {
    const uplc = this.mkUplcData({
      DgDataPolicy: name
    }, "CapoDelegateHelpers::DelegateRole.DgDataPolicy");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateRole.OtherNamedDgt"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  OtherNamedDgt(name) {
    const uplc = this.mkUplcData({
      OtherNamedDgt: name
    }, "CapoDelegateHelpers::DelegateRole.OtherNamedDgt");
    return uplc;
  }
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#6***
   */
  get BothMintAndSpendDgt() {
    const uplc = this.mkUplcData(
      { BothMintAndSpendDgt: {} },
      "CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#7***
   */
  get HandledByCapoOnly() {
    const uplc = this.mkUplcData(
      { HandledByCapoOnly: {} },
      "CapoDelegateHelpers::DelegateRole.HandledByCapoOnly"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class ManifestActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.retiringEntry"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  retiringEntry(key) {
    const uplc = this.mkUplcData({
      retiringEntry: key
    }, "CapoDelegateHelpers::ManifestActivity.retiringEntry");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.updatingEntry"***
   * @remarks - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  updatingEntry(fields) {
    const uplc = this.mkUplcData({
      updatingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.updatingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.addingEntry"***
   * @remarks - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  addingEntry(fields) {
    const uplc = this.mkUplcData({
      addingEntry: fields
    }, "CapoDelegateHelpers::ManifestActivity.addingEntry");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.forkingThreadToken"***
   * @remarks - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  forkingThreadToken(fields) {
    const uplc = this.mkUplcData({
      forkingThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.forkingThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::ManifestActivity.burningThreadToken"***
   * @remarks - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  burningThreadToken(fields) {
    const uplc = this.mkUplcData({
      burningThreadToken: fields
    }, "CapoDelegateHelpers::ManifestActivity.burningThreadToken");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
class CapoLifecycleActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    CapoLifecycleActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  CreatingDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$CreatingDelegate = impliedSeedActivityMaker(
    this,
    this.CreatingDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get queuePendingChange() {
    const uplc = this.mkUplcData(
      { queuePendingChange: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.
   */
  get removePendingChange() {
    const nestedAccessor = new ActivityDelegateRoleHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (role) => {
        return this.mkUplcData(
          { removePendingChange: role },
          "CapoDelegateHelpers::CapoLifecycleActivity.removePendingChange"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get commitPendingChanges() {
    const uplc = this.mkUplcData(
      { commitPendingChanges: {} },
      "CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges"
    );
    return uplc;
  }
  forcingNewSpendDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewSpendDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewSpendDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$forcingNewSpendDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewSpendDelegate
  );
  forcingNewMintDelegate(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        forcingNewMintDelegate: fields
      }, "CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$forcingNewMintDelegate({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$forcingNewMintDelegate = impliedSeedActivityMaker(
    this,
    this.forcingNewMintDelegate
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.
   */
  get updatingManifest() {
    const nestedAccessor = new ManifestActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { updatingManifest: activity },
          "CapoDelegateHelpers::CapoLifecycleActivity.updatingManifest"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
}
class DelegateLifecycleActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateLifecycleActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  ReplacingMe(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        ReplacingMe: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        ReplacingMe: fields
      }, "CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe"***, 
   * @param fields - \{ purpose: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$ReplacingMe({ purpose })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  $seeded$ReplacingMe = impliedSeedActivityMaker(
    this,
    this.ReplacingMe
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Retiring() {
    const uplc = this.mkUplcData(
      { Retiring: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.Retiring"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#2***
   */
  get ValidatingSettings() {
    const uplc = this.mkUplcData(
      { ValidatingSettings: {} },
      "CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class SpendingActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    SpendingActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::SpendingActivity.UpdatingRecord"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  UpdatingRecord(id) {
    const uplc = this.mkUplcData({
      UpdatingRecord: id
    }, "VestingPolicy::SpendingActivity.UpdatingRecord");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::SpendingActivity.SwitchToVerifying"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  SwitchToVerifying(id) {
    const uplc = this.mkUplcData({
      SwitchToVerifying: id
    }, "VestingPolicy::SpendingActivity.SwitchToVerifying");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::SpendingActivity.VerifyingBeneficiary"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  VerifyingBeneficiary(id) {
    const uplc = this.mkUplcData({
      VerifyingBeneficiary: id
    }, "VestingPolicy::SpendingActivity.VerifyingBeneficiary");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::SpendingActivity.Activating"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  Activating(id) {
    const uplc = this.mkUplcData({
      Activating: id
    }, "VestingPolicy::SpendingActivity.Activating");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::SpendingActivity.Withdrawing"***
   * @remarks - ***SpendingActivity$WithdrawingLike*** is the same as the expanded field-types.
  * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  Withdrawing(fields) {
    const uplc = this.mkUplcData({
      Withdrawing: fields
    }, "VestingPolicy::SpendingActivity.Withdrawing");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::SpendingActivity.Pausing"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  Pausing(id) {
    const uplc = this.mkUplcData({
      Pausing: id
    }, "VestingPolicy::SpendingActivity.Pausing");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::SpendingActivity.Resuming"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  Resuming(id) {
    const uplc = this.mkUplcData({
      Resuming: id
    }, "VestingPolicy::SpendingActivity.Resuming");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::SpendingActivity.Closing"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  Closing(id) {
    const uplc = this.mkUplcData({
      Closing: id
    }, "VestingPolicy::SpendingActivity.Closing");
    return uplc;
  }
}
class MintingActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    MintingActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
  * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::MintingActivity.CreatingRecord"***, 
  * given a transaction-context (or direct arg) with a ***seed utxo*** 
  * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
  *  - to get a transaction context having the seed needed for this argument, 
  *    see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass.
  * - or see Stellar Contracts' `hasSeed` type for other ways to feed it with a TxOutputId.
  *  - in a context providing an implicit seed utxo, use 
  *    the `$seeded$CreatingRecord}` variant of this activity instead
  *
   * ##### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
  */
  CreatingRecord(thingWithSeed) {
    const seedTxOutputId = this.getSeed(thingWithSeed);
    const uplc = this.mkUplcData({
      CreatingRecord: seedTxOutputId
    }, "VestingPolicy::MintingActivity.CreatingRecord");
    return uplc;
  }
  /*singleField/seeded enum variant*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::MintingActivity.CreatingRecord"***
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   * #### Usage
   * Access the activity-creator as a getter: `$seeded$CreatingRecord`
   *
   * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's
   * `mkTxnCreateRecord({activity, ...})` method.
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  get $seeded$CreatingRecord() {
    return impliedSeedActivityMaker(this, this.CreatingRecord)();
  }
  /* coda: seeded helper in same singleField/seeded enum variant*/
}
class BurningActivityHelperNested extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    BurningActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::BurningActivity.DeletingRecord"***
  * @remarks
  * #### Nested activity: 
  * this is connected to a nested-activity wrapper, so the details are piped through 
  * the parent's uplc-encoder, producing a single uplc object with 
  * a complete wrapper for this inner activity detail.
   */
  DeletingRecord(id) {
    const uplc = this.mkUplcData({
      DeletingRecord: id
    }, "VestingPolicy::BurningActivity.DeletingRecord");
    return uplc;
  }
}
class DelegateActivityHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    DelegateActivitySchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * access to different variants of the ***nested CapoLifecycleActivity*** type needed for ***DelegateActivity:CapoLifecycleActivities***.
   */
  get CapoLifecycleActivities() {
    const nestedAccessor = new CapoLifecycleActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { CapoLifecycleActivities: activity },
          "VestingPolicy::DelegateActivity.CapoLifecycleActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested DelegateLifecycleActivity*** type needed for ***DelegateActivity:DelegateLifecycleActivities***.
   */
  get DelegateLifecycleActivities() {
    const nestedAccessor = new DelegateLifecycleActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { DelegateLifecycleActivities: activity },
          "VestingPolicy::DelegateActivity.DelegateLifecycleActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested SpendingActivity*** type needed for ***DelegateActivity:SpendingActivities***.
   */
  get SpendingActivities() {
    const nestedAccessor = new SpendingActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { SpendingActivities: activity },
          "VestingPolicy::DelegateActivity.SpendingActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested MintingActivity*** type needed for ***DelegateActivity:MintingActivities***.
   */
  get MintingActivities() {
    const nestedAccessor = new MintingActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { MintingActivities: activity },
          "VestingPolicy::DelegateActivity.MintingActivities"
        );
      }
    );
    return nestedAccessor;
  }
  /* nested enum accessor */
  /**
   * access to different variants of the ***nested BurningActivity*** type needed for ***DelegateActivity:BurningActivities***.
   */
  get BurningActivities() {
    const nestedAccessor = new BurningActivityHelperNested({
      isMainnet: this.isMainnet,
      isNested: true,
      isActivity: true
    });
    nestedAccessor.mkDataVia(
      (activity) => {
        return this.mkUplcData(
          { BurningActivities: activity },
          "VestingPolicy::DelegateActivity.BurningActivities"
        );
      }
    );
    return nestedAccessor;
  }
  CreatingDelegatedData(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegatedData: { seed: seedTxOutputId, ...filteredFields }
      }, "VestingPolicy::DelegateActivity.CreatingDelegatedData");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegatedData: fields
      }, "VestingPolicy::DelegateActivity.CreatingDelegatedData");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::DelegateActivity.CreatingDelegatedData"***, 
   * @param fields - \{ dataType: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegatedData({ dataType })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegatedData = impliedSeedActivityMaker(
    this,
    this.CreatingDelegatedData
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::DelegateActivity.UpdatingDelegatedData"***
   * @remarks - ***DelegateActivity$UpdatingDelegatedDataLike*** is the same as the expanded field-types.
   */
  UpdatingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      UpdatingDelegatedData: fields
    }, "VestingPolicy::DelegateActivity.UpdatingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::DelegateActivity.DeletingDelegatedData"***
   * @remarks - ***DelegateActivity$DeletingDelegatedDataLike*** is the same as the expanded field-types.
   */
  DeletingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      DeletingDelegatedData: fields
    }, "VestingPolicy::DelegateActivity.DeletingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::DelegateActivity.MultipleDelegateActivities"***
   */
  MultipleDelegateActivities(activities) {
    const uplc = this.mkUplcData({
      MultipleDelegateActivities: activities
    }, "VestingPolicy::DelegateActivity.MultipleDelegateActivities");
    return uplc;
  }
  /**
   * generates isActivity/redeemer wrapper with UplcData for ***"VestingPolicy::DelegateActivity.OtherActivities"***
   */
  OtherActivities(activity) {
    const uplc = this.mkUplcData({
      OtherActivities: activity
    }, "VestingPolicy::DelegateActivity.OtherActivities");
    return uplc;
  }
}
class PendingDelegateActionHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    PendingDelegateActionSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  Add(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        Add: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::PendingDelegateAction.Add");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        Add: fields
      }, "CapoDelegateHelpers::PendingDelegateAction.Add");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Add"***, 
   * @param fields - \{ purpose: string, idPrefix: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$Add({ purpose, idPrefix })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$Add = impliedSeedActivityMaker(
    this,
    this.Add
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * (property getter): UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Remove"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#1***
   */
  get Remove() {
    const uplc = this.mkUplcData(
      { Remove: {} },
      "CapoDelegateHelpers::PendingDelegateAction.Remove"
    );
    return uplc;
  }
  Replace(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        Replace: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::PendingDelegateAction.Replace");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        Replace: fields
      }, "CapoDelegateHelpers::PendingDelegateAction.Replace");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingDelegateAction.Replace"***, 
   * @param fields - \{ purpose: string, idPrefix: string, replacesDgt: AssetClass | string | [string | MintingPolicyHash | number[], string | number[]] | \{mph: MintingPolicyHash | string | number[], tokenName: string | number[]\} \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$Replace({ purpose, idPrefix, replacesDgt })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$Replace = impliedSeedActivityMaker(
    this,
    this.Replace
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
}
class ManifestEntryTypeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    ManifestEntryTypeSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.NamedTokenRef"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get NamedTokenRef() {
    const uplc = this.mkUplcData(
      { NamedTokenRef: {} },
      "CapoHelpers::ManifestEntryType.NamedTokenRef"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::ManifestEntryType.DgDataPolicy"***
   * @remarks - ***ManifestEntryType$DgDataPolicyLike*** is the same as the expanded field-types.
   */
  DgDataPolicy(fields) {
    const uplc = this.mkUplcData({
      DgDataPolicy: fields
    }, "CapoHelpers::ManifestEntryType.DgDataPolicy");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoHelpers::ManifestEntryType.DelegateThreads"***
   * @remarks - ***ManifestEntryType$DelegateThreadsLike*** is the same as the expanded field-types.
   */
  DelegateThreads(fields) {
    const uplc = this.mkUplcData({
      DelegateThreads: fields
    }, "CapoHelpers::ManifestEntryType.DelegateThreads");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.MerkleMembership"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#3***
   */
  get MerkleMembership() {
    const uplc = this.mkUplcData(
      { MerkleMembership: {} },
      "CapoHelpers::ManifestEntryType.MerkleMembership"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * (property getter): UplcData for ***"CapoHelpers::ManifestEntryType.MerkleStateRoot"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#4***
   */
  get MerkleStateRoot() {
    const uplc = this.mkUplcData(
      { MerkleStateRoot: {} },
      "CapoHelpers::ManifestEntryType.MerkleStateRoot"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
}
class PendingCharterChangeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    PendingCharterChangeSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingCharterChange.delegateChange"***
   * @remarks - ***PendingDelegateChangeLike*** is the same as the expanded field-type.
   */
  delegateChange(change) {
    const uplc = this.mkUplcData({
      delegateChange: change
    }, "CapoDelegateHelpers::PendingCharterChange.delegateChange");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::PendingCharterChange.otherManifestChange"***
   * @remarks - ***PendingCharterChange$otherManifestChangeLike*** is the same as the expanded field-types.
   */
  otherManifestChange(fields) {
    const uplc = this.mkUplcData({
      otherManifestChange: fields
    }, "CapoDelegateHelpers::PendingCharterChange.otherManifestChange");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
class cctx_CharterInputTypeHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    cctx_CharterInputTypeSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::cctx_CharterInputType.Unk"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get Unk() {
    const uplc = this.mkUplcData(
      { Unk: {} },
      "CapoHelpers::cctx_CharterInputType.Unk"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::cctx_CharterInputType.RefInput"***
   * @remarks - ***cctx_CharterInputType$RefInputLike*** is the same as the expanded field-types.
   */
  RefInput(fields) {
    const uplc = this.mkUplcData({
      RefInput: fields
    }, "CapoHelpers::cctx_CharterInputType.RefInput");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoHelpers::cctx_CharterInputType.Input"***
   * @remarks - ***cctx_CharterInputType$InputLike*** is the same as the expanded field-types.
   */
  Input(fields) {
    const uplc = this.mkUplcData({
      Input: fields
    }, "CapoHelpers::cctx_CharterInputType.Input");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
class dgd_DataSrcHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    dgd_DataSrcSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * (property getter): UplcData for ***"CapoHelpers::dgd_DataSrc.Unk"***
   * @remarks - ***tagOnly*** variant accessor returns an empty ***constrData#0***
   */
  get Unk() {
    const uplc = this.mkUplcData(
      { Unk: {} },
      "CapoHelpers::dgd_DataSrc.Unk"
    );
    return uplc;
  }
  /* tagOnly variant accessor */
  /**
   * generates  UplcData for ***"CapoHelpers::dgd_DataSrc.Input"***
   */
  Input(utxo) {
    const uplc = this.mkUplcData({
      Input: utxo
    }, "CapoHelpers::dgd_DataSrc.Input");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoHelpers::dgd_DataSrc.Output"***
   */
  Output(txo) {
    const uplc = this.mkUplcData({
      Output: txo
    }, "CapoHelpers::dgd_DataSrc.Output");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoHelpers::dgd_DataSrc.Both"***
   * @remarks - ***dgd_DataSrc$BothLike*** is the same as the expanded field-types.
   */
  Both(fields) {
    const uplc = this.mkUplcData({
      Both: fields
    }, "CapoHelpers::dgd_DataSrc.Both");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
}
class AbstractDelegateActivitiesEnumHelper extends EnumBridge {
  /*mkEnumHelperClass*/
  /**
          * @internal
          *  uses unicode U+1c7a - sorts to the end */
  "\u1C7A\u1C7Acast" = makeCast(
    AbstractDelegateActivitiesEnumSchema,
    { isMainnet: this.isMainnet, unwrapSingleFieldEnumVariants: true }
  );
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.SpendingActivities"***
   */
  SpendingActivities(activity) {
    const uplc = this.mkUplcData({
      SpendingActivities: activity
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.SpendingActivities");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.MintingActivities"***
   */
  MintingActivities(activity) {
    const uplc = this.mkUplcData({
      MintingActivities: activity
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.MintingActivities");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.BurningActivities"***
   */
  BurningActivities(activity) {
    const uplc = this.mkUplcData({
      BurningActivities: activity
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.BurningActivities");
    return uplc;
  }
  CreatingDelegatedData(seedOrUf, filteredFields) {
    if (filteredFields) {
      const seedTxOutputId = this.getSeed(seedOrUf);
      const uplc = this.mkUplcData({
        CreatingDelegatedData: { seed: seedTxOutputId, ...filteredFields }
      }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.CreatingDelegatedData");
      return uplc;
    } else {
      const fields = seedOrUf;
      const uplc = this.mkUplcData({
        CreatingDelegatedData: fields
      }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.CreatingDelegatedData");
      return uplc;
    }
  }
  /*multiFieldVariant/seeded enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.CreatingDelegatedData"***, 
   * @param fields - \{ dataType: string \}
   * @remarks
  * ##### Seeded activity
  * This activity  uses the pattern of spending a utxo to provide a uniqueness seed.
   * ##### Activity contains implied seed
   * Creates a SeedActivity based on the provided args, reserving space for a seed to be 
   * provided implicitly by a SeedActivity-supporting library function. 
   *
   * #### Usage
   *   1. Call the `$seeded$CreatingDelegatedData({ dataType })`
    *       method with the indicated (non-seed) details.
   *   2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's
   *       `mkTxnCreateRecord({activity})` method.
   */
  $seeded$CreatingDelegatedData = impliedSeedActivityMaker(
    this,
    this.CreatingDelegatedData
  );
  /* coda: seeded helper in same multiFieldVariant/seeded */
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.UpdatingDelegatedData"***
   * @remarks - ***AbstractDelegateActivitiesEnum$UpdatingDelegatedDataLike*** is the same as the expanded field-types.
   */
  UpdatingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      UpdatingDelegatedData: fields
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.UpdatingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.DeletingDelegatedData"***
   * @remarks - ***AbstractDelegateActivitiesEnum$DeletingDelegatedDataLike*** is the same as the expanded field-types.
   */
  DeletingDelegatedData(fields) {
    const uplc = this.mkUplcData({
      DeletingDelegatedData: fields
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.DeletingDelegatedData");
    return uplc;
  }
  /*multiFieldVariant enum accessor*/
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.MultipleDelegateActivities"***
   */
  MultipleDelegateActivities(activities) {
    const uplc = this.mkUplcData({
      MultipleDelegateActivities: activities
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.MultipleDelegateActivities");
    return uplc;
  }
  /**
   * generates  UplcData for ***"CapoDelegateHelpers::AbstractDelegateActivitiesEnum.OtherActivities"***
   */
  OtherActivities(activity) {
    const uplc = this.mkUplcData({
      OtherActivities: activity
    }, "CapoDelegateHelpers::AbstractDelegateActivitiesEnum.OtherActivities");
    return uplc;
  }
}
const AnyDataSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__StellarHeliosHelpers__AnyData[]",
  "name": "AnyData",
  "fieldTypes": [
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "@id"
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "tpe"
    }
  ]
};
const DelegationDetailSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
  "name": "DelegationDetail",
  "fieldTypes": [
    {
      "name": "capoAddr",
      "type": {
        "kind": "internal",
        "name": "Address"
      }
    },
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "tn",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const RelativeDelegateLinkSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
  "name": "RelativeDelegateLink",
  "fieldTypes": [
    {
      "name": "uutName",
      "type": {
        "kind": "internal",
        "name": "String"
      }
    },
    {
      "name": "delegateValidatorHash",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "internal",
          "name": "ValidatorHash"
        }
      }
    },
    {
      "name": "config",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    }
  ]
};
const VxfExpectedActivitySchema = {
  "kind": "enum",
  "name": "VxfExpectedActivity",
  "id": "__module__VxfProtocol__VxfExpectedActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 22104,
      "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
      "name": "VxfTransfer",
      "fieldTypes": [
        {
          "name": "appData",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 22106,
      "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
      "name": "VxfStorage",
      "fieldTypes": [
        {
          "name": "appData",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 22107,
      "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
      "name": "SpecificRedeemerId",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "inNestedList",
          "type": {
            "kind": "internal",
            "name": "Bool"
          }
        },
        {
          "name": "nestedListRedeemerId",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "Int"
            }
          }
        },
        {
          "name": "appData",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 22108,
      "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
      "name": "TaggedRedeemer",
      "fieldTypes": [
        {
          "name": "firstFieldConstrTag",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "inNestedList",
          "type": {
            "kind": "internal",
            "name": "Bool"
          }
        },
        {
          "name": "appData",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    }
  ]
};
const VxfDestinationSchema = {
  "kind": "enum",
  "name": "VxfDestination",
  "id": "__module__VxfProtocol__VxfDestination[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
      "name": "RelativeLink",
      "fieldTypes": [
        {
          "name": "link",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
            "name": "RelativeDelegateLink",
            "fieldTypes": [
              {
                "name": "uutName",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "delegateValidatorHash",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "internal",
                    "name": "ValidatorHash"
                  }
                }
              },
              {
                "name": "config",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        },
        {
          "name": "vxfActivity",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "enum",
              "name": "VxfExpectedActivity",
              "id": "__module__VxfProtocol__VxfExpectedActivity[]",
              "variantTypes": [
                {
                  "kind": "variant",
                  "tag": 22104,
                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                  "name": "VxfTransfer",
                  "fieldTypes": [
                    {
                      "name": "appData",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "Data"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 22106,
                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                  "name": "VxfStorage",
                  "fieldTypes": [
                    {
                      "name": "appData",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "Data"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 22107,
                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                  "name": "SpecificRedeemerId",
                  "fieldTypes": [
                    {
                      "name": "id",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      }
                    },
                    {
                      "name": "inNestedList",
                      "type": {
                        "kind": "internal",
                        "name": "Bool"
                      }
                    },
                    {
                      "name": "nestedListRedeemerId",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "Int"
                        }
                      }
                    },
                    {
                      "name": "appData",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "Data"
                        }
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 22108,
                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                  "name": "TaggedRedeemer",
                  "fieldTypes": [
                    {
                      "name": "firstFieldConstrTag",
                      "type": {
                        "kind": "internal",
                        "name": "Int"
                      }
                    },
                    {
                      "name": "inNestedList",
                      "type": {
                        "kind": "internal",
                        "name": "Bool"
                      }
                    },
                    {
                      "name": "appData",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "Data"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
      "name": "AnyTokenHolder",
      "fieldTypes": [
        {
          "name": "mph",
          "type": {
            "kind": "internal",
            "name": "MintingPolicyHash"
          }
        },
        {
          "name": "assetName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
      "name": "PubKey",
      "fieldTypes": [
        {
          "name": "pkh",
          "type": {
            "kind": "internal",
            "name": "PubKeyHash"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 98,
      "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
      "name": "Anywhere",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 99,
      "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
      "name": "NotYetDefined",
      "fieldTypes": []
    }
  ]
};
const VestingStateSchema = {
  "kind": "enum",
  "name": "VestingState",
  "id": "__module__VestingData__VestingState[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__VestingData__VestingState[]__Initializing",
      "name": "Initializing",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__VestingData__VestingState[]__VerifyingBeneficiary",
      "name": "VerifyingBeneficiary",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__VestingData__VestingState[]__Active",
      "name": "Active",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__VestingData__VestingState[]__Paused",
      "name": "Paused",
      "fieldTypes": [
        {
          "name": "reason",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "infoRef",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "AssetClass"
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__VestingData__VestingState[]__Closed",
      "name": "Closed",
      "fieldTypes": [
        {
          "name": "reason",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "infoRef",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "AssetClass"
            }
          }
        }
      ]
    }
  ]
};
const VestingFrequencySchema = {
  "kind": "enum",
  "name": "VestingFrequency",
  "id": "__module__VestingData__VestingFrequency[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__VestingData__VestingFrequency[]__Interval",
      "name": "Interval",
      "fieldTypes": [
        {
          "name": "interval",
          "type": {
            "kind": "internal",
            "name": "Duration"
          }
        },
        {
          "name": "count",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__VestingData__VestingFrequency[]__Continuous",
      "name": "Continuous",
      "fieldTypes": []
    }
  ]
};
const VestingProgressSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__VestingData__VestingProgress[]",
  "name": "VestingProgress",
  "fieldTypes": [
    {
      "name": "lastPartialMaturity",
      "type": {
        "kind": "internal",
        "name": "Time"
      }
    },
    {
      "name": "vestedValue",
      "type": {
        "kind": "internal",
        "name": "Value"
      }
    },
    {
      "name": "vestedFreqUnits",
      "type": {
        "kind": "internal",
        "name": "Real"
      }
    }
  ]
};
const VestingDetailsSchema = {
  "kind": "enum",
  "name": "VestingDetails",
  "id": "__module__VestingData__VestingDetails[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__VestingData__VestingDetails[]__Once",
      "name": "Once",
      "fieldTypes": [
        {
          "name": "totalValue",
          "type": {
            "kind": "internal",
            "name": "Value"
          }
        },
        {
          "name": "fullMaturity",
          "type": {
            "kind": "internal",
            "name": "Time"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__VestingData__VestingDetails[]__StraightLine",
      "name": "StraightLine",
      "fieldTypes": [
        {
          "name": "totalValue",
          "type": {
            "kind": "internal",
            "name": "Value"
          }
        },
        {
          "name": "fullMaturity",
          "type": {
            "kind": "internal",
            "name": "Time"
          }
        },
        {
          "name": "vestingStart",
          "type": {
            "kind": "internal",
            "name": "Time"
          }
        },
        {
          "name": "frequency",
          "type": {
            "kind": "enum",
            "name": "VestingFrequency",
            "id": "__module__VestingData__VestingFrequency[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__VestingData__VestingFrequency[]__Interval",
                "name": "Interval",
                "fieldTypes": [
                  {
                    "name": "interval",
                    "type": {
                      "kind": "internal",
                      "name": "Duration"
                    }
                  },
                  {
                    "name": "count",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__VestingData__VestingFrequency[]__Continuous",
                "name": "Continuous",
                "fieldTypes": []
              }
            ]
          }
        },
        {
          "name": "vestingProgress",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__VestingData__VestingProgress[]",
            "name": "VestingProgress",
            "fieldTypes": [
              {
                "name": "lastPartialMaturity",
                "type": {
                  "kind": "internal",
                  "name": "Time"
                }
              },
              {
                "name": "vestedValue",
                "type": {
                  "kind": "internal",
                  "name": "Value"
                }
              },
              {
                "name": "vestedFreqUnits",
                "type": {
                  "kind": "internal",
                  "name": "Real"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__VestingData__VestingDetails[]__SimpleContingency",
      "name": "SimpleContingency",
      "fieldTypes": [
        {
          "name": "totalValue",
          "type": {
            "kind": "internal",
            "name": "Value"
          }
        },
        {
          "name": "fullMaturity",
          "type": {
            "kind": "option",
            "someType": {
              "kind": "internal",
              "name": "Time"
            }
          }
        },
        {
          "name": "contingencyDescription",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "usesReqts",
          "type": {
            "kind": "internal",
            "name": "Bool"
          }
        }
      ]
    }
  ]
};
const VestingDataSchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__VestingData__VestingData[]",
  "name": "VestingData",
  "fieldTypes": [
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "@id"
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      },
      "key": "tpe"
    },
    {
      "name": "ownerToken",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "onrTkn"
    },
    {
      "name": "beneficiary",
      "type": {
        "kind": "enum",
        "name": "VxfDestination",
        "id": "__module__VxfProtocol__VxfDestination[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
            "name": "RelativeLink",
            "fieldTypes": [
              {
                "name": "link",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "vxfActivity",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "enum",
                    "name": "VxfExpectedActivity",
                    "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 22104,
                        "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                        "name": "VxfTransfer",
                        "fieldTypes": [
                          {
                            "name": "appData",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "Data"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 22106,
                        "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                        "name": "VxfStorage",
                        "fieldTypes": [
                          {
                            "name": "appData",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "Data"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 22107,
                        "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                        "name": "SpecificRedeemerId",
                        "fieldTypes": [
                          {
                            "name": "id",
                            "type": {
                              "kind": "internal",
                              "name": "Int"
                            }
                          },
                          {
                            "name": "inNestedList",
                            "type": {
                              "kind": "internal",
                              "name": "Bool"
                            }
                          },
                          {
                            "name": "nestedListRedeemerId",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          },
                          {
                            "name": "appData",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "Data"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 22108,
                        "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                        "name": "TaggedRedeemer",
                        "fieldTypes": [
                          {
                            "name": "firstFieldConstrTag",
                            "type": {
                              "kind": "internal",
                              "name": "Int"
                            }
                          },
                          {
                            "name": "inNestedList",
                            "type": {
                              "kind": "internal",
                              "name": "Bool"
                            }
                          },
                          {
                            "name": "appData",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "Data"
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
            "name": "AnyTokenHolder",
            "fieldTypes": [
              {
                "name": "mph",
                "type": {
                  "kind": "internal",
                  "name": "MintingPolicyHash"
                }
              },
              {
                "name": "assetName",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
            "name": "PubKey",
            "fieldTypes": [
              {
                "name": "pkh",
                "type": {
                  "kind": "internal",
                  "name": "PubKeyHash"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 98,
            "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
            "name": "Anywhere",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 99,
            "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
            "name": "NotYetDefined",
            "fieldTypes": []
          }
        ]
      },
      "key": "vxDst"
    },
    {
      "name": "state",
      "type": {
        "kind": "enum",
        "name": "VestingState",
        "id": "__module__VestingData__VestingState[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__VestingData__VestingState[]__Initializing",
            "name": "Initializing",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__VestingData__VestingState[]__VerifyingBeneficiary",
            "name": "VerifyingBeneficiary",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__VestingData__VestingState[]__Active",
            "name": "Active",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__VestingData__VestingState[]__Paused",
            "name": "Paused",
            "fieldTypes": [
              {
                "name": "reason",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "infoRef",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "internal",
                    "name": "AssetClass"
                  }
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__VestingData__VestingState[]__Closed",
            "name": "Closed",
            "fieldTypes": [
              {
                "name": "reason",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "infoRef",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "internal",
                    "name": "AssetClass"
                  }
                }
              }
            ]
          }
        ]
      },
      "key": "state"
    },
    {
      "name": "vestingDetails",
      "type": {
        "kind": "enum",
        "name": "VestingDetails",
        "id": "__module__VestingData__VestingDetails[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__VestingData__VestingDetails[]__Once",
            "name": "Once",
            "fieldTypes": [
              {
                "name": "totalValue",
                "type": {
                  "kind": "internal",
                  "name": "Value"
                }
              },
              {
                "name": "fullMaturity",
                "type": {
                  "kind": "internal",
                  "name": "Time"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__VestingData__VestingDetails[]__StraightLine",
            "name": "StraightLine",
            "fieldTypes": [
              {
                "name": "totalValue",
                "type": {
                  "kind": "internal",
                  "name": "Value"
                }
              },
              {
                "name": "fullMaturity",
                "type": {
                  "kind": "internal",
                  "name": "Time"
                }
              },
              {
                "name": "vestingStart",
                "type": {
                  "kind": "internal",
                  "name": "Time"
                }
              },
              {
                "name": "frequency",
                "type": {
                  "kind": "enum",
                  "name": "VestingFrequency",
                  "id": "__module__VestingData__VestingFrequency[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__VestingData__VestingFrequency[]__Interval",
                      "name": "Interval",
                      "fieldTypes": [
                        {
                          "name": "interval",
                          "type": {
                            "kind": "internal",
                            "name": "Duration"
                          }
                        },
                        {
                          "name": "count",
                          "type": {
                            "kind": "internal",
                            "name": "Int"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__VestingData__VestingFrequency[]__Continuous",
                      "name": "Continuous",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "vestingProgress",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__VestingData__VestingProgress[]",
                  "name": "VestingProgress",
                  "fieldTypes": [
                    {
                      "name": "lastPartialMaturity",
                      "type": {
                        "kind": "internal",
                        "name": "Time"
                      }
                    },
                    {
                      "name": "vestedValue",
                      "type": {
                        "kind": "internal",
                        "name": "Value"
                      }
                    },
                    {
                      "name": "vestedFreqUnits",
                      "type": {
                        "kind": "internal",
                        "name": "Real"
                      }
                    }
                  ]
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__VestingData__VestingDetails[]__SimpleContingency",
            "name": "SimpleContingency",
            "fieldTypes": [
              {
                "name": "totalValue",
                "type": {
                  "kind": "internal",
                  "name": "Value"
                }
              },
              {
                "name": "fullMaturity",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "internal",
                    "name": "Time"
                  }
                }
              },
              {
                "name": "contingencyDescription",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "usesReqts",
                "type": {
                  "kind": "internal",
                  "name": "Bool"
                }
              }
            ]
          }
        ]
      },
      "key": "dtls"
    }
  ]
};
const DelegateDatumSchema = {
  "kind": "enum",
  "name": "DelegateDatum",
  "id": "__module__VestingPolicy__DelegateDatum[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__VestingPolicy__DelegateDatum[]__Cip68RefToken",
      "name": "Cip68RefToken",
      "fieldTypes": [
        {
          "name": "cip68meta",
          "type": {
            "kind": "struct",
            "format": "map",
            "id": "__module__StellarHeliosHelpers__AnyData[]",
            "name": "AnyData",
            "fieldTypes": [
              {
                "name": "id",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "@id"
              },
              {
                "name": "type",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "tpe"
              }
            ]
          }
        },
        {
          "name": "cip68version",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "otherDetails",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__VestingPolicy__DelegateDatum[]__IsDelegation",
      "name": "IsDelegation",
      "fieldTypes": [
        {
          "name": "dd",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__DelegationDetail[]",
            "name": "DelegationDetail",
            "fieldTypes": [
              {
                "name": "capoAddr",
                "type": {
                  "kind": "internal",
                  "name": "Address"
                }
              },
              {
                "name": "mph",
                "type": {
                  "kind": "internal",
                  "name": "MintingPolicyHash"
                }
              },
              {
                "name": "tn",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__VestingPolicy__DelegateDatum[]__capoStoredData",
      "name": "capoStoredData",
      "fieldTypes": [
        {
          "name": "data",
          "type": {
            "kind": "struct",
            "format": "map",
            "id": "__module__VestingData__VestingData[]",
            "name": "VestingData",
            "fieldTypes": [
              {
                "name": "id",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "@id"
              },
              {
                "name": "type",
                "type": {
                  "kind": "internal",
                  "name": "String"
                },
                "key": "tpe"
              },
              {
                "name": "ownerToken",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                },
                "key": "onrTkn"
              },
              {
                "name": "beneficiary",
                "type": {
                  "kind": "enum",
                  "name": "VxfDestination",
                  "id": "__module__VxfProtocol__VxfDestination[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__VxfProtocol__VxfDestination[]__RelativeLink",
                      "name": "RelativeLink",
                      "fieldTypes": [
                        {
                          "name": "link",
                          "type": {
                            "kind": "struct",
                            "format": "list",
                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                            "name": "RelativeDelegateLink",
                            "fieldTypes": [
                              {
                                "name": "uutName",
                                "type": {
                                  "kind": "internal",
                                  "name": "String"
                                }
                              },
                              {
                                "name": "delegateValidatorHash",
                                "type": {
                                  "kind": "option",
                                  "someType": {
                                    "kind": "internal",
                                    "name": "ValidatorHash"
                                  }
                                }
                              },
                              {
                                "name": "config",
                                "type": {
                                  "kind": "internal",
                                  "name": "ByteArray"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "name": "vxfActivity",
                          "type": {
                            "kind": "option",
                            "someType": {
                              "kind": "enum",
                              "name": "VxfExpectedActivity",
                              "id": "__module__VxfProtocol__VxfExpectedActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 22104,
                                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer",
                                  "name": "VxfTransfer",
                                  "fieldTypes": [
                                    {
                                      "name": "appData",
                                      "type": {
                                        "kind": "option",
                                        "someType": {
                                          "kind": "internal",
                                          "name": "Data"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 22106,
                                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__VxfStorage",
                                  "name": "VxfStorage",
                                  "fieldTypes": [
                                    {
                                      "name": "appData",
                                      "type": {
                                        "kind": "option",
                                        "someType": {
                                          "kind": "internal",
                                          "name": "Data"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 22107,
                                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId",
                                  "name": "SpecificRedeemerId",
                                  "fieldTypes": [
                                    {
                                      "name": "id",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    },
                                    {
                                      "name": "inNestedList",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Bool"
                                      }
                                    },
                                    {
                                      "name": "nestedListRedeemerId",
                                      "type": {
                                        "kind": "option",
                                        "someType": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    },
                                    {
                                      "name": "appData",
                                      "type": {
                                        "kind": "option",
                                        "someType": {
                                          "kind": "internal",
                                          "name": "Data"
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 22108,
                                  "id": "__module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer",
                                  "name": "TaggedRedeemer",
                                  "fieldTypes": [
                                    {
                                      "name": "firstFieldConstrTag",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    },
                                    {
                                      "name": "inNestedList",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Bool"
                                      }
                                    },
                                    {
                                      "name": "appData",
                                      "type": {
                                        "kind": "option",
                                        "someType": {
                                          "kind": "internal",
                                          "name": "Data"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__VxfProtocol__VxfDestination[]__AnyTokenHolder",
                      "name": "AnyTokenHolder",
                      "fieldTypes": [
                        {
                          "name": "mph",
                          "type": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        },
                        {
                          "name": "assetName",
                          "type": {
                            "kind": "internal",
                            "name": "ByteArray"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__VxfProtocol__VxfDestination[]__PubKey",
                      "name": "PubKey",
                      "fieldTypes": [
                        {
                          "name": "pkh",
                          "type": {
                            "kind": "internal",
                            "name": "PubKeyHash"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 98,
                      "id": "__module__VxfProtocol__VxfDestination[]__Anywhere",
                      "name": "Anywhere",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 99,
                      "id": "__module__VxfProtocol__VxfDestination[]__NotYetDefined",
                      "name": "NotYetDefined",
                      "fieldTypes": []
                    }
                  ]
                },
                "key": "vxDst"
              },
              {
                "name": "state",
                "type": {
                  "kind": "enum",
                  "name": "VestingState",
                  "id": "__module__VestingData__VestingState[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__VestingData__VestingState[]__Initializing",
                      "name": "Initializing",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__VestingData__VestingState[]__VerifyingBeneficiary",
                      "name": "VerifyingBeneficiary",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__VestingData__VestingState[]__Active",
                      "name": "Active",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__VestingData__VestingState[]__Paused",
                      "name": "Paused",
                      "fieldTypes": [
                        {
                          "name": "reason",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "infoRef",
                          "type": {
                            "kind": "option",
                            "someType": {
                              "kind": "internal",
                              "name": "AssetClass"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__VestingData__VestingState[]__Closed",
                      "name": "Closed",
                      "fieldTypes": [
                        {
                          "name": "reason",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "infoRef",
                          "type": {
                            "kind": "option",
                            "someType": {
                              "kind": "internal",
                              "name": "AssetClass"
                            }
                          }
                        }
                      ]
                    }
                  ]
                },
                "key": "state"
              },
              {
                "name": "vestingDetails",
                "type": {
                  "kind": "enum",
                  "name": "VestingDetails",
                  "id": "__module__VestingData__VestingDetails[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__VestingData__VestingDetails[]__Once",
                      "name": "Once",
                      "fieldTypes": [
                        {
                          "name": "totalValue",
                          "type": {
                            "kind": "internal",
                            "name": "Value"
                          }
                        },
                        {
                          "name": "fullMaturity",
                          "type": {
                            "kind": "internal",
                            "name": "Time"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__VestingData__VestingDetails[]__StraightLine",
                      "name": "StraightLine",
                      "fieldTypes": [
                        {
                          "name": "totalValue",
                          "type": {
                            "kind": "internal",
                            "name": "Value"
                          }
                        },
                        {
                          "name": "fullMaturity",
                          "type": {
                            "kind": "internal",
                            "name": "Time"
                          }
                        },
                        {
                          "name": "vestingStart",
                          "type": {
                            "kind": "internal",
                            "name": "Time"
                          }
                        },
                        {
                          "name": "frequency",
                          "type": {
                            "kind": "enum",
                            "name": "VestingFrequency",
                            "id": "__module__VestingData__VestingFrequency[]",
                            "variantTypes": [
                              {
                                "kind": "variant",
                                "tag": 0,
                                "id": "__module__VestingData__VestingFrequency[]__Interval",
                                "name": "Interval",
                                "fieldTypes": [
                                  {
                                    "name": "interval",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Duration"
                                    }
                                  },
                                  {
                                    "name": "count",
                                    "type": {
                                      "kind": "internal",
                                      "name": "Int"
                                    }
                                  }
                                ]
                              },
                              {
                                "kind": "variant",
                                "tag": 1,
                                "id": "__module__VestingData__VestingFrequency[]__Continuous",
                                "name": "Continuous",
                                "fieldTypes": []
                              }
                            ]
                          }
                        },
                        {
                          "name": "vestingProgress",
                          "type": {
                            "kind": "struct",
                            "format": "list",
                            "id": "__module__VestingData__VestingProgress[]",
                            "name": "VestingProgress",
                            "fieldTypes": [
                              {
                                "name": "lastPartialMaturity",
                                "type": {
                                  "kind": "internal",
                                  "name": "Time"
                                }
                              },
                              {
                                "name": "vestedValue",
                                "type": {
                                  "kind": "internal",
                                  "name": "Value"
                                }
                              },
                              {
                                "name": "vestedFreqUnits",
                                "type": {
                                  "kind": "internal",
                                  "name": "Real"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__VestingData__VestingDetails[]__SimpleContingency",
                      "name": "SimpleContingency",
                      "fieldTypes": [
                        {
                          "name": "totalValue",
                          "type": {
                            "kind": "internal",
                            "name": "Value"
                          }
                        },
                        {
                          "name": "fullMaturity",
                          "type": {
                            "kind": "option",
                            "someType": {
                              "kind": "internal",
                              "name": "Time"
                            }
                          }
                        },
                        {
                          "name": "contingencyDescription",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "usesReqts",
                          "type": {
                            "kind": "internal",
                            "name": "Bool"
                          }
                        }
                      ]
                    }
                  ]
                },
                "key": "dtls"
              }
            ]
          }
        },
        {
          "name": "version",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        },
        {
          "name": "otherDetails",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    }
  ]
};
const DelegateRoleSchema = {
  "kind": "enum",
  "name": "DelegateRole",
  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
      "name": "MintDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
      "name": "SpendDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
      "name": "MintInvariant",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
      "name": "SpendInvariant",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
      "name": "DgDataPolicy",
      "fieldTypes": [
        {
          "name": "name",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
      "name": "OtherNamedDgt",
      "fieldTypes": [
        {
          "name": "name",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
      "name": "BothMintAndSpendDgt",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
      "name": "HandledByCapoOnly",
      "fieldTypes": []
    }
  ]
};
const ManifestActivitySchema = {
  "kind": "enum",
  "name": "ManifestActivity",
  "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
      "name": "retiringEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
      "name": "updatingEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
      "name": "addingEntry",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "tokenName",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
      "name": "forkingThreadToken",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "newThreadCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
      "name": "burningThreadToken",
      "fieldTypes": [
        {
          "name": "key",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "burnedThreadCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    }
  ]
};
const CapoLifecycleActivitySchema = {
  "kind": "enum",
  "name": "CapoLifecycleActivity",
  "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
      "name": "CreatingDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
      "name": "queuePendingChange",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
      "name": "removePendingChange",
      "fieldTypes": [
        {
          "name": "role",
          "type": {
            "kind": "enum",
            "name": "DelegateRole",
            "id": "__module__CapoDelegateHelpers__DelegateRole[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                "name": "MintDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                "name": "SpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                "name": "MintInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                "name": "SpendInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                "name": "DgDataPolicy",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                "name": "OtherNamedDgt",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                "name": "BothMintAndSpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                "name": "HandledByCapoOnly",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
      "name": "commitPendingChanges",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
      "name": "forcingNewSpendDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
      "name": "forcingNewMintDelegate",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
      "name": "updatingManifest",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "ManifestActivity",
            "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                "name": "retiringEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                "name": "updatingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                "name": "addingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                "name": "forkingThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "newThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                "name": "burningThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "burnedThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  ]
};
const DelegateLifecycleActivitySchema = {
  "kind": "enum",
  "name": "DelegateLifecycleActivity",
  "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
      "name": "ReplacingMe",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
      "name": "Retiring",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
      "name": "ValidatingSettings",
      "fieldTypes": []
    }
  ]
};
const SpendingActivitySchema = {
  "kind": "enum",
  "name": "SpendingActivity",
  "id": "__module__VestingPolicy__SpendingActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__VestingPolicy__SpendingActivity[]__UpdatingRecord",
      "name": "UpdatingRecord",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__VestingPolicy__SpendingActivity[]__SwitchToVerifying",
      "name": "SwitchToVerifying",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary",
      "name": "VerifyingBeneficiary",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__VestingPolicy__SpendingActivity[]__Activating",
      "name": "Activating",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__VestingPolicy__SpendingActivity[]__Withdrawing",
      "name": "Withdrawing",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        },
        {
          "name": "value",
          "type": {
            "kind": "internal",
            "name": "Value"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__VestingPolicy__SpendingActivity[]__Pausing",
      "name": "Pausing",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__VestingPolicy__SpendingActivity[]__Resuming",
      "name": "Resuming",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__VestingPolicy__SpendingActivity[]__Closing",
      "name": "Closing",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    }
  ]
};
const MintingActivitySchema = {
  "kind": "enum",
  "name": "MintingActivity",
  "id": "__module__VestingPolicy__MintingActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__VestingPolicy__MintingActivity[]__CreatingRecord",
      "name": "CreatingRecord",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        }
      ]
    }
  ]
};
const BurningActivitySchema = {
  "kind": "enum",
  "name": "BurningActivity",
  "id": "__module__VestingPolicy__BurningActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__VestingPolicy__BurningActivity[]__DeletingRecord",
      "name": "DeletingRecord",
      "fieldTypes": [
        {
          "name": "id",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    }
  ]
};
const DelegateActivitySchema = {
  "kind": "enum",
  "name": "DelegateActivity",
  "id": "__module__VestingPolicy__DelegateActivity[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities",
      "name": "CapoLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "CapoLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
                "name": "CreatingDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
                "name": "queuePendingChange",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
                "name": "removePendingChange",
                "fieldTypes": [
                  {
                    "name": "role",
                    "type": {
                      "kind": "enum",
                      "name": "DelegateRole",
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                          "name": "MintDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                          "name": "SpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                          "name": "MintInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                          "name": "SpendInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                          "name": "DgDataPolicy",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 5,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                          "name": "OtherNamedDgt",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 6,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                          "name": "BothMintAndSpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 7,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                          "name": "HandledByCapoOnly",
                          "fieldTypes": []
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
                "name": "commitPendingChanges",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
                "name": "forcingNewSpendDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
                "name": "forcingNewMintDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
                "name": "updatingManifest",
                "fieldTypes": [
                  {
                    "name": "activity",
                    "type": {
                      "kind": "enum",
                      "name": "ManifestActivity",
                      "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                          "name": "retiringEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                          "name": "updatingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                          "name": "addingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                          "name": "forkingThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "newThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                          "name": "burningThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "burnedThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities",
      "name": "DelegateLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "DelegateLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
                "name": "ReplacingMe",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
                "name": "Retiring",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
                "name": "ValidatingSettings",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__VestingPolicy__DelegateActivity[]__SpendingActivities",
      "name": "SpendingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "SpendingActivity",
            "id": "__module__VestingPolicy__SpendingActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__VestingPolicy__SpendingActivity[]__UpdatingRecord",
                "name": "UpdatingRecord",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__VestingPolicy__SpendingActivity[]__SwitchToVerifying",
                "name": "SwitchToVerifying",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary",
                "name": "VerifyingBeneficiary",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__VestingPolicy__SpendingActivity[]__Activating",
                "name": "Activating",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__VestingPolicy__SpendingActivity[]__Withdrawing",
                "name": "Withdrawing",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  },
                  {
                    "name": "value",
                    "type": {
                      "kind": "internal",
                      "name": "Value"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__VestingPolicy__SpendingActivity[]__Pausing",
                "name": "Pausing",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__VestingPolicy__SpendingActivity[]__Resuming",
                "name": "Resuming",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__VestingPolicy__SpendingActivity[]__Closing",
                "name": "Closing",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__VestingPolicy__DelegateActivity[]__MintingActivities",
      "name": "MintingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "MintingActivity",
            "id": "__module__VestingPolicy__MintingActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__VestingPolicy__MintingActivity[]__CreatingRecord",
                "name": "CreatingRecord",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__VestingPolicy__DelegateActivity[]__BurningActivities",
      "name": "BurningActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "BurningActivity",
            "id": "__module__VestingPolicy__BurningActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__VestingPolicy__BurningActivity[]__DeletingRecord",
                "name": "DeletingRecord",
                "fieldTypes": [
                  {
                    "name": "id",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData",
      "name": "CreatingDelegatedData",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData",
      "name": "UpdatingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData",
      "name": "DeletingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 8,
      "id": "__module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities",
      "name": "MultipleDelegateActivities",
      "fieldTypes": [
        {
          "name": "activities",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 9,
      "id": "__module__VestingPolicy__DelegateActivity[]__OtherActivities",
      "name": "OtherActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    }
  ]
};
const PendingDelegateActionSchema = {
  "kind": "enum",
  "name": "PendingDelegateAction",
  "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
      "name": "Add",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
      "name": "Remove",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
      "name": "Replace",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "purpose",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "replacesDgt",
          "type": {
            "kind": "internal",
            "name": "AssetClass"
          }
        }
      ]
    }
  ]
};
const PendingDelegateChangeSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
  "name": "PendingDelegateChange",
  "fieldTypes": [
    {
      "name": "action",
      "type": {
        "kind": "enum",
        "name": "PendingDelegateAction",
        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
            "name": "Add",
            "fieldTypes": [
              {
                "name": "seed",
                "type": {
                  "kind": "internal",
                  "name": "TxOutputId"
                }
              },
              {
                "name": "purpose",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
            "name": "Remove",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
            "name": "Replace",
            "fieldTypes": [
              {
                "name": "seed",
                "type": {
                  "kind": "internal",
                  "name": "TxOutputId"
                }
              },
              {
                "name": "purpose",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "replacesDgt",
                "type": {
                  "kind": "internal",
                  "name": "AssetClass"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "role",
      "type": {
        "kind": "enum",
        "name": "DelegateRole",
        "id": "__module__CapoDelegateHelpers__DelegateRole[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
            "name": "MintDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
            "name": "SpendDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
            "name": "MintInvariant",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
            "name": "SpendInvariant",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
            "name": "DgDataPolicy",
            "fieldTypes": [
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 5,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
            "name": "OtherNamedDgt",
            "fieldTypes": [
              {
                "name": "name",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 6,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
            "name": "BothMintAndSpendDgt",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 7,
            "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
            "name": "HandledByCapoOnly",
            "fieldTypes": []
          }
        ]
      }
    },
    {
      "name": "dgtLink",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "struct",
          "format": "list",
          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
          "name": "RelativeDelegateLink",
          "fieldTypes": [
            {
              "name": "uutName",
              "type": {
                "kind": "internal",
                "name": "String"
              }
            },
            {
              "name": "delegateValidatorHash",
              "type": {
                "kind": "option",
                "someType": {
                  "kind": "internal",
                  "name": "ValidatorHash"
                }
              }
            },
            {
              "name": "config",
              "type": {
                "kind": "internal",
                "name": "ByteArray"
              }
            }
          ]
        }
      }
    }
  ]
};
const ManifestEntryTypeSchema = {
  "kind": "enum",
  "name": "ManifestEntryType",
  "id": "__module__CapoHelpers__ManifestEntryType[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
      "name": "NamedTokenRef",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
      "name": "DgDataPolicy",
      "fieldTypes": [
        {
          "name": "policyLink",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
            "name": "RelativeDelegateLink",
            "fieldTypes": [
              {
                "name": "uutName",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "delegateValidatorHash",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "internal",
                    "name": "ValidatorHash"
                  }
                }
              },
              {
                "name": "config",
                "type": {
                  "kind": "internal",
                  "name": "ByteArray"
                }
              }
            ]
          }
        },
        {
          "name": "idPrefix",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "refCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
      "name": "DelegateThreads",
      "fieldTypes": [
        {
          "name": "role",
          "type": {
            "kind": "enum",
            "name": "DelegateRole",
            "id": "__module__CapoDelegateHelpers__DelegateRole[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                "name": "MintDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                "name": "SpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                "name": "MintInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                "name": "SpendInvariant",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                "name": "DgDataPolicy",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                "name": "OtherNamedDgt",
                "fieldTypes": [
                  {
                    "name": "name",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                "name": "BothMintAndSpendDgt",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 7,
                "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                "name": "HandledByCapoOnly",
                "fieldTypes": []
              }
            ]
          }
        },
        {
          "name": "refCount",
          "type": {
            "kind": "internal",
            "name": "Int"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
      "name": "MerkleMembership",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
      "name": "MerkleStateRoot",
      "fieldTypes": []
    }
  ]
};
const CapoManifestEntrySchema = {
  "kind": "struct",
  "format": "map",
  "id": "__module__CapoHelpers__CapoManifestEntry[]",
  "name": "CapoManifestEntry",
  "fieldTypes": [
    {
      "name": "entryType",
      "type": {
        "kind": "enum",
        "name": "ManifestEntryType",
        "id": "__module__CapoHelpers__ManifestEntryType[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
            "name": "NamedTokenRef",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
            "name": "DgDataPolicy",
            "fieldTypes": [
              {
                "name": "policyLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "idPrefix",
                "type": {
                  "kind": "internal",
                  "name": "String"
                }
              },
              {
                "name": "refCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
            "name": "DelegateThreads",
            "fieldTypes": [
              {
                "name": "role",
                "type": {
                  "kind": "enum",
                  "name": "DelegateRole",
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                      "name": "MintDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                      "name": "SpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                      "name": "MintInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                      "name": "SpendInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                      "name": "DgDataPolicy",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 5,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                      "name": "OtherNamedDgt",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 6,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                      "name": "BothMintAndSpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 7,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                      "name": "HandledByCapoOnly",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "refCount",
                "type": {
                  "kind": "internal",
                  "name": "Int"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
            "name": "MerkleMembership",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 4,
            "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
            "name": "MerkleStateRoot",
            "fieldTypes": []
          }
        ]
      },
      "key": "tpe"
    },
    {
      "name": "tokenName",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      },
      "key": "tn"
    },
    {
      "name": "mph",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "internal",
          "name": "MintingPolicyHash"
        }
      }
    }
  ]
};
const PendingCharterChangeSchema = {
  "kind": "enum",
  "name": "PendingCharterChange",
  "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
      "name": "delegateChange",
      "fieldTypes": [
        {
          "name": "change",
          "type": {
            "kind": "struct",
            "format": "list",
            "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
            "name": "PendingDelegateChange",
            "fieldTypes": [
              {
                "name": "action",
                "type": {
                  "kind": "enum",
                  "name": "PendingDelegateAction",
                  "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                      "name": "Add",
                      "fieldTypes": [
                        {
                          "name": "seed",
                          "type": {
                            "kind": "internal",
                            "name": "TxOutputId"
                          }
                        },
                        {
                          "name": "purpose",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "idPrefix",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                      "name": "Remove",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                      "name": "Replace",
                      "fieldTypes": [
                        {
                          "name": "seed",
                          "type": {
                            "kind": "internal",
                            "name": "TxOutputId"
                          }
                        },
                        {
                          "name": "purpose",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "idPrefix",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        },
                        {
                          "name": "replacesDgt",
                          "type": {
                            "kind": "internal",
                            "name": "AssetClass"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              {
                "name": "role",
                "type": {
                  "kind": "enum",
                  "name": "DelegateRole",
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                  "variantTypes": [
                    {
                      "kind": "variant",
                      "tag": 0,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                      "name": "MintDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 1,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                      "name": "SpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 2,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                      "name": "MintInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 3,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                      "name": "SpendInvariant",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 4,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                      "name": "DgDataPolicy",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 5,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                      "name": "OtherNamedDgt",
                      "fieldTypes": [
                        {
                          "name": "name",
                          "type": {
                            "kind": "internal",
                            "name": "String"
                          }
                        }
                      ]
                    },
                    {
                      "kind": "variant",
                      "tag": 6,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                      "name": "BothMintAndSpendDgt",
                      "fieldTypes": []
                    },
                    {
                      "kind": "variant",
                      "tag": 7,
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                      "name": "HandledByCapoOnly",
                      "fieldTypes": []
                    }
                  ]
                }
              },
              {
                "name": "dgtLink",
                "type": {
                  "kind": "option",
                  "someType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
      "name": "otherManifestChange",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "ManifestActivity",
            "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                "name": "retiringEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                "name": "updatingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                "name": "addingEntry",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "tokenName",
                    "type": {
                      "kind": "internal",
                      "name": "ByteArray"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                "name": "forkingThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "newThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                "name": "burningThreadToken",
                "fieldTypes": [
                  {
                    "name": "key",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  },
                  {
                    "name": "burnedThreadCount",
                    "type": {
                      "kind": "internal",
                      "name": "Int"
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "name": "remainingDelegateValidations",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "enum",
              "name": "DelegateRole",
              "id": "__module__CapoDelegateHelpers__DelegateRole[]",
              "variantTypes": [
                {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                  "name": "MintDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 1,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                  "name": "SpendDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 2,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                  "name": "MintInvariant",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 3,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                  "name": "SpendInvariant",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 4,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                  "name": "DgDataPolicy",
                  "fieldTypes": [
                    {
                      "name": "name",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 5,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                  "name": "OtherNamedDgt",
                  "fieldTypes": [
                    {
                      "name": "name",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    }
                  ]
                },
                {
                  "kind": "variant",
                  "tag": 6,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                  "name": "BothMintAndSpendDgt",
                  "fieldTypes": []
                },
                {
                  "kind": "variant",
                  "tag": 7,
                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                  "name": "HandledByCapoOnly",
                  "fieldTypes": []
                }
              ]
            }
          }
        }
      ]
    }
  ]
};
const cctx_CharterInputTypeSchema = {
  "kind": "enum",
  "name": "cctx_CharterInputType",
  "id": "__module__CapoHelpers__cctx_CharterInputType[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__Unk",
      "name": "Unk",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__RefInput",
      "name": "RefInput",
      "fieldTypes": [
        {
          "name": "datum",
          "type": {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
            "name": "CharterData",
            "fieldTypes": [
              {
                "name": "spendDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "spendInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "otherNamedDelegates",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "mintDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "mintInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "govAuthorityLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "manifest",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "map",
                    "id": "__module__CapoHelpers__CapoManifestEntry[]",
                    "name": "CapoManifestEntry",
                    "fieldTypes": [
                      {
                        "name": "entryType",
                        "type": {
                          "kind": "enum",
                          "name": "ManifestEntryType",
                          "id": "__module__CapoHelpers__ManifestEntryType[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                              "name": "NamedTokenRef",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                              "name": "DgDataPolicy",
                              "fieldTypes": [
                                {
                                  "name": "policyLink",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "idPrefix",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                              "name": "DelegateThreads",
                              "fieldTypes": [
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 3,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                              "name": "MerkleMembership",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 4,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                              "name": "MerkleStateRoot",
                              "fieldTypes": []
                            }
                          ]
                        },
                        "key": "tpe"
                      },
                      {
                        "name": "tokenName",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        },
                        "key": "tn"
                      },
                      {
                        "name": "mph",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "pendingChanges",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "enum",
                    "name": "PendingCharterChange",
                    "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                        "name": "delegateChange",
                        "fieldTypes": [
                          {
                            "name": "change",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                              "name": "PendingDelegateChange",
                              "fieldTypes": [
                                {
                                  "name": "action",
                                  "type": {
                                    "kind": "enum",
                                    "name": "PendingDelegateAction",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                        "name": "Add",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                        "name": "Remove",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                        "name": "Replace",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "replacesDgt",
                                            "type": {
                                              "kind": "internal",
                                              "name": "AssetClass"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "dgtLink",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "struct",
                                      "format": "list",
                                      "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                      "name": "RelativeDelegateLink",
                                      "fieldTypes": [
                                        {
                                          "name": "uutName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "String"
                                          }
                                        },
                                        {
                                          "name": "delegateValidatorHash",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "internal",
                                              "name": "ValidatorHash"
                                            }
                                          }
                                        },
                                        {
                                          "name": "config",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                        "name": "otherManifestChange",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "name": "remainingDelegateValidations",
                            "type": {
                              "kind": "list",
                              "itemType": {
                                "kind": "enum",
                                "name": "DelegateRole",
                                "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                    "name": "MintDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                    "name": "SpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                    "name": "MintInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                    "name": "SpendInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 5,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                    "name": "OtherNamedDgt",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 6,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                    "name": "BothMintAndSpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 7,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                    "name": "HandledByCapoOnly",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__cctx_CharterInputType[]__Input",
      "name": "Input",
      "fieldTypes": [
        {
          "name": "datum",
          "type": {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
            "name": "CharterData",
            "fieldTypes": [
              {
                "name": "spendDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "spendInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "otherNamedDelegates",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "mintDelegateLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "mintInvariants",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "struct",
                    "format": "list",
                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                    "name": "RelativeDelegateLink",
                    "fieldTypes": [
                      {
                        "name": "uutName",
                        "type": {
                          "kind": "internal",
                          "name": "String"
                        }
                      },
                      {
                        "name": "delegateValidatorHash",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "ValidatorHash"
                          }
                        }
                      },
                      {
                        "name": "config",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "govAuthorityLink",
                "type": {
                  "kind": "struct",
                  "format": "list",
                  "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                  "name": "RelativeDelegateLink",
                  "fieldTypes": [
                    {
                      "name": "uutName",
                      "type": {
                        "kind": "internal",
                        "name": "String"
                      }
                    },
                    {
                      "name": "delegateValidatorHash",
                      "type": {
                        "kind": "option",
                        "someType": {
                          "kind": "internal",
                          "name": "ValidatorHash"
                        }
                      }
                    },
                    {
                      "name": "config",
                      "type": {
                        "kind": "internal",
                        "name": "ByteArray"
                      }
                    }
                  ]
                }
              },
              {
                "name": "manifest",
                "type": {
                  "kind": "map",
                  "keyType": {
                    "kind": "internal",
                    "name": "String"
                  },
                  "valueType": {
                    "kind": "struct",
                    "format": "map",
                    "id": "__module__CapoHelpers__CapoManifestEntry[]",
                    "name": "CapoManifestEntry",
                    "fieldTypes": [
                      {
                        "name": "entryType",
                        "type": {
                          "kind": "enum",
                          "name": "ManifestEntryType",
                          "id": "__module__CapoHelpers__ManifestEntryType[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                              "name": "NamedTokenRef",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                              "name": "DgDataPolicy",
                              "fieldTypes": [
                                {
                                  "name": "policyLink",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                    "name": "RelativeDelegateLink",
                                    "fieldTypes": [
                                      {
                                        "name": "uutName",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "delegateValidatorHash",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "internal",
                                            "name": "ValidatorHash"
                                          }
                                        }
                                      },
                                      {
                                        "name": "config",
                                        "type": {
                                          "kind": "internal",
                                          "name": "ByteArray"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "idPrefix",
                                  "type": {
                                    "kind": "internal",
                                    "name": "String"
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 2,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                              "name": "DelegateThreads",
                              "fieldTypes": [
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "refCount",
                                  "type": {
                                    "kind": "internal",
                                    "name": "Int"
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 3,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                              "name": "MerkleMembership",
                              "fieldTypes": []
                            },
                            {
                              "kind": "variant",
                              "tag": 4,
                              "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                              "name": "MerkleStateRoot",
                              "fieldTypes": []
                            }
                          ]
                        },
                        "key": "tpe"
                      },
                      {
                        "name": "tokenName",
                        "type": {
                          "kind": "internal",
                          "name": "ByteArray"
                        },
                        "key": "tn"
                      },
                      {
                        "name": "mph",
                        "type": {
                          "kind": "option",
                          "someType": {
                            "kind": "internal",
                            "name": "MintingPolicyHash"
                          }
                        }
                      }
                    ]
                  }
                }
              },
              {
                "name": "pendingChanges",
                "type": {
                  "kind": "list",
                  "itemType": {
                    "kind": "enum",
                    "name": "PendingCharterChange",
                    "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                        "name": "delegateChange",
                        "fieldTypes": [
                          {
                            "name": "change",
                            "type": {
                              "kind": "struct",
                              "format": "list",
                              "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                              "name": "PendingDelegateChange",
                              "fieldTypes": [
                                {
                                  "name": "action",
                                  "type": {
                                    "kind": "enum",
                                    "name": "PendingDelegateAction",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                        "name": "Add",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                        "name": "Remove",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                        "name": "Replace",
                                        "fieldTypes": [
                                          {
                                            "name": "seed",
                                            "type": {
                                              "kind": "internal",
                                              "name": "TxOutputId"
                                            }
                                          },
                                          {
                                            "name": "purpose",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "idPrefix",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "replacesDgt",
                                            "type": {
                                              "kind": "internal",
                                              "name": "AssetClass"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "role",
                                  "type": {
                                    "kind": "enum",
                                    "name": "DelegateRole",
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                        "name": "MintDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                        "name": "SpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                        "name": "MintInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                        "name": "SpendInvariant",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                        "name": "DgDataPolicy",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 5,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                        "name": "OtherNamedDgt",
                                        "fieldTypes": [
                                          {
                                            "name": "name",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 6,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                        "name": "BothMintAndSpendDgt",
                                        "fieldTypes": []
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 7,
                                        "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                        "name": "HandledByCapoOnly",
                                        "fieldTypes": []
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "dgtLink",
                                  "type": {
                                    "kind": "option",
                                    "someType": {
                                      "kind": "struct",
                                      "format": "list",
                                      "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                      "name": "RelativeDelegateLink",
                                      "fieldTypes": [
                                        {
                                          "name": "uutName",
                                          "type": {
                                            "kind": "internal",
                                            "name": "String"
                                          }
                                        },
                                        {
                                          "name": "delegateValidatorHash",
                                          "type": {
                                            "kind": "option",
                                            "someType": {
                                              "kind": "internal",
                                              "name": "ValidatorHash"
                                            }
                                          }
                                        },
                                        {
                                          "name": "config",
                                          "type": {
                                            "kind": "internal",
                                            "name": "ByteArray"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                        "name": "otherManifestChange",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "name": "remainingDelegateValidations",
                            "type": {
                              "kind": "list",
                              "itemType": {
                                "kind": "enum",
                                "name": "DelegateRole",
                                "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                    "name": "MintDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                    "name": "SpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                    "name": "MintInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                    "name": "SpendInvariant",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 5,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                    "name": "OtherNamedDgt",
                                    "fieldTypes": [
                                      {
                                        "name": "name",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 6,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                    "name": "BothMintAndSpendDgt",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 7,
                                    "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                    "name": "HandledByCapoOnly",
                                    "fieldTypes": []
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    }
  ]
};
const CapoCtxSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoHelpers__CapoCtx[]",
  "name": "CapoCtx",
  "fieldTypes": [
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "charter",
      "type": {
        "kind": "enum",
        "name": "cctx_CharterInputType",
        "id": "__module__CapoHelpers__cctx_CharterInputType[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__Unk",
            "name": "Unk",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__RefInput",
            "name": "RefInput",
            "fieldTypes": [
              {
                "name": "datum",
                "type": {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
                  "name": "CharterData",
                  "fieldTypes": [
                    {
                      "name": "spendDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "spendInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "otherNamedDelegates",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "mintDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "mintInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "govAuthorityLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "manifest",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "map",
                          "id": "__module__CapoHelpers__CapoManifestEntry[]",
                          "name": "CapoManifestEntry",
                          "fieldTypes": [
                            {
                              "name": "entryType",
                              "type": {
                                "kind": "enum",
                                "name": "ManifestEntryType",
                                "id": "__module__CapoHelpers__ManifestEntryType[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                                    "name": "NamedTokenRef",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "policyLink",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "idPrefix",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                                    "name": "DelegateThreads",
                                    "fieldTypes": [
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                                    "name": "MerkleMembership",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                                    "name": "MerkleStateRoot",
                                    "fieldTypes": []
                                  }
                                ]
                              },
                              "key": "tpe"
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              },
                              "key": "tn"
                            },
                            {
                              "name": "mph",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "pendingChanges",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "PendingCharterChange",
                          "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                              "name": "delegateChange",
                              "fieldTypes": [
                                {
                                  "name": "change",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                                    "name": "PendingDelegateChange",
                                    "fieldTypes": [
                                      {
                                        "name": "action",
                                        "type": {
                                          "kind": "enum",
                                          "name": "PendingDelegateAction",
                                          "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                              "name": "Add",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                              "name": "Remove",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                              "name": "Replace",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "replacesDgt",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "AssetClass"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "dgtLink",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                              "name": "otherManifestChange",
                              "fieldTypes": [
                                {
                                  "name": "activity",
                                  "type": {
                                    "kind": "enum",
                                    "name": "ManifestActivity",
                                    "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                        "name": "retiringEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                        "name": "updatingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                        "name": "addingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                        "name": "forkingThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "newThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                        "name": "burningThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "burnedThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "remainingDelegateValidations",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "DelegateRole",
                                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                          "name": "MintDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                          "name": "SpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                          "name": "MintInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 3,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                          "name": "SpendInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 4,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                          "name": "DgDataPolicy",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 5,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                          "name": "OtherNamedDgt",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 6,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                          "name": "BothMintAndSpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 7,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                          "name": "HandledByCapoOnly",
                                          "fieldTypes": []
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__cctx_CharterInputType[]__Input",
            "name": "Input",
            "fieldTypes": [
              {
                "name": "datum",
                "type": {
                  "kind": "variant",
                  "tag": 0,
                  "id": "__module__CapoHelpers__CapoDatum[]__CharterData",
                  "name": "CharterData",
                  "fieldTypes": [
                    {
                      "name": "spendDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "spendInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "otherNamedDelegates",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "mintDelegateLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "mintInvariants",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "struct",
                          "format": "list",
                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                          "name": "RelativeDelegateLink",
                          "fieldTypes": [
                            {
                              "name": "uutName",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "delegateValidatorHash",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "ValidatorHash"
                                }
                              }
                            },
                            {
                              "name": "config",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "govAuthorityLink",
                      "type": {
                        "kind": "struct",
                        "format": "list",
                        "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                        "name": "RelativeDelegateLink",
                        "fieldTypes": [
                          {
                            "name": "uutName",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          },
                          {
                            "name": "delegateValidatorHash",
                            "type": {
                              "kind": "option",
                              "someType": {
                                "kind": "internal",
                                "name": "ValidatorHash"
                              }
                            }
                          },
                          {
                            "name": "config",
                            "type": {
                              "kind": "internal",
                              "name": "ByteArray"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "manifest",
                      "type": {
                        "kind": "map",
                        "keyType": {
                          "kind": "internal",
                          "name": "String"
                        },
                        "valueType": {
                          "kind": "struct",
                          "format": "map",
                          "id": "__module__CapoHelpers__CapoManifestEntry[]",
                          "name": "CapoManifestEntry",
                          "fieldTypes": [
                            {
                              "name": "entryType",
                              "type": {
                                "kind": "enum",
                                "name": "ManifestEntryType",
                                "id": "__module__CapoHelpers__ManifestEntryType[]",
                                "variantTypes": [
                                  {
                                    "kind": "variant",
                                    "tag": 0,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef",
                                    "name": "NamedTokenRef",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 1,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DgDataPolicy",
                                    "name": "DgDataPolicy",
                                    "fieldTypes": [
                                      {
                                        "name": "policyLink",
                                        "type": {
                                          "kind": "struct",
                                          "format": "list",
                                          "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                          "name": "RelativeDelegateLink",
                                          "fieldTypes": [
                                            {
                                              "name": "uutName",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            },
                                            {
                                              "name": "delegateValidatorHash",
                                              "type": {
                                                "kind": "option",
                                                "someType": {
                                                  "kind": "internal",
                                                  "name": "ValidatorHash"
                                                }
                                              }
                                            },
                                            {
                                              "name": "config",
                                              "type": {
                                                "kind": "internal",
                                                "name": "ByteArray"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "idPrefix",
                                        "type": {
                                          "kind": "internal",
                                          "name": "String"
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 2,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__DelegateThreads",
                                    "name": "DelegateThreads",
                                    "fieldTypes": [
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "refCount",
                                        "type": {
                                          "kind": "internal",
                                          "name": "Int"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 3,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleMembership",
                                    "name": "MerkleMembership",
                                    "fieldTypes": []
                                  },
                                  {
                                    "kind": "variant",
                                    "tag": 4,
                                    "id": "__module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot",
                                    "name": "MerkleStateRoot",
                                    "fieldTypes": []
                                  }
                                ]
                              },
                              "key": "tpe"
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              },
                              "key": "tn"
                            },
                            {
                              "name": "mph",
                              "type": {
                                "kind": "option",
                                "someType": {
                                  "kind": "internal",
                                  "name": "MintingPolicyHash"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "name": "pendingChanges",
                      "type": {
                        "kind": "list",
                        "itemType": {
                          "kind": "enum",
                          "name": "PendingCharterChange",
                          "id": "__module__CapoDelegateHelpers__PendingCharterChange[]",
                          "variantTypes": [
                            {
                              "kind": "variant",
                              "tag": 0,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange",
                              "name": "delegateChange",
                              "fieldTypes": [
                                {
                                  "name": "change",
                                  "type": {
                                    "kind": "struct",
                                    "format": "list",
                                    "id": "__module__CapoDelegateHelpers__PendingDelegateChange[]",
                                    "name": "PendingDelegateChange",
                                    "fieldTypes": [
                                      {
                                        "name": "action",
                                        "type": {
                                          "kind": "enum",
                                          "name": "PendingDelegateAction",
                                          "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Add",
                                              "name": "Add",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Remove",
                                              "name": "Remove",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__PendingDelegateAction[]__Replace",
                                              "name": "Replace",
                                              "fieldTypes": [
                                                {
                                                  "name": "seed",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "TxOutputId"
                                                  }
                                                },
                                                {
                                                  "name": "purpose",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "idPrefix",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                },
                                                {
                                                  "name": "replacesDgt",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "AssetClass"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "role",
                                        "type": {
                                          "kind": "enum",
                                          "name": "DelegateRole",
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                          "variantTypes": [
                                            {
                                              "kind": "variant",
                                              "tag": 0,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                              "name": "MintDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 1,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                              "name": "SpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 2,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                              "name": "MintInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 3,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                              "name": "SpendInvariant",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 4,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                              "name": "DgDataPolicy",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 5,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                              "name": "OtherNamedDgt",
                                              "fieldTypes": [
                                                {
                                                  "name": "name",
                                                  "type": {
                                                    "kind": "internal",
                                                    "name": "String"
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 6,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                              "name": "BothMintAndSpendDgt",
                                              "fieldTypes": []
                                            },
                                            {
                                              "kind": "variant",
                                              "tag": 7,
                                              "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                              "name": "HandledByCapoOnly",
                                              "fieldTypes": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "name": "dgtLink",
                                        "type": {
                                          "kind": "option",
                                          "someType": {
                                            "kind": "struct",
                                            "format": "list",
                                            "id": "__module__CapoDelegateHelpers__RelativeDelegateLink[]",
                                            "name": "RelativeDelegateLink",
                                            "fieldTypes": [
                                              {
                                                "name": "uutName",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "String"
                                                }
                                              },
                                              {
                                                "name": "delegateValidatorHash",
                                                "type": {
                                                  "kind": "option",
                                                  "someType": {
                                                    "kind": "internal",
                                                    "name": "ValidatorHash"
                                                  }
                                                }
                                              },
                                              {
                                                "name": "config",
                                                "type": {
                                                  "kind": "internal",
                                                  "name": "ByteArray"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            {
                              "kind": "variant",
                              "tag": 1,
                              "id": "__module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange",
                              "name": "otherManifestChange",
                              "fieldTypes": [
                                {
                                  "name": "activity",
                                  "type": {
                                    "kind": "enum",
                                    "name": "ManifestActivity",
                                    "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                                    "variantTypes": [
                                      {
                                        "kind": "variant",
                                        "tag": 0,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                        "name": "retiringEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 1,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                        "name": "updatingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 2,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                        "name": "addingEntry",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "tokenName",
                                            "type": {
                                              "kind": "internal",
                                              "name": "ByteArray"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 3,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                        "name": "forkingThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "newThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "variant",
                                        "tag": 4,
                                        "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                        "name": "burningThreadToken",
                                        "fieldTypes": [
                                          {
                                            "name": "key",
                                            "type": {
                                              "kind": "internal",
                                              "name": "String"
                                            }
                                          },
                                          {
                                            "name": "burnedThreadCount",
                                            "type": {
                                              "kind": "internal",
                                              "name": "Int"
                                            }
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                },
                                {
                                  "name": "remainingDelegateValidations",
                                  "type": {
                                    "kind": "list",
                                    "itemType": {
                                      "kind": "enum",
                                      "name": "DelegateRole",
                                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                                      "variantTypes": [
                                        {
                                          "kind": "variant",
                                          "tag": 0,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                          "name": "MintDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 1,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                          "name": "SpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 2,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                          "name": "MintInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 3,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                          "name": "SpendInvariant",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 4,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                          "name": "DgDataPolicy",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 5,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                          "name": "OtherNamedDgt",
                                          "fieldTypes": [
                                            {
                                              "name": "name",
                                              "type": {
                                                "kind": "internal",
                                                "name": "String"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 6,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                          "name": "BothMintAndSpendDgt",
                                          "fieldTypes": []
                                        },
                                        {
                                          "kind": "variant",
                                          "tag": 7,
                                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                          "name": "HandledByCapoOnly",
                                          "fieldTypes": []
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          }
        ]
      }
    }
  ]
};
const dgd_DataSrcSchema = {
  "kind": "enum",
  "name": "dgd_DataSrc",
  "id": "__module__CapoHelpers__dgd_DataSrc[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Unk",
      "name": "Unk",
      "fieldTypes": []
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Input",
      "name": "Input",
      "fieldTypes": [
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Output",
      "name": "Output",
      "fieldTypes": [
        {
          "name": "txo",
          "type": {
            "kind": "internal",
            "name": "TxOutput"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoHelpers__dgd_DataSrc[]__Both",
      "name": "Both",
      "fieldTypes": [
        {
          "name": "utxo",
          "type": {
            "kind": "internal",
            "name": "TxInput"
          }
        },
        {
          "name": "txo",
          "type": {
            "kind": "internal",
            "name": "TxOutput"
          }
        }
      ]
    }
  ]
};
const AbstractDelegateActivitiesEnumSchema = {
  "kind": "enum",
  "name": "AbstractDelegateActivitiesEnum",
  "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]",
  "variantTypes": [
    {
      "kind": "variant",
      "tag": 0,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities",
      "name": "CapoLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "CapoLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
                "name": "CreatingDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
                "name": "queuePendingChange",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
                "name": "removePendingChange",
                "fieldTypes": [
                  {
                    "name": "role",
                    "type": {
                      "kind": "enum",
                      "name": "DelegateRole",
                      "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                          "name": "MintDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                          "name": "SpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                          "name": "MintInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                          "name": "SpendInvariant",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                          "name": "DgDataPolicy",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 5,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                          "name": "OtherNamedDgt",
                          "fieldTypes": [
                            {
                              "name": "name",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 6,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                          "name": "BothMintAndSpendDgt",
                          "fieldTypes": []
                        },
                        {
                          "kind": "variant",
                          "tag": 7,
                          "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                          "name": "HandledByCapoOnly",
                          "fieldTypes": []
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 3,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
                "name": "commitPendingChanges",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 4,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
                "name": "forcingNewSpendDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 5,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
                "name": "forcingNewMintDelegate",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 6,
                "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
                "name": "updatingManifest",
                "fieldTypes": [
                  {
                    "name": "activity",
                    "type": {
                      "kind": "enum",
                      "name": "ManifestActivity",
                      "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                      "variantTypes": [
                        {
                          "kind": "variant",
                          "tag": 0,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                          "name": "retiringEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 1,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                          "name": "updatingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 2,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                          "name": "addingEntry",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "tokenName",
                              "type": {
                                "kind": "internal",
                                "name": "ByteArray"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 3,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                          "name": "forkingThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "newThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        },
                        {
                          "kind": "variant",
                          "tag": 4,
                          "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                          "name": "burningThreadToken",
                          "fieldTypes": [
                            {
                              "name": "key",
                              "type": {
                                "kind": "internal",
                                "name": "String"
                              }
                            },
                            {
                              "name": "burnedThreadCount",
                              "type": {
                                "kind": "internal",
                                "name": "Int"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 1,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities",
      "name": "DelegateLifecycleActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "enum",
            "name": "DelegateLifecycleActivity",
            "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
            "variantTypes": [
              {
                "kind": "variant",
                "tag": 0,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
                "name": "ReplacingMe",
                "fieldTypes": [
                  {
                    "name": "seed",
                    "type": {
                      "kind": "internal",
                      "name": "TxOutputId"
                    }
                  },
                  {
                    "name": "purpose",
                    "type": {
                      "kind": "internal",
                      "name": "String"
                    }
                  }
                ]
              },
              {
                "kind": "variant",
                "tag": 1,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
                "name": "Retiring",
                "fieldTypes": []
              },
              {
                "kind": "variant",
                "tag": 2,
                "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
                "name": "ValidatingSettings",
                "fieldTypes": []
              }
            ]
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 2,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities",
      "name": "SpendingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 3,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities",
      "name": "MintingActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 4,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities",
      "name": "BurningActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 5,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData",
      "name": "CreatingDelegatedData",
      "fieldTypes": [
        {
          "name": "seed",
          "type": {
            "kind": "internal",
            "name": "TxOutputId"
          }
        },
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 6,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData",
      "name": "UpdatingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 7,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData",
      "name": "DeletingDelegatedData",
      "fieldTypes": [
        {
          "name": "dataType",
          "type": {
            "kind": "internal",
            "name": "String"
          }
        },
        {
          "name": "recId",
          "type": {
            "kind": "internal",
            "name": "ByteArray"
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 8,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities",
      "name": "MultipleDelegateActivities",
      "fieldTypes": [
        {
          "name": "activities",
          "type": {
            "kind": "list",
            "itemType": {
              "kind": "internal",
              "name": "Data"
            }
          }
        }
      ]
    },
    {
      "kind": "variant",
      "tag": 9,
      "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities",
      "name": "OtherActivities",
      "fieldTypes": [
        {
          "name": "activity",
          "type": {
            "kind": "internal",
            "name": "Data"
          }
        }
      ]
    }
  ]
};
const DgDataDetailsSchema = {
  "kind": "struct",
  "format": "list",
  "id": "__module__CapoHelpers__DgDataDetails[]",
  "name": "DgDataDetails",
  "fieldTypes": [
    {
      "name": "dataSrc",
      "type": {
        "kind": "enum",
        "name": "dgd_DataSrc",
        "id": "__module__CapoHelpers__dgd_DataSrc[]",
        "variantTypes": [
          {
            "kind": "variant",
            "tag": 0,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Unk",
            "name": "Unk",
            "fieldTypes": []
          },
          {
            "kind": "variant",
            "tag": 1,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Input",
            "name": "Input",
            "fieldTypes": [
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 2,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Output",
            "name": "Output",
            "fieldTypes": [
              {
                "name": "txo",
                "type": {
                  "kind": "internal",
                  "name": "TxOutput"
                }
              }
            ]
          },
          {
            "kind": "variant",
            "tag": 3,
            "id": "__module__CapoHelpers__dgd_DataSrc[]__Both",
            "name": "Both",
            "fieldTypes": [
              {
                "name": "utxo",
                "type": {
                  "kind": "internal",
                  "name": "TxInput"
                }
              },
              {
                "name": "txo",
                "type": {
                  "kind": "internal",
                  "name": "TxOutput"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "id",
      "type": {
        "kind": "internal",
        "name": "ByteArray"
      }
    },
    {
      "name": "type",
      "type": {
        "kind": "internal",
        "name": "String"
      }
    },
    {
      "name": "mph",
      "type": {
        "kind": "internal",
        "name": "MintingPolicyHash"
      }
    },
    {
      "name": "activity",
      "type": {
        "kind": "option",
        "someType": {
          "kind": "enum",
          "name": "AbstractDelegateActivitiesEnum",
          "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]",
          "variantTypes": [
            {
              "kind": "variant",
              "tag": 0,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities",
              "name": "CapoLifecycleActivities",
              "fieldTypes": [
                {
                  "name": "activity",
                  "type": {
                    "kind": "enum",
                    "name": "CapoLifecycleActivity",
                    "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate",
                        "name": "CreatingDelegate",
                        "fieldTypes": [
                          {
                            "name": "seed",
                            "type": {
                              "kind": "internal",
                              "name": "TxOutputId"
                            }
                          },
                          {
                            "name": "purpose",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange",
                        "name": "queuePendingChange",
                        "fieldTypes": []
                      },
                      {
                        "kind": "variant",
                        "tag": 2,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange",
                        "name": "removePendingChange",
                        "fieldTypes": [
                          {
                            "name": "role",
                            "type": {
                              "kind": "enum",
                              "name": "DelegateRole",
                              "id": "__module__CapoDelegateHelpers__DelegateRole[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintDgt",
                                  "name": "MintDgt",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendDgt",
                                  "name": "SpendDgt",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__MintInvariant",
                                  "name": "MintInvariant",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant",
                                  "name": "SpendInvariant",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy",
                                  "name": "DgDataPolicy",
                                  "fieldTypes": [
                                    {
                                      "name": "name",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 5,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt",
                                  "name": "OtherNamedDgt",
                                  "fieldTypes": [
                                    {
                                      "name": "name",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 6,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt",
                                  "name": "BothMintAndSpendDgt",
                                  "fieldTypes": []
                                },
                                {
                                  "kind": "variant",
                                  "tag": 7,
                                  "id": "__module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly",
                                  "name": "HandledByCapoOnly",
                                  "fieldTypes": []
                                }
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 3,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges",
                        "name": "commitPendingChanges",
                        "fieldTypes": []
                      },
                      {
                        "kind": "variant",
                        "tag": 4,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate",
                        "name": "forcingNewSpendDelegate",
                        "fieldTypes": [
                          {
                            "name": "seed",
                            "type": {
                              "kind": "internal",
                              "name": "TxOutputId"
                            }
                          },
                          {
                            "name": "purpose",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 5,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate",
                        "name": "forcingNewMintDelegate",
                        "fieldTypes": [
                          {
                            "name": "seed",
                            "type": {
                              "kind": "internal",
                              "name": "TxOutputId"
                            }
                          },
                          {
                            "name": "purpose",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 6,
                        "id": "__module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest",
                        "name": "updatingManifest",
                        "fieldTypes": [
                          {
                            "name": "activity",
                            "type": {
                              "kind": "enum",
                              "name": "ManifestActivity",
                              "id": "__module__CapoDelegateHelpers__ManifestActivity[]",
                              "variantTypes": [
                                {
                                  "kind": "variant",
                                  "tag": 0,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry",
                                  "name": "retiringEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 1,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry",
                                  "name": "updatingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 2,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__addingEntry",
                                  "name": "addingEntry",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "tokenName",
                                      "type": {
                                        "kind": "internal",
                                        "name": "ByteArray"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 3,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken",
                                  "name": "forkingThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "newThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "kind": "variant",
                                  "tag": 4,
                                  "id": "__module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken",
                                  "name": "burningThreadToken",
                                  "fieldTypes": [
                                    {
                                      "name": "key",
                                      "type": {
                                        "kind": "internal",
                                        "name": "String"
                                      }
                                    },
                                    {
                                      "name": "burnedThreadCount",
                                      "type": {
                                        "kind": "internal",
                                        "name": "Int"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 1,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities",
              "name": "DelegateLifecycleActivities",
              "fieldTypes": [
                {
                  "name": "activity",
                  "type": {
                    "kind": "enum",
                    "name": "DelegateLifecycleActivity",
                    "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]",
                    "variantTypes": [
                      {
                        "kind": "variant",
                        "tag": 0,
                        "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe",
                        "name": "ReplacingMe",
                        "fieldTypes": [
                          {
                            "name": "seed",
                            "type": {
                              "kind": "internal",
                              "name": "TxOutputId"
                            }
                          },
                          {
                            "name": "purpose",
                            "type": {
                              "kind": "internal",
                              "name": "String"
                            }
                          }
                        ]
                      },
                      {
                        "kind": "variant",
                        "tag": 1,
                        "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring",
                        "name": "Retiring",
                        "fieldTypes": []
                      },
                      {
                        "kind": "variant",
                        "tag": 2,
                        "id": "__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings",
                        "name": "ValidatingSettings",
                        "fieldTypes": []
                      }
                    ]
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 2,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities",
              "name": "SpendingActivities",
              "fieldTypes": [
                {
                  "name": "activity",
                  "type": {
                    "kind": "internal",
                    "name": "Data"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 3,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities",
              "name": "MintingActivities",
              "fieldTypes": [
                {
                  "name": "activity",
                  "type": {
                    "kind": "internal",
                    "name": "Data"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 4,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities",
              "name": "BurningActivities",
              "fieldTypes": [
                {
                  "name": "activity",
                  "type": {
                    "kind": "internal",
                    "name": "Data"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 5,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData",
              "name": "CreatingDelegatedData",
              "fieldTypes": [
                {
                  "name": "seed",
                  "type": {
                    "kind": "internal",
                    "name": "TxOutputId"
                  }
                },
                {
                  "name": "dataType",
                  "type": {
                    "kind": "internal",
                    "name": "String"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 6,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData",
              "name": "UpdatingDelegatedData",
              "fieldTypes": [
                {
                  "name": "dataType",
                  "type": {
                    "kind": "internal",
                    "name": "String"
                  }
                },
                {
                  "name": "recId",
                  "type": {
                    "kind": "internal",
                    "name": "ByteArray"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 7,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData",
              "name": "DeletingDelegatedData",
              "fieldTypes": [
                {
                  "name": "dataType",
                  "type": {
                    "kind": "internal",
                    "name": "String"
                  }
                },
                {
                  "name": "recId",
                  "type": {
                    "kind": "internal",
                    "name": "ByteArray"
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 8,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities",
              "name": "MultipleDelegateActivities",
              "fieldTypes": [
                {
                  "name": "activities",
                  "type": {
                    "kind": "list",
                    "itemType": {
                      "kind": "internal",
                      "name": "Data"
                    }
                  }
                }
              ]
            },
            {
              "kind": "variant",
              "tag": 9,
              "id": "__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities",
              "name": "OtherActivities",
              "fieldTypes": [
                {
                  "name": "activity",
                  "type": {
                    "kind": "internal",
                    "name": "Data"
                  }
                }
              ]
            }
          ]
        }
      }
    }
  ]
};

class VestingController extends DelegatedDataContract {
  dataBridgeClass = VestingPolicyDataBridge;
  async scriptBundleClass() {
    const capoBundle = await this.capo.mkScriptBundle();
    const msb = await import('./contracts-preprod/Vesting.generic.hlb.mjs').then((m) => m.GenericVestingBundle);
    return msb.usingCapoBundleClass(capoBundle.constructor);
  }
  idPrefix = "vest";
  get delegateName() {
    return "vestingDgt";
  }
  get recordTypeName() {
    return "vesting";
  }
  exampleData() {
    return {
      beneficiary: {
        RelativeLink: {
          link: {
            config: textToBytes("{}"),
            uutName: "member-XXX",
            delegateValidatorHash: void 0
          },
          vxfActivity: void 0
        }
      },
      ownerToken: textToBytes("member-YYY"),
      state: { Initializing: {} },
      vestingDetails: {
        StraightLine: {
          totalValue: makeValue(100000n),
          fullMaturity: Date.now() + 365 * 24 * 60 * 60 * 1e3,
          vestingStart: Date.now(),
          frequency: {
            Interval: {
              interval: BigInt(30 * 24 * 60 * 60 * 1e3),
              count: 36n
            }
          },
          vestingProgress: {
            lastPartialMaturity: Date.now(),
            vestedValue: makeValue(0n),
            vestedFreqUnits: 0
          }
        }
      }
    };
  }
  async mkTxnCreatingVesting(recData) {
    await this.capo.getMintDelegate();
    return this.mkTxnCreateRecord(
      {
        activity: this.activity.MintingActivities.$seeded$CreatingRecord,
        data: {
          ...recData
          // memberToken: tcx.state.memberToken.name,
        }
        // addedUtxoValue: makeValue(initialVaultStake),
      }
      // tcx
    );
  }
  // mkTxnActivateVesting(
  //     this: VestingController,
  //     vesting: FoundDatumUtxo<VestingData>,
  //     txnOptions: {
  //         txnDescription?: string;
  //         futureDate?: Date;
  //     } = {},
  // ) {
  //     return this.mkTxnUpdateRecord(
  //         vesting,
  //         {
  //             ...txnOptions,
  //             data: {
  //                 ...txnOptions.data,
  //                 state: {Active: {}}
  //             }
  //         }
  //     );
  // }
  requirements() {
    return hasReqts({
      // todo
    });
  }
}

export { MarketSaleController, STokMintDelegate, StellarTokenomicsCapo, VestingController };
//# sourceMappingURL=stellar-tokenomics.mjs.map
