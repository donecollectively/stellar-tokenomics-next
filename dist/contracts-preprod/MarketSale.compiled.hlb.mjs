export const precompiled = {
    "singleton": {
        "programElements": {
            "src/delegation/BasicDelegate.hl": "027afd9f75063ea33dddf672afda9b8e0a09cb60b8856246e2d924f1f96b0f55",
            "src/CapoMintHelpers.hl": "3fca50bb43a69ff20b3d1c38a2d861763b960bbec1f36a4e56d4fc09b9c93299",
            "src/delegation/CapoDelegateHelpers.hl": "3c7ed244361870b62c0b40ac3faece6ce8d87985937e3142939634b04f341b10",
            "src/StellarHeliosHelpers.hl": "3761577f61419fc37d8b8df0d3d6cbd24217db0702031af15c043b02a541cbb6",
            "src/CapoHelpers.hl": "fb03f3b74232c0aa160824b8a6440ce84425551cd1b0a457e7829acbde991535",
            "src/MarketSale/MarketSaleData.hl": "0344ec8b2aa445fbf6c17d750558918de565dc382c25c16b24ae9e6d220ace57",
            "src/MarketSale/SaleProgressDetails.hl": "2ce4a3f1c5dc0065e521956b9b9e211ed6fb5bc0f267b1d5ed0191aac53dffbe",
            "src/MarketSale/DynamicSaleV1.hl": "2d01a11141510e97173a5b9c0dfdb69db2335b272ac7d36082dc9c9e6fc72304",
            "src/MarketSale/DynamicSaleV1Settings.hl": "3527f06797ca2cfc36cfaaa548b3815324d95b19f85322af7e679742613a9b12",
            "src/Vesting/VxfProtocol.hl": "662e1f64cae95585bb6533175bc310f45471efc37cafca10294c8fc25b0a9010",
            "generatedSpecializedDelegateModule": "11d48e8af95ed17d17c4c03dc102d4bc191618c76229cceb944cec5d26be4d44",
            "src/MarketSale/MarketSalePolicy.hl": "74a18e36a00ec8adcd87b2793e059a18e7ac03494bb488a8b8103a32515cff8c",
            "params": {
                "BasicDelegate::rev": "const rev: Int = ##01;",
                "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;",
                "BasicDelegate::delegateName": "const delegateName: String = ##504d61726b657453616c65506f6c696379;",
                "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87980;",
                "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87980;",
                "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87a80;",
                "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87a80;"
            }
        },
        "version": "PlutusV2",
        "optimized": "",
        "unoptimized": "",
        "optimizedIR": "(__DATUM, __REDEEMER, __CONTEXT) -> {\n    __common8 = __core__unConstrData(__CONTEXT);\n    __common9 = __core__sndPair(__common8);\n    __common6 = __core__fstPair(__core__unConstrData(__DATUM));\n    __helios__common__fold = (self_3, fn, z) -> {\n        recurse_1 = (recurse, self_4, z_1) -> {\n            __core__chooseList(self_4, () -> {\n                z_1\n            }, () -> {\n                recurse(recurse, __core__tailList__safe(self_4), fn(z_1, __core__headList__safe(self_4)))\n            })()\n        };\n        recurse_1(recurse_1, self_3, z)\n    };\n    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {\n        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {\n            callback_ok(__core__unBData__safe(data))\n        })()\n    };\n    __helios__bytearray__show = (self_7) -> {\n        recurse_5 = (recurse_4, self_8) -> {\n            n = __core__lengthOfByteString(self_8);\n            __core__ifThenElse(\n                __core__lessThanInteger(0, n),\n                () -> {\n                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_5 = __core__indexByteString__safe(self_8, 0);\n                    recurse_3 = (recurse_2, self_6, bytes) -> {\n                        digit = __core__modInteger(self_6, 16);\n                        bytes_1 = __core__consByteString(__core__ifThenElse(\n                            __core__lessThanInteger(digit, 10),\n                            __core__addInteger(digit, 48),\n                            __core__addInteger(digit, 87)\n                        ), bytes);\n                        __core__ifThenElse(\n                            __core__lessThanInteger(self_6, 16),\n                            () -> {\n                                bytes_1\n                            },\n                            () -> {\n                                recurse_2(recurse_2, __core__divideInteger(self_6, 16), bytes_1)\n                            }\n                        )()\n                    };\n                    __core__decodeUtf8__safe(__core__ifThenElse(\n                        __core__lessThanInteger(self_5, 0),\n                        () -> {\n                            __core__consByteString(45, recurse_3(recurse_3, __core__multiplyInteger(self_5, -1), #))\n                        },\n                        () -> {\n                            recurse_3(recurse_3, self_5, #)\n                        }\n                    )()));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),\n                        __core__consByteString(48, hex_bytes),\n                        hex_bytes\n                    )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_8)))\n                },\n                () -> {\n                    \"\"\n                }\n            )()\n        };\n        recurse_5(recurse_5, self_7)\n    };\n    __helios__int__show = (self_9) -> {\n        __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {\n            bytes_3 = __core__consByteString(__core__addInteger(__core__modInteger(i, 10), 48), bytes_2);\n            __core__ifThenElse(\n                __core__lessThanInteger(i, 10),\n                () -> {\n                    bytes_3\n                },\n                () -> {\n                    recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)\n                }\n            )()\n        };\n        __core__ifThenElse(\n            __core__lessThanInteger(self_9, 0),\n            () -> {\n                __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_9, -1), #))\n            },\n            () -> {\n                recurse_7(recurse_7, self_9, #)\n            }\n        )())\n    };\n    __helios__real__abs = (self_11) -> {\n        __core__ifThenElse(\n            __core__lessThanInteger(self_11, 0),\n            () -> {\n                __core__multiplyInteger(self_11, -1)\n            },\n            () -> {\n                self_11\n            }\n        )()\n    };\n    __helios__real__show = (self_13) -> {\n        show_positive = (x_2) -> {\n            __core__appendString(__helios__int__show(__core__divideInteger(__helios__real__abs(x_2), 1000000)), __core__appendString(\".\", __core__decodeUtf8__safe(self_12 = __core__modInteger(x_2, 1000000);\n            recurse_9 = (recurse_8, x_1, pos, bytes_4) -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(x_1, 0),\n                    () -> {\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(6, pos),\n                            () -> {\n                                bytes_4\n                            },\n                            () -> {\n                                recurse_8(recurse_8, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_4))\n                            }\n                        )()\n                    },\n                    () -> {\n                        recurse_8(recurse_8, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__core__addInteger(__core__modInteger(x_1, 10), 48), bytes_4))\n                    }\n                )()\n            };\n            recurse_9(recurse_9, self_12, 0, #))))\n        };\n        __core__ifThenElse(\n            __core__lessThanInteger(self_13, 0),\n            () -> {\n                __core__appendString(\"-\", show_positive(__core__multiplyInteger(self_13, -1)))\n            },\n            () -> {\n                show_positive(self_13)\n            }\n        )()\n    };\n    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__divideInteger(byte, 64), 2),\n            () -> {\n                callback(true, __core__modInteger(byte, 64))\n            },\n            () -> {\n                callback(false, 0)\n            }\n        )()\n    };\n    __helios__string__is_valid_utf8 = (bytes_5) -> {\n        n_2 = __core__lengthOfByteString(bytes_5);\n        recurse_11 = (recurse_10, i_1) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(i_1, n_2),\n                () -> {\n                    true\n                },\n                () -> {\n                    b0 = __core__indexByteString__safe(bytes_5, i_1);\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(b0, 127),\n                        () -> {\n                            recurse_10(recurse_10, __core__addInteger(i_1, 1))\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),\n                                () -> {\n                                    inext_2 = __core__addInteger(i_1, 2);\n                                    __core__ifThenElse(\n                                        __core__lessThanEqualsInteger(inext_2, n_2),\n                                        () -> {\n                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {\n                                                __core__ifThenElse(\n                                                    valid_5,\n                                                    () -> {\n                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);\n                                                        __core__ifThenElse(\n                                                            __core__ifThenElse(\n                                                                __core__lessThanEqualsInteger(128, c_2),\n                                                                () -> {\n                                                                    __core__lessThanEqualsInteger(c_2, 2047)\n                                                                },\n                                                                () -> {\n                                                                    false\n                                                                }\n                                                            )(),\n                                                            () -> {\n                                                                recurse_10(recurse_10, inext_2)\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    },\n                                                    () -> {\n                                                        false\n                                                    }\n                                                )()\n                                            })\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),\n                                        () -> {\n                                            inext_1 = __core__addInteger(i_1, 3);\n                                            __core__ifThenElse(\n                                                __core__lessThanEqualsInteger(inext_1, n_2),\n                                                () -> {\n                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {\n                                                        __core__ifThenElse(\n                                                            valid_3,\n                                                            () -> {\n                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {\n                                                                    __core__ifThenElse(\n                                                                        valid_4,\n                                                                        () -> {\n                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));\n                                                                            __core__ifThenElse(\n                                                                                __core__ifThenElse(\n                                                                                    __core__lessThanEqualsInteger(2048, c_1),\n                                                                                    () -> {\n                                                                                        __core__lessThanEqualsInteger(c_1, 65535)\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )(),\n                                                                                () -> {\n                                                                                    recurse_10(recurse_10, inext_1)\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )()\n                                                                })\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    })\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),\n                                                () -> {\n                                                    inext = __core__addInteger(i_1, 4);\n                                                    __core__ifThenElse(\n                                                        __core__lessThanEqualsInteger(inext, n_2),\n                                                        () -> {\n                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {\n                                                                __core__ifThenElse(\n                                                                    valid,\n                                                                    () -> {\n                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {\n                                                                            __core__ifThenElse(\n                                                                                valid_1,\n                                                                                () -> {\n                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            valid_2,\n                                                                                            () -> {\n                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__lessThanEqualsInteger(65536, c),\n                                                                                                        () -> {\n                                                                                                            __core__lessThanEqualsInteger(c, 2097151)\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )(),\n                                                                                                    () -> {\n                                                                                                        recurse_10(recurse_10, inext)\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    })\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        })\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        };\n        recurse_11(recurse_11, 0)\n    };\n    __helios__value__show = (self_15) -> {\n        __helios__common__fold(self_15, (prev, pair) -> {\n            mph_data = __core__fstPair(pair);\n            tokens_data = __core__sndPair(pair);\n            __core__appendString(prev, __helios__common__unBData__safe(mph_data, (mph) -> {\n                __core__appendString(__core__ifThenElse(\n                    __core__equalsByteString(mph, #),\n                    () -> {\n                        \"\"\n                    },\n                    () -> {\n                        __core__appendString(__helios__bytearray__show(mph), \"\n\")\n                    }\n                )(), __core__chooseData(tokens_data, () -> {\n                    \"\"\n                }, () -> {\n                    __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_1, pair_1) -> {\n                        token_name_data = __core__fstPair(pair_1);\n                        qty_data = __core__sndPair(pair_1);\n                        __helios__common__unBData__safe(token_name_data, (token_name) -> {\n                            __core__chooseData(qty_data, () -> {\n                                \"\"\n                            }, () -> {\n                                \"\"\n                            }, () -> {\n                                \"\"\n                            }, () -> {\n                                qty = __core__unIData__safe(qty_data);\n                                __core__ifThenElse(\n                                    __core__equalsByteString(mph, #),\n                                    () -> {\n                                        __core__appendString(\"lovelace \", __core__appendString(__helios__int__show(qty), \"\n\"))\n                                    },\n                                    () -> {\n                                        __core__appendString(\"  .\", __core__appendString(__core__ifThenElse(\n                                            __helios__string__is_valid_utf8(token_name),\n                                            () -> {\n                                                __core__decodeUtf8__safe(token_name)\n                                            },\n                                            () -> {\n                                                __helios__bytearray__show(token_name)\n                                            }\n                                        )(), __core__appendString(\" \", __core__appendString(__helios__int__show(qty), \"\n\"))))\n                                    }\n                                )()\n                            }, () -> {\n                                \"\"\n                            })()\n                        }, () -> {\n                            \"\"\n                        })\n                    }, prev)\n                }, () -> {\n                    \"\"\n                }, () -> {\n                    \"\"\n                }, () -> {\n                    \"\"\n                })())\n            }, () -> {\n                \"\"\n            }))\n        }, \"\")\n    };\n    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common9));\n    __helios__scriptcontext__tx = __core__headList(__common9);\n    __helios__scriptcontext__get_current_input = () -> {\n        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));\n        recurse_13 = (recurse_12, lst) -> {\n            __core__chooseList(lst, () -> {\n                error()\n            }, () -> {\n                item = __core__headList__safe(lst);\n                __core__ifThenElse(\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item))), id),\n                    () -> {\n                        item\n                    },\n                    () -> {\n                        recurse_12(recurse_12, __core__tailList__safe(lst))\n                    }\n                )()\n            })()\n        };\n        recurse_13(recurse_13, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))\n    };\n    __helios__value__new = (assetClass, i_2) -> {\n        mph_1 = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));\n        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));\n        __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i_2)), __core__mkNilPairData(())))), __core__mkNilPairData(()))\n    };\n    __helios__assetclass__new = (mph_2, token_name_1) -> {\n        __core__constrData(0, __core__mkCons(__core__bData(mph_2), __core__mkCons(__core__bData(token_name_1), __core__mkNilData(()))))\n    };\n    __helios__tx__minted = (self_29) -> {\n        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))))))\n    };\n    __helios__common__assert_constr_index = (data_3, i_3) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_3)), i_3),\n            () -> {\n                data_3\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__common__length = (lst_3) -> {\n        recurse_19 = (recurse_18, lst_4) -> {\n            __core__chooseList(lst_4, () -> {\n                0\n            }, () -> {\n                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)\n            })()\n        };\n        recurse_19(recurse_19, lst_3)\n    };\n    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {\n        recurse_21 = (recurse_20, self_39, key_2) -> {\n            __core__chooseList(self_39, fnNotFound, () -> {\n                head_1 = __core__headList__safe(self_39);\n                __core__ifThenElse(\n                    __core__equalsData(key_2, __core__fstPair(head_1)),\n                    () -> {\n                        fnFound(__core__sndPair(head_1))\n                    },\n                    () -> {\n                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)\n                    }\n                )()\n            })()\n        };\n        recurse_21(recurse_21, self_38, key_1)\n    };\n    __helios__common__all = (self_40, fn_1) -> {\n        recurse_23 = (recurse_22, self_41, fn_2) -> {\n            __core__chooseList(self_41, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    fn_2(__core__headList__safe(self_41)),\n                    () -> {\n                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_23(recurse_23, self_40, fn_1)\n    };\n    __helios__timerange__start = (self_43) -> {\n        __core__unIData((self_21) -> {\n            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n        }(self_21 = __core__headList(__core__sndPair(__core__unConstrData(self_43)));\n        __core__headList(__core__sndPair(__core__unConstrData(self_21)))))\n    };\n    __helios__timerange__end = (self_44) -> {\n        __core__unIData((self_21) -> {\n            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n        }(self_21 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_44))));\n        __core__headList(__core__sndPair(__core__unConstrData(self_21)))))\n    };\n    __helios__value__get_inner_map_int = (map_3, key_3) -> {\n        recurse_25 = (recurse_24, map_4, key_4) -> {\n            __core__chooseList(map_4, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), key_4),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_4)))\n                    },\n                    () -> {\n                        recurse_24(recurse_24, __core__tailList__safe(map_4), key_4)\n                    }\n                )()\n            })()\n        };\n        recurse_25(recurse_25, map_3, key_3)\n    };\n    __helios__common__any = (self_46, fn_3) -> {\n        recurse_29 = (recurse_28, self_47, fn_4) -> {\n            __core__chooseList(self_47, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    fn_4(__core__headList__safe(self_47)),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_28(recurse_28, __core__tailList__safe(self_47), fn_4)\n                    }\n                )()\n            })()\n        };\n        recurse_29(recurse_29, self_46, fn_3)\n    };\n    __helios__value__merge_map_keys = (a_5, b_5) -> {\n        (aKeys) -> {\n            recurse_33 = (recurse_32, keys, map_7) -> {\n                __core__chooseList(map_7, () -> {\n                    __core__mkNilData(())\n                }, () -> {\n                    key_6 = __core__fstPair(__core__headList__safe(map_7));\n                    __core__ifThenElse(\n                        __helios__common__any(aKeys, (item_4) -> {\n                            __core__equalsData(item_4, key_6)\n                        }),\n                        () -> {\n                            recurse_32(recurse_32, keys, __core__tailList__safe(map_7))\n                        },\n                        () -> {\n                            __core__mkCons(key_6, recurse_32(recurse_32, keys, __core__tailList__safe(map_7)))\n                        }\n                    )()\n                })()\n            };\n            b_4 = recurse_33(recurse_33, aKeys, b_5);\n            recurse_31 = (recurse_30, lst_6, rem) -> {\n                __core__chooseList(rem, () -> {\n                    lst_6\n                }, () -> {\n                    __core__mkCons(__core__headList__safe(rem), recurse_30(recurse_30, lst_6, __core__tailList__safe(rem)))\n                })()\n            };\n            recurse_31(recurse_31, b_4, aKeys)\n        }(recurse_27 = (recurse_26, map_6) -> {\n            __core__chooseList(map_6, () -> {\n                __core__mkNilData(())\n            }, () -> {\n                __core__mkCons(__core__fstPair(__core__headList__safe(map_6)), recurse_26(recurse_26, __core__tailList__safe(map_6)))\n            })()\n        };\n        recurse_27(recurse_27, a_5))\n    };\n    __helios__value__get_inner_map = (map_8, mph_5) -> {\n        recurse_37 = (recurse_36, map_9) -> {\n            __core__chooseList(map_9, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_5),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_9)))\n                    },\n                    () -> {\n                        recurse_36(recurse_36, __core__tailList__safe(map_9))\n                    }\n                )()\n            })()\n        };\n        recurse_37(recurse_37, map_8)\n    };\n    __helios__value____eq = (a_8, b_8) -> {\n        recurse_39 = (recurse_38, keys_2) -> {\n            __core__chooseList(keys_2, () -> {\n                true\n            }, () -> {\n                key_8 = __core__headList__safe(keys_2);\n                __core__ifThenElse(\n                    b = (a_6, b_6) -> {\n                        recurse_35 = (recurse_34, keys_1) -> {\n                            __core__chooseList(keys_1, () -> {\n                                true\n                            }, () -> {\n                                key_7 = __core__headList__safe(keys_1);\n                                __core__ifThenElse(\n                                    b = __core__equalsInteger(__helios__value__get_inner_map_int(a_6, key_7), __helios__value__get_inner_map_int(b_6, key_7));\n                                    __core__ifThenElse(\n                                        b,\n                                        false,\n                                        true\n                                    ),\n                                    () -> {\n                                        false\n                                    },\n                                    () -> {\n                                        recurse_34(recurse_34, __core__tailList__safe(keys_1))\n                                    }\n                                )()\n                            })()\n                        };\n                        recurse_35(recurse_35, __helios__value__merge_map_keys(a_6, b_6))\n                    }(__helios__value__get_inner_map(a_8, key_8), __helios__value__get_inner_map(b_8, key_8));\n                    __core__ifThenElse(\n                        b,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        false\n                    },\n                    () -> {\n                        recurse_38(recurse_38, __core__tailList__safe(keys_2))\n                    }\n                )()\n            })()\n        };\n        recurse_39(recurse_39, __helios__value__merge_map_keys(a_8, b_8))\n    };\n    __helios__value____mul = (a_9, scale) -> {\n        recurseInner_1 = (recurseInner, inner_3) -> {\n            __core__chooseList(inner_3, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                head_2 = __core__headList__safe(inner_3);\n                __core__mkCons(__core__mkPairData(__core__fstPair(head_2), __core__iData(qty_1 = __core__unIData(__core__sndPair(head_2));\n                __core__multiplyInteger(qty_1, scale))), recurseInner(recurseInner, __core__tailList__safe(inner_3)))\n            })()\n        };\n        recurseOuter_1 = (recurseOuter, outer_2) -> {\n            __core__chooseList(outer_2, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                head_3 = __core__headList__safe(outer_2);\n                __core__mkCons(__core__mkPairData(__core__fstPair(head_3), __core__mapData(recurseInner_1(recurseInner_1, __core__unMapData(__core__sndPair(head_3))))), recurseOuter(recurseOuter, __core__tailList__safe(outer_2)))\n            })()\n        };\n        recurseOuter_1(recurseOuter_1, a_9)\n    };\n    __helios__value__add_or_subtract = (a_11, b_10, op_2) -> {\n        recurse_43 = (recurse_42, keys_4) -> {\n            __core__chooseList(keys_4, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                key_10 = __core__headList__safe(keys_4);\n                tail_1 = recurse_42(recurse_42, __core__tailList__safe(keys_4));\n                item_5 = (a_10, b_9) -> {\n                    recurse_41 = (recurse_40, keys_3) -> {\n                        __core__chooseList(keys_3, () -> {\n                            __core__mkNilPairData(())\n                        }, () -> {\n                            key_9 = __core__headList__safe(keys_3);\n                            tail = recurse_40(recurse_40, __core__tailList__safe(keys_3));\n                            sum = op_2(__helios__value__get_inner_map_int(a_10, key_9), __helios__value__get_inner_map_int(b_9, key_9));\n                            __core__ifThenElse(\n                                __core__equalsInteger(sum, 0),\n                                () -> {\n                                    tail\n                                },\n                                () -> {\n                                    __core__mkCons(__core__mkPairData(key_9, __core__iData(sum)), tail)\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_41(recurse_41, __helios__value__merge_map_keys(a_10, b_9))\n                }(__helios__value__get_inner_map(a_11, key_10), __helios__value__get_inner_map(b_10, key_10));\n                __core__chooseList(item_5, () -> {\n                    tail_1\n                }, () -> {\n                    __core__mkCons(__core__mkPairData(key_10, __core__mapData(item_5)), tail_1)\n                })()\n            })()\n        };\n        recurse_43(recurse_43, __helios__value__merge_map_keys(a_11, b_10))\n    };\n    __helios__real__round_calc_result = (res) -> {\n        __core__addInteger(__core__quotientInteger(res, 10), __core__quotientInteger(__core__remainderInteger(res, 10), 5))\n    };\n    __helios__int____div1 = (a_20, b_19) -> {\n        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_20, 10000000000000), b_19))\n    };\n    __helios__value__is_zero = (self_51) -> {\n        recurse_47 = (recurse_46, map_10) -> {\n            __core__chooseList(map_10, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_10)));\n                    recurse_45 = (recurse_44, tokens_2) -> {\n                        __core__chooseList(tokens_2, () -> {\n                            true\n                        }, () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),\n                                () -> {\n                                    recurse_44(recurse_44, __core__tailList__safe(tokens_2))\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_45(recurse_45, tokens_1),\n                    () -> {\n                        recurse_46(recurse_46, __core__tailList__safe(map_10))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_47(recurse_47, self_51)\n    };\n    __helios__common__filter = (self_52, fn_5, nil) -> {\n        recurse_49 = (recurse_48, self_53, fn_6) -> {\n            __core__chooseList(self_53, () -> {\n                nil\n            }, () -> {\n                head_4 = __core__headList__safe(self_53);\n                __core__ifThenElse(\n                    fn_6(head_4),\n                    () -> {\n                        __core__mkCons(head_4, recurse_48(recurse_48, __core__tailList__safe(self_53), fn_6))\n                    },\n                    () -> {\n                        recurse_48(recurse_48, __core__tailList__safe(self_53), fn_6)\n                    }\n                )()\n            })()\n        };\n        recurse_49(recurse_49, self_52, fn_5)\n    };\n    __helios__value__get_assets = (self_55) -> {\n        __helios__common__filter(self_55, (pair_5) -> {\n            b = __core__equalsByteString(__core__unBData(__core__fstPair(pair_5)), #);\n            __core__ifThenElse(\n                b,\n                false,\n                true\n            )\n        }, __core__mkNilPairData(()))\n    };\n    __helios__value__get_safe = (self_56, assetClass_2) -> {\n        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));\n        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));\n        outer_4 = (outer_3, inner_4, map_11) -> {\n            __core__chooseList(map_11, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), mintingPolicyHash),\n                    () -> {\n                        inner_4(inner_4, __core__unMapData(__core__sndPair(__core__headList__safe(map_11))))\n                    },\n                    () -> {\n                        outer_3(outer_3, inner_4, __core__tailList__safe(map_11))\n                    }\n                )()\n            })()\n        };\n        outer_4(outer_4, (inner_5, map_12) -> {\n            __core__chooseList(map_12, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), tokenName_2),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_12)))\n                    },\n                    () -> {\n                        inner_5(inner_5, __core__tailList__safe(map_12))\n                    }\n                )()\n            })()\n        }, self_56)\n    };\n    __helios__value__get_policy = (self_67, mph_6) -> {\n        mph_7 = __core__bData(mph_6);\n        recurse_51 = (recurse_50, map_13) -> {\n            __core__chooseList(map_13, () -> {\n                error()\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), mph_7),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_13)))\n                    },\n                    () -> {\n                        recurse_50(recurse_50, __core__tailList__safe(map_13))\n                    }\n                )()\n            })()\n        };\n        recurse_51(recurse_51, self_67)\n    };\n    __helios__common__mStruct_field = (self_69, name_1) -> {\n        map_14 = __core__unMapData(self_69);\n        name_data = __core__bData(name_1);\n        recurse_53 = (recurse_52, map_15) -> {\n            __core__chooseList(map_15, () -> {\n                error()\n            }, () -> {\n                head_5 = __core__headList__safe(map_15);\n                key_11 = __core__fstPair(head_5);\n                value_2 = __core__sndPair(head_5);\n                __core__ifThenElse(\n                    __core__equalsData(key_11, name_data),\n                    () -> {\n                        value_2\n                    },\n                    () -> {\n                        recurse_52(recurse_52, __core__tailList__safe(map_15))\n                    }\n                )()\n            })()\n        };\n        recurse_53(recurse_53, map_14)\n    };\n    __helios__common__struct_fields_after_6 = (self_73) -> {\n        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_73)))))))\n    };\n    __helios__value__contains_policy = (self_81, mph_8) -> {\n        mph_9 = __core__bData(mph_8);\n        recurse_59 = (recurse_58, map_20) -> {\n            __core__chooseList(map_20, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_20)), mph_9),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_58(recurse_58, __core__tailList__safe(map_20))\n                    }\n                )()\n            })()\n        };\n        recurse_59(recurse_59, self_81)\n    };\n    __helios__common__map = (self_82, fn_8) -> {\n        recurse_61 = (recurse_60, rem_1) -> {\n            __core__chooseList(rem_1, () -> {\n                __core__mkNilData(())\n            }, () -> {\n                __core__mkCons(fn_8(__core__headList__safe(rem_1)), recurse_60(recurse_60, __core__tailList__safe(rem_1)))\n            })()\n        };\n        recurse_61(recurse_61, self_82)\n    };\n    __helios__common__enum_fields_after_4 = (self_87) -> {\n        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_87)))))))\n    };\n    __helios__txoutputdatum__inline = (self_96) -> {\n        pair_7 = __core__unConstrData(self_96);\n        index_2 = __core__fstPair(pair_7);\n        fields_5 = __core__sndPair(pair_7);\n        __core__ifThenElse(\n            __core__equalsInteger(index_2, 2),\n            () -> {\n                __core__headList(fields_5)\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__txinput__address = (self_100) -> {\n        self_21 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_100))));\n        __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n    };\n    __helios__common__find_safe = (self_113, fn_13) -> {\n        recurse_67 = (recurse_66, self_114, fn_14) -> {\n            __core__chooseList(self_114, () -> {\n                __core__constrData(1, __core__mkNilData(()))\n            }, () -> {\n                head_11 = __core__headList__safe(self_114);\n                __core__ifThenElse(\n                    fn_14(head_11),\n                    () -> {\n                        __core__constrData(0, __core__mkCons(head_11, __core__mkNilData(())))\n                    },\n                    () -> {\n                        recurse_66(recurse_66, __core__tailList__safe(self_114), fn_14)\n                    }\n                )()\n            })()\n        };\n        recurse_67(recurse_67, self_113, fn_13)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_125) -> {\n        d = __core__headList(__core__sndPair(__core__unConstrData(self_125)));\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __helios__list[__helios__string]__join = (self_139) -> {\n        recurse_75 = (recurse_74, lst_13, sep) -> {\n            __core__chooseList(lst_13, () -> {\n                \"\"\n            }, () -> {\n                __core__appendString(__core__appendString(sep, __core__decodeUtf8(__core__unBData(__core__headList__safe(lst_13)))), recurse_74(recurse_74, __core__tailList__safe(lst_13), \", \"))\n            })()\n        };\n        recurse_75(recurse_75, self_139, \"\")\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_147, mph_12) -> {\n        __helios__assetclass__new(mph_12, __core__encodeUtf8(d = __core__headList(self_147);\n        __core__decodeUtf8(__core__unBData(d))))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_154, mph_15) -> {\n        (uut) -> {\n            validatorHash = __core__headList(__core__tailList(self_154));\n            ac_1 = __helios__assetclass__new(mph_15, __core__encodeUtf8(uut));\n            hasDelegate = __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),\n                () -> {\n                    (__lhs_0_15) -> {\n                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));\n                        a_3 = __helios__value__get_safe((outputs) -> {\n                            __helios__common__fold(outputs, (prev_3, txOutput) -> {\n                                b_11 = __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput)))));\n                                __helios__value__add_or_subtract(prev_3, b_11, __core__addInteger)\n                            }, __core__mkNilPairData(()))\n                        }(self_102 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__filter(self_102, (output) -> {\n                            (credential) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),\n                                    () -> {\n                                        __core__equalsByteString(vh_3, self_105 = __helios__common__assert_constr_index(credential, 1);\n                                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_105)))))\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }(self_21 = __core__headList(__core__sndPair(__core__unConstrData(output)));\n                            __core__headList(__core__sndPair(__core__unConstrData(self_21))))\n                        }, __core__mkNilData(()))), ac_1);\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(a_3, 0),\n                            false,\n                            true\n                        )\n                    }\n                },\n                () -> {\n                    (__lhs_0_12) -> {\n                        (__cond_10) -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),\n                                () -> {\n                                    (__lhs_0_14) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_13) -> {\n                                        false\n                                    }\n                                }\n                            )()(__cond_10)\n                        }(self_153 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__find_safe(self_153, (o) -> {\n                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);\n                            __core__ifThenElse(\n                                __core__lessThanEqualsInteger(a_3, 0),\n                                false,\n                                true\n                            )\n                        }))\n                    }\n                }\n            )()(validatorHash);\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __core__ifThenElse(\n                        hasDelegate,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        false\n                    }\n                )(),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), hasDelegate)\n        }(d = __core__headList(self_154);\n        __core__decodeUtf8(__core__unBData(d)))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_177) -> {\n        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_177)))))))\n    };\n    __module__CapoHelpers__DgDataDetails[]____new = (dataSrc, id_1, mph_20) -> {\n        __core__mkCons(dataSrc, __core__mkCons(__core__bData(id_1), __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(mph_20), __core__mkCons(__core__constrData(1, __core__mkNilData(())), __core__mkNilData(()))))))\n    };\n    __module__CapoHelpers__DgDataDetails[]__input = (self_208) -> {\n        __cond_28 = __core__headList(self_208);\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 1),\n            () -> {\n                (self_21) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 3),\n                    () -> {\n                        (self_21) -> {\n                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                        }\n                    },\n                    () -> {\n                        (__27) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_28)\n    };\n    __module__CapoHelpers__DgDataDetails[]__output = (self_209) -> {\n        __cond_29 = __core__headList(self_209);\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_29)), 2),\n            () -> {\n                (self_21) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_29)), 3),\n                    () -> {\n                        (self_18) -> {\n                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))\n                        }\n                    },\n                    () -> {\n                        (__28) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_29)\n    };\n    __module__CapoHelpers__DgDataDetails[]__inputData = (self_210) -> {\n        __cond_30 = __helios__txoutputdatum__inline(self_97 = __module__CapoHelpers__DgDataDetails[]__input(self_210);\n        self_50 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_97))));\n        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_50))))));\n        __core__ifThenElse(\n            __core__chooseData(__cond_30, () -> {\n                true\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            })(),\n            () -> {\n                (__lhs_0_53) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_53)))\n                }\n            },\n            () -> {\n                (__29) -> {\n                    error()\n                }\n            }\n        )()(__cond_30)\n    };\n    __module__CapoHelpers__DgDataDetails[]__outputData = (self_211) -> {\n        __cond_31 = __helios__txoutputdatum__inline(self_50 = __module__CapoHelpers__DgDataDetails[]__output(self_211);\n        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_50))))));\n        __core__ifThenElse(\n            __core__chooseData(__cond_31, () -> {\n                true\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            })(),\n            () -> {\n                (__lhs_0_54) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_54)))\n                }\n            },\n            () -> {\n                (__30) -> {\n                    error()\n                }\n            }\n        )()(__cond_31)\n    };\n    __module__CapoHelpers__CapoCtx[]__updatingDgData = (__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1, self_218, recIdBytes_2) -> {\n        input_3 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate, self_218, recIdBytes_2);\n        output_4 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1(self_218, recIdBytes_2);\n        mph_21 = __core__unBData(__core__headList(self_218));\n        __module__CapoHelpers__DgDataDetails[]____new(__core__constrData(3, __core__mkCons(input_3, __core__mkCons(output_4, __core__mkNilData(())))), recIdBytes_2, mph_21)\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_220) -> {\n        __cond_33 = __core__headList(__core__tailList(self_220));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 0),\n            () -> {\n                (__lhs_0_65) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 1),\n                    () -> {\n                        (__lhs_0_64) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_57) -> {\n                            utxo_5 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_57))));\n                            (activity_6) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_6)), 2),\n                                    () -> {\n                                        (__lhs_0_63) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_6)), 4),\n                                            () -> {\n                                                (__lhs_0_62) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_6)), 1),\n                                                    () -> {\n                                                        (__lhs_0_61) -> {\n                                                            activity_6\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_6)), 5),\n                                                            () -> {\n                                                                (__lhs_0_60) -> {\n                                                                    activity_6\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_6)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_59) -> {\n                                                                            activity_6\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__lhs_0_58) -> {\n                                                                            activity_6\n                                                                        }\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()(activity_6)\n                            }(targetId = __core__headList(__core__sndPair(__core__unConstrData(utxo_5)));\n                            redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));\n                            (spendsExpectedInput) -> {\n                                __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {\n                                    x_4\n                                }, () -> {\n                                    error()\n                                })\n                            }(recurse_73 = (recurse_72, map_24) -> {\n                                __core__chooseList(map_24, () -> {\n                                    error()\n                                }, () -> {\n                                    item_7 = __core__fstPair(__core__headList__safe(map_24));\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),\n                                            () -> {\n                                                (sp) -> {\n                                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)\n                                                }\n                                            },\n                                            () -> {\n                                                (__1) -> {\n                                                    false\n                                                }\n                                            }\n                                        )()(item_7),\n                                        () -> {\n                                            item_7\n                                        },\n                                        () -> {\n                                            recurse_72(recurse_72, __core__tailList__safe(map_24))\n                                        }\n                                    )()\n                                })()\n                            };\n                            recurse_73(recurse_73, redeemers)))\n                        }\n                    }\n                )()\n            }\n        )()(__cond_33)\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_221, key_18) -> {\n        __helios__common__map_get(self_221, __core__bData(__core__encodeUtf8(key_18)), (x_5) -> {\n            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))\n        }, () -> {\n            __core__constrData(1, __core__mkNilData(()))\n        })\n    };\n    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_5, self_227) -> {\n        __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_179 = __module__CapoHelpers__CapoCtx[]__getCharterData_5(self_227);\n        __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_179))), __core__unBData(__core__headList(self_227)));\n        __core__ifThenElse(\n            cond,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), self_227)\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterData_9 = (self_233) -> {\n        __cond_39 = __core__headList(__core__tailList(self_233));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_39)), 1),\n            () -> {\n                (self_182) -> {\n                    data_144 = __core__headList(__core__sndPair(__core__unConstrData(self_182)));\n                    __helios__common__assert_constr_index(data_144, 0)\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_39)), 2),\n                    () -> {\n                        (self_184) -> {\n                            data_144 = __core__headList(__core__sndPair(__core__unConstrData(self_184)));\n                            __helios__common__assert_constr_index(data_144, 0)\n                        }\n                    },\n                    () -> {\n                        (__32) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_39)\n    };\n    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address_2, self_234) -> {\n        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_234)), #63686172746572);\n        capoAddr = __module__CapoHelpers__CapoCtx[]__address_2(self_234);\n        __cond_40 = __core__headList(__core__tailList(self_234));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_40)), 2),\n            () -> {\n                (__lhs_0_75) -> {\n                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline((self_50) -> {\n                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_50)))))\n                    }(self_115 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                    recurse_69 = (recurse_68, lst_12) -> {\n                        __core__chooseList(lst_12, () -> {\n                            error()\n                        }, () -> {\n                            item_6 = __core__headList__safe(lst_12);\n                            __core__ifThenElse(\n                                __core__ifThenElse(\n                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_6))), capoAddr),\n                                    () -> {\n                                        a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(item_6))))), charterAc_2);\n                                        __core__ifThenElse(\n                                            __core__lessThanEqualsInteger(a_3, 0),\n                                            false,\n                                            true\n                                        )\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )(),\n                                () -> {\n                                    item_6\n                                },\n                                () -> {\n                                    recurse_68(recurse_68, __core__tailList__safe(lst_12))\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_69(recurse_69, self_115))), 0)\n                }\n            },\n            () -> {\n                (__33) -> {\n                    error()\n                }\n            }\n        )()(__cond_40)\n    };\n    __module__CapoHelpers__CapoCtx[]__address_3 = (self_237) -> {\n        __helios__txinput__address(__cond_41 = __core__headList(__core__tailList(self_237));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_41)), 1),\n            () -> {\n                (self_18) -> {\n                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_41)), 2),\n                    () -> {\n                        (self_18) -> {\n                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))\n                        }\n                    },\n                    () -> {\n                        (__34) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_41))\n    };\n    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1 = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2, self_239, recIdBytes_6) -> {\n        hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(self_239, recIdBytes_6);\n        (__cond_43) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_43)), 1),\n                () -> {\n                    (__lhs_0_81) -> {\n                        error()\n                    }\n                },\n                () -> {\n                    (__lhs_0_80) -> {\n                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_80)))\n                    }\n                }\n            )()(__cond_43)\n        }(self_150 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n        __helios__common__find_safe(self_150, hasDD_1))\n    };\n    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3 = (self_240, id_4) -> {\n        capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_3(self_240);\n        (txin_4) -> {\n            __core__ifThenElse(\n                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),\n                () -> {\n                    data_167 = __helios__txoutputdatum__inline(self_50 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));\n                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_50))))));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_167)), 2),\n                        () -> {\n                            (__lhs_0_82) -> {\n                                x_7 = __core__ifThenElse(\n                                    __core__chooseData(data_167, () -> {\n                                        true\n                                    }, () -> {\n                                        false\n                                    }, () -> {\n                                        false\n                                    }, () -> {\n                                        false\n                                    }, () -> {\n                                        false\n                                    })(),\n                                    () -> {\n                                        (__lhs_0) -> {\n                                            fields_8 = __core__sndPair(__core__unConstrData(__lhs_0));\n                                            __cond_2 = __core__headList(fields_8);\n                                            __core__ifThenElse(\n                                                __core__chooseData(__cond_2, () -> {\n                                                    false\n                                                }, () -> {\n                                                    true\n                                                }, () -> {\n                                                    false\n                                                }, () -> {\n                                                    false\n                                                }, () -> {\n                                                    false\n                                                })(),\n                                                () -> {\n                                                    (__lhs_0_1) -> {\n                                                        __core__headList(fields_8)\n                                                    }\n                                                },\n                                                () -> {\n                                                    (__3) -> {\n                                                        error()\n                                                    }\n                                                }\n                                            )()(__cond_2)\n                                        }\n                                    },\n                                    () -> {\n                                        (__2) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(data_167);\n                                __core__ifThenElse(\n                                    __core__equalsByteString(id_4, #),\n                                    () -> {\n                                        true\n                                    },\n                                    () -> {\n                                        __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_7, #406964)), id_4)\n                                    }\n                                )()\n                            }\n                        },\n                        () -> {\n                            (__35) -> {\n                                false\n                            }\n                        }\n                    )()(data_167)\n                },\n                () -> {\n                    false\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3 = (self_242, recId_7) -> {\n        ac_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_242)), recId_7);\n        capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_3(self_242);\n        (__cond_46) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_46)), 1),\n                () -> {\n                    (__lhs_0_85) -> {\n                        error()\n                    }\n                },\n                () -> {\n                    (__lhs_0_84) -> {\n                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_84)))\n                    }\n                }\n            )()(__cond_46)\n        }(self_153 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n        __helios__common__find_safe(self_153, (txout) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),\n                () -> {\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_2)\n                },\n                () -> {\n                    false\n                }\n            )()\n        }))\n    };\n    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput, self_243) -> {\n        charter_1 = __core__headList(__core__tailList(self_243));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 1),\n            () -> {\n                (__lhs_0_91) -> {\n                    self_243\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 2),\n                    () -> {\n                        (__lhs_0_90) -> {\n                            self_243\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_86) -> {\n                            mph_24 = __core__unBData(__core__headList(self_243));\n                            charterAc_3 = __helios__assetclass__new(mph_24, #63686172746572);\n                            (__cond_48) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_48)), 1),\n                                    () -> {\n                                        (__lhs_0_89) -> {\n                                            __module__CapoHelpers__CapoCtx[]__withCharterInput(self_243)\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_88) -> {\n                                            charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_88)));\n                                            datum_4 = __helios__common__assert_constr_index(data_144 = __helios__txoutputdatum__inline(self_50 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));\n                                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_50))))));\n                                            __helios__common__assert_constr_index(data_144, 0), 0);\n                                            __core__mkCons(__core__bData(mph_24), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))\n                                        }\n                                    }\n                                )()(__cond_48)\n                            }(self_150 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                            __helios__common__find_safe(self_150, (txin_5) -> {\n                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_3);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            }))\n                        }\n                    }\n                )()\n            }\n        )()(charter_1)\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_244) -> {\n        charter_2 = __core__headList(__core__tailList(self_244));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),\n            () -> {\n                (__lhs_0_97) -> {\n                    self_244\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),\n                    () -> {\n                        (__lhs_0_96) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_92) -> {\n                            mph_25 = __core__unBData(__core__headList(self_244));\n                            charterAc_4 = __helios__assetclass__new(mph_25, #63686172746572);\n                            (charterUtxo_3) -> {\n                                datum_5 = __helios__common__assert_constr_index(data_144 = __helios__txoutputdatum__inline(self_50 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_50))))));\n                                __helios__common__assert_constr_index(data_144, 0), 0);\n                                __core__mkCons(__core__bData(mph_25), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))\n                            }((__cond_50) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_50)), 0),\n                                    () -> {\n                                        (self_21) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_94) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_50)\n                            }(self_150 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                            __helios__common__find_safe(self_150, (txin_6) -> {\n                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_4);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_2)\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_245) -> {\n        charter_3 = __core__headList(__core__tailList(self_245));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),\n            () -> {\n                (__lhs_0_101) -> {\n                    self_245\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),\n                    () -> {\n                        (__lhs_0_100) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_98) -> {\n                            mph_26 = __core__unBData(__core__headList(self_245));\n                            (utxo_8) -> {\n                                datum_6 = __helios__common__assert_constr_index(data_144 = __helios__txoutputdatum__inline(self_50 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_8))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_50))))));\n                                __helios__common__assert_constr_index(data_144, 0), 0);\n                                __core__mkCons(__core__bData(mph_26), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_8, __core__mkNilData(())))), __core__mkNilData(())))\n                            }(charterAc = __helios__assetclass__new(mph_26, #63686172746572);\n                            (__cond_12) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),\n                                    () -> {\n                                        (self_21) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_19) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_12)\n                            }(self_150 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                            __helios__common__find_safe(self_150, (txin) -> {\n                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_3)\n    };\n    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {\n        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));\n        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));\n        idxBytes = __core__serialiseData(__core__iData(seedIdx));\n        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));\n        txoInfo = __core__ifThenElse(\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),\n                false,\n                true\n            ),\n            () -> {\n                error()\n            },\n            () -> {\n                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)\n            }\n        )();\n        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));\n        (p) -> {\n            __core__appendString(__core__appendString(p, \"-\"), mhs)\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_255, fn_26) -> {\n        recurse_93 = (recurse_92, map_31) -> {\n            __core__chooseList(map_31, () -> {\n                ()\n            }, () -> {\n                head_48 = __core__headList__safe(map_31);\n                __core__chooseUnit(fn_26(__core__unBData(__core__fstPair(head_48)), __core__unIData(__core__sndPair(head_48))), recurse_92(recurse_92, __core__tailList__safe(map_31)))\n            })()\n        };\n        recurse_93(recurse_93, self_255)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__sort = (self_264, comp_4) -> {\n        recurse_65 = (recurse_64, lst_11) -> {\n            __core__chooseList(lst_11, () -> {\n                lst_11\n            }, () -> {\n                tail_3 = recurse_64(recurse_64, __core__tailList__safe(lst_11));\n                x_3 = __core__headList__safe(lst_11);\n                recurse_63 = (recurse_62, lst_9) -> {\n                    __core__chooseList(lst_9, () -> {\n                        __core__mkCons(x_3, lst_9)\n                    }, () -> {\n                        head_9 = __core__headList__safe(lst_9);\n                        __core__ifThenElse(\n                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head_9)), __core__unIData(__core__sndPair(head_9))),\n                            () -> {\n                                __core__mkCons(x_3, lst_9)\n                            },\n                            () -> {\n                                __core__mkCons(head_9, recurse_62(recurse_62, __core__tailList__safe(lst_9)))\n                            }\n                        )()\n                    })()\n                };\n                recurse_63(recurse_63, tail_3)\n            })()\n        };\n        recurse_65(recurse_65, self_264)\n    };\n    __module__CapoMintHelpers__validateUutMinting = (mph_30, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {\n        mkTokenName_1 = __core__ifThenElse(\n            __useopt__mkTokenName,\n            () -> {\n                mkTokenName\n            },\n            () -> {\n                __module__CapoMintHelpers__mkUutTnFactory(seed_2)\n            }\n        )();\n        otherMintedValue_1 = __core__ifThenElse(\n            __useopt__otherMintedValue,\n            () -> {\n                otherMintedValue\n            },\n            () -> {\n                __core__mkNilPairData(())\n            }\n        )();\n        result_3 = __core__chooseUnit(msg_1 = __core__appendString(\"-- uut purposes: \", __helios__list[__helios__string]__join(purposes));\n        (), (delegateApproval) -> {\n            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);\n            tokenNames = __helios__common__map(purposes, (item_14) -> {\n                s = mkTokenName_1(__core__decodeUtf8(__core__unBData(item_14)));\n                __core__bData(__core__encodeUtf8(s))\n            });\n            expectedValue = (a_12, b_11) -> {\n                __helios__value__add_or_subtract(a_12, b_11, __core__addInteger)\n            }(__helios__value__add_or_subtract(__core__mkNilPairData(()), otherMintedValue_1, __core__addInteger), self_265 = __helios__common__map(tokenNames, (item_13) -> {\n                __core__mapData(tn_2 = __core__decodeUtf8(__core__unBData(item_13));\n                tnBytes_1 = __core__encodeUtf8(tn_2);\n                __core__chooseUnit(__core__ifThenElse(\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),\n                        false,\n                        true\n                    ),\n                    () -> {\n                        ()\n                    },\n                    () -> {\n                        error()\n                    }\n                )(), __helios__value__new(__helios__assetclass__new(mph_30, tnBytes_1), 1)))\n            });\n            recurse_99 = (recurse_98, lst_25) -> {\n                __core__chooseList(lst_25, () -> {\n                    __core__mkNilPairData(())\n                }, () -> {\n                    (a_12, b_11) -> {\n                        __helios__value__add_or_subtract(a_12, b_11, __core__addInteger)\n                    }(__core__unMapData(__core__headList__safe(lst_25)), recurse_98(recurse_98, __core__tailList__safe(lst_25)))\n                })()\n            };\n            recurse_99(recurse_99, self_265));\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __helios__value__contains_policy(valueMinted, mph_30),\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_30), (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_4, i_12) -> {\n                ()\n            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_30);\n            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_3, i_11) -> {\n                ()\n            }), filteredOtherMint = __helios__common__filter(valueMinted, (pair_42) -> {\n                (b_28, __41) -> {\n                    __core__ifThenElse(\n                        __core__equalsByteString(b_28, mph_30),\n                        false,\n                        true\n                    )\n                }(__core__unBData(__core__fstPair(pair_42)), __core__unMapData(__core__sndPair(pair_42)))\n            }, __core__mkNilPairData(()));\n            __core__ifThenElse(\n                b = __helios__value__is_zero(filteredOtherMint);\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    msg_1 = __helios__value__show(__helios__value__get_assets(filteredOtherMint));\n                    ()\n                },\n                () -> {\n                    ()\n                }\n            )()), (thisPolicyMintOK) -> {\n                otherPoliciesMintOk = __core__ifThenElse(\n                    b = __helios__value__is_zero(otherMintedValue_1);\n                    __core__ifThenElse(\n                        b,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        remainingExpectedMint = __core__ifThenElse(\n                            __helios__value__contains_policy(expectedValue, mph_30),\n                            () -> {\n                                key_27 = __core__bData(mph_30);\n                                recurse_97 = (recurse_96, self_262) -> {\n                                    __core__chooseList(self_262, () -> {\n                                        self_262\n                                    }, () -> {\n                                        head_50 = __core__headList__safe(self_262);\n                                        tail_5 = __core__tailList__safe(self_262);\n                                        __core__ifThenElse(\n                                            __core__equalsData(key_27, __core__fstPair(head_50)),\n                                            () -> {\n                                                recurse_96(recurse_96, tail_5)\n                                            },\n                                            () -> {\n                                                __core__mkCons(head_50, recurse_96(recurse_96, tail_5))\n                                            }\n                                        )()\n                                    })()\n                                };\n                                recurse_97(recurse_97, expectedValue)\n                            },\n                            () -> {\n                                expectedValue\n                            }\n                        )();\n                        __core__ifThenElse(\n                            __helios__value__is_zero(remainingExpectedMint),\n                            () -> {\n                                true\n                            },\n                            () -> {\n                                result_3 = __core__chooseUnit(recurse_95 = (recurse_94, map_32) -> {\n                                    __core__chooseList(map_32, () -> {\n                                        ()\n                                    }, () -> {\n                                        head_49 = __core__headList__safe(map_32);\n                                        __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {\n                                            mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);\n                                            __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_3, expectedCount) -> {\n                                                __core__ifThenElse(\n                                                    (b) -> {\n                                                        __core__ifThenElse(\n                                                            b,\n                                                            false,\n                                                            true\n                                                        )\n                                                    }(__cond_60 = __helios__common__map_get(mintedThisPolicy, __core__bData(tokenName_3), (x_11) -> {\n                                                        __core__constrData(0, __core__mkCons(x_11, __core__mkNilData(())))\n                                                    }, () -> {\n                                                        __core__constrData(1, __core__mkNilData(()))\n                                                    });\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_60)), 1),\n                                                        () -> {\n                                                            (__lhs_0_124) -> {\n                                                                false\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_123) -> {\n                                                                actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_123))));\n                                                                __core__equalsInteger(actualCount, expectedCount)\n                                                            }\n                                                        }\n                                                    )()(__cond_60)),\n                                                    () -> {\n                                                        error()\n                                                    },\n                                                    () -> {\n                                                        ()\n                                                    }\n                                                )()\n                                            })\n                                        }(__core__unBData(__core__fstPair(head_49)), __core__unMapData(__core__sndPair(head_49))), recurse_94(recurse_94, __core__tailList__safe(map_32)))\n                                    })()\n                                };\n                                recurse_95(recurse_95, remainingExpectedMint), true);\n                                true\n                            }\n                        )()\n                    }\n                )();\n                __core__chooseUnit(__core__ifThenElse(\n                    otherPoliciesMintOk,\n                    () -> {\n                        ()\n                    },\n                    () -> {\n                        error()\n                    }\n                )(), __core__chooseUnit(__core__ifThenElse(\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(__helios__common__length(purposes), 1),\n                        false,\n                        true\n                    ),\n                    () -> {\n                        msg_1 = __core__appendString(__core__appendString(__core__appendString(\"✅ ok: minted uuts: {\", __helios__list[__helios__string]__join(purposes)), \"}\"), mkTokenName_1(\"\"));\n                        ()\n                    },\n                    () -> {\n                        msg_1 = __core__appendString(\"✅ ok: minted uut: \", d = __core__headList(tokenNames);\n                        __core__decodeUtf8(__core__unBData(d)));\n                        ()\n                    }\n                )(), otherPoliciesMintOk))\n            }(result_3 = __core__chooseUnit(__core__ifThenElse(\n                __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted)),\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__chooseUnit((cond) -> {\n                ()\n            }(result_3 = __core__chooseUnit(__core__ifThenElse(\n                b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_6) -> {\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_6))), seed_2)\n                });\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), true);\n            true), true));\n            true))))\n        }(__lhs_0_122 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n        charterAc_1 = __helios__assetclass__new(mph_30, #63686172746572);\n        hasCharter_1 = (txin_1) -> {\n            a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));\n            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_1);\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(a_3, 0),\n                false,\n                true\n            )\n        };\n        (charterUtxo_1) -> {\n            __helios__common__assert_constr_index(data_144 = __helios__txoutputdatum__inline(self_50 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));\n            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_50))))));\n            __helios__common__assert_constr_index(data_144, 0), 0)\n        }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),\n            () -> {\n                (self_21) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                }\n            },\n            () -> {\n                (__lhs_0_21) -> {\n                    (__cond_14) -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),\n                            () -> {\n                                (self_21) -> {\n                                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                }\n                            },\n                            () -> {\n                                (__lhs_0_22) -> {\n                                    error()\n                                }\n                            }\n                        )()(__cond_14)\n                    }(self_150 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                    __helios__common__find_safe(self_150, hasCharter_1))\n                }\n            }\n        )()(__cond_13)), 0);\n        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_122);\n        true));\n        __core__chooseUnit(__core__ifThenElse(\n            result_3,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), result_3)\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountWhenSlow = (self_273) -> {\n        __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_273)))))))\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingExpansionWhenFast = (self_274) -> {\n        __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_274))))))))\n    };\n    __module__VxfProtocol__VxfDestination[]__validate = (self_285) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(self_285)), 0),\n            () -> {\n                (__lhs_0_129) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(self_285)), 1),\n                    () -> {\n                        (__lhs_0_128) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(self_285)), 2),\n                            () -> {\n                                (__lhs_0_127) -> {\n                                    true\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(self_285)), 98),\n                                    () -> {\n                                        (__lhs_0_126) -> {\n                                            true\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_125) -> {\n                                            error()\n                                        }\n                                    }\n                                )()\n                            }\n                        )()\n                    }\n                )()\n            }\n        )()(self_285)\n    };\n    __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits = (self_291) -> {\n        __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_291)))))))\n    };\n    __module__MarketSaleData__OtherSaleStateV1[]__mustBeActive = (self_299) -> {\n        __core__ifThenElse(\n            __core__equalsData(__core__headList(__core__tailList(__core__tailList(self_299))), __core__constrData(1, __core__mkNilData(()))),\n            () -> {\n                true\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __module__MarketSaleData__OtherSaleStateV1[]__mustBePending = (self_300) -> {\n        __core__ifThenElse(\n            __core__equalsData(__core__headList(__core__tailList(__core__tailList(self_300))), __core__constrData(0, __core__mkNilData(()))),\n            () -> {\n                true\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __module__MarketSaleData__MarketSaleData[]__name = (self_311) -> {\n        d = __helios__common__mStruct_field(self_311, #6e616d65);\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __module__MarketSaleData__MarketSaleData[]__validate = (self_315) -> {\n        __core__chooseUnit(cond = __core__equalsString(d = __helios__common__mStruct_field(self_315, #747065);\n        __core__decodeUtf8(__core__unBData(d)), \"mktSale\");\n        __core__ifThenElse(\n            cond,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), __core__chooseUnit((cond) -> {\n            __core__ifThenElse(\n                cond,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )()\n        }(a_3 = __core__lengthOfByteString(self_68 = __module__MarketSaleData__MarketSaleData[]__name(self_315);\n        __core__serialiseData(__core__bData(__core__encodeUtf8(self_68))));\n        __core__ifThenElse(\n            __core__lessThanEqualsInteger(a_3, 10),\n            false,\n            true\n        )), (saleAssets) -> {\n            __core__chooseUnit(cond = __core__equalsInteger(__core__multiplyInteger(__module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(saleAssets), (self_314, key_28) -> {\n                __helios__common__map_get(self_314, __core__bData(key_28), __core__unIData, () -> {\n                    error()\n                })\n            }(__helios__value__get_policy(__helios__value__get_assets(__core__unMapData(__core__headList(saleAssets))), __core__unBData(__core__headList(__core__tailList(__core__tailList(saleAssets))))), __core__unBData(__core__headList(__core__tailList(__core__tailList(__core__tailList(saleAssets))))))), __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(saleAssets)))))));\n            __core__ifThenElse(\n                cond,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__chooseUnit((cond) -> {\n                __core__ifThenElse(\n                    cond,\n                    () -> {\n                        ()\n                    },\n                    () -> {\n                        error()\n                    }\n                )()\n            }(a_3 = __helios__common__length(__helios__value__get_assets(__core__unMapData(__core__headList(saleAssets))));\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(a_3, 0),\n                false,\n                true\n            )), __core__chooseUnit((cond) -> {\n                __core__ifThenElse(\n                    cond,\n                    () -> {\n                        ()\n                    },\n                    () -> {\n                        error()\n                    }\n                )()\n            }(a_3 = __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(saleAssets);\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(a_3, 0),\n                false,\n                true\n            )), __core__chooseUnit((cond) -> {\n                __core__ifThenElse(\n                    cond,\n                    () -> {\n                        ()\n                    },\n                    () -> {\n                        error()\n                    }\n                )()\n            }(a_3 = __core__unIData(__core__headList(__core__tailList(saleAssets)));\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(a_3, 0),\n                false,\n                true\n            )), __core__chooseUnit(cond = __core__lessThanInteger(__core__unIData(__core__headList(__core__tailList(saleAssets))), __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(saleAssets));\n            __core__ifThenElse(\n                cond,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), true)))))\n        }(self_307 = __helios__common__mStruct_field(self_315, #64746c);\n        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_307)))))))))\n    };\n    __module__MarketSaleData__MarketSaleData[]__validatePendingDetails = (self_316) -> {\n        (threadInfo) -> {\n            __core__chooseUnit(cond = __core__equalsByteString(__core__unBData(__core__headList(__core__tailList(__core__tailList(threadInfo)))), #);\n            __core__ifThenElse(\n                cond,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__chooseUnit(cond = __core__equalsByteString(__core__unBData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(threadInfo)))))), __core__unBData(__helios__common__mStruct_field(self_316, #406964)));\n            __core__ifThenElse(\n                cond,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__chooseUnit(cond = __core__equalsInteger(__core__unIData(__core__headList(threadInfo)), 0);\n            __core__ifThenElse(\n                cond,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__chooseUnit(cond = __core__equalsInteger(__core__unIData(__core__headList(__core__tailList(threadInfo))), 0);\n            __core__ifThenElse(\n                cond,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), true))))\n        }(self_308 = __helios__common__mStruct_field(self_316, #64746c);\n        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_308))))))))\n    };\n    __module__MarketSaleData__MarketSaleData[]__validateCreatedDetails = (self_317) -> {\n        (saleState) -> {\n            __core__chooseUnit(cond = __core__equalsInteger(__core__unIData(__core__headList(__core__tailList(saleState))), 1000000);\n            __core__ifThenElse(\n                cond,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), (saleDetails) -> {\n                (saleAssets_1) -> {\n                    __core__ifThenElse(\n                        __core__ifThenElse(\n                            __core__ifThenElse(\n                                __module__MarketSaleData__OtherSaleStateV1[]__mustBePending(saleState),\n                                () -> {\n                                    self_278 = __core__unListData(__core__headList(saleDetails));\n                                    __core__chooseUnit((cond) -> {\n                                        __core__ifThenElse(\n                                            cond,\n                                            () -> {\n                                                ()\n                                            },\n                                            () -> {\n                                                error()\n                                            }\n                                        )()\n                                    }(a_3 = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_278))))));\n                                    __core__ifThenElse(\n                                        __core__lessThanEqualsInteger(a_3, 50000),\n                                        false,\n                                        true\n                                    )), __core__chooseUnit(cond = __core__lessThanInteger(__core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_278)))))), 500000);\n                                    __core__ifThenElse(\n                                        cond,\n                                        () -> {\n                                            ()\n                                        },\n                                        () -> {\n                                            error()\n                                        }\n                                    )(), __core__chooseUnit((cond) -> {\n                                        __core__ifThenElse(\n                                            cond,\n                                            () -> {\n                                                ()\n                                            },\n                                            () -> {\n                                                error()\n                                            }\n                                        )()\n                                    }(a_22 = __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountWhenSlow(self_278);\n                                    __core__ifThenElse(\n                                        __core__lessThanInteger(a_22, 0),\n                                        false,\n                                        true\n                                    )), __core__chooseUnit(cond = __core__lessThanInteger(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountWhenSlow(self_278), 1000000);\n                                    __core__ifThenElse(\n                                        cond,\n                                        () -> {\n                                            ()\n                                        },\n                                        () -> {\n                                            error()\n                                        }\n                                    )(), __core__chooseUnit((cond) -> {\n                                        __core__ifThenElse(\n                                            cond,\n                                            () -> {\n                                                ()\n                                            },\n                                            () -> {\n                                                error()\n                                            }\n                                        )()\n                                    }(a_3 = __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingExpansionWhenFast(self_278);\n                                    __core__ifThenElse(\n                                        __core__lessThanEqualsInteger(a_3, 50000),\n                                        false,\n                                        true\n                                    )), __core__chooseUnit(cond = __core__lessThanInteger(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingExpansionWhenFast(self_278), 10000000);\n                                    __core__ifThenElse(\n                                        cond,\n                                        () -> {\n                                            ()\n                                        },\n                                        () -> {\n                                            error()\n                                        }\n                                    )(), __core__chooseUnit((cond) -> {\n                                        __core__ifThenElse(\n                                            cond,\n                                            () -> {\n                                                ()\n                                            },\n                                            () -> {\n                                                error()\n                                            }\n                                        )()\n                                    }(a_22 = __core__unIData(__core__headList(__helios__common__struct_fields_after_6(self_278)));\n                                    __core__ifThenElse(\n                                        __core__lessThanInteger(a_22, 0),\n                                        false,\n                                        true\n                                    )), __core__chooseUnit(cond = __core__lessThanInteger(__core__unIData(__core__headList(__helios__common__struct_fields_after_6(self_278))), 2000000);\n                                    __core__ifThenElse(\n                                        cond,\n                                        () -> {\n                                            ()\n                                        },\n                                        () -> {\n                                            error()\n                                        }\n                                    )(), __core__chooseUnit((cond) -> {\n                                        __core__ifThenElse(\n                                            cond,\n                                            () -> {\n                                                ()\n                                            },\n                                            () -> {\n                                                error()\n                                            }\n                                        )()\n                                    }(a_22 = __core__unIData(__core__headList(__core__tailList(__helios__common__struct_fields_after_6(self_278))));\n                                    __core__ifThenElse(\n                                        __core__lessThanInteger(a_22, 0),\n                                        false,\n                                        true\n                                    )), __core__chooseUnit(cond = __core__lessThanInteger(__core__unIData(__core__headList(__core__tailList(__helios__common__struct_fields_after_6(self_278)))), 2000000);\n                                    __core__ifThenElse(\n                                        cond,\n                                        () -> {\n                                            ()\n                                        },\n                                        () -> {\n                                            error()\n                                        }\n                                    )(), __core__chooseUnit((cond) -> {\n                                        __core__ifThenElse(\n                                            cond,\n                                            () -> {\n                                                ()\n                                            },\n                                            () -> {\n                                                error()\n                                            }\n                                        )()\n                                    }(a_22 = __core__unIData(__core__headList(__core__tailList(__core__tailList(__helios__common__struct_fields_after_6(self_278)))));\n                                    __core__ifThenElse(\n                                        __core__lessThanInteger(a_22, 0),\n                                        false,\n                                        true\n                                    )), __core__chooseUnit((cond) -> {\n                                        __core__ifThenElse(\n                                            cond,\n                                            () -> {\n                                                ()\n                                            },\n                                            () -> {\n                                                error()\n                                            }\n                                        )()\n                                    }(a_24 = __core__unIData(__core__headList(__core__tailList(__core__tailList(__helios__common__struct_fields_after_6(self_278)))));\n                                    __core__lessThanInteger(a_24, 15000000)), true))))))))))))\n                                },\n                                () -> {\n                                    false\n                                }\n                            )(),\n                            () -> {\n                                (self_283, saleStartTime, totalSaleUnits) -> {\n                                    __core__chooseUnit(cond = __core__equalsInteger(__core__unIData(__core__headList(self_283)), saleStartTime);\n                                    __core__ifThenElse(\n                                        cond,\n                                        () -> {\n                                            ()\n                                        },\n                                        () -> {\n                                            error()\n                                        }\n                                    )(), __core__chooseUnit(cond = __core__equalsInteger(__core__unIData(__core__headList(__core__tailList(self_283))), saleStartTime);\n                                    __core__ifThenElse(\n                                        cond,\n                                        () -> {\n                                            ()\n                                        },\n                                        () -> {\n                                            error()\n                                        }\n                                    )(), __core__chooseUnit(cond = __core__equalsInteger(__core__unIData(__core__headList(__core__tailList(__core__tailList(self_283)))), totalSaleUnits);\n                                    __core__ifThenElse(\n                                        cond,\n                                        () -> {\n                                            ()\n                                        },\n                                        () -> {\n                                            error()\n                                        }\n                                    )(), __core__chooseUnit(cond = __core__equalsInteger(__core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(self_283))))), 0);\n                                    __core__ifThenElse(\n                                        cond,\n                                        () -> {\n                                            ()\n                                        },\n                                        () -> {\n                                            error()\n                                        }\n                                    )(), true))))\n                                }(__core__unListData(__core__headList(saleState)), __core__unIData(__core__headList(__core__tailList(saleDetails))), __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(saleAssets_1))\n                            },\n                            () -> {\n                                false\n                            }\n                        )(),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }(self_307 = __helios__common__mStruct_field(self_317, #64746c);\n                __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_307)))))))\n            }(self_306 = __helios__common__mStruct_field(self_317, #64746c);\n            __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_306)))))))\n        }(self_305 = __helios__common__mStruct_field(self_317, #64746c);\n        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305)))))\n    };\n    __module__DynamicSaleV1__maxReal = (a_31, b_29) -> {\n        __core__ifThenElse(\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(a_31, b_29),\n                false,\n                true\n            ),\n            () -> {\n                a_31\n            },\n            () -> {\n                b_29\n            }\n        )()\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace_3 = (self_337) -> {\n        (chunkUnitCount_1) -> {\n            b_15 = __helios__int____div1(__core__quotientInteger(__core__multiplyInteger(self_269 = __core__unListData(__core__headList(self_337));\n            __core__unIData(__core__headList(__core__tailList(self_269))), 100), 3600000), 100000000);\n            __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(__core__multiplyInteger(chunkUnitCount_1, 1000000), 10000000), b_15))\n        }((self_281) -> {\n            __core__unIData(__core__headList(__core__tailList(__core__tailList(self_281))))\n        }(self_327 = __core__unListData(__core__headList(__core__tailList(self_337)));\n        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_327)))))))))\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace_4 = (self_341) -> {\n        purchase_1 = __core__unListData(__core__headList(__core__tailList(self_341)));\n        settings_1 = __core__unListData(__core__headList(self_341));\n        inferredPace_2 = __core__unIData(__core__headList(purchase_1));\n        nextPaceWeight = __core__ifThenElse(\n            b_3 = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(purchase_1))))));\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(inferredPace_2, b_3),\n                false,\n                true\n            ),\n            () -> {\n                __core__unIData(__core__headList(__helios__common__struct_fields_after_6(settings_1)))\n            },\n            () -> {\n                __core__ifThenElse(\n                    b_3 = __module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace_3(self_341);\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(inferredPace_2, b_3),\n                        false,\n                        true\n                    ),\n                    () -> {\n                        1000000\n                    },\n                    () -> {\n                        __core__chooseUnit(msg_1 = __core__appendString(\"      ---- hoursSinceLastPurchase \", __helios__real__show(__core__unIData(__core__headList(__core__tailList(purchase_1)))));\n                        (), __core__chooseUnit(msg_1 = __core__appendString(\"      ---- * dynaPaceIdleDecayRate \", __helios__real__show(__core__unIData(__core__headList(__core__tailList(__helios__common__struct_fields_after_6(settings_1))))));\n                        (), __module__DynamicSaleV1__maxReal(1000000, (a_17, b_16) -> {\n                            __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_17, b_16), 100000))\n                        }(__core__unIData(__core__headList(__core__tailList(purchase_1))), __core__unIData(__core__headList(__core__tailList(__helios__common__struct_fields_after_6(settings_1))))))))\n                    }\n                )()\n            }\n        )();\n        psp = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(purchase_1))))));\n        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(__core__addInteger(__helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(inferredPace_2, nextPaceWeight), 100000)), psp), 10000000), __core__addInteger(nextPaceWeight, 1000000)))\n    };\n    __module__BasicDelegate__checkOneActivity_1 = (__module__BasicDelegate__checkOneActivity, dgtionDatum, activity_9, dd, baseCctx) -> {\n        checkNonDelegatedActivities = __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 8),\n            () -> {\n                (__lhs_0_266) -> {\n                    activities_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_266))));\n                    cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx);\n                    result_3 = __helios__common__all(activities_2, (rawActivity_2) -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 6),\n                            () -> {\n                                (__lhs_0_288) -> {\n                                    error()\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 5),\n                                    () -> {\n                                        (__lhs_0_287) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 7),\n                                            () -> {\n                                                (__lhs_0_286) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 2),\n                                                    () -> {\n                                                        (__lhs_0_285) -> {\n                                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_2, dd, cctx_6)\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 3),\n                                                            () -> {\n                                                                (__lhs_0_284) -> {\n                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_2, dd, cctx_6)\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 4),\n                                                                    () -> {\n                                                                        (__lhs_0_283) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 9),\n                                                                            () -> {\n                                                                                (__lhs_0_282) -> {\n                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_2, dd, cctx_6)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 1),\n                                                                                    () -> {\n                                                                                        (__lhs_0_281) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 0),\n                                                                                            () -> {\n                                                                                                (__lhs_0_280) -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__lhs_0_279) -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()(rawActivity_2)\n                    });\n                    __core__chooseUnit(__core__ifThenElse(\n                        result_3,\n                        () -> {\n                            ()\n                        },\n                        () -> {\n                            error()\n                        }\n                    )(), result_3)\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 1),\n                    () -> {\n                        (__lhs_0_260) -> {\n                            innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_260)));\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 0),\n                                () -> {\n                                    (__lhs_0_264) -> {\n                                        seed_9 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_264)));\n                                        (purpose_7) -> {\n                                            otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(dd))), __core__unBData(__core__headList(__core__tailList(__core__tailList(dd))))), -1);\n                                            (tnStr_3) -> {\n                                                cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(baseCctx);\n                                                (isUpdatingCharter) -> {\n                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_7)), __core__mkNilData(())), false, (), true, otherMintedValue_2);\n                                                    __core__ifThenElse(\n                                                        isMintingOk,\n                                                        () -> {\n                                                            isUpdatingCharter\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                }(__cond_118 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_118)), 5),\n                                                    () -> {\n                                                        (__lhs_0_265) -> {\n                                                            true\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        (__78) -> {\n                                                            false\n                                                        }\n                                                    }\n                                                )()(__cond_118))\n                                            }(self_14 = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd))));\n                                            __core__ifThenElse(\n                                                __helios__string__is_valid_utf8(self_14),\n                                                () -> {\n                                                    __core__decodeUtf8__safe(self_14)\n                                                },\n                                                () -> {\n                                                    __helios__bytearray__show(self_14)\n                                                }\n                                            )())\n                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_264))));\n                                        __core__decodeUtf8(__core__unBData(d)))\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 1),\n                                        () -> {\n                                            (__lhs_0_263) -> {\n                                                __core__equalsInteger((self_24, assetClass_1) -> {\n                                                    __common26 = __core__unConstrData(assetClass_1);\n                                                    __common27 = __core__sndPair(__common26);\n                                                    mph_3 = __core__headList(__common27);\n                                                    tokenName_1 = __core__headList(__core__tailList(__common27));\n                                                    outer_1 = (outer, inner, map) -> {\n                                                        __core__chooseList(map, () -> {\n                                                            error()\n                                                        }, () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_3),\n                                                                () -> {\n                                                                    inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))\n                                                                },\n                                                                () -> {\n                                                                    outer(outer, inner, __core__tailList__safe(map))\n                                                                }\n                                                            )()\n                                                        })()\n                                                    };\n                                                    outer_1(outer_1, (inner_1, map_1) -> {\n                                                        __core__chooseList(map_1, () -> {\n                                                            error()\n                                                        }, () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),\n                                                                () -> {\n                                                                    __core__unIData(__core__sndPair(__core__headList__safe(map_1)))\n                                                                },\n                                                                () -> {\n                                                                    inner_1(inner_1, __core__tailList__safe(map_1))\n                                                                }\n                                                            )()\n                                                        })()\n                                                    }, self_24)\n                                                }(__helios__tx__minted(__helios__scriptcontext__tx), __helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(dd))), __core__unBData(__core__headList(__core__tailList(__core__tailList(dd)))))), -1)\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_261) -> {\n                                                error()\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(innerActivity)\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 0),\n                            () -> {\n                                (__lhs_0_161) -> {\n                                    dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_161)));\n                                    cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__withCharterInput_1(mph_28 = __core__unBData(__core__headList(__core__tailList(dd)));\n                                    __core__mkCons(__core__bData(mph_28), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())))));\n                                    __common16 = __module__CapoHelpers__CapoCtx[]__getCharterData_9(cctx_4);\n                                    __core__chooseUnit(__cond_115 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);\n                                    __common25 = __core__fstPair(__core__unConstrData(__cond_115));\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__common25, 0),\n                                        () -> {\n                                            (__lhs_0_259) -> {\n                                                cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_259)));\n                                                __core__ifThenElse(\n                                                    __core__equalsData(cCLA, dCLA),\n                                                    () -> {\n                                                        ()\n                                                    },\n                                                    () -> {\n                                                        error()\n                                                    }\n                                                )()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__common25, 5),\n                                                () -> {\n                                                    (__lhs_0_257) -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                                            () -> {\n                                                                (__lhs_0_258) -> {\n                                                                    ()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__77) -> {\n                                                                    error()\n                                                                }\n                                                            }\n                                                        )()(dCLA)\n                                                    }\n                                                },\n                                                () -> {\n                                                    (__76) -> {\n                                                        error()\n                                                    }\n                                                }\n                                            )()\n                                        }\n                                    )()(__cond_115), neededRole = __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 4),\n                                        () -> {\n                                            (__lhs_0_112) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                () -> {\n                                                    (__lhs_0_111) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                        () -> {\n                                                            (__lhs_0_110) -> {\n                                                                __core__constrData(1, __core__mkNilData(()))\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                                () -> {\n                                                                    (__lhs_0_109) -> {\n                                                                        __core__constrData(0, __core__mkNilData(()))\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                                        () -> {\n                                                                            (__lhs_0_108) -> {\n                                                                                __core__constrData(1, __core__mkNilData(()))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                                () -> {\n                                                                                    (__lhs_0_107) -> {\n                                                                                        __core__constrData(6, __core__mkNilData(()))\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    (__lhs_0_106) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()(dCLA);\n                                    myCurrentRole = __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 7),\n                                        () -> {\n                                            (__lhs_0_165) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 1),\n                                                () -> {\n                                                    (__lhs_0_164) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 0),\n                                                        () -> {\n                                                            (__lhs_0_163) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 6),\n                                                                () -> {\n                                                                    __common14 = __core__headList(cctx_4);\n                                                                    __common15 = __core__unBData(__common14);\n                                                                    (__lhs_0_162) -> {\n                                                                        __core__ifThenElse(\n                                                                            input_4 = __helios__scriptcontext__get_current_input();\n                                                                            acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__common16), __common15);\n                                                                            a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_4))));\n                                                                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), acMintDgt);\n                                                                            __core__ifThenElse(\n                                                                                __core__lessThanEqualsInteger(a_3, 0),\n                                                                                false,\n                                                                                true\n                                                                            ),\n                                                                            () -> {\n                                                                                __core__constrData(0, __core__mkNilData(()))\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    input_5 = __helios__scriptcontext__get_current_input();\n                                                                                    acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__common16)))), __common15);\n                                                                                    a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_5))));\n                                                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), acSpendDgt);\n                                                                                    __core__ifThenElse(\n                                                                                        __core__lessThanEqualsInteger(a_3, 0),\n                                                                                        false,\n                                                                                        true\n                                                                                    ),\n                                                                                    () -> {\n                                                                                        __core__constrData(1, __core__mkNilData(()))\n                                                                                    },\n                                                                                    () -> {\n                                                                                        error()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__46) -> {\n                                                                        error()\n                                                                    }\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()(neededRole);\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                            () -> {\n                                                (__lhs_0_253) -> {\n                                                    seed_8 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_253)));\n                                                    (purpose_6) -> {\n                                                        mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_8);\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                            () -> {\n                                                                (__lhs_0_254) -> {\n                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                        __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_8, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_6)), __core__mkNilData(())), true, mkTn, false, ()),\n                                                                        () -> {\n                                                                            ()\n                                                                        },\n                                                                        () -> {\n                                                                            ()\n                                                                        }\n                                                                    )(), (__cond_114) -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_114)), 1),\n                                                                            () -> {\n                                                                                (__lhs_0_256) -> {\n                                                                                    error()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__lhs_0_255) -> {\n                                                                                    dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_255))));\n                                                                                    __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);\n                                                                                    __core__decodeUtf8(__core__unBData(d)), mkTn(purpose_6));\n                                                                                    __core__ifThenElse(\n                                                                                        cond,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __core__unBData(__core__headList(__core__tailList(dd)))))\n                                                                                }\n                                                                            }\n                                                                        )()(__cond_114)\n                                                                    }((self_229) -> {\n                                                                        __helios__common__map_get(self_229, __core__bData(__core__encodeUtf8(purpose_6)), (x_6) -> {\n                                                                            __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))\n                                                                        }, () -> {\n                                                                            __core__constrData(1, __core__mkNilData(()))\n                                                                        })\n                                                                    }(self_176 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_3, cctx_4);\n                                                                    __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_176)))))))))\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__75) -> {\n                                                                    error()\n                                                                }\n                                                            }\n                                                        )()(myCurrentRole)\n                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_253))));\n                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                    () -> {\n                                                        (__lhs_0_201) -> {\n                                                            charterData_4 = __helios__common__assert_constr_index(__common16, 0);\n                                                            __common0 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))));\n                                                            nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_3, cctx_4);\n                                                            nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));\n                                                            newChange = __core__headList(nextChangeList);\n                                                            __lhs_0_202 = __helios__common__assert_constr_index(newChange, 0);\n                                                            __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_202))));\n                                                            __common7 = __core__tailList(__lhs_0_0_2);\n                                                            action = __core__headList(__lhs_0_0_2);\n                                                            __common19 = __core__unConstrData(action);\n                                                            __common21 = __core__equalsInteger(__core__fstPair(__common19), 1);\n                                                            role_2 = __core__headList(__common7);\n                                                            __common3 = __core__equalsInteger(__core__fstPair(__core__unConstrData(role_2)), 4);\n                                                            OdgtLink = __core__headList(__core__tailList(__common7));\n                                                            newDgtRoleName = __core__ifThenElse(\n                                                                __common3,\n                                                                () -> {\n                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name\n                                                                },\n                                                                () -> {\n                                                                    (__59) -> {\n                                                                        error()\n                                                                    }\n                                                                }\n                                                            )()(role_2);\n                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                __common21,\n                                                                () -> {\n                                                                    (__lhs_0_251) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__73) -> {\n                                                                        ()\n                                                                    }\n                                                                }\n                                                            )()(action), __core__chooseUnit((cond) -> {\n                                                                __core__ifThenElse(\n                                                                    cond,\n                                                                    () -> {\n                                                                        ()\n                                                                    },\n                                                                    () -> {\n                                                                        error()\n                                                                    }\n                                                                )()\n                                                            }(self_368 = __core__tailList(nextChangeList);\n                                                            __core__equalsData(__core__listData(self_368), __core__listData(__common0))), __core__ifThenElse(\n                                                                __common21,\n                                                                () -> {\n                                                                    (__lhs_0_250) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                        () -> {\n                                                                            (__lhs_0_249) -> {\n                                                                                __common22 = __core__sndPair(__core__unConstrData(__lhs_0_249));\n                                                                                __common23 = __core__tailList(__common22);\n                                                                                seed_7 = __core__headList(__common22);\n                                                                                (purpose_5) -> {\n                                                                                    (idPrefix_9) -> {\n                                                                                        (callback_20) -> {\n                                                                                            callback_20(seed_7, purpose_5, idPrefix_9)\n                                                                                        }\n                                                                                    }(d = __core__headList(__core__tailList(__common23));\n                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                }(d = __core__headList(__common23);\n                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            (__lhs_0_248) -> {\n                                                                                seed_6 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_248)));\n                                                                                (purpose_4) -> {\n                                                                                    (idPrefix_8) -> {\n                                                                                        (callback_19) -> {\n                                                                                            callback_19(seed_6, purpose_4, idPrefix_8)\n                                                                                        }\n                                                                                    }(d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_248)))));\n                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_248))));\n                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                            }\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(action)((seed_5, purpose_3, pendingActionIdPrefix) -> {\n                                                                possibleMintDgtVerifications = __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                    () -> {\n                                                                        (__lhs_0_220) -> {\n                                                                            true\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                            () -> {\n                                                                                (__lhs_0_204) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 1),\n                                                                                        () -> {\n                                                                                            (__lhs_0_212) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__61) -> {\n                                                                                                mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);\n                                                                                                mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_3)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, ());\n                                                                                                dgtLink_2 = __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_206) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (self_228) -> {\n                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_228))))\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()(OdgtLink);\n                                                                                                (__common1) -> {\n                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                        __core__equalsString(__common1, mkTokenName_2(purpose_3)),\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), (delegateTakesOwnership) -> {\n                                                                                                        possibleExtraReplacementCheck = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_207) -> {\n                                                                                                                    __core__chooseUnit(__cond_96 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_96)), 0),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_209) -> {\n                                                                                                                                dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_209)));\n                                                                                                                                entryType_1 = __helios__common__mStruct_field(dde, #747065);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_211) -> {\n                                                                                                                                            (idPrefix_7) -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __core__equalsString(idPrefix_7, pendingActionIdPrefix),\n                                                                                                                                                    () -> {\n                                                                                                                                                        ()\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_211))));\n                                                                                                                                            __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__63) -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(entryType_1)\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_208) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(__cond_96), true)\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                (__62) -> {\n                                                                                                                    true\n                                                                                                                }\n                                                                                                            }\n                                                                                                        )()(action);\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__ifThenElse(\n                                                                                                                mintedDgTkn,\n                                                                                                                () -> {\n                                                                                                                    true\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    false\n                                                                                                                }\n                                                                                                            )(),\n                                                                                                            () -> {\n                                                                                                                possibleExtraReplacementCheck\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                false\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                        assertion_2,\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), true)))\n                                                                                                }(d = __core__headList(dgtLink_2);\n                                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                                            }\n                                                                                        }\n                                                                                    )()(action)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__60) -> {\n                                                                                    error()\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()(myCurrentRole);\n                                                                otherPossibleVerifications = __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                    () -> {\n                                                                        (__lhs_0_247) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                            () -> {\n                                                                                (__lhs_0_221) -> {\n                                                                                    isNotADuplicate = __helios__common__all(__common0, (pdChange_2) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),\n                                                                                            () -> {\n                                                                                                (__lhs_0_222) -> {\n                                                                                                    __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_222))));\n                                                                                                    pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_223) -> {\n                                                                                                                changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_223);\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsString(changingDgtName, newDgtRoleName),\n                                                                                                                    false,\n                                                                                                                    true\n                                                                                                                )\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__67) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()(pendingRole)\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__66) -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            }\n                                                                                        )()(pdChange_2)\n                                                                                    });\n                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                        isNotADuplicate,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                    possibleReplacementIsCorrect = __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                                        () -> {\n                                                                                            (__lhs_0_245) -> {\n                                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_246) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__72) -> {\n                                                                                                            ()\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()(existingRoleEntryMaybe), true)\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                () -> {\n                                                                                                    __common17 = __core__unConstrData(role_2);\n                                                                                                    __common18 = __core__fstPair(__common17);\n                                                                                                    __common24 = __core__equalsInteger(__common18, 2);\n                                                                                                    (__lhs_0_226) -> {\n                                                                                                        replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_226))))));\n                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                            __common24,\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_244) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__common18, 3),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_243) -> {\n                                                                                                                            error()\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__common18, 7),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_242) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__71) -> {\n                                                                                                                                    ()\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(role_2), existingDgtLink_1 = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_229) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_227) -> {\n                                                                                                                    __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_227)));\n                                                                                                                    entryType_2 = __helios__common__mStruct_field(__lhs_0_0_4, #747065);\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),\n                                                                                                                        () -> {\n                                                                                                                            (self_168) -> {\n                                                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_168))))\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__69) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(entryType_2)\n                                                                                                                }\n                                                                                                            }\n                                                                                                        )()(existingRoleEntryMaybe);\n                                                                                                        existingDgTkn = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__common18, 0),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_237) -> {\n                                                                                                                    some_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                                    __core__constrData(0, __core__mkCons(some_6, __core__mkNilData(())))\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__common18, 1),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_236) -> {\n                                                                                                                            some_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                                            __core__constrData(0, __core__mkCons(some_6, __core__mkNilData(())))\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __common3,\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_235) -> {\n                                                                                                                                    some_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                                                    __core__constrData(0, __core__mkCons(some_6, __core__mkNilData(())))\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__common18, 5),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_234) -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(__common18, 6),\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_233) -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __common24,\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_232) -> {\n                                                                                                                                                            error()\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __core__equalsInteger(__common18, 3),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_231) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_230) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }\n                                                                                                                                        )()\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(role_2);\n                                                                                                        __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));\n                                                                                                        __core__ifThenElse(\n                                                                                                            cond,\n                                                                                                            () -> {\n                                                                                                                ()\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        )(), true))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__lhs_0_224) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(action);\n                                                                                    __core__ifThenElse(\n                                                                                        isNotADuplicate,\n                                                                                        () -> {\n                                                                                            possibleReplacementIsCorrect\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )())\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__65) -> {\n                                                                                    error()\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()(myCurrentRole);\n                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                    __core__equalsInteger(__helios__common__length(__common0), 0),\n                                                                    () -> {\n                                                                        ()\n                                                                    },\n                                                                    () -> {\n                                                                        error()\n                                                                    }\n                                                                )(), __core__ifThenElse(\n                                                                    possibleMintDgtVerifications,\n                                                                    () -> {\n                                                                        otherPossibleVerifications\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )())\n                                                            })))\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                            () -> {\n                                                                (__lhs_0_200) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_177) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                                            () -> {\n                                                                                (__lhs_0_168) -> {\n                                                                                    manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_168)));\n                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 0),\n                                                                                        () -> {\n                                                                                            (__lhs_0_176) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 1),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_175) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 2),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_170) -> {\n                                                                                                                (key_34) -> {\n                                                                                                                    tokenName_4 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_170)))));\n                                                                                                                    charterData_3 = __helios__common__assert_constr_index(__common16, 0);\n                                                                                                                    nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_3, cctx_4);\n                                                                                                                    __common2 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData))));\n                                                                                                                    (refInput) -> {\n                                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                                            __core__equalsData(refInput, refInput),\n                                                                                                                            () -> {\n                                                                                                                                ()\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        )(), __core__chooseUnit(__cond_74 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common2, key_34);\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_74)), 1),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_174) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_171) -> {\n                                                                                                                                    __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_171)));\n                                                                                                                                    entryType = __helios__common__mStruct_field(__lhs_0_0, #747065);\n                                                                                                                                    tn_7 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0, #746e));\n                                                                                                                                    mph_33 = __helios__common__mStruct_field(__lhs_0_0, #6d7068);\n                                                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                        __core__equalsByteString(tn_7, tokenName_4),\n                                                                                                                                        () -> {\n                                                                                                                                            ()\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    )(), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_33)), 0),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_173) -> {\n                                                                                                                                                error()\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__49) -> {\n                                                                                                                                                ()\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(mph_33), __core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_172) -> {\n                                                                                                                                                ()\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__48) -> {\n                                                                                                                                                error()\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(entryType)))\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()(__cond_74), (cond) -> {\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                cond,\n                                                                                                                                () -> {\n                                                                                                                                    ()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            )()\n                                                                                                                        }(self_383 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));\n                                                                                                                        __core__equalsData(__core__mapData(self_383), __core__mapData(key_33 = __core__bData(__core__encodeUtf8(key_34));\n                                                                                                                        recurse_103 = (recurse_102, self_382) -> {\n                                                                                                                            __core__chooseList(self_382, () -> {\n                                                                                                                                self_382\n                                                                                                                            }, () -> {\n                                                                                                                                head_103 = __core__headList__safe(self_382);\n                                                                                                                                tail_7 = __core__tailList__safe(self_382);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsData(key_33, __core__fstPair(head_103)),\n                                                                                                                                    () -> {\n                                                                                                                                        recurse_102(recurse_102, tail_7)\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __core__mkCons(head_103, recurse_102(recurse_102, tail_7))\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            })()\n                                                                                                                        };\n                                                                                                                        recurse_103(recurse_103, __common2))))))\n                                                                                                                    }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3(cctx_4, tokenName_4);\n                                                                                                                    (__cond_42) -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_42)), 1),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_79) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (self_21) -> {\n                                                                                                                                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()(__cond_42)\n                                                                                                                    }(self_150 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                                                                                                                    __helios__common__find_safe(self_150, hasDD)))\n                                                                                                                }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_170)));\n                                                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 3),\n                                                                                                                () -> {\n                                                                                                                    (__lhs_0_169) -> {\n                                                                                                                        error()\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    (__47) -> {\n                                                                                                                        ()\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(manifestActivity), true)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                                                    () -> {\n                                                                                        (__lhs_0_167) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__lhs_0_166) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()(dCLA),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )())\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 5),\n                                    () -> {\n                                        (__lhs_0_160) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 6),\n                                            () -> {\n                                                (__lhs_0_159) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 7),\n                                                    () -> {\n                                                        (__lhs_0_157) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 2),\n                                                            () -> {\n                                                                (__lhs_0_156) -> {\n                                                                    true\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_155) -> {\n                                                                            true\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 4),\n                                                                            () -> {\n                                                                                (__lhs_0_154) -> {\n                                                                                    true\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__lhs_0_153) -> {\n                                                                                    true\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()\n                    }\n                )()\n            }\n        )()(activity_9);\n        __core__chooseUnit(__core__ifThenElse(\n            checkNonDelegatedActivities,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), (result_3) -> {\n            __core__chooseUnit(__core__ifThenElse(\n                result_3,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), result_3)\n        }(cctx = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1, baseCctx);\n        __core__ifThenElse(\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 1),\n                () -> {\n                    (__lhs_0_150) -> {\n                        true\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 0),\n                        () -> {\n                            (__lhs_0_149) -> {\n                                error()\n                            }\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 3),\n                                () -> {\n                                    (__lhs_0_146) -> {\n                                        ma_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_146)));\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(ma_2)), 1),\n                                            () -> {\n                                                (__lhs_0_148) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                (__lhs_0_147) -> {\n                                                    seed_3 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_147)));\n                                                    __core__chooseUnit((cond) -> {\n                                                        ()\n                                                    }(self_252 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx);\n                                                    true), mktSaleId = __module__CapoMintHelpers__mkUutTnFactory(seed_3)(\"mktSale\");\n                                                    (mktSaleDD_3) -> {\n                                                        mktSale = __module__CapoHelpers__DgDataDetails[]__outputData(mktSaleDD_3);\n                                                        __core__ifThenElse(\n                                                            __core__ifThenElse(\n                                                                __core__ifThenElse(\n                                                                    __module__MarketSaleData__MarketSaleData[]__validate(mktSale),\n                                                                    () -> {\n                                                                        __module__MarketSaleData__MarketSaleData[]__validateCreatedDetails(mktSale)\n                                                                    },\n                                                                    ()\n                                                                )(),\n                                                                () -> {\n                                                                    __module__MarketSaleData__MarketSaleData[]__validatePendingDetails(mktSale)\n                                                                },\n                                                                () -> {\n                                                                    false\n                                                                }\n                                                            )(),\n                                                            () -> {\n                                                                true\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    }(recIdBytes_1 = __core__encodeUtf8(mktSaleId);\n                                                    output_3 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3(cctx, recIdBytes_1);\n                                                    recIdAssetClass = __helios__assetclass__new(__core__unBData(__core__headList(cctx)), recIdBytes_1);\n                                                    minted = __helios__value__get_safe(__helios__tx__minted(__helios__scriptcontext__tx), recIdAssetClass);\n                                                    __core__chooseUnit(__core__ifThenElse(\n                                                        __core__equalsInteger(minted, 1),\n                                                        () -> {\n                                                            ()\n                                                        },\n                                                        () -> {\n                                                            error()\n                                                        }\n                                                    )(), mph_22 = __core__unBData(__core__headList(cctx));\n                                                    __module__CapoHelpers__DgDataDetails[]____new(__core__constrData(2, __core__mkCons(output_3, __core__mkNilData(()))), recIdBytes_1, mph_22))))\n                                                }\n                                            }\n                                        )()(ma_2)\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 2),\n                                        () -> {\n                                            (__lhs_0_139) -> {\n                                                x_13 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_139)));\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(x_13)), 0),\n                                                    () -> {\n                                                        (__lhs_0_145) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(x_13)), 1),\n                                                            () -> {\n                                                                (__lhs_0_144) -> {\n                                                                    saleId_1 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_144))));\n                                                                    mph_32 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_144)))));\n                                                                    tn_6 = __core__unBData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_144))))));\n                                                                    __core__chooseUnit((cond) -> {\n                                                                        ()\n                                                                    }(self_252 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx);\n                                                                    true), mktSaleDD_2 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3, cctx, saleId_1);\n                                                                    previous_2 = __module__CapoHelpers__DgDataDetails[]__inputData(mktSaleDD_2);\n                                                                    __core__ifThenElse(\n                                                                        updated = __module__CapoHelpers__DgDataDetails[]__outputData(mktSaleDD_2);\n                                                                        (outValue) -> {\n                                                                            (updatedAssetCount) -> {\n                                                                                (currentAssets) -> {\n                                                                                    (currentState) -> {\n                                                                                        (nextAssets) -> {\n                                                                                            (nextState) -> {\n                                                                                                isPrimary = __core__ifThenElse(\n                                                                                                    __core__equalsByteString(mph_32, __core__unBData(__core__headList(__core__tailList(__core__tailList(currentAssets))))),\n                                                                                                    () -> {\n                                                                                                        __core__equalsByteString(tn_6, __core__unBData(__core__headList(__core__tailList(__core__tailList(__core__tailList(currentAssets))))))\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )();\n                                                                                                (updatedAssetChunkSize) -> {\n                                                                                                    expectedAssetCount = __core__ifThenElse(\n                                                                                                        isPrimary,\n                                                                                                        () -> {\n                                                                                                            (existingAssetChunkSize) -> {\n                                                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                                                    __core__lessThanInteger(updatedAssetChunkSize, existingAssetChunkSize),\n                                                                                                                    () -> {\n                                                                                                                        error()\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        ()\n                                                                                                                    }\n                                                                                                                )(), __core__chooseUnit(msg_1 = __core__appendString(\"    ... ^ / saleUnits  \", __helios__int__show(__module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(nextAssets)));\n                                                                                                                (), (percentSupplied) -> {\n                                                                                                                    updatedAssetCount\n                                                                                                                }(b_22 = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(nextAssets))))));\n                                                                                                                __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(__core__multiplyInteger(100000000, updatedAssetCount), 10), b_22)))))\n                                                                                                            }(self_314 = __helios__value__get_policy(__core__unMapData(__core__headList(currentAssets)), mph_32);\n                                                                                                            __helios__common__map_get(self_314, __core__bData(tn_6), __core__unIData, () -> {\n                                                                                                                error()\n                                                                                                            }))\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            isEvenChunk = __core__equalsInteger(__core__modInteger(updatedAssetCount, __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(nextAssets)), 0);\n                                                                                                            __core__chooseUnit(msg_1 = __core__appendString(\"Expected chunks of \", __helios__int__show(__module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(nextAssets)));\n                                                                                                            (), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                __core__ifThenElse(\n                                                                                                                    isEvenChunk,\n                                                                                                                    false,\n                                                                                                                    true\n                                                                                                                ),\n                                                                                                                () -> {\n                                                                                                                    error()\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    ()\n                                                                                                                }\n                                                                                                            )(), __core__chooseUnit(msg_1 = __core__appendString(\"    ... ^ times sale-units  \", __helios__int__show(__module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(nextAssets)));\n                                                                                                            (), __core__multiplyInteger(updatedAssetChunkSize, __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(nextAssets)))))\n                                                                                                        }\n                                                                                                    )();\n                                                                                                    hasMatchyValue = __core__ifThenElse(\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__equalsInteger(updatedAssetCount, expectedAssetCount),\n                                                                                                            false,\n                                                                                                            true\n                                                                                                        ),\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            true\n                                                                                                        }\n                                                                                                    )();\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            hasMatchyValue,\n                                                                                                                            () -> {\n                                                                                                                                __module__MarketSaleData__OtherSaleStateV1[]__mustBePending(currentState)\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                false\n                                                                                                                            }\n                                                                                                                        )(),\n                                                                                                                        () -> {\n                                                                                                                            __module__MarketSaleData__OtherSaleStateV1[]__mustBePending(nextState)\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            false\n                                                                                                                        }\n                                                                                                                    )(),\n                                                                                                                    () -> {\n                                                                                                                        __module__MarketSaleData__MarketSaleData[]__validate(updated)\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        false\n                                                                                                                    }\n                                                                                                                )(),\n                                                                                                                () -> {\n                                                                                                                    __module__MarketSaleData__MarketSaleData[]__validateCreatedDetails(updated)\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    false\n                                                                                                                }\n                                                                                                            )(),\n                                                                                                            () -> {\n                                                                                                                __module__MarketSaleData__MarketSaleData[]__validatePendingDetails(updated)\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                false\n                                                                                                            }\n                                                                                                        )(),\n                                                                                                        () -> {\n                                                                                                            true\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }(self_314 = __helios__value__get_policy(__core__unMapData(__core__headList(nextAssets)), mph_32);\n                                                                                                __helios__common__map_get(self_314, __core__bData(tn_6), __core__unIData, () -> {\n                                                                                                    error()\n                                                                                                }))\n                                                                                            }(self_305 = __helios__common__mStruct_field(updated, #64746c);\n                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305)))))\n                                                                                        }(self_307 = __helios__common__mStruct_field(updated, #64746c);\n                                                                                        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_307)))))))\n                                                                                    }(self_305 = __helios__common__mStruct_field(previous_2, #64746c);\n                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305)))))\n                                                                                }(self_307 = __helios__common__mStruct_field(previous_2, #64746c);\n                                                                                __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_307)))))))\n                                                                            }(self_314 = __helios__value__get_policy(outValue, mph_32);\n                                                                            __helios__common__map_get(self_314, __core__bData(tn_6), __core__unIData, () -> {\n                                                                                error()\n                                                                            }))\n                                                                        }(self_19 = __module__CapoHelpers__DgDataDetails[]__output(mktSaleDD_2);\n                                                                        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19)))))),\n                                                                        () -> {\n                                                                            self_252 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_9, cctx);\n                                                                            true\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )())\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(x_13)), 2),\n                                                                    () -> {\n                                                                        (__lhs_0_143) -> {\n                                                                            saleId = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_143))));\n                                                                            __core__chooseUnit((cond) -> {\n                                                                                ()\n                                                                            }(self_252 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx);\n                                                                            true), mktSaleDD_1 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3, cctx, saleId);\n                                                                            previous_1 = __module__CapoHelpers__DgDataDetails[]__inputData(mktSaleDD_1);\n                                                                            updated_2 = __module__CapoHelpers__DgDataDetails[]__outputData(mktSaleDD_1);\n                                                                            (prevState) -> {\n                                                                                (nextState_1) -> {\n                                                                                    (newValue_1) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__ifThenElse(\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__ifThenElse(\n                                                                                                            self_252 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_9, cctx);\n                                                                                                            true,\n                                                                                                            () -> {\n                                                                                                                __module__MarketSaleData__OtherSaleStateV1[]__mustBePending(prevState)\n                                                                                                            },\n                                                                                                            ()\n                                                                                                        )(),\n                                                                                                        () -> {\n                                                                                                            __module__MarketSaleData__OtherSaleStateV1[]__mustBeActive(nextState_1)\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )(),\n                                                                                                    () -> {\n                                                                                                        __module__MarketSaleData__MarketSaleData[]__validate(updated_2)\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )(),\n                                                                                                () -> {\n                                                                                                    prevMktSale = __module__CapoHelpers__DgDataDetails[]__inputData(mktSaleDD_1);\n                                                                                                    __core__chooseUnit(cond = __core__equalsString(__module__MarketSaleData__MarketSaleData[]__name(updated_2), __module__MarketSaleData__MarketSaleData[]__name(prevMktSale));\n                                                                                                    __core__ifThenElse(\n                                                                                                        cond,\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), __core__chooseUnit(cond = __module__MarketSaleData__OtherSaleStateV1[]__mustBePending(self_305 = __helios__common__mStruct_field(prevMktSale, #64746c);\n                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305)))));\n                                                                                                    __core__ifThenElse(\n                                                                                                        cond,\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), __core__chooseUnit(cond = __core__equalsData((self_61) -> {\n                                                                                                        __core__headList(__core__tailList(__core__tailList(self_61)))\n                                                                                                    }(self_305 = __helios__common__mStruct_field(updated_2, #64746c);\n                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305))))), __core__constrData(1, __core__mkNilData(())));\n                                                                                                    __core__ifThenElse(\n                                                                                                        cond,\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), assets = (a_13, b_12) -> {\n                                                                                                        __helios__value__add_or_subtract(a_13, b_12, __core__subtractInteger)\n                                                                                                    }(__helios__value__get_assets(newValue_1), __helios__value__new(__helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(__core__tailList(__core__tailList(mktSaleDD_1))))), __core__unBData(__core__headList(__core__tailList(mktSaleDD_1)))), 1));\n                                                                                                    __core__chooseUnit(cond = __helios__value____eq(__helios__value____mul((self_286) -> {\n                                                                                                        __core__unMapData(__core__headList(self_286))\n                                                                                                    }(self_307 = __helios__common__mStruct_field(updated_2, #64746c);\n                                                                                                    __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_307))))))), __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(self_307 = __helios__common__mStruct_field(updated_2, #64746c);\n                                                                                                    __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_307)))))))), assets);\n                                                                                                    __core__ifThenElse(\n                                                                                                        cond,\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), __core__chooseUnit((__cond_63) -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_63)), 0),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_131) -> {\n                                                                                                                    vxf = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_131)));\n                                                                                                                    cond = __module__VxfProtocol__VxfDestination[]__validate(vxf);\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        cond,\n                                                                                                                        () -> {\n                                                                                                                            ()\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            error()\n                                                                                                                        }\n                                                                                                                    )()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_130) -> {\n                                                                                                                    ()\n                                                                                                                }\n                                                                                                            }\n                                                                                                        )()(__cond_63)\n                                                                                                    }((self_294) -> {\n                                                                                                        __core__headList(__core__tailList(__core__tailList(self_294)))\n                                                                                                    }(self_306 = __helios__common__mStruct_field(updated_2, #64746c);\n                                                                                                    __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_306))))))), __core__chooseUnit(cond = __module__VxfProtocol__VxfDestination[]__validate((self_21) -> {\n                                                                                                        __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                                                                                    }((self_60) -> {\n                                                                                                        __core__headList(__core__tailList(__core__tailList(__core__tailList(self_60))))\n                                                                                                    }(self_306 = __helios__common__mStruct_field(updated_2, #64746c);\n                                                                                                    __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_306))))))));\n                                                                                                    __core__ifThenElse(\n                                                                                                        cond,\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), __core__ifThenElse(\n                                                                                                        __module__MarketSaleData__MarketSaleData[]__validatePendingDetails(updated_2),\n                                                                                                        () -> {\n                                                                                                            true\n                                                                                                        },\n                                                                                                        ()\n                                                                                                    )()))))))\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    false\n                                                                                                }\n                                                                                            )(),\n                                                                                            () -> {\n                                                                                                true\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    }(self_19 = __module__CapoHelpers__DgDataDetails[]__output(mktSaleDD_1);\n                                                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))))\n                                                                                }(self_305 = __helios__common__mStruct_field(updated_2, #64746c);\n                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305)))))\n                                                                            }(self_305 = __helios__common__mStruct_field(previous_1, #64746c);\n                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305))))))\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(x_13)), 3),\n                                                                            () -> {\n                                                                                (__lhs_0_142) -> {\n                                                                                    recId_8 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_142))));\n                                                                                    sellingUnitQuantity = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_142)))));\n                                                                                    unitSellPrice = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_142))))));\n                                                                                    __core__chooseUnit((cond) -> {\n                                                                                        ()\n                                                                                    }(self_252 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx);\n                                                                                    true), mktSaleDD = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3, cctx, recId_8);\n                                                                                    previous = __module__CapoHelpers__DgDataDetails[]__inputData(mktSaleDD);\n                                                                                    updated_1 = __module__CapoHelpers__DgDataDetails[]__outputData(mktSaleDD);\n                                                                                    correctActiveState = __core__ifThenElse(\n                                                                                        __module__MarketSaleData__OtherSaleStateV1[]__mustBeActive(self_305 = __helios__common__mStruct_field(previous, #64746c);\n                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305))))),\n                                                                                        () -> {\n                                                                                            __module__MarketSaleData__OtherSaleStateV1[]__mustBeActive(self_305 = __helios__common__mStruct_field(updated_1, #64746c);\n                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305)))))\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )();\n                                                                                    (nowRange) -> {\n                                                                                        __core__chooseUnit(msg_1 = __core__appendString(\"   --- now start: \", __helios__int__show(__helios__timerange__start(nowRange)));\n                                                                                        (), __core__chooseUnit(msg_1 = __core__appendString(\"   --- startAt:   \", __helios__int__show((self_293) -> {\n                                                                                            __core__unIData(__core__headList(__core__tailList(self_293)))\n                                                                                        }(self_306 = __helios__common__mStruct_field(previous, #64746c);\n                                                                                        __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_306))))))));\n                                                                                        (), __core__chooseUnit(msg_1 = __core__appendString(\"   --- now end:   \", __helios__int__show(__helios__timerange__end(nowRange)));\n                                                                                        (), __core__chooseUnit((cond) -> {\n                                                                                            __core__ifThenElse(\n                                                                                                cond,\n                                                                                                () -> {\n                                                                                                    ()\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            )()\n                                                                                        }((t) -> {\n                                                                                            lower = __core__headList(__core__sndPair(__core__unConstrData(nowRange)));\n                                                                                            __common28 = __core__unConstrData(lower);\n                                                                                            __common29 = __core__sndPair(__common28);\n                                                                                            extended = __core__headList(__common29);\n                                                                                            __common5 = __core__unConstrData(extended);\n                                                                                            (closed) -> {\n                                                                                                extType = __core__fstPair(__common5);\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsInteger(extType, 0),\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__equalsInteger(extType, 2),\n                                                                                                            () -> {\n                                                                                                                true\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    closed,\n                                                                                                                    () -> {\n                                                                                                                        __core__lessThanInteger(t, __core__unIData(__core__headList(__core__sndPair(__common5))))\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__lessThanEqualsInteger(t, __core__unIData(__core__headList(__core__sndPair(__common5))))\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }\n                                                                                                )()\n                                                                                            }(d_1 = __core__headList(__core__tailList(__common29));\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),\n                                                                                                false,\n                                                                                                true\n                                                                                            ))\n                                                                                        }((self_293) -> {\n                                                                                            __core__unIData(__core__headList(__core__tailList(self_293)))\n                                                                                        }(self_306 = __helios__common__mStruct_field(previous, #64746c);\n                                                                                        __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_306)))))))), __core__chooseUnit(__core__ifThenElse(\n                                                                                            __core__ifThenElse(\n                                                                                                __core__lessThanEqualsInteger(sellingUnitQuantity, 0),\n                                                                                                false,\n                                                                                                true\n                                                                                            ),\n                                                                                            () -> {\n                                                                                                ()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        )(), __core__chooseUnit(cond = __core__lessThanEqualsInteger(sellingUnitQuantity, (self_287) -> {\n                                                                                            __core__unIData(__core__headList(__core__tailList(self_287)))\n                                                                                        }(self_307 = __helios__common__mStruct_field(previous, #64746c);\n                                                                                        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_307))))))));\n                                                                                        __core__ifThenElse(\n                                                                                            cond,\n                                                                                            () -> {\n                                                                                                ()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        )(), (prevProgress_1) -> {\n                                                                                            (nextProgress) -> {\n                                                                                                (oldValue) -> {\n                                                                                                    (newValue) -> {\n                                                                                                        purchasedTokens = __helios__value____mul((self_286) -> {\n                                                                                                            __core__unMapData(__core__headList(self_286))\n                                                                                                        }(self_307 = __helios__common__mStruct_field(previous, #64746c);\n                                                                                                        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_307))))))), sellingUnitQuantity);\n                                                                                                        totalProgress_2 = (lastPurchaseAt, prevPurchaseAt, chunkUnitCount, chunkUnitsSold) -> {\n                                                                                                            __core__mkCons(__core__iData(lastPurchaseAt), __core__mkCons(__core__iData(prevPurchaseAt), __core__mkCons(__core__iData(chunkUnitCount), __core__mkCons(__core__iData(chunkUnitsSold), __core__mkNilData(())))))\n                                                                                                        }(__helios__timerange__start(nowRange), __core__unIData(__core__headList(prevProgress_1)), __core__unIData(__core__headList(__core__tailList(__core__tailList(nextProgress)))), __core__addInteger(__core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(prevProgress_1))))), sellingUnitQuantity));\n                                                                                                        pricingStrategy = (settings, purchase) -> {\n                                                                                                            __core__mkCons(__core__listData(settings), __core__mkCons(__core__listData(purchase), __core__mkCons(previous, __core__mkCons(__core__constrData(0, __core__mkCons(updated_1, __core__mkNilData(()))), __core__mkNilData(())))))\n                                                                                                        }((self_292) -> {\n                                                                                                            __core__unListData(__core__headList(self_292))\n                                                                                                        }(self_306 = __helios__common__mStruct_field(previous, #64746c);\n                                                                                                        __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_306)))))), (purchaseTime_1, prevPurchaseTime, prevSalePace_1) -> {\n                                                                                                            hoursSinceLastPurchase_1 = __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(__helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(__core__multiplyInteger(__core__subtractInteger(purchaseTime_1, prevPurchaseTime), 1000000000000), 10000000), 3600000000000)), 10000000), 1000000000000));\n                                                                                                            inferredPace_1 = __helios__int____div1(sellingUnitQuantity, hoursSinceLastPurchase_1);\n                                                                                                            __core__mkCons(__core__iData(inferredPace_1), __core__mkCons(__core__iData(hoursSinceLastPurchase_1), __core__mkCons(__core__iData(sellingUnitQuantity), __core__mkCons(__core__iData(purchaseTime_1), __core__mkCons(__core__iData(prevSalePace_1), __core__mkCons(__core__listData(totalProgress_2), __core__mkNilData(())))))))\n                                                                                                        }(__helios__timerange__start(nowRange), __core__unIData(__core__headList(prevProgress_1)), (self_297) -> {\n                                                                                                            __core__unIData(__core__headList(__core__tailList(self_297)))\n                                                                                                        }(self_305 = __helios__common__mStruct_field(previous, #64746c);\n                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305)))))));\n                                                                                                        (paidValue) -> {\n                                                                                                            __core__chooseUnit(cond = __helios__value____eq(paidValue, __helios__value____mul(unitSellPrice, sellingUnitQuantity));\n                                                                                                            __core__ifThenElse(\n                                                                                                                cond,\n                                                                                                                () -> {\n                                                                                                                    ()\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            )(), __core__ifThenElse(\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            correctActiveState,\n                                                                                                                                            () -> {\n                                                                                                                                                true\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                false\n                                                                                                                                            }\n                                                                                                                                        )(),\n                                                                                                                                        () -> {\n                                                                                                                                            now = __helios__timerange__start(nowRange);\n                                                                                                                                            __core__chooseUnit(msg_1 = __core__appendString(\"   ----  lastPurchaseAt: \", __helios__int__show(__core__unIData(__core__headList(nextProgress))));\n                                                                                                                                            (), __core__chooseUnit(cond = __core__equalsInteger(__core__unIData(__core__headList(nextProgress)), now);\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                cond,\n                                                                                                                                                () -> {\n                                                                                                                                                    ()\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            )(), prevNow = __core__unIData(__core__headList(prevProgress_1));\n                                                                                                                                            __core__chooseUnit((cond, msg_2) -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    cond,\n                                                                                                                                                    () -> {\n                                                                                                                                                        ()\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }(__core__equalsInteger(__core__unIData(__core__headList(__core__tailList(nextProgress))), prevNow), __core__appendString(__core__appendString(__core__appendString(\"must update prevPurchaseAt to prev lastPurchaseAt \", __helios__int__show(prevNow)), \", got \"), __helios__int__show(__core__unIData(__core__headList(__core__tailList(nextProgress)))))), __core__chooseUnit(msg_1 = __core__appendString(\"   ----  prev unitsSold: \", __helios__int__show(__core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(prevProgress_1)))))));\n                                                                                                                                            (), __core__chooseUnit(msg_1 = __core__appendString(\"   ----  unitsSold: \", __helios__int__show(__core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(nextProgress)))))));\n                                                                                                                                            (), __core__chooseUnit(cond = __core__equalsInteger(__core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(nextProgress))))), __core__addInteger(__core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(prevProgress_1))))), sellingUnitQuantity));\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                cond,\n                                                                                                                                                () -> {\n                                                                                                                                                    ()\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            )(), __core__chooseUnit(cond = __core__equalsInteger(__core__unIData(__core__headList(__core__tailList(__core__tailList(nextProgress)))), __core__unIData(__core__headList(__core__tailList(__core__tailList(prevProgress_1)))));\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                cond,\n                                                                                                                                                () -> {\n                                                                                                                                                    ()\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            )(), true)))))))\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            false\n                                                                                                                                        }\n                                                                                                                                    )(),\n                                                                                                                                    () -> {\n                                                                                                                                        true\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        false\n                                                                                                                                    }\n                                                                                                                                )(),\n                                                                                                                                () -> {\n                                                                                                                                    (upd) -> {\n                                                                                                                                        prevSettings = __core__unListData(__core__headList(pricingStrategy));\n                                                                                                                                        (nextSettings) -> {\n                                                                                                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                __core__equalsData(__core__listData(prevSettings), __core__listData(nextSettings)),\n                                                                                                                                                () -> {\n                                                                                                                                                    ()\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            )(), expectedPace = __module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace_4(pricingStrategy);\n                                                                                                                                            (nextPace) -> {\n                                                                                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                    __core__lessThanInteger(__helios__real__abs(__core__subtractInteger(nextPace, expectedPace)), 5),\n                                                                                                                                                    () -> {\n                                                                                                                                                        ()\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                )(), chunkAge = __core__subtractInteger((self_279) -> {\n                                                                                                                                                    __core__unIData(__core__headList(self_279))\n                                                                                                                                                }((self_296) -> {\n                                                                                                                                                    __core__unListData(__core__headList(self_296))\n                                                                                                                                                }(self_305 = __helios__common__mStruct_field(upd, #64746c);\n                                                                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305)))))), (self_279) -> {\n                                                                                                                                                    __core__unIData(__core__headList(self_279))\n                                                                                                                                                }((self_296) -> {\n                                                                                                                                                    __core__unListData(__core__headList(self_296))\n                                                                                                                                                }((self_305) -> {\n                                                                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305))))\n                                                                                                                                                }(self_313 = __core__headList(__core__tailList(__core__tailList(pricingStrategy)));\n                                                                                                                                                __helios__common__mStruct_field(self_313, #64746c)))));\n                                                                                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __core__lessThanInteger(chunkAge, 600000),\n                                                                                                                                                        false,\n                                                                                                                                                        true\n                                                                                                                                                    ),\n                                                                                                                                                    () -> {\n                                                                                                                                                        ()\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                )(), true))\n                                                                                                                                            }((self_297) -> {\n                                                                                                                                                __core__unIData(__core__headList(__core__tailList(self_297)))\n                                                                                                                                            }(self_305 = __helios__common__mStruct_field(upd, #64746c);\n                                                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305)))))))\n                                                                                                                                        }((self_292) -> {\n                                                                                                                                            __core__unListData(__core__headList(self_292))\n                                                                                                                                        }(self_306 = __helios__common__mStruct_field(upd, #64746c);\n                                                                                                                                        __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_306)))))))\n                                                                                                                                    }(__cond_64 = __core__headList(__core__tailList(__core__tailList(__core__tailList(pricingStrategy))));\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_64)), 1),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_133) -> {\n                                                                                                                                                error()\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (self_21) -> {\n                                                                                                                                                __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_64))\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    false\n                                                                                                                                }\n                                                                                                                            )(),\n                                                                                                                            () -> {\n                                                                                                                                true\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                false\n                                                                                                                            }\n                                                                                                                        )(),\n                                                                                                                        () -> {\n                                                                                                                            expected_1 = __core__multiplyInteger(__core__chooseUnit(msg_1 = __core__appendString(\"    ---- target price \", __helios__real__show(self_268 = __core__unListData(__core__headList(pricingStrategy));\n                                                                                                                            __core__unIData(__core__headList(self_268))));\n                                                                                                                            (), (targetPrice) -> {\n                                                                                                                                price = (a_17, b_16) -> {\n                                                                                                                                    __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_17, b_16), 100000))\n                                                                                                                                }((b_16) -> {\n                                                                                                                                    __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(targetPrice, b_16), 100000))\n                                                                                                                                }(settings_2 = __core__unListData(__core__headList(pricingStrategy));\n                                                                                                                                overallPacingProgress = (a_16, b_15) -> {\n                                                                                                                                    __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_16, 10000000), b_15))\n                                                                                                                                }(__helios__int____div1(__core__addInteger(self_324 = __core__unListData(__core__headList(__core__tailList(pricingStrategy)));\n                                                                                                                                __core__unIData(__core__headList(__core__tailList(__core__tailList(self_324)))), (self_282) -> {\n                                                                                                                                    __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(self_282)))))\n                                                                                                                                }((self_296) -> {\n                                                                                                                                    __core__unListData(__core__headList(self_296))\n                                                                                                                                }((self_305) -> {\n                                                                                                                                    __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305))))\n                                                                                                                                }(self_313 = __core__headList(__core__tailList(__core__tailList(pricingStrategy)));\n                                                                                                                                __helios__common__mStruct_field(self_313, #64746c))))), __helios__int____div1(__core__quotientInteger(__core__multiplyInteger(__core__subtractInteger(self_325 = __core__unListData(__core__headList(__core__tailList(pricingStrategy)));\n                                                                                                                                __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(self_325))))), (self_293) -> {\n                                                                                                                                    __core__unIData(__core__headList(__core__tailList(self_293)))\n                                                                                                                                }((self_306) -> {\n                                                                                                                                    __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_306)))))\n                                                                                                                                }(self_313 = __core__headList(__core__tailList(__core__tailList(pricingStrategy)));\n                                                                                                                                __helios__common__mStruct_field(self_313, #64746c)))), 1000000), 3600000), 1000000000000)), __module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace_3(pricingStrategy));\n                                                                                                                                discountEarned = (a_17, b_16) -> {\n                                                                                                                                    __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_17, b_16), 100000))\n                                                                                                                                }(settings_3 = __core__unListData(__core__headList(pricingStrategy));\n                                                                                                                                ceilingHeight = __core__subtractInteger(1000000, __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(settings_3)))))));\n                                                                                                                                aboveFloor = __core__ifThenElse(\n                                                                                                                                    b_3 = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(settings_3))))));\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__lessThanEqualsInteger(overallPacingProgress, b_3),\n                                                                                                                                        false,\n                                                                                                                                        true\n                                                                                                                                    ),\n                                                                                                                                    () -> {\n                                                                                                                                        __core__subtractInteger(overallPacingProgress, __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(settings_3)))))))\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        0\n                                                                                                                                    }\n                                                                                                                                )();\n                                                                                                                                relativeHeight = __core__ifThenElse(\n                                                                                                                                    __core__lessThanEqualsInteger(aboveFloor, 0),\n                                                                                                                                    () -> {\n                                                                                                                                        0\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(aboveFloor, 10000000), ceilingHeight))\n                                                                                                                                    }\n                                                                                                                                )();\n                                                                                                                                __core__subtractInteger(1000000, relativeHeight), __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountWhenSlow(settings_2));\n                                                                                                                                clampedMaxDiscount = __module__DynamicSaleV1__maxReal(0, b_30 = __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountWhenSlow(settings_2);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__lessThanInteger(discountEarned, b_30),\n                                                                                                                                    () -> {\n                                                                                                                                        discountEarned\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        b_30\n                                                                                                                                    }\n                                                                                                                                )());\n                                                                                                                                b_16 = __core__ifThenElse(\n                                                                                                                                    __core__lessThanInteger(overallPacingProgress, 1000000),\n                                                                                                                                    () -> {\n                                                                                                                                        1000000\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __core__addInteger(1000000, (a_16) -> {\n                                                                                                                                            __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_16, 10000000), 3000000))\n                                                                                                                                        }(b_16 = __core__addInteger(1000000, __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingExpansionWhenFast(__core__unListData(__core__headList(pricingStrategy))));\n                                                                                                                                        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(__core__subtractInteger(overallPacingProgress, 1000000), b_16), 100000))))\n                                                                                                                                    }\n                                                                                                                                )();\n                                                                                                                                __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(__core__subtractInteger(1000000, clampedMaxDiscount), b_16), 100000))), nextPace_1 = __module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace_4(pricingStrategy);\n                                                                                                                                (prevPace) -> {\n                                                                                                                                    (nextWeight) -> {\n                                                                                                                                        targetSellingPace = __module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace_3(pricingStrategy);\n                                                                                                                                        a_16 = __core__addInteger(a_17 = __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(prevPace, 0),\n                                                                                                                                            () -> {\n                                                                                                                                                1000000\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(prevPace, 10000000), targetSellingPace))\n                                                                                                                                            }\n                                                                                                                                        )();\n                                                                                                                                        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_17, 1000000), 100000)), a_17 = __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(nextPace_1, 0),\n                                                                                                                                            () -> {\n                                                                                                                                                1000000\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(nextPace_1, 10000000), targetSellingPace))\n                                                                                                                                            }\n                                                                                                                                        )();\n                                                                                                                                        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_17, nextWeight), 100000)));\n                                                                                                                                        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_16, 10000000), __core__addInteger(1000000, nextWeight)))\n                                                                                                                                    }(self_277 = __core__unListData(__core__headList(pricingStrategy));\n                                                                                                                                    __core__unIData(__core__headList(__core__tailList(__core__tailList(__helios__common__struct_fields_after_6(self_277))))))\n                                                                                                                                }(self_326 = __core__unListData(__core__headList(__core__tailList(pricingStrategy)));\n                                                                                                                                __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_326))))))));\n                                                                                                                                (a_32, b_30) -> {\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __core__lessThanInteger(a_32, b_30),\n                                                                                                                                        () -> {\n                                                                                                                                            a_32\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            b_30\n                                                                                                                                        }\n                                                                                                                                    )()\n                                                                                                                                }(__module__DynamicSaleV1__maxReal(price, self_270 = __core__unListData(__core__headList(pricingStrategy));\n                                                                                                                                __core__unIData(__core__headList(__core__tailList(__core__tailList(self_270))))), self_271 = __core__unListData(__core__headList(pricingStrategy));\n                                                                                                                                __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__tailList(self_271))))))\n                                                                                                                            }(self_268 = __core__unListData(__core__headList(pricingStrategy));\n                                                                                                                            __core__unIData(__core__headList(self_268)))), self_324 = __core__unListData(__core__headList(__core__tailList(pricingStrategy)));\n                                                                                                                            __core__unIData(__core__headList(__core__tailList(__core__tailList(self_324)))));\n                                                                                                                            actual = __helios__int____div1(__helios__value__get_safe(paidValue, __core__constrData(0, __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(#), __core__mkNilData(()))))), 1000000000000);\n                                                                                                                            __core__chooseUnit(cond = __helios__value__is_zero(__helios__value__get_assets(paidValue));\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                cond,\n                                                                                                                                () -> {\n                                                                                                                                    ()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            )(), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__lessThanEqualsInteger(__helios__real__abs(__core__subtractInteger(actual, expected_1)), 2),\n                                                                                                                                    false,\n                                                                                                                                    true\n                                                                                                                                ),\n                                                                                                                                () -> {\n                                                                                                                                    error()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    ()\n                                                                                                                                }\n                                                                                                                            )(), true))\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            false\n                                                                                                                        }\n                                                                                                                    )(),\n                                                                                                                    () -> {\n                                                                                                                        true\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        false\n                                                                                                                    }\n                                                                                                                )(),\n                                                                                                                () -> {\n                                                                                                                    true\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    false\n                                                                                                                }\n                                                                                                            )())\n                                                                                                        }(a_12 = __helios__value__add_or_subtract(newValue, oldValue, __core__subtractInteger);\n                                                                                                        __helios__value__add_or_subtract(a_12, purchasedTokens, __core__addInteger))\n                                                                                                    }(self_19 = __module__CapoHelpers__DgDataDetails[]__output(mktSaleDD);\n                                                                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))))\n                                                                                                }(self_20 = __module__CapoHelpers__DgDataDetails[]__input(mktSaleDD);\n                                                                                                self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_20))));\n                                                                                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))))\n                                                                                            }((self_296) -> {\n                                                                                                __core__unListData(__core__headList(self_296))\n                                                                                            }(self_305 = __helios__common__mStruct_field(updated_1, #64746c);\n                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305))))))\n                                                                                        }((self_296) -> {\n                                                                                            __core__unListData(__core__headList(self_296))\n                                                                                        }(self_305 = __helios__common__mStruct_field(previous, #64746c);\n                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_305))))))))))))\n                                                                                    }(validity = __core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))));\n                                                                                    __core__chooseUnit(cond = __core__lessThanEqualsInteger(__core__subtractInteger(__helios__timerange__end(validity), __helios__timerange__start(validity)), 300000);\n                                                                                    __core__ifThenElse(\n                                                                                        cond,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )(), validity)))\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(x_13)), 4),\n                                                                                    () -> {\n                                                                                        (__lhs_0_141) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__lhs_0_140) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(x_13)\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 4),\n                                                () -> {\n                                                    (__lhs_0_135) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 9),\n                                                        () -> {\n                                                            (__lhs_0_134) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__44) -> {\n                                                                false\n                                                            }\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()(activity_9),\n            () -> {\n                true\n            },\n            () -> {\n                __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(dgtionDatum))\n            }\n        )()))\n    };\n    __core__ifThenElse(\n        __core__ifThenElse(\n            __core__equalsInteger(__common6, 2),\n            () -> {\n                (__lhs_0_291) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__common6, 1),\n                    () -> {\n                        (isD) -> {\n                            dd_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(isD))));\n                            __core__chooseUnit((cond) -> {\n                                __core__ifThenElse(\n                                    cond,\n                                    () -> {\n                                        ()\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));\n                            __core__ifThenElse(\n                                __core__equalsByteString(self, #01),\n                                false,\n                                true\n                            )), __core__chooseUnit((cond) -> {\n                                __core__ifThenElse(\n                                    cond,\n                                    () -> {\n                                        ()\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));\n                            __core__ifThenElse(\n                                __core__equalsByteString(self, #67656e6572616c),\n                                false,\n                                true\n                            )), __core__chooseUnit((cond) -> {\n                                __core__ifThenElse(\n                                    cond,\n                                    () -> {\n                                        ()\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));\n                            __core__ifThenElse(\n                                __core__equalsByteString(self, #4d61726b657453616c65506f6c696379),\n                                false,\n                                true\n                            )), __core__chooseUnit(msg_1 = __helios__value__show(self_20 = __helios__scriptcontext__get_current_input();\n                            self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_20))));\n                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))));\n                            (), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1, mph_28 = __core__unBData(__core__headList(__core__tailList(dd_2)));\n                            __core__mkCons(__core__bData(mph_28), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));\n                            (govAuthorityCheck) -> {\n                                __module__BasicDelegate__checkOneActivity_1(__module__BasicDelegate__checkOneActivity_1, isD, __REDEEMER, dd_2, cctx_7)\n                            }(self_252 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_9, cctx_7);\n                            true)))))\n                        }\n                    },\n                    () -> {\n                        __common10 = __core__unConstrData(__REDEEMER);\n                        __common11 = __core__fstPair(__common10);\n                        __common12 = __core__equalsInteger(__common11, 1);\n                        (__81) -> {\n                            __core__ifThenElse(\n                                __common12,\n                                () -> {\n                                    (__lhs_0_290) -> {\n                                        error()\n                                    }\n                                },\n                                () -> {\n                                    __common13 = __core__equalsInteger(__common11, 0);\n                                    __core__ifThenElse(\n                                        __common13,\n                                        () -> {\n                                            (__lhs_0_289) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            (__82) -> {\n                                                __core__ifThenElse(\n                                                    __common12,\n                                                    () -> {\n                                                        (__lhs_0_152) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __common13,\n                                                            () -> {\n                                                                (__lhs_0_151) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__45) -> {\n                                                                    false\n                                                                }\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(__REDEEMER)\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(__REDEEMER)\n                        }\n                    }\n                )()\n            }\n        )()(__DATUM),\n        () -> {\n            ()\n        },\n        () -> {\n            error()\n        }\n    )()\n}",
        "unoptimizedIR": "(__DATUM, __REDEEMER, __CONTEXT) -> {\n    __helios__error = (msg) -> {\n        __core__trace(msg, () -> {\n            error()\n        })()\n    };\n    __helios__print = (msg_1) -> {\n        __core__trace(msg_1, ())\n    };\n    __helios__string____add = __core__appendString;\n    __helios__assert = (cond, msg_2) -> {\n        __core__ifThenElse(\n            cond,\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(msg_2, () -> {\n                    error()\n                })()\n            }\n        )()\n    };\n    __helios__bool____not = (b) -> {\n        __core__ifThenElse(\n            b,\n            false,\n            true\n        )\n    };\n    __helios__bytearray____eq = __core__equalsByteString;\n    __helios__bytearray____neq = (self, other) -> {\n        __helios__bool____not(__helios__bytearray____eq(self, other))\n    };\n    __helios__int____to_data = __core__iData;\n    __helios__int__serialize = (self_1) -> {\n        () -> {\n            __core__serialiseData(__helios__int____to_data(self_1))\n        }\n    };\n    __helios__string__encode_utf8 = (self_2) -> {\n        () -> {\n            __core__encodeUtf8(self_2)\n        }\n    };\n    __helios__common__fold = (self_3, fn, z) -> {\n        recurse_1 = (recurse, self_4, z_1) -> {\n            __core__chooseList(self_4, () -> {\n                z_1\n            }, () -> {\n                recurse(recurse, __core__tailList__safe(self_4), fn(z_1, __core__headList__safe(self_4)))\n            })()\n        };\n        recurse_1(recurse_1, self_3, z)\n    };\n    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {\n        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {\n            callback_ok(__core__unBData__safe(data))\n        })()\n    };\n    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;\n    __helios__int__to_hex = (self_5) -> {\n        () -> {\n            recurse_3 = (recurse_2) -> {\n                (self_6, bytes) -> {\n                    digit = __core__modInteger(self_6, 16);\n                    bytes_1 = __core__consByteString(__core__ifThenElse(\n                        __core__lessThanInteger(digit, 10),\n                        __core__addInteger(digit, 48),\n                        __core__addInteger(digit, 87)\n                    ), bytes);\n                    __core__ifThenElse(\n                        __core__lessThanInteger(self_6, 16),\n                        () -> {\n                            bytes_1\n                        },\n                        () -> {\n                            recurse_2(recurse_2)(__core__divideInteger(self_6, 16), bytes_1)\n                        }\n                    )()\n                }\n            };\n            __core__decodeUtf8__safe(__core__ifThenElse(\n                __core__lessThanInteger(self_5, 0),\n                () -> {\n                    __core__consByteString(45, recurse_3(recurse_3)(__core__multiplyInteger(self_5, -1), #))\n                },\n                () -> {\n                    recurse_3(recurse_3)(self_5, #)\n                }\n            )())\n        }\n    };\n    __helios__bytearray__show = (self_7) -> {\n        () -> {\n            recurse_5 = (recurse_4, self_8) -> {\n                n = __core__lengthOfByteString(self_8);\n                __core__ifThenElse(\n                    __core__lessThanInteger(0, n),\n                    () -> {\n                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_8, 0))());\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),\n                            __core__consByteString(48, hex_bytes),\n                            hex_bytes\n                        )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_8)))\n                    },\n                    () -> {\n                        \"\"\n                    }\n                )()\n            };\n            recurse_5(recurse_5, self_7)\n        }\n    };\n    __helios__mintingpolicyhash__show = __helios__bytearray__show;\n    __helios__common__unMapData__safe = (data_1, callback_ok_1, callback_nok_1) -> {\n        __core__chooseData(data_1, callback_nok_1, () -> {\n            callback_ok_1(__core__unMapData__safe(data_1))\n        }, callback_nok_1, callback_nok_1, callback_nok_1)()\n    };\n    __helios__common__unIData__safe = (data_2, callback_ok_2, callback_nok_2) -> {\n        __core__chooseData(data_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {\n            callback_ok_2(__core__unIData__safe(data_2))\n        }, callback_nok_2)()\n    };\n    __helios__bool__and = (a, b_1) -> {\n        __core__ifThenElse(\n            a(),\n            () -> {\n                b_1()\n            },\n            () -> {\n                false\n            }\n        )()\n    };\n    __helios__int__show_digit = (x) -> {\n        __core__addInteger(__core__modInteger(x, 10), 48)\n    };\n    __helios__int__show = (self_9) -> {\n        () -> {\n            __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {\n                bytes_3 = __core__consByteString(__helios__int__show_digit(i), bytes_2);\n                __core__ifThenElse(\n                    __core__lessThanInteger(i, 10),\n                    () -> {\n                        bytes_3\n                    },\n                    () -> {\n                        recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)\n                    }\n                )()\n            };\n            __core__ifThenElse(\n                __core__lessThanInteger(self_9, 0),\n                () -> {\n                    __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_9, -1), #))\n                },\n                () -> {\n                    recurse_7(recurse_7, self_9, #)\n                }\n            )())\n        }\n    };\n    __helios__real__ONE = 1000000;\n    __helios__real__floor = (self_10) -> {\n        () -> {\n            __core__divideInteger(self_10, __helios__real__ONE)\n        }\n    };\n    __helios__int__abs = (self_11) -> {\n        () -> {\n            __core__ifThenElse(\n                __core__lessThanInteger(self_11, 0),\n                () -> {\n                    __core__multiplyInteger(self_11, -1)\n                },\n                () -> {\n                    self_11\n                }\n            )()\n        }\n    };\n    __helios__real__abs = __helios__int__abs;\n    __helios__int__show_padded = (self_12, n_1) -> {\n        recurse_9 = (recurse_8, x_1, pos, bytes_4) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(x_1, 0),\n                () -> {\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(n_1, pos),\n                        () -> {\n                            bytes_4\n                        },\n                        () -> {\n                            recurse_8(recurse_8, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_4))\n                        }\n                    )()\n                },\n                () -> {\n                    recurse_8(recurse_8, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_4))\n                }\n            )()\n        };\n        recurse_9(recurse_9, self_12, 0, #)\n    };\n    __helios__int____mod = __core__modInteger;\n    __helios__real__PRECISION = 6;\n    __helios__real__show = (self_13) -> {\n        () -> {\n            show_positive = (x_2) -> {\n                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(\".\", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))\n            };\n            __core__ifThenElse(\n                __core__lessThanInteger(self_13, 0),\n                () -> {\n                    __helios__string____add(\"-\", show_positive(__core__multiplyInteger(self_13, -1)))\n                },\n                () -> {\n                    show_positive(self_13)\n                }\n            )()\n        }\n    };\n    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__divideInteger(byte, 64), 2),\n            () -> {\n                callback(true, __core__modInteger(byte, 64))\n            },\n            () -> {\n                callback(false, 0)\n            }\n        )()\n    };\n    __helios__string__is_valid_utf8 = (bytes_5) -> {\n        n_2 = __core__lengthOfByteString(bytes_5);\n        recurse_11 = (recurse_10, i_1) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(i_1, n_2),\n                () -> {\n                    true\n                },\n                () -> {\n                    b0 = __core__indexByteString__safe(bytes_5, i_1);\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(b0, 127),\n                        () -> {\n                            recurse_10(recurse_10, __core__addInteger(i_1, 1))\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),\n                                () -> {\n                                    inext_2 = __core__addInteger(i_1, 2);\n                                    __core__ifThenElse(\n                                        __core__lessThanEqualsInteger(inext_2, n_2),\n                                        () -> {\n                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {\n                                                __core__ifThenElse(\n                                                    valid_5,\n                                                    () -> {\n                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);\n                                                        __core__ifThenElse(\n                                                            __helios__bool__and(() -> {\n                                                                __core__lessThanEqualsInteger(128, c_2)\n                                                            }, () -> {\n                                                                __core__lessThanEqualsInteger(c_2, 2047)\n                                                            }),\n                                                            () -> {\n                                                                recurse_10(recurse_10, inext_2)\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    },\n                                                    () -> {\n                                                        false\n                                                    }\n                                                )()\n                                            })\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),\n                                        () -> {\n                                            inext_1 = __core__addInteger(i_1, 3);\n                                            __core__ifThenElse(\n                                                __core__lessThanEqualsInteger(inext_1, n_2),\n                                                () -> {\n                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {\n                                                        __core__ifThenElse(\n                                                            valid_3,\n                                                            () -> {\n                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {\n                                                                    __core__ifThenElse(\n                                                                        valid_4,\n                                                                        () -> {\n                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));\n                                                                            __core__ifThenElse(\n                                                                                __helios__bool__and(() -> {\n                                                                                    __core__lessThanEqualsInteger(2048, c_1)\n                                                                                }, () -> {\n                                                                                    __core__lessThanEqualsInteger(c_1, 65535)\n                                                                                }),\n                                                                                () -> {\n                                                                                    recurse_10(recurse_10, inext_1)\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )()\n                                                                })\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    })\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),\n                                                () -> {\n                                                    inext = __core__addInteger(i_1, 4);\n                                                    __core__ifThenElse(\n                                                        __core__lessThanEqualsInteger(inext, n_2),\n                                                        () -> {\n                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {\n                                                                __core__ifThenElse(\n                                                                    valid,\n                                                                    () -> {\n                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {\n                                                                            __core__ifThenElse(\n                                                                                valid_1,\n                                                                                () -> {\n                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            valid_2,\n                                                                                            () -> {\n                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));\n                                                                                                __core__ifThenElse(\n                                                                                                    __helios__bool__and(() -> {\n                                                                                                        __core__lessThanEqualsInteger(65536, c)\n                                                                                                    }, () -> {\n                                                                                                        __core__lessThanEqualsInteger(c, 2097151)\n                                                                                                    }),\n                                                                                                    () -> {\n                                                                                                        recurse_10(recurse_10, inext)\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    })\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        })\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        };\n        recurse_11(recurse_11, 0)\n    };\n    __helios__bytearray__decode_utf8_safe = (self_14) -> {\n        () -> {\n            __core__ifThenElse(\n                __helios__string__is_valid_utf8(self_14),\n                () -> {\n                    __core__decodeUtf8__safe(self_14)\n                },\n                () -> {\n                    __helios__bytearray__show(self_14)()\n                }\n            )()\n        }\n    };\n    __helios__value__show = (self_15) -> {\n        (__useopt__ada, ada) -> {\n            __helios__common__fold(self_15, (prev, pair) -> {\n                mph_data = __core__fstPair(pair);\n                tokens_data = __core__sndPair(pair);\n                __helios__string____add(prev, __helios__common__unBData__safe(mph_data, (mph) -> {\n                    __helios__string____add(__core__ifThenElse(\n                        __helios__mintingpolicyhash____eq(mph, #),\n                        () -> {\n                            \"\"\n                        },\n                        () -> {\n                            __helios__string____add(__helios__mintingpolicyhash__show(mph)(), \"\n\")\n                        }\n                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {\n                        __helios__common__fold(tokens, (prev_1, pair_1) -> {\n                            token_name_data = __core__fstPair(pair_1);\n                            qty_data = __core__sndPair(pair_1);\n                            __helios__common__unBData__safe(token_name_data, (token_name) -> {\n                                __helios__common__unIData__safe(qty_data, (qty) -> {\n                                    __core__ifThenElse(\n                                        __helios__mintingpolicyhash____eq(mph, #),\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __helios__bool__and(() -> {\n                                                    __useopt__ada\n                                                }, () -> {\n                                                    ada\n                                                }),\n                                                () -> {\n                                                    __helios__string____add(\"ada \", __helios__string____add(__helios__real__show(qty)(), \"\n\"))\n                                                },\n                                                () -> {\n                                                    __helios__string____add(\"lovelace \", __helios__string____add(__helios__int__show(qty)(), \"\n\"))\n                                                }\n                                            )()\n                                        },\n                                        () -> {\n                                            __helios__string____add(\"  .\", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name)(), __helios__string____add(\" \", __helios__string____add(__helios__int__show(qty)(), \"\n\"))))\n                                        }\n                                    )()\n                                }, () -> {\n                                    \"\"\n                                })\n                            }, () -> {\n                                \"\"\n                            })\n                        }, prev)\n                    }, () -> {\n                        \"\"\n                    }))\n                }, () -> {\n                    \"\"\n                }))\n            }, \"\")\n        }\n    };\n    __helios__common__enum_fields = (self_16) -> {\n        __core__sndPair(__core__unConstrData(self_16))\n    };\n    __helios__common__enum_fields_after_0 = (self_17) -> {\n        __core__tailList(__helios__common__enum_fields(self_17))\n    };\n    __helios__common__enum_field_1 = (self_18) -> {\n        __core__headList(__helios__common__enum_fields_after_0(self_18))\n    };\n    __helios__txoutput__value = (self_19) -> {\n        __core__unMapData(__helios__common__enum_field_1(self_19))\n    };\n    __helios__txinput__output = __helios__common__enum_field_1;\n    __helios__txinput__value = (self_20) -> {\n        __helios__txoutput__value(__helios__txinput__output(self_20))\n    };\n    __helios__common__enum_field_0 = (self_21) -> {\n        __core__headList(__helios__common__enum_fields(self_21))\n    };\n    __helios__scriptcontext__data = __CONTEXT;\n    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);\n    __helios__scriptcontext__get_spending_purpose_output_id = () -> {\n        __helios__common__enum_field_0(__helios__scriptcontext__purpose)\n    };\n    __helios__txinput__output_id = __helios__common__enum_field_0;\n    __helios__tx__inputs = (self_22) -> {\n        __core__unListData(__helios__common__enum_field_0(self_22))\n    };\n    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);\n    __helios__scriptcontext__get_current_input = () -> {\n        id = __helios__scriptcontext__get_spending_purpose_output_id();\n        recurse_13 = (recurse_12, lst) -> {\n            __core__chooseList(lst, () -> {\n                __helios__error(\"not found\")\n            }, () -> {\n                item = __core__headList__safe(lst);\n                __core__ifThenElse(\n                    __core__equalsData(__helios__txinput__output_id(item), id),\n                    () -> {\n                        item\n                    },\n                    () -> {\n                        recurse_12(recurse_12, __core__tailList__safe(lst))\n                    }\n                )()\n            })()\n        };\n        recurse_13(recurse_13, __helios__tx__inputs(__helios__scriptcontext__tx))\n    };\n    __helios__bool__or = (a_1, b_2) -> {\n        __core__ifThenElse(\n            a_1(),\n            () -> {\n                true\n            },\n            () -> {\n                b_2()\n            }\n        )()\n    };\n    __helios__string____to_data = (s) -> {\n        __core__bData(__core__encodeUtf8(s))\n    };\n    __helios__value__ZERO = __core__mkNilPairData(());\n    __helios__value__new = (assetClass, i_2) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(0, i_2),\n            () -> {\n                __helios__value__ZERO\n            },\n            () -> {\n                mph_1 = __helios__common__enum_field_0(assetClass);\n                tokenName = __helios__common__enum_field_1(assetClass);\n                __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i_2)), __core__mkNilPairData(())))), __core__mkNilPairData(()))\n            }\n        )()\n    };\n    __helios__common__list_0 = __core__mkNilData(());\n    __helios__common__list_1 = (a_2) -> {\n        __core__mkCons(a_2, __helios__common__list_0)\n    };\n    __helios__common__list_2 = (arg0, arg1) -> {\n        __core__mkCons(arg0, __helios__common__list_1(arg1))\n    };\n    __helios__bytearray____to_data = __core__bData;\n    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;\n    __helios__assetclass__new = (mph_2, token_name_1) -> {\n        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_2), __helios__bytearray____to_data(token_name_1)))\n    };\n    __helios__int____neg = (self_23) -> {\n        __core__multiplyInteger(self_23, -1)\n    };\n    __helios__int____eq = __core__equalsInteger;\n    __helios__value__get = (self_24) -> {\n        (assetClass_1) -> {\n            mph_3 = __helios__common__enum_field_0(assetClass_1);\n            tokenName_1 = __helios__common__enum_field_1(assetClass_1);\n            outer_1 = (outer, inner, map) -> {\n                __core__chooseList(map, () -> {\n                    __helios__error(__helios__string____add(__helios__string____add(\"policy \", __helios__mintingpolicyhash__show(__core__unBData(mph_3))()), \" not found\"))\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_3),\n                        () -> {\n                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))\n                        },\n                        () -> {\n                            outer(outer, inner, __core__tailList__safe(map))\n                        }\n                    )()\n                })()\n            };\n            inner_2 = (inner_1, map_1) -> {\n                __core__chooseList(map_1, () -> {\n                    __helios__error(\"tokenName not found\")\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),\n                        () -> {\n                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))\n                        },\n                        () -> {\n                            inner_1(inner_1, __core__tailList__safe(map_1))\n                        }\n                    )()\n                })()\n            };\n            outer_1(outer_1, inner_2, self_24)\n        }\n    };\n    __helios__common__enum_fields_after_1 = (self_25) -> {\n        __core__tailList(__helios__common__enum_fields_after_0(self_25))\n    };\n    __helios__common__enum_fields_after_2 = (self_26) -> {\n        __core__tailList(__helios__common__enum_fields_after_1(self_26))\n    };\n    __helios__common__enum_fields_after_3 = (self_27) -> {\n        __core__tailList(__helios__common__enum_fields_after_2(self_27))\n    };\n    __helios__common__enum_field_4 = (self_28) -> {\n        __core__headList(__helios__common__enum_fields_after_3(self_28))\n    };\n    __helios__tx__minted = (self_29) -> {\n        __core__unMapData(__helios__common__enum_field_4(self_29))\n    };\n    __helios__common__assert_constr_index = (data_3, i_3) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_3)), i_3),\n            () -> {\n                data_3\n            },\n            () -> {\n                __helios__error(\"unexpected constructor index\")\n            }\n        )()\n    };\n    __helios__string____eq = __core__equalsString;\n    __helios__common____eq = __core__equalsData;\n    __helios__assetclass____eq = __helios__common____eq;\n    __helios__data__show = (self_30) -> {\n        () -> {\n            show_data_list = (list, show_item) -> {\n                __helios__common__fold(list, (prev_2, item_1) -> {\n                    __core__ifThenElse(\n                        __helios__string____eq(prev_2, \"\"),\n                        () -> {\n                            show_item(item_1)\n                        },\n                        () -> {\n                            __helios__string____add(prev_2, __helios__string____add(\",\", show_item(item_1)))\n                        }\n                    )()\n                }, \"\")\n            };\n            (recurse_15, data_5) -> {\n                recurse_15(recurse_15, data_5)\n            }((recurse_14, data_4) -> {\n                __core__chooseData(data_4, () -> {\n                    pair_3 = __core__unConstrData__safe(data_4);\n                    tag = __core__fstPair(pair_3);\n                    fields = __core__sndPair(pair_3);\n                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add(\"{\", __helios__string____add(show_data_list(fields, (item_3) -> {\n                        recurse_14(recurse_14, item_3)\n                    }), \"}\")))\n                }, () -> {\n                    map_2 = __core__unMapData__safe(data_4);\n                    __helios__string____add(\"{\", __helios__string____add(show_data_list(map_2, (pair_2) -> {\n                        key = recurse_14(recurse_14, __core__fstPair(pair_2));\n                        value_1 = recurse_14(recurse_14, __core__sndPair(pair_2));\n                        __helios__string____add(key, __helios__string____add(\":\", value_1))\n                    }), \"}\"))\n                }, () -> {\n                    lst_1 = __core__unListData__safe(data_4);\n                    __helios__string____add(\"[\", __helios__string____add(show_data_list(lst_1, (item_2) -> {\n                        recurse_14(recurse_14, item_2)\n                    }), \"]\"))\n                }, () -> {\n                    value = __core__unIData__safe(data_4);\n                    __helios__int__show(value)()\n                }, () -> {\n                    bytes_6 = __core__unBData__safe(data_4);\n                    __helios__bytearray__show(bytes_6)()\n                })()\n            }, self_30)\n        }\n    };\n    __helios__data__show_constr_data = (callback_1) -> {\n        (data_6) -> {\n            callback_nok_3 = __helios__data__show(data_6);\n            __core__chooseData(data_6, () -> {\n                pair_4 = __core__unConstrData__safe(data_6);\n                callback_1(__core__fstPair(pair_4), __core__sndPair(pair_4))\n            }, callback_nok_3, callback_nok_3, callback_nok_3, callback_nok_3)()\n        }\n    };\n    __helios__data__show_field = (index, callback_2) -> {\n        (list_1) -> {\n            recurse_17 = (recurse_16) -> {\n                (lst_2, i_4) -> {\n                    __core__chooseList(lst_2, () -> {\n                        \"<missing>\"\n                    }, () -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(i_4, 0),\n                            () -> {\n                                head = __core__headList__safe(lst_2);\n                                callback_2(head)\n                            },\n                            () -> {\n                                recurse_16(recurse_16)(__core__tailList__safe(lst_2), __core__subtractInteger(i_4, 1))\n                            }\n                        )()\n                    })()\n                }\n            };\n            recurse_17(recurse_17)(list_1, index)\n        }\n    };\n    __helios__data__show_bdata = (callback_3) -> {\n        (data_7) -> {\n            callback_nok_4 = __helios__data__show(data_7);\n            __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, callback_nok_4, () -> {\n                callback_3(__core__unBData__safe(data_7))\n            })()\n        }\n    };\n    __helios__assetclass__show = (self_31) -> {\n        () -> {\n            __helios__data__show_constr_data((tag_1, fields_1) -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(tag_1, 0),\n                    () -> {\n                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_4) -> {\n                            __helios__bytearray__show(mph_4)()\n                        }))(fields_1);\n                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_2) -> {\n                            __helios__bytearray__show(token_name_2)()\n                        }))(fields_1);\n                        __core__appendString(mph_str, __core__appendString(\".\", token_name_str))\n                    },\n                    () -> {\n                        __helios__data__show(self_31)()\n                    }\n                )()\n            })(self_31)\n        }\n    };\n    __helios__string____neq = (self_32, other_1) -> {\n        __helios__bool____not(__helios__string____eq(self_32, other_1))\n    };\n    __helios__int____gt = (a_3, b_3) -> {\n        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))\n    };\n    __helios__int____neq = (self_33, other_2) -> {\n        __helios__bool____not(__helios__int____eq(self_33, other_2))\n    };\n    __helios__int____sub = __core__subtractInteger;\n    __helios__value__to_map = (self_34) -> {\n        () -> {\n            self_34\n        }\n    };\n    __helios__string__show = (self_35) -> {\n        () -> {\n            __core__appendString(\"'\", __core__appendString(self_35, \"'\"))\n        }\n    };\n    __helios__bool__show = (self_36) -> {\n        () -> {\n            __core__ifThenElse(\n                self_36,\n                \"true\",\n                \"false\"\n            )\n        }\n    };\n    __helios__bool__trace = (self_37) -> {\n        (prefix) -> {\n            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_37)()), self_37)\n        }\n    };\n    __helios__txinput____eq = __helios__common____eq;\n    __helios__bytearray__from_data = __core__unBData;\n    __helios__string__from_data = (d) -> {\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __helios__common__length = (lst_3) -> {\n        recurse_19 = (recurse_18, lst_4) -> {\n            __core__chooseList(lst_4, () -> {\n                0\n            }, () -> {\n                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)\n            })()\n        };\n        recurse_19(recurse_19, lst_3)\n    };\n    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {\n        recurse_21 = (recurse_20, self_39, key_2) -> {\n            __core__chooseList(self_39, fnNotFound, () -> {\n                head_1 = __core__headList__safe(self_39);\n                __core__ifThenElse(\n                    __core__equalsData(key_2, __core__fstPair(head_1)),\n                    () -> {\n                        fnFound(__core__sndPair(head_1))\n                    },\n                    () -> {\n                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)\n                    }\n                )()\n            })()\n        };\n        recurse_21(recurse_21, self_38, key_1)\n    };\n    __helios__common__enum_tag_equals = (data_8, i_5) -> {\n        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_5)\n    };\n    __helios__common__all = (self_40, fn_1) -> {\n        recurse_23 = (recurse_22, self_41, fn_2) -> {\n            __core__chooseList(self_41, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    fn_2(__core__headList__safe(self_41)),\n                    () -> {\n                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_23(recurse_23, self_40, fn_1)\n    };\n    __helios__common__identity = (self_42) -> {\n        self_42\n    };\n    __helios__assetclass____to_data = __helios__common__identity;\n    __helios__assetclass__from_data = __helios__common__identity;\n    __helios__data__from_data = __helios__common__identity;\n    __helios__bool__from_data = (d_1) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),\n            false,\n            true\n        )\n    };\n    __helios__int__from_data = __core__unIData;\n    __helios__time__show = __helios__int__show;\n    __helios__time__from_data = __helios__int__from_data;\n    __helios__timerange__start = (self_43) -> {\n        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_0(self_43))))\n    };\n    __helios__timerange__end = (self_44) -> {\n        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_1(self_44))))\n    };\n    __helios__timerange__is_after = (self_45) -> {\n        (t) -> {\n            lower = __helios__common__enum_field_0(self_45);\n            extended = __helios__common__enum_field_0(lower);\n            closed = __helios__bool__from_data(__helios__common__enum_field_1(lower));\n            extType = __core__fstPair(__core__unConstrData(extended));\n            __core__ifThenElse(\n                __core__equalsInteger(extType, 0),\n                () -> {\n                    false\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(extType, 2),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                closed,\n                                () -> {\n                                    __core__lessThanInteger(t, __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))))\n                                },\n                                () -> {\n                                    __core__lessThanEqualsInteger(t, __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(extended)))))\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __helios__int____leq = __core__lessThanEqualsInteger;\n    __helios__value__get_inner_map_int = (map_3, key_3) -> {\n        recurse_25 = (recurse_24, map_4, key_4) -> {\n            __core__chooseList(map_4, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), key_4),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_4)))\n                    },\n                    () -> {\n                        recurse_24(recurse_24, __core__tailList__safe(map_4), key_4)\n                    }\n                )()\n            })()\n        };\n        recurse_25(recurse_25, map_3, key_3)\n    };\n    __helios__value__get_map_keys = (map_5) -> {\n        recurse_27 = (recurse_26, map_6) -> {\n            __core__chooseList(map_6, () -> {\n                __helios__common__list_0\n            }, () -> {\n                __core__mkCons(__core__fstPair(__core__headList__safe(map_6)), recurse_26(recurse_26, __core__tailList__safe(map_6)))\n            })()\n        };\n        recurse_27(recurse_27, map_5)\n    };\n    __helios__common__any = (self_46, fn_3) -> {\n        recurse_29 = (recurse_28, self_47, fn_4) -> {\n            __core__chooseList(self_47, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    fn_4(__core__headList__safe(self_47)),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_28(recurse_28, __core__tailList__safe(self_47), fn_4)\n                    }\n                )()\n            })()\n        };\n        recurse_29(recurse_29, self_46, fn_3)\n    };\n    __helios__common__is_in_bytearray_list = (lst_5, key_5) -> {\n        __helios__common__any(lst_5, (item_4) -> {\n            __core__equalsData(item_4, key_5)\n        })\n    };\n    __helios__common__concat = (a_4, b_4) -> {\n        recurse_31 = (recurse_30, lst_6, rem) -> {\n            __core__chooseList(rem, () -> {\n                lst_6\n            }, () -> {\n                __core__mkCons(__core__headList__safe(rem), recurse_30(recurse_30, lst_6, __core__tailList__safe(rem)))\n            })()\n        };\n        recurse_31(recurse_31, b_4, a_4)\n    };\n    __helios__value__merge_map_keys = (a_5, b_5) -> {\n        aKeys = __helios__value__get_map_keys(a_5);\n        recurse_33 = (recurse_32, keys, map_7) -> {\n            __core__chooseList(map_7, () -> {\n                __helios__common__list_0\n            }, () -> {\n                key_6 = __core__fstPair(__core__headList__safe(map_7));\n                __core__ifThenElse(\n                    __helios__common__is_in_bytearray_list(aKeys, key_6),\n                    () -> {\n                        recurse_32(recurse_32, keys, __core__tailList__safe(map_7))\n                    },\n                    () -> {\n                        __core__mkCons(key_6, recurse_32(recurse_32, keys, __core__tailList__safe(map_7)))\n                    }\n                )()\n            })()\n        };\n        uniqueBKeys = recurse_33(recurse_33, aKeys, b_5);\n        __helios__common__concat(aKeys, uniqueBKeys)\n    };\n    __helios__value__compare_inner = (comp, a_6, b_6) -> {\n        recurse_35 = (recurse_34, keys_1) -> {\n            __core__chooseList(keys_1, () -> {\n                true\n            }, () -> {\n                key_7 = __core__headList__safe(keys_1);\n                __core__ifThenElse(\n                    __helios__bool____not(comp(__helios__value__get_inner_map_int(a_6, key_7), __helios__value__get_inner_map_int(b_6, key_7))),\n                    () -> {\n                        false\n                    },\n                    () -> {\n                        recurse_34(recurse_34, __core__tailList__safe(keys_1))\n                    }\n                )()\n            })()\n        };\n        recurse_35(recurse_35, __helios__value__merge_map_keys(a_6, b_6))\n    };\n    __helios__value__get_inner_map = (map_8, mph_5) -> {\n        recurse_37 = (recurse_36, map_9) -> {\n            __core__chooseList(map_9, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_5),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_9)))\n                    },\n                    () -> {\n                        recurse_36(recurse_36, __core__tailList__safe(map_9))\n                    }\n                )()\n            })()\n        };\n        recurse_37(recurse_37, map_8)\n    };\n    __helios__value__compare = (a_7, b_7, comp_1) -> {\n        recurse_39 = (recurse_38, keys_2) -> {\n            __core__chooseList(keys_2, () -> {\n                true\n            }, () -> {\n                key_8 = __core__headList__safe(keys_2);\n                __core__ifThenElse(\n                    __helios__bool____not(__helios__value__compare_inner(comp_1, __helios__value__get_inner_map(a_7, key_8), __helios__value__get_inner_map(b_7, key_8))),\n                    () -> {\n                        false\n                    },\n                    () -> {\n                        recurse_38(recurse_38, __core__tailList__safe(keys_2))\n                    }\n                )()\n            })()\n        };\n        recurse_39(recurse_39, __helios__value__merge_map_keys(a_7, b_7))\n    };\n    __helios__value____eq = (a_8, b_8) -> {\n        __helios__value__compare(a_8, b_8, __core__equalsInteger)\n    };\n    __helios__value__map_quantities = (self_48, op) -> {\n        recurseInner_1 = (recurseInner, inner_3) -> {\n            __core__chooseList(inner_3, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                head_2 = __core__headList__safe(inner_3);\n                __core__mkCons(__core__mkPairData(__core__fstPair(head_2), __core__iData(op(__core__unIData(__core__sndPair(head_2))))), recurseInner(recurseInner, __core__tailList__safe(inner_3)))\n            })()\n        };\n        recurseOuter_1 = (recurseOuter, outer_2) -> {\n            __core__chooseList(outer_2, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                head_3 = __core__headList__safe(outer_2);\n                __core__mkCons(__core__mkPairData(__core__fstPair(head_3), __core__mapData(recurseInner_1(recurseInner_1, __core__unMapData(__core__sndPair(head_3))))), recurseOuter(recurseOuter, __core__tailList__safe(outer_2)))\n            })()\n        };\n        recurseOuter_1(recurseOuter_1, self_48)\n    };\n    __helios__value____mul = (a_9, scale) -> {\n        __helios__value__map_quantities(a_9, (qty_1) -> {\n            __core__multiplyInteger(qty_1, scale)\n        })\n    };\n    __helios__value__add_or_subtract_inner = (op_1) -> {\n        (a_10, b_9) -> {\n            recurse_41 = (recurse_40, keys_3, result) -> {\n                __core__chooseList(keys_3, () -> {\n                    result\n                }, () -> {\n                    key_9 = __core__headList__safe(keys_3);\n                    tail = recurse_40(recurse_40, __core__tailList__safe(keys_3), result);\n                    sum = op_1(__helios__value__get_inner_map_int(a_10, key_9), __helios__value__get_inner_map_int(b_9, key_9));\n                    __core__ifThenElse(\n                        __core__equalsInteger(sum, 0),\n                        () -> {\n                            tail\n                        },\n                        () -> {\n                            __core__mkCons(__core__mkPairData(key_9, __core__iData(sum)), tail)\n                        }\n                    )()\n                })()\n            };\n            recurse_41(recurse_41, __helios__value__merge_map_keys(a_10, b_9), __core__mkNilPairData(()))\n        }\n    };\n    __helios__value__add_or_subtract = (a_11, b_10, op_2) -> {\n        recurse_43 = (recurse_42, keys_4, result_1) -> {\n            __core__chooseList(keys_4, () -> {\n                result_1\n            }, () -> {\n                key_10 = __core__headList__safe(keys_4);\n                tail_1 = recurse_42(recurse_42, __core__tailList__safe(keys_4), result_1);\n                item_5 = __helios__value__add_or_subtract_inner(op_2)(__helios__value__get_inner_map(a_11, key_10), __helios__value__get_inner_map(b_10, key_10));\n                __core__chooseList(item_5, () -> {\n                    tail_1\n                }, () -> {\n                    __core__mkCons(__core__mkPairData(key_10, __core__mapData(item_5)), tail_1)\n                })()\n            })()\n        };\n        recurse_43(recurse_43, __helios__value__merge_map_keys(a_11, b_10), __core__mkNilPairData(()))\n    };\n    __helios__value____add = (a_12, b_11) -> {\n        __helios__value__add_or_subtract(a_12, b_11, __core__addInteger)\n    };\n    __helios__value____sub = (a_13, b_12) -> {\n        __helios__value__add_or_subtract(a_13, b_12, __core__subtractInteger)\n    };\n    __helios__int____add = __core__addInteger;\n    __helios__int____mul = __core__multiplyInteger;\n    __helios__duration____mul = __helios__int____mul;\n    __helios__duration__MINUTE = 60000;\n    __helios__common__serialize = (self_49) -> {\n        () -> {\n            __core__serialiseData(self_49)\n        }\n    };\n    __helios__tx__serialize = __helios__common__serialize;\n    __helios__data__is_valid_data = (data_9) -> {\n        true\n    };\n    __helios__string__is_valid_data = (data_10) -> {\n        __core__chooseData(data_10, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            __helios__string__is_valid_utf8(__core__unBData__safe(data_10))\n        })()\n    };\n    __helios__bytearray__is_valid_data = (data_11) -> {\n        __core__chooseData(data_11, false, false, false, false, true)\n    };\n    __helios__txoutputid__from_data = __helios__common__identity;\n    __helios__common__test_constr_data_2 = (data_12, index_1, test_a, test_b) -> {\n        __core__chooseData(data_12, () -> {\n            pair_5 = __core__unConstrData__safe(data_12);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_5), index_1),\n                () -> {\n                    fields_2 = __core__sndPair(pair_5);\n                    __core__chooseList(fields_2, () -> {\n                        false\n                    }, () -> {\n                        __core__ifThenElse(\n                            test_a(__core__headList__safe(fields_2)),\n                            () -> {\n                                tail_2 = __core__tailList__safe(fields_2);\n                                __core__chooseList(tail_2, () -> {\n                                    false\n                                }, () -> {\n                                    __core__ifThenElse(\n                                        test_b(__core__headList__safe(tail_2)),\n                                        () -> {\n                                            __core__chooseList(__core__tailList__safe(tail_2), () -> {\n                                                true\n                                            }, () -> {\n                                                false\n                                            })()\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                })()\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__bytearray__is_valid_data_fixed_length = (n_3) -> {\n        (data_13) -> {\n            __core__chooseData(data_13, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                bytes_7 = __core__unBData__safe(data_13);\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__lengthOfByteString(bytes_7), n_3),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }\n    };\n    __helios__txid__is_valid_data = (data_14) -> {\n        __core__chooseData(data_14, () -> {\n            pair_6 = __core__unConstrData__safe(data_14);\n            index_2 = __core__fstPair(pair_6);\n            fields_3 = __core__sndPair(pair_6);\n            __core__ifThenElse(\n                __core__equalsInteger(0, index_2),\n                () -> {\n                    __core__chooseList(fields_3, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_3), () -> {\n                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_3))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__int__is_valid_data = (data_15) -> {\n        __core__chooseData(data_15, false, false, false, true, false)\n    };\n    __helios__txoutputid__is_valid_data = (data_16) -> {\n        __helios__common__test_constr_data_2(data_16, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)\n    };\n    __helios__value__from_data = __core__unMapData;\n    __helios__common__enum_field_2 = (self_50) -> {\n        __core__headList(__helios__common__enum_fields_after_1(self_50))\n    };\n    __helios__mintingpolicyhash__is_valid_data = (data_17) -> {\n        __core__chooseData(data_17, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            bytes_8 = __core__unBData__safe(data_17);\n            n_4 = __core__lengthOfByteString(bytes_8);\n            __core__ifThenElse(\n                __core__equalsInteger(n_4, 0),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(n_4, 28),\n                        true,\n                        false\n                    )\n                }\n            )()\n        })()\n    };\n    __helios__bytearray__is_valid_data_max_length = (n_5) -> {\n        (data_18) -> {\n            __core__chooseData(data_18, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                bytes_9 = __core__unBData__safe(data_18);\n                __core__ifThenElse(\n                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_9), n_5),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }\n    };\n    __helios__value__is_valid_data = (data_19) -> {\n        __core__chooseData(data_19, () -> {\n            false\n        }, () -> {\n            map_10 = __core__unMapData__safe(data_19);\n            recurse_45 = (recurse_44, map_11) -> {\n                __core__chooseList(map_11, () -> {\n                    true\n                }, () -> {\n                    head_4 = __core__headList__safe(map_11);\n                    key_11 = __core__fstPair(head_4);\n                    value_2 = __core__sndPair(head_4);\n                    tail_3 = __core__tailList__safe(map_11);\n                    __core__ifThenElse(\n                        __helios__mintingpolicyhash__is_valid_data(key_11),\n                        () -> {\n                            __core__chooseData(value_2, () -> {\n                                false\n                            }, () -> {\n                                inner_4 = __core__unMapData__safe(value_2);\n                                __core__chooseList(inner_4, () -> {\n                                    false\n                                }, () -> {\n                                    recurse_inner_1 = (recurse_inner, inner_5) -> {\n                                        __core__chooseList(inner_5, () -> {\n                                            recurse_44(recurse_44, tail_3)\n                                        }, () -> {\n                                            head_5 = __core__headList__safe(inner_5);\n                                            key_12 = __core__fstPair(head_5);\n                                            value_3 = __core__sndPair(head_5);\n                                            __core__ifThenElse(\n                                                __helios__bytearray__is_valid_data_max_length(32)(key_12),\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __helios__int__is_valid_data(value_3),\n                                                        () -> {\n                                                            recurse_44(recurse_44, tail_3)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        })()\n                                    };\n                                    recurse_inner_1(recurse_inner_1, inner_4)\n                                })()\n                            }, () -> {\n                                false\n                            }, () -> {\n                                false\n                            }, () -> {\n                                false\n                            })()\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                })()\n            };\n            recurse_45(recurse_45, map_10)\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;\n    __helios__int____sub1 = (a_14, b_13) -> {\n        __core__subtractInteger(__core__multiplyInteger(a_14, __helios__real__ONE), b_13)\n    };\n    __helios__real____leq1 = (a_15, b_14) -> {\n        __core__lessThanEqualsInteger(a_15, __core__multiplyInteger(b_14, __helios__real__ONE))\n    };\n    __helios__real__round_calc_result = (res) -> {\n        __core__addInteger(__core__quotientInteger(res, 10), __core__quotientInteger(__core__remainderInteger(res, 10), 5))\n    };\n    __helios__real____div = (a_16, b_15) -> {\n        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_16, __core__multiplyInteger(__helios__real__ONE, 10)), b_15))\n    };\n    __helios__real____gt = __helios__int____gt;\n    __helios__real____sub = __helios__int____sub;\n    __helios__int____lt = __core__lessThanInteger;\n    __helios__real____lt = __helios__int____lt;\n    __helios__real____add = __helios__int____add;\n    __helios__real____mul = (a_17, b_16) -> {\n        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_17, b_16), __core__divideInteger(__helios__real__ONE, 10)))\n    };\n    __helios__real____add1 = (a_18, b_17) -> {\n        __core__addInteger(a_18, __core__multiplyInteger(b_17, __helios__real__ONE))\n    };\n    __helios__real____eq1 = (a_19, b_18) -> {\n        __core__equalsInteger(a_19, __core__multiplyInteger(b_18, __helios__real__ONE))\n    };\n    __helios__real__ONESQ = 1000000000000;\n    __helios__int____div1 = (a_20, b_19) -> {\n        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_20, __core__multiplyInteger(__helios__real__ONESQ, 10)), b_19))\n    };\n    __helios__int____div = __core__quotientInteger;\n    __helios__duration____div1 = __helios__int____div;\n    __helios__time____sub = __helios__int____sub;\n    __helios__duration__HOUR = 3600000;\n    __helios__int____add1 = (a_21, b_20) -> {\n        __core__addInteger(__core__multiplyInteger(a_21, __helios__real__ONE), b_20)\n    };\n    __helios__duration__show = __helios__int__show;\n    __helios__int____geq = (a_22, b_21) -> {\n        __helios__bool____not(__core__lessThanInteger(a_22, b_21))\n    };\n    __helios__duration____geq = __helios__int____geq;\n    __helios__value__is_zero_inner = (tokens_1) -> {\n        recurse_47 = (recurse_46, tokens_2) -> {\n            __core__chooseList(tokens_2, () -> {\n                true\n            }, () -> {\n                __helios__bool__and(() -> {\n                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)\n                }, () -> {\n                    recurse_46(recurse_46, __core__tailList__safe(tokens_2))\n                })\n            })()\n        };\n        recurse_47(recurse_47, tokens_1)\n    };\n    __helios__value__is_zero = (self_51) -> {\n        () -> {\n            recurse_49 = (recurse_48, map_12) -> {\n                __core__chooseList(map_12, () -> {\n                    true\n                }, () -> {\n                    __helios__bool__and(() -> {\n                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_12))))\n                    }, () -> {\n                        recurse_48(recurse_48, __core__tailList__safe(map_12))\n                    })\n                })()\n            };\n            recurse_49(recurse_49, self_51)\n        }\n    };\n    __helios__common__filter = (self_52, fn_5, nil) -> {\n        recurse_51 = (recurse_50, self_53, fn_6) -> {\n            __core__chooseList(self_53, () -> {\n                nil\n            }, () -> {\n                head_6 = __core__headList__safe(self_53);\n                __core__ifThenElse(\n                    fn_6(head_6),\n                    () -> {\n                        __core__mkCons(head_6, recurse_50(recurse_50, __core__tailList__safe(self_53), fn_6))\n                    },\n                    () -> {\n                        recurse_50(recurse_50, __core__tailList__safe(self_53), fn_6)\n                    }\n                )()\n            })()\n        };\n        recurse_51(recurse_51, self_52, fn_5)\n    };\n    __helios__common__filter_map = (self_54, fn_7) -> {\n        __helios__common__filter(self_54, fn_7, __core__mkNilPairData(()))\n    };\n    __helios__value__get_assets = (self_55) -> {\n        () -> {\n            __helios__common__filter_map(self_55, (pair_7) -> {\n                __helios__bool____not(__core__equalsByteString(__core__unBData(__core__fstPair(pair_7)), #))\n            })\n        }\n    };\n    __helios__value__get_safe = (self_56) -> {\n        (assetClass_2) -> {\n            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);\n            tokenName_2 = __helios__common__enum_field_1(assetClass_2);\n            outer_4 = (outer_3, inner_6, map_13) -> {\n                __core__chooseList(map_13, () -> {\n                    0\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), mintingPolicyHash),\n                        () -> {\n                            inner_6(inner_6, __core__unMapData(__core__sndPair(__core__headList__safe(map_13))))\n                        },\n                        () -> {\n                            outer_3(outer_3, inner_6, __core__tailList__safe(map_13))\n                        }\n                    )()\n                })()\n            };\n            inner_8 = (inner_7, map_14) -> {\n                __core__chooseList(map_14, () -> {\n                    0\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsData(__core__fstPair(__core__headList__safe(map_14)), tokenName_2),\n                        () -> {\n                            __core__unIData(__core__sndPair(__core__headList__safe(map_14)))\n                        },\n                        () -> {\n                            inner_7(inner_7, __core__tailList__safe(map_14))\n                        }\n                    )()\n                })()\n            };\n            outer_4(outer_4, inner_8, self_56)\n        }\n    };\n    __helios__assetclass__ADA = __helios__assetclass__new(#, #);\n    __helios__value__get_lovelace = (self_57) -> {\n        () -> {\n            __helios__value__get_safe(self_57)(__helios__assetclass__ADA)\n        }\n    };\n    __helios__real____mul1 = __helios__int____mul;\n    __helios__common__struct_fields_after_0 = __core__tailList;\n    __helios__common__struct_fields_after_1 = (self_58) -> {\n        __core__tailList(__helios__common__struct_fields_after_0(self_58))\n    };\n    __helios__common__struct_fields_after_2 = (self_59) -> {\n        __core__tailList(__helios__common__struct_fields_after_1(self_59))\n    };\n    __helios__common__struct_field_3 = (self_60) -> {\n        __core__headList(__helios__common__struct_fields_after_2(self_60))\n    };\n    __helios__common__struct_field_2 = (self_61) -> {\n        __core__headList(__helios__common__struct_fields_after_1(self_61))\n    };\n    __helios__common__struct_field_1 = (self_62) -> {\n        __core__headList(__helios__common__struct_fields_after_0(self_62))\n    };\n    __helios__common__struct_field_0 = __core__headList;\n    __helios__int____mul1 = __helios__int____mul;\n    __helios__duration__new = __helios__common__identity;\n    __helios__real____to_data = __helios__int____to_data;\n    __helios__time____to_data = __helios__int____to_data;\n    __helios__common__struct_fields_after_3 = (self_63) -> {\n        __core__tailList(__helios__common__struct_fields_after_2(self_63))\n    };\n    __helios__common__struct_fields_after_4 = (self_64) -> {\n        __core__tailList(__helios__common__struct_fields_after_3(self_64))\n    };\n    __helios__common__struct_field_5 = (self_65) -> {\n        __core__headList(__helios__common__struct_fields_after_4(self_65))\n    };\n    __helios__real__from_data = __helios__int__from_data;\n    __helios__common__struct_field_4 = (self_66) -> {\n        __core__headList(__helios__common__struct_fields_after_3(self_66))\n    };\n    __helios__struct____to_data = __core__listData;\n    __helios__real__is_valid_data = __helios__int__is_valid_data;\n    __helios__time__is_valid_data = __helios__int__is_valid_data;\n    __helios__real____div1 = (a_23, b_22) -> {\n        __helios__real__round_calc_result(__core__quotientInteger(__core__multiplyInteger(a_23, 10), b_22))\n    };\n    __helios__value__get_policy = (self_67) -> {\n        (mph_6) -> {\n            mph_7 = __helios__mintingpolicyhash____to_data(mph_6);\n            recurse_53 = (recurse_52, map_15) -> {\n                __core__chooseList(map_15, () -> {\n                    __helios__error(\"policy not found\")\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsData(__core__fstPair(__core__headList__safe(map_15)), mph_7),\n                        () -> {\n                            __core__unMapData(__core__sndPair(__core__headList__safe(map_15)))\n                        },\n                        () -> {\n                            recurse_52(recurse_52, __core__tailList__safe(map_15))\n                        }\n                    )()\n                })()\n            };\n            recurse_53(recurse_53, self_67)\n        }\n    };\n    __helios__real____eq = __helios__int____eq;\n    __helios__bytearray__length = __core__lengthOfByteString;\n    __helios__string__serialize = (self_68) -> {\n        () -> {\n            __core__serialiseData(__helios__string____to_data(self_68))\n        }\n    };\n    __helios__common__mStruct_field_internal = (map_16, name) -> {\n        name_data = __core__bData(name);\n        recurse_55 = (recurse_54, map_17) -> {\n            __core__chooseList(map_17, () -> {\n                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), \": field not found\"))\n            }, () -> {\n                head_7 = __core__headList__safe(map_17);\n                key_13 = __core__fstPair(head_7);\n                value_4 = __core__sndPair(head_7);\n                __core__ifThenElse(\n                    __core__equalsData(key_13, name_data),\n                    () -> {\n                        value_4\n                    },\n                    () -> {\n                        recurse_54(recurse_54, __core__tailList__safe(map_17))\n                    }\n                )()\n            })()\n        };\n        recurse_55(recurse_55, map_16)\n    };\n    __helios__common__mStruct_field = (self_69, name_1) -> {\n        __helios__common__mStruct_field_internal(__core__unMapData(self_69), name_1)\n    };\n    __helios__common__test_mStruct_field = (self_70, name_2, inner_test) -> {\n        __core__chooseData(self_70, () -> {\n            false\n        }, () -> {\n            map_18 = __core__unMapData__safe(self_70);\n            recurse_57 = (recurse_56, map_19) -> {\n                __core__chooseList(map_19, () -> {\n                    __core__trace(__core__appendString(\"Warning: field not found: \", __core__decodeUtf8__safe(__core__unBData__safe(name_2))), () -> {\n                        false\n                    })()\n                }, () -> {\n                    head_8 = __core__headList__safe(map_19);\n                    key_14 = __core__fstPair(head_8);\n                    value_5 = __core__sndPair(head_8);\n                    __core__ifThenElse(\n                        __core__equalsData(key_14, name_2),\n                        () -> {\n                            inner_test(value_5)\n                        },\n                        () -> {\n                            recurse_56(recurse_56, __core__tailList__safe(map_19))\n                        }\n                    )()\n                })()\n            };\n            recurse_57(recurse_57, map_18)\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__common__enum_field_3 = (self_71) -> {\n        __core__headList(__helios__common__enum_fields_after_2(self_71))\n    };\n    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);\n    __helios__bool__is_valid_data = (data_20) -> {\n        __core__chooseData(data_20, () -> {\n            pair_8 = __core__unConstrData__safe(data_20);\n            index_3 = __core__fstPair(pair_8);\n            fields_4 = __core__sndPair(pair_8);\n            __core__chooseList(fields_4, () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(0, index_3),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(1, index_3),\n                            () -> {\n                                true\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    }\n                )()\n            }, () -> {\n                false\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__time____eq = __helios__int____eq;\n    __helios__real____geq = __helios__int____geq;\n    __helios__real____lt1 = (a_24, b_23) -> {\n        __core__lessThanInteger(a_24, __core__multiplyInteger(b_23, __helios__real__ONE))\n    };\n    __helios__common__struct_fields_after_5 = (self_72) -> {\n        __core__tailList(__helios__common__struct_fields_after_4(self_72))\n    };\n    __helios__common__struct_fields_after_6 = (self_73) -> {\n        __core__tailList(__helios__common__struct_fields_after_5(self_73))\n    };\n    __helios__common__struct_fields_after_7 = (self_74) -> {\n        __core__tailList(__helios__common__struct_fields_after_6(self_74))\n    };\n    __helios__common__struct_fields_after_8 = (self_75) -> {\n        __core__tailList(__helios__common__struct_fields_after_7(self_75))\n    };\n    __helios__common__struct_field_9 = (self_76) -> {\n        __core__headList(__helios__common__struct_fields_after_8(self_76))\n    };\n    __helios__common__struct_field_8 = (self_77) -> {\n        __core__headList(__helios__common__struct_fields_after_7(self_77))\n    };\n    __helios__common__struct_field_7 = (self_78) -> {\n        __core__headList(__helios__common__struct_fields_after_6(self_78))\n    };\n    __helios__common__struct_field_6 = (self_79) -> {\n        __core__headList(__helios__common__struct_fields_after_5(self_79))\n    };\n    __helios__duration__from_data = __helios__int__from_data;\n    __helios__struct____eq = (self_80, other_3) -> {\n        __core__equalsData(__helios__struct____to_data(self_80), __helios__struct____to_data(other_3))\n    };\n    __helios__duration__is_valid_data = __helios__int__is_valid_data;\n    __helios__value__contains_policy = (self_81) -> {\n        (mph_8) -> {\n            mph_9 = __helios__mintingpolicyhash____to_data(mph_8);\n            recurse_59 = (recurse_58, map_20) -> {\n                __core__chooseList(map_20, () -> {\n                    false\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsData(__core__fstPair(__core__headList__safe(map_20)), mph_9),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            recurse_58(recurse_58, __core__tailList__safe(map_20))\n                        }\n                    )()\n                })()\n            };\n            recurse_59(recurse_59, self_81)\n        }\n    };\n    __helios__value__from_map = __helios__common__identity;\n    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;\n    __helios__common__map = (self_82, fn_8, init) -> {\n        recurse_61 = (recurse_60, rem_1, lst_7) -> {\n            __core__chooseList(rem_1, () -> {\n                lst_7\n            }, () -> {\n                __core__mkCons(fn_8(__core__headList__safe(rem_1)), recurse_60(recurse_60, __core__tailList__safe(rem_1), lst_7))\n            })()\n        };\n        recurse_61(recurse_61, self_82, init)\n    };\n    __helios__value____to_data = __core__mapData;\n    __helios__value__value = __helios__common__identity;\n    __helios__common__insert_in_sorted = (x_3, lst_8, comp_2) -> {\n        recurse_63 = (recurse_62, lst_9) -> {\n            __core__chooseList(lst_9, () -> {\n                __core__mkCons(x_3, lst_9)\n            }, () -> {\n                head_9 = __core__headList__safe(lst_9);\n                __core__ifThenElse(\n                    comp_2(x_3, head_9),\n                    () -> {\n                        __core__mkCons(x_3, lst_9)\n                    },\n                    () -> {\n                        __core__mkCons(head_9, recurse_62(recurse_62, __core__tailList__safe(lst_9)))\n                    }\n                )()\n            })()\n        };\n        recurse_63(recurse_63, lst_8)\n    };\n    __helios__common__sort = (lst_10, comp_3) -> {\n        recurse_65 = (recurse_64, lst_11) -> {\n            __core__chooseList(lst_11, () -> {\n                lst_11\n            }, () -> {\n                (head_10, tail_4) -> {\n                    __helios__common__insert_in_sorted(head_10, tail_4, comp_3)\n                }(__core__headList__safe(lst_11), recurse_64(recurse_64, __core__tailList__safe(lst_11)))\n            })()\n        };\n        recurse_65(recurse_65, lst_10)\n    };\n    __helios__bytearray____lt = __core__lessThanByteString;\n    __helios__int__max = (a_25, b_24) -> {\n        __core__ifThenElse(\n            __core__lessThanInteger(a_25, b_24),\n            b_24,\n            a_25\n        )\n    };\n    __helios__common__slice_bytearray = (self_83, selfLengthFn) -> {\n        (start, end) -> {\n            normalize = (pos_1) -> {\n                __core__ifThenElse(\n                    __core__lessThanInteger(pos_1, 0),\n                    () -> {\n                        __core__addInteger(__core__addInteger(selfLengthFn(self_83), 1), pos_1)\n                    },\n                    () -> {\n                        pos_1\n                    }\n                )()\n            };\n            fn_10 = (start_1) -> {\n                fn_9 = (end_1) -> {\n                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_83)\n                };\n                fn_9(normalize(end))\n            };\n            fn_10(normalize(start))\n        }\n    };\n    __helios__bytearray__slice = (self_84) -> {\n        __helios__common__slice_bytearray(self_84, __core__lengthOfByteString)\n    };\n    __helios__bytearray__blake2b = (self_85) -> {\n        () -> {\n            __core__blake2b_256(self_85)\n        }\n    };\n    __helios__bytearray____add = __core__appendByteString;\n    __helios__txid__serialize = __helios__common__serialize;\n    __helios__txoutputid__index = (self_86) -> {\n        __helios__int__from_data(__helios__common__enum_field_1(self_86))\n    };\n    __helios__txoutputid__tx_id = __helios__common__enum_field_0;\n    __helios__common__enum_fields_after_4 = (self_87) -> {\n        __core__tailList(__helios__common__enum_fields_after_3(self_87))\n    };\n    __helios__common__enum_fields_after_5 = (self_88) -> {\n        __core__tailList(__helios__common__enum_fields_after_4(self_88))\n    };\n    __helios__common__enum_fields_after_6 = (self_89) -> {\n        __core__tailList(__helios__common__enum_fields_after_5(self_89))\n    };\n    __helios__common__enum_fields_after_7 = (self_90) -> {\n        __core__tailList(__helios__common__enum_fields_after_6(self_90))\n    };\n    __helios__common__enum_fields_after_8 = (self_91) -> {\n        __core__tailList(__helios__common__enum_fields_after_7(self_91))\n    };\n    __helios__common__enum_field_9 = (self_92) -> {\n        __core__headList(__helios__common__enum_fields_after_8(self_92))\n    };\n    __helios__tx__redeemers = (self_93) -> {\n        __core__unMapData(__helios__common__enum_field_9(self_93))\n    };\n    __helios__scriptpurpose__spending____is = (data_21) -> {\n        __helios__common__enum_tag_equals(data_21, 1)\n    };\n    __helios__txoutputid____eq = __helios__common____eq;\n    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;\n    __helios__scriptpurpose____to_data = __helios__common__identity;\n    __helios__txid__show = (self_94) -> {\n        () -> {\n            __helios__data__show_constr_data((tag_2, fields_5) -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(tag_2, 0),\n                    () -> {\n                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_10) -> {\n                            __helios__bytearray__show(bytes_10)()\n                        }))(fields_5)\n                    },\n                    () -> {\n                        __helios__data__show(self_94)()\n                    }\n                )()\n            })(self_94)\n        }\n    };\n    __helios__data__show_idata = (callback_4) -> {\n        (data_22) -> {\n            callback_nok_5 = __helios__data__show(data_22);\n            __core__chooseData(data_22, callback_nok_5, callback_nok_5, callback_nok_5, () -> {\n                callback_4(__core__unIData__safe(data_22))\n            }, callback_nok_5)()\n        }\n    };\n    __helios__txoutputid__show = (self_95) -> {\n        () -> {\n            __helios__data__show_constr_data((tag_3, fields_6) -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(tag_3, 0),\n                    () -> {\n                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {\n                            __helios__txid__show(tx_id_data)()\n                        })(fields_6);\n                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_6) -> {\n                            __helios__int__show(i_6)()\n                        }))(fields_6);\n                        __core__appendString(tx_id_str, __core__appendString(\"#\", index_str))\n                    },\n                    () -> {\n                        __helios__data__show(self_95)()\n                    }\n                )()\n            })(self_95)\n        }\n    };\n    __helios__txoutputdatum__inline = (self_96) -> {\n        pair_9 = __core__unConstrData(self_96);\n        index_4 = __core__fstPair(pair_9);\n        fields_7 = __core__sndPair(pair_9);\n        __core__ifThenElse(\n            __core__equalsInteger(index_4, 2),\n            () -> {\n                __core__headList(fields_7)\n            },\n            () -> {\n                __helios__error(\"not an inline datum\")\n            }\n        )()\n    };\n    __helios__txoutput__datum = __helios__common__enum_field_2;\n    __helios__txinput__datum = (self_97) -> {\n        __helios__txoutput__datum(__helios__txinput__output(self_97))\n    };\n    __helios__tx__ref_inputs = (self_98) -> {\n        __core__unListData(__helios__common__enum_field_1(self_98))\n    };\n    __helios__tx__outputs = (self_99) -> {\n        __core__unListData(__helios__common__enum_field_2(self_99))\n    };\n    __helios__address____eq = __helios__common____eq;\n    __helios__txoutput__address = __helios__common__enum_field_0;\n    __helios__txinput__address = (self_100) -> {\n        __helios__txoutput__address(__helios__txinput__output(self_100))\n    };\n    __helios__txoutput__from_data = __helios__common__identity;\n    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);\n    __helios__option__NONE_FUNC = (callback_5) -> {\n        callback_5(false, ())\n    };\n    __helios__option__SOME_FUNC = (some) -> {\n        (callback_6) -> {\n            callback_6(true, some)\n        }\n    };\n    __helios__bytearray__from_data_safe = (data_23) -> {\n        __core__chooseData(data_23, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__SOME_FUNC(__core__unBData__safe(data_23))\n        })()\n    };\n    __helios__int__from_data_safe = (data_24) -> {\n        __core__chooseData(data_24, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__SOME_FUNC(__core__unIData__safe(data_24))\n        }, () -> {\n            __helios__option__NONE_FUNC\n        })()\n    };\n    __helios__data__constrdata____is = (data_25) -> {\n        __core__chooseData(data_25, () -> {\n            true\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__data__constrdata__fields = (data_26) -> {\n        __core__sndPair(__core__unConstrData(data_26))\n    };\n    __helios__value____geq = (a_26, b_25) -> {\n        __helios__value__compare(a_26, b_25, (a_qty, b_qty) -> {\n            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))\n        })\n    };\n    __helios__value__contains = (self_101) -> {\n        (value_6) -> {\n            __helios__value____geq(self_101, value_6)\n        }\n    };\n    __helios__txoutput__sum_values = (outputs) -> {\n        __helios__common__fold(outputs, (prev_3, txOutput) -> {\n            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))\n        }, __helios__value__ZERO)\n    };\n    __helios__common__filter_list = (self_102, fn_11) -> {\n        __helios__common__filter(self_102, fn_11, __helios__common__list_0)\n    };\n    __helios__tx__filter_outputs = (self_103, fn_12) -> {\n        __helios__common__filter_list(__helios__tx__outputs(self_103), fn_12)\n    };\n    __helios__address__credential = __helios__common__enum_field_0;\n    __helios__spendingcredential__is_validator = (self_104) -> {\n        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_104)), 1)\n    };\n    __helios__validatorhash____eq = __helios__bytearray____eq;\n    __helios__validatorhash__from_data = __helios__bytearray__from_data;\n    __helios__spendingcredential__validator__hash = (self_105) -> {\n        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_105))\n    };\n    __helios__spendingcredential__validator__cast = (data_27) -> {\n        __helios__common__assert_constr_index(data_27, 1)\n    };\n    __helios__txoutput__is_locked_by = (self_106) -> {\n        (hash) -> {\n            credential = __helios__address__credential(__helios__txoutput__address(self_106));\n            __core__ifThenElse(\n                __helios__spendingcredential__is_validator(credential),\n                () -> {\n                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))\n                },\n                () -> {\n                    false\n                }\n            )()\n        }\n    };\n    __helios__tx__outputs_locked_by = (self_107) -> {\n        (vh) -> {\n            __helios__tx__filter_outputs(self_107, (output) -> {\n                __helios__txoutput__is_locked_by(output)(vh)\n            })\n        }\n    };\n    __helios__tx__value_locked_by = (self_108) -> {\n        (vh_1) -> {\n            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_108)(vh_1))\n        }\n    };\n    __helios__txoutputdatum__serialize = __helios__common__serialize;\n    __helios__data__constrdata__tag = (data_28) -> {\n        __core__fstPair(__core__unConstrData(data_28))\n    };\n    __helios__txinput__from_data = __helios__common__identity;\n    __helios__struct__serialize = (self_109) -> {\n        () -> {\n            __core__serialiseData(__helios__struct____to_data(self_109))\n        }\n    };\n    __helios__txoutput__is_valid_data = (data_29) -> {\n        __core__chooseData(data_29, () -> {\n            true\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__txinput__is_valid_data = (data_30) -> {\n        __helios__common__test_constr_data_2(data_30, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)\n    };\n    __helios__txinput____to_data = __helios__common__identity;\n    __helios__common__enum_field_7 = (self_110) -> {\n        __core__headList(__helios__common__enum_fields_after_6(self_110))\n    };\n    __helios__common__enum_field_6 = (self_111) -> {\n        __core__headList(__helios__common__enum_fields_after_5(self_111))\n    };\n    __helios__common__enum_field_5 = (self_112) -> {\n        __core__headList(__helios__common__enum_fields_after_4(self_112))\n    };\n    __helios__txoutput____to_data = __helios__common__identity;\n    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);\n    __helios__spendingcredential__is_valid_data = (data_31) -> {\n        __core__chooseData(data_31, () -> {\n            pair_10 = __core__unConstrData__safe(data_31);\n            index_5 = __core__fstPair(pair_10);\n            fields_8 = __core__sndPair(pair_10);\n            __core__ifThenElse(\n                __core__equalsInteger(index_5, 0),\n                () -> {\n                    __core__chooseList(fields_8, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_8), () -> {\n                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_8))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_5, 1),\n                        () -> {\n                            __core__chooseList(fields_8, () -> {\n                                false\n                            }, () -> {\n                                __core__chooseList(__core__tailList__safe(fields_8), () -> {\n                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_8))\n                                }, () -> {\n                                    false\n                                })()\n                            })()\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__common__test_list_head_data = (test_head, test_tail) -> {\n        (list_2) -> {\n            __core__chooseList(list_2, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    test_head(__core__headList(list_2)),\n                    () -> {\n                        test_tail(__core__tailList(list_2))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }\n    };\n    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;\n    __helios__common__test_list_empty = (list_3) -> {\n        __core__chooseList(list_3, true, false)\n    };\n    __helios__stakingcredential__is_valid_data = (data_32) -> {\n        __core__chooseData(data_32, () -> {\n            pair_11 = __core__unConstrData__safe(data_32);\n            tag_4 = __core__fstPair(pair_11);\n            fields_9 = __core__sndPair(pair_11);\n            __core__ifThenElse(\n                __core__equalsInteger(tag_4, 0),\n                () -> {\n                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_9)\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(tag_4, 1),\n                        () -> {\n                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_9)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__option[__helios__stakingcredential]__is_valid_data = (data_33) -> {\n        __core__chooseData(data_33, () -> {\n            pair_12 = __core__unConstrData__safe(data_33);\n            index_6 = __core__fstPair(pair_12);\n            fields_10 = __core__sndPair(pair_12);\n            __core__ifThenElse(\n                __core__equalsInteger(index_6, 0),\n                () -> {\n                    __core__chooseList(fields_10, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_10), () -> {\n                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_10))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_6, 1),\n                        () -> {\n                            __core__chooseList(fields_10, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__address__is_valid_data = (data_34) -> {\n        __helios__common__test_constr_data_2(data_34, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)\n    };\n    __helios__validatorhash__show = __helios__bytearray__show;\n    __helios__common__find_safe = (self_113, fn_13, callback_7) -> {\n        recurse_67 = (recurse_66, self_114, fn_14) -> {\n            __core__chooseList(self_114, () -> {\n                __core__constrData(1, __helios__common__list_0)\n            }, () -> {\n                head_11 = __core__headList__safe(self_114);\n                __core__ifThenElse(\n                    fn_14(head_11),\n                    () -> {\n                        __core__constrData(0, __helios__common__list_1(callback_7(head_11)))\n                    },\n                    () -> {\n                        recurse_66(recurse_66, __core__tailList__safe(self_114), fn_14)\n                    }\n                )()\n            })()\n        };\n        recurse_67(recurse_67, self_113, fn_13)\n    };\n    __helios__spendingcredential____eq = __helios__common____eq;\n    __helios__validatorhash____to_data = __helios__bytearray____to_data;\n    __helios__spendingcredential__new_validator = (hash_1) -> {\n        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))\n    };\n    __helios__bool____to_data = (b_26) -> {\n        __core__constrData(__core__ifThenElse(\n            b_26,\n            1,\n            0\n        ), __helios__common__list_0)\n    };\n    __helios__assetclass__is_valid_data = (data_35) -> {\n        __helios__common__test_constr_data_2(data_35, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))\n    };\n    __helios__duration____leq = __helios__int____leq;\n    __helios__tx__time_range = __helios__common__enum_field_7;\n    __helios__data__mapdata____is = (data_36) -> {\n        __core__chooseData(data_36, () -> {\n            false\n        }, () -> {\n            true\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__scriptpurpose__from_data = __helios__common__identity;\n    __module__StellarHeliosHelpers__logGroupStart = (group, __useopt__collapsed, collapsed) -> {\n        collapsed_1 = __core__ifThenElse(\n            __useopt__collapsed,\n            () -> {\n                collapsed\n            },\n            () -> {\n                false\n            }\n        )();\n        __core__ifThenElse(\n            collapsed_1,\n            () -> {\n                __helios__print(__helios__string____add(\"🐣🗜️ \", group))\n            },\n            () -> {\n                () -> {\n                    __helios__print(__helios__string____add(\"🐣\", group))\n                }()\n            }\n        )()\n    };\n    __module__StellarHeliosHelpers__logGroupEnd = (__useopt__status, status) -> {\n        status_1 = __core__ifThenElse(\n            __useopt__status,\n            () -> {\n                status\n            },\n            () -> {\n                \"\"\n            }\n        )();\n        __helios__print(__helios__string____add(\"🥚 \", status_1))\n    };\n    __module__StellarHeliosHelpers__emptyUnitFunc = () -> {\n        ()\n    };\n    __module__StellarHeliosHelpers__logGroup_1 = (__module__StellarHeliosHelpers__logGroup) -> {\n        (group_1, __useopt__collapsed_1, collapsed_2, callback_8) -> {\n            collapsed_3 = __core__ifThenElse(\n                __useopt__collapsed_1,\n                () -> {\n                    collapsed_2\n                },\n                () -> {\n                    false\n                }\n            )();\n            __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(group_1, true, collapsed_3), result_2 = callback_8();\n            __core__chooseUnit(__core__ifThenElse(\n                result_2,\n                () -> {\n                    __module__StellarHeliosHelpers__logGroupEnd(true, \"✅\")\n                },\n                () -> {\n                    () -> {\n                        __module__StellarHeliosHelpers__logGroupEnd(true, \"❌\")\n                    }()\n                }\n            )(), result_2))\n        }\n    };\n    __module__StellarHeliosHelpers__logGroupUnit = (group_2, __useopt__collapsed_2, collapsed_4, __useopt__callback, callback_9) -> {\n        collapsed_5 = __core__ifThenElse(\n            __useopt__collapsed_2,\n            () -> {\n                collapsed_4\n            },\n            () -> {\n                false\n            }\n        )();\n        callback_10 = __core__ifThenElse(\n            __useopt__callback,\n            () -> {\n                callback_9\n            },\n            () -> {\n                __module__StellarHeliosHelpers__emptyUnitFunc\n            }\n        )();\n        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(group_2, true, collapsed_5), __core__chooseUnit(callback_10(), __module__StellarHeliosHelpers__logGroupEnd(false, ())))\n    };\n    __module__StellarHeliosHelpers__TODO = (task) -> {\n        __helios__print(__helios__string____add(__helios__string____add(\"  🟥  😳💦  TODO: \", task), \"\n\"))\n    };\n    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion, __useopt__onError, onError, __useopt__showSuccess, showSuccess) -> {\n        assertion_1 = __core__ifThenElse(\n            __useopt__assertion,\n            () -> {\n                assertion\n            },\n            () -> {\n                true\n            }\n        )();\n        onError_1 = __core__ifThenElse(\n            __useopt__onError,\n            () -> {\n                onError\n            },\n            () -> {\n                __helios__string____add(\"  ❌ failed reqt: ❗\", reqt)\n            }\n        )();\n        showSuccess_1 = __core__ifThenElse(\n            __useopt__showSuccess,\n            () -> {\n                showSuccess\n            },\n            () -> {\n                false\n            }\n        )();\n        __core__chooseUnit(__core__ifThenElse(\n            __helios__bool__and(() -> {\n                showSuccess_1\n            }, () -> {\n                assertion_1\n            }),\n            () -> {\n                __helios__print(__helios__string____add(\"✅ ❗\", reqt))\n            },\n            () -> {\n                () -> {\n                    __helios__print(__helios__string____add(\"❗\", reqt))\n                }()\n            }\n        )(), __helios__assert(assertion_1, onError_1))\n    };\n    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2, __useopt__onError_1, onError_2, __useopt__showSuccess_1, showSuccess_2) -> {\n        assertion_3 = __core__ifThenElse(\n            __useopt__assertion_1,\n            () -> {\n                assertion_2\n            },\n            () -> {\n                true\n            }\n        )();\n        onError_3 = __core__ifThenElse(\n            __useopt__onError_1,\n            () -> {\n                onError_2\n            },\n            () -> {\n                __helios__string____add(\"  ❌ failed reqt: ❗\", reqt_1)\n            }\n        )();\n        showSuccess_3 = __core__ifThenElse(\n            __useopt__showSuccess_1,\n            () -> {\n                showSuccess_2\n            },\n            () -> {\n                false\n            }\n        )();\n        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3, true, onError_3, true, showSuccess_3), true)\n    };\n    __module__StellarHeliosHelpers__REQTgroupStart = (reqt_2, __useopt__collapsed_3, collapsed_6) -> {\n        collapsed_7 = __core__ifThenElse(\n            __useopt__collapsed_3,\n            () -> {\n                collapsed_6\n            },\n            () -> {\n                false\n            }\n        )();\n        __module__StellarHeliosHelpers__logGroupStart(__helios__string____add(\"❗\", reqt_2), true, collapsed_7)\n    };\n    __module__StellarHeliosHelpers__bREQTgroup = (reqt_3, __useopt__collapsed_4, collapsed_8, callback_11) -> {\n        collapsed_9 = __core__ifThenElse(\n            __useopt__collapsed_4,\n            () -> {\n                collapsed_8\n            },\n            () -> {\n                false\n            }\n        )();\n        result_3 = __module__StellarHeliosHelpers__logGroup_1(__module__StellarHeliosHelpers__logGroup_1)(__helios__string____add(\"❗\", reqt_3), collapsed_9, true, callback_11);\n        __core__chooseUnit(__helios__assert(result_3, __helios__string____add(\"❌ failed reqt: ❗\", reqt_3)), result_3)\n    };\n    __module__StellarHeliosHelpers__REQTgroupUnit = (reqt_4, __useopt__collapsed_5, collapsed_10, callback_12) -> {\n        collapsed_11 = __core__ifThenElse(\n            __useopt__collapsed_5,\n            () -> {\n                collapsed_10\n            },\n            () -> {\n                false\n            }\n        )();\n        __module__StellarHeliosHelpers__logGroupUnit(__helios__string____add(\"❗\", reqt_4), true, collapsed_11, true, callback_12)\n    };\n    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {\n        tn_1 = __core__ifThenElse(\n            __useopt__tn,\n            () -> {\n                tn\n            },\n            () -> {\n                \"\"\n            }\n        )();\n        tnBytes_1 = __core__ifThenElse(\n            __useopt__tnBytes,\n            () -> {\n                tnBytes\n            },\n            () -> {\n                __helios__string__encode_utf8(tn_1)()\n            }\n        )();\n        count_1 = __core__ifThenElse(\n            __useopt__count,\n            () -> {\n                count\n            },\n            () -> {\n                1\n            }\n        )();\n        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), \"missing reqd tn or tnBytes\"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))\n    };\n    __helios__list[__helios__txoutput]__find = (self_115) -> {\n        (fn_15) -> {\n            recurse_69 = (recurse_68, lst_12) -> {\n                __core__chooseList(lst_12, () -> {\n                    __helios__error(\"not found\")\n                }, () -> {\n                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));\n                    __core__ifThenElse(\n                        fn_15(item_6),\n                        () -> {\n                            item_6\n                        },\n                        () -> {\n                            recurse_68(recurse_68, __core__tailList__safe(lst_12))\n                        }\n                    )()\n                })()\n            };\n            recurse_69(recurse_69, self_115)\n        }\n    };\n    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_116) -> {\n        __helios__common__length(self_116)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__length = (self_117) -> {\n        __helios__common__length(self_117)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_21) -> {\n        recurse_71 = (recurse_70, map_22) -> {\n            __core__chooseList(map_22, () -> {\n                true\n            }, () -> {\n                head_12 = __core__headList__safe(map_22);\n                __core__ifThenElse(\n                    __helios__bytearray__is_valid_data(__core__fstPair(head_12)),\n                    () -> {\n                        __core__ifThenElse(\n                            __helios__int__is_valid_data(__core__sndPair(head_12)),\n                            () -> {\n                                recurse_70(recurse_70, __core__tailList__safe(map_22))\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_71(recurse_71, map_21)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_37) -> {\n        map_23 = __core__unMapData(data_37);\n        _ = __core__ifThenElse(\n            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_23),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid map data\", ())\n            }\n        )();\n        map_23\n    };\n    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_118) -> {\n        (key_15) -> {\n            __helios__common__map_get(self_118, __helios__scriptpurpose____to_data(key_15), (x_4) -> {\n                __helios__data__from_data(x_4)\n            }, () -> {\n                __helios__error(\"key not found\")\n            })\n        }\n    };\n    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_119) -> {\n        (fn_16) -> {\n            recurse_73 = (recurse_72, map_24) -> {\n                __core__chooseList(map_24, () -> {\n                    __helios__error(\"not found\")\n                }, () -> {\n                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_24)));\n                    __core__ifThenElse(\n                        fn_16(item_7),\n                        () -> {\n                            item_7\n                        },\n                        () -> {\n                            recurse_72(recurse_72, __core__tailList__safe(map_24))\n                        }\n                    )()\n                })()\n            };\n            recurse_73(recurse_73, self_119)\n        }\n    };\n    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {\n        targetId = __helios__txinput__output_id(txInput);\n        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);\n        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {\n            __cond = purpose;\n            __core__ifThenElse(\n                __helios__scriptpurpose__spending____is(__cond),\n                () -> {\n                    (sp) -> {\n                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)\n                    }\n                },\n                () -> {\n                    (__1) -> {\n                        false\n                    }\n                }\n            )()(__cond)\n        });\n        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)\n    };\n    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_38) -> {\n        __core__ifThenElse(\n            __helios__common__test_mStruct_field(data_38, __core__bData(#747065), __helios__string__is_valid_data),\n            () -> {\n                __core__ifThenElse(\n                    __helios__common__test_mStruct_field(data_38, __core__bData(#406964), __helios__bytearray__is_valid_data),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        __core__trace(\"Warning: invalid data in AnyData.@id\", () -> {\n                            false\n                        })()\n                    }\n                )()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid data in AnyData.tpe\", () -> {\n                    false\n                })()\n            }\n        )()\n    };\n    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_39) -> {\n        ignore = __core__ifThenElse(\n            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_39),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid AnyData data\", ())\n            }\n        )();\n        data_39\n    };\n    __module__StellarHeliosHelpers__AnyData[]__id = (self_120) -> {\n        __helios__bytearray__from_data(__helios__common__mStruct_field(self_120, #406964))\n    };\n    __module__StellarHeliosHelpers__AnyData[]__type = (self_121) -> {\n        __helios__string__from_data(__helios__common__mStruct_field(self_121, #747065))\n    };\n    __helios__list[__helios__data]__head = (self_122) -> {\n        __helios__data__from_data(__core__headList(self_122))\n    };\n    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_7) -> {\n        __cond_1 = value_7;\n        __core__ifThenElse(\n            __helios__data__constrdata____is(__cond_1),\n            () -> {\n                (__lhs_0) -> {\n                    fields_11 = __helios__data__constrdata__fields(__lhs_0);\n                    __cond_2 = __helios__list[__helios__data]__head(fields_11);\n                    __core__ifThenElse(\n                        __helios__data__mapdata____is(__cond_2),\n                        () -> {\n                            (__lhs_0_1) -> {\n                                __helios__list[__helios__data]__head(fields_11)\n                            }\n                        },\n                        () -> {\n                            (__3) -> {\n                                __helios__error(\"bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map\")\n                            }\n                        }\n                    )()(__cond_2)\n                }\n            },\n            () -> {\n                (__2) -> {\n                    __helios__error(\"bad cast to mStruct from non-ConstrData\")\n                }\n            }\n        )()(__cond_1)\n    };\n    __module__StellarHeliosHelpers__getTimeRange = (__useopt__granularity, granularity) -> {\n        granularity_1 = __core__ifThenElse(\n            __useopt__granularity,\n            () -> {\n                granularity\n            },\n            () -> {\n                __helios__duration__HOUR\n            }\n        )();\n        validity = __helios__tx__time_range(__helios__scriptcontext__tx);\n        __core__chooseUnit(__helios__assert(__helios__duration____leq(__helios__time____sub(__helios__timerange__end(validity), __helios__timerange__start(validity)), granularity_1), __helios__string____add(__helios__string____add(\"txn duration must be at most \", __helios__duration__show(granularity_1)()), \"ms\")), validity)\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {\n        (data_40) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_40),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_40),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_40),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {\n        (data_41) -> {\n            ignore_1 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_41),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid DelegateLifecycleActivity data\", ())\n                }\n            )();\n            data_41\n        }\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_42) -> {\n        __helios__common__enum_tag_equals(data_42, 0)\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_43) -> {\n        __core__chooseData(data_43, () -> {\n            pair_13 = __core__unConstrData__safe(data_43);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_13), 0),\n                () -> {\n                    data_44 = __core__listData(__core__sndPair(pair_13));\n                    __core__chooseData(data_44, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_12 = __core__unListData__safe(data_44);\n                        __core__chooseList(fields_12, () -> {\n                            false\n                        }, () -> {\n                            head_13 = __core__headList__safe(fields_12);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_13),\n                                () -> {\n                                    fields_13 = __core__tailList__safe(fields_12);\n                                    __core__chooseList(fields_13, () -> {\n                                        false\n                                    }, () -> {\n                                        head_14 = __core__headList__safe(fields_13);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_14),\n                                            () -> {\n                                                fields_14 = __core__tailList__safe(fields_13);\n                                                __core__chooseList(fields_14, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_123) -> {\n        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_123))\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_124) -> {\n        __helios__string__from_data(__helios__common__enum_field_1(self_124))\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_45) -> {\n        __helios__common__enum_tag_equals(data_45, 1)\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_46) -> {\n        __core__chooseData(data_46, () -> {\n            pair_14 = __core__unConstrData__safe(data_46);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_14), 1),\n                () -> {\n                    data_47 = __core__listData(__core__sndPair(pair_14));\n                    __core__chooseData(data_47, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_15 = __core__unListData__safe(data_47);\n                        __core__chooseList(fields_15, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_48) -> {\n        __helios__common__enum_tag_equals(data_48, 2)\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_49) -> {\n        __core__chooseData(data_49, () -> {\n            pair_15 = __core__unConstrData__safe(data_49);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_15), 2),\n                () -> {\n                    data_50 = __core__listData(__core__sndPair(pair_15));\n                    __core__chooseData(data_50, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_16 = __core__unListData__safe(data_50);\n                        __core__chooseList(fields_16, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;\n    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {\n        (data_51) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_51),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_51),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_51),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_51),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_51),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_51),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_51),\n                                                                () -> {\n                                                                    true\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_51),\n                                                                        () -> {\n                                                                            true\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {\n        (data_52) -> {\n            ignore_2 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_52),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid DelegateRole data\", ())\n                }\n            )();\n            data_52\n        }\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_53) -> {\n        __helios__common__enum_tag_equals(data_53, 0)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_54) -> {\n        __core__chooseData(data_54, () -> {\n            pair_16 = __core__unConstrData__safe(data_54);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_16), 0),\n                () -> {\n                    data_55 = __core__listData(__core__sndPair(pair_16));\n                    __core__chooseData(data_55, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_17 = __core__unListData__safe(data_55);\n                        __core__chooseList(fields_17, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {\n        __core__constrData(0, __core__mkNilData(()))\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_56) -> {\n        __helios__common__enum_tag_equals(data_56, 1)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_57) -> {\n        __core__chooseData(data_57, () -> {\n            pair_17 = __core__unConstrData__safe(data_57);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_17), 1),\n                () -> {\n                    data_58 = __core__listData(__core__sndPair(pair_17));\n                    __core__chooseData(data_58, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_18 = __core__unListData__safe(data_58);\n                        __core__chooseList(fields_18, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {\n        __core__constrData(1, __core__mkNilData(()))\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_59) -> {\n        __helios__common__enum_tag_equals(data_59, 2)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_60) -> {\n        __core__chooseData(data_60, () -> {\n            pair_18 = __core__unConstrData__safe(data_60);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_18), 2),\n                () -> {\n                    data_61 = __core__listData(__core__sndPair(pair_18));\n                    __core__chooseData(data_61, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_19 = __core__unListData__safe(data_61);\n                        __core__chooseList(fields_19, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_62) -> {\n        __helios__common__enum_tag_equals(data_62, 3)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_63) -> {\n        __core__chooseData(data_63, () -> {\n            pair_19 = __core__unConstrData__safe(data_63);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_19), 3),\n                () -> {\n                    data_64 = __core__listData(__core__sndPair(pair_19));\n                    __core__chooseData(data_64, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_20 = __core__unListData__safe(data_64);\n                        __core__chooseList(fields_20, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_65) -> {\n        __helios__common__enum_tag_equals(data_65, 4)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_66) -> {\n        __core__chooseData(data_66, () -> {\n            pair_20 = __core__unConstrData__safe(data_66);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_20), 4),\n                () -> {\n                    data_67 = __core__listData(__core__sndPair(pair_20));\n                    __core__chooseData(data_67, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_21 = __core__unListData__safe(data_67);\n                        __core__chooseList(fields_21, () -> {\n                            false\n                        }, () -> {\n                            head_15 = __core__headList__safe(fields_21);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_15),\n                                () -> {\n                                    fields_22 = __core__tailList__safe(fields_21);\n                                    __core__chooseList(fields_22, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_125) -> {\n        __helios__string__from_data(__helios__common__enum_field_0(self_125))\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_126) -> {\n        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_126)))\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_68) -> {\n        __helios__common__enum_tag_equals(data_68, 5)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_69) -> {\n        __core__chooseData(data_69, () -> {\n            pair_21 = __core__unConstrData__safe(data_69);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_21), 5),\n                () -> {\n                    data_70 = __core__listData(__core__sndPair(pair_21));\n                    __core__chooseData(data_70, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_23 = __core__unListData__safe(data_70);\n                        __core__chooseList(fields_23, () -> {\n                            false\n                        }, () -> {\n                            head_16 = __core__headList__safe(fields_23);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_16),\n                                () -> {\n                                    fields_24 = __core__tailList__safe(fields_23);\n                                    __core__chooseList(fields_24, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_71) -> {\n        __helios__common__enum_tag_equals(data_71, 6)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_72) -> {\n        __core__chooseData(data_72, () -> {\n            pair_22 = __core__unConstrData__safe(data_72);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_22), 6),\n                () -> {\n                    data_73 = __core__listData(__core__sndPair(pair_22));\n                    __core__chooseData(data_73, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_25 = __core__unListData__safe(data_73);\n                        __core__chooseList(fields_25, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {\n        __core__constrData(6, __core__mkNilData(()))\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_74) -> {\n        __helios__common__enum_tag_equals(data_74, 7)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_75) -> {\n        __core__chooseData(data_75, () -> {\n            pair_23 = __core__unConstrData__safe(data_75);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_23), 7),\n                () -> {\n                    data_76 = __core__listData(__core__sndPair(pair_23));\n                    __core__chooseData(data_76, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_26 = __core__unListData__safe(data_76);\n                        __core__chooseList(fields_26, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {\n        (data_77) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_77),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_77),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_77),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_77),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_77),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {\n        (data_78) -> {\n            ignore_3 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_78),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid ManifestActivity data\", ())\n                }\n            )();\n            data_78\n        }\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_79) -> {\n        __helios__common__enum_tag_equals(data_79, 0)\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_80) -> {\n        __core__chooseData(data_80, () -> {\n            pair_24 = __core__unConstrData__safe(data_80);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_24), 0),\n                () -> {\n                    data_81 = __core__listData(__core__sndPair(pair_24));\n                    __core__chooseData(data_81, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_27 = __core__unListData__safe(data_81);\n                        __core__chooseList(fields_27, () -> {\n                            false\n                        }, () -> {\n                            head_17 = __core__headList__safe(fields_27);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_17),\n                                () -> {\n                                    fields_28 = __core__tailList__safe(fields_27);\n                                    __core__chooseList(fields_28, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_82) -> {\n        __helios__common__enum_tag_equals(data_82, 1)\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_83) -> {\n        __core__chooseData(data_83, () -> {\n            pair_25 = __core__unConstrData__safe(data_83);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_25), 1),\n                () -> {\n                    data_84 = __core__listData(__core__sndPair(pair_25));\n                    __core__chooseData(data_84, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_29 = __core__unListData__safe(data_84);\n                        __core__chooseList(fields_29, () -> {\n                            false\n                        }, () -> {\n                            head_18 = __core__headList__safe(fields_29);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_18),\n                                () -> {\n                                    fields_30 = __core__tailList__safe(fields_29);\n                                    __core__chooseList(fields_30, () -> {\n                                        false\n                                    }, () -> {\n                                        head_19 = __core__headList__safe(fields_30);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_19),\n                                            () -> {\n                                                fields_31 = __core__tailList__safe(fields_30);\n                                                __core__chooseList(fields_31, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_85) -> {\n        __helios__common__enum_tag_equals(data_85, 2)\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_86) -> {\n        __core__chooseData(data_86, () -> {\n            pair_26 = __core__unConstrData__safe(data_86);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_26), 2),\n                () -> {\n                    data_87 = __core__listData(__core__sndPair(pair_26));\n                    __core__chooseData(data_87, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_32 = __core__unListData__safe(data_87);\n                        __core__chooseList(fields_32, () -> {\n                            false\n                        }, () -> {\n                            head_20 = __core__headList__safe(fields_32);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_20),\n                                () -> {\n                                    fields_33 = __core__tailList__safe(fields_32);\n                                    __core__chooseList(fields_33, () -> {\n                                        false\n                                    }, () -> {\n                                        head_21 = __core__headList__safe(fields_33);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_21),\n                                            () -> {\n                                                fields_34 = __core__tailList__safe(fields_33);\n                                                __core__chooseList(fields_34, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_127) -> {\n        __helios__string__from_data(__helios__common__enum_field_0(self_127))\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_128) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_1(self_128))\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_88) -> {\n        __helios__common__enum_tag_equals(data_88, 3)\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_89) -> {\n        __core__chooseData(data_89, () -> {\n            pair_27 = __core__unConstrData__safe(data_89);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_27), 3),\n                () -> {\n                    data_90 = __core__listData(__core__sndPair(pair_27));\n                    __core__chooseData(data_90, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_35 = __core__unListData__safe(data_90);\n                        __core__chooseList(fields_35, () -> {\n                            false\n                        }, () -> {\n                            head_22 = __core__headList__safe(fields_35);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_22),\n                                () -> {\n                                    fields_36 = __core__tailList__safe(fields_35);\n                                    __core__chooseList(fields_36, () -> {\n                                        false\n                                    }, () -> {\n                                        head_23 = __core__headList__safe(fields_36);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_23),\n                                            () -> {\n                                                fields_37 = __core__tailList__safe(fields_36);\n                                                __core__chooseList(fields_37, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_91) -> {\n        __core__chooseData(data_91, () -> {\n            pair_28 = __core__unConstrData__safe(data_91);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_28), 4),\n                () -> {\n                    data_92 = __core__listData(__core__sndPair(pair_28));\n                    __core__chooseData(data_92, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_38 = __core__unListData__safe(data_92);\n                        __core__chooseList(fields_38, () -> {\n                            false\n                        }, () -> {\n                            head_24 = __core__headList__safe(fields_38);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_24),\n                                () -> {\n                                    fields_39 = __core__tailList__safe(fields_38);\n                                    __core__chooseList(fields_39, () -> {\n                                        false\n                                    }, () -> {\n                                        head_25 = __core__headList__safe(fields_39);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_25),\n                                            () -> {\n                                                fields_40 = __core__tailList__safe(fields_39);\n                                                __core__chooseList(fields_40, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {\n        (data_93) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_93),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_93),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_93),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {\n        (data_94) -> {\n            ignore_4 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_94),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid PendingDelegateAction data\", ())\n                }\n            )();\n            data_94\n        }\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_95) -> {\n        __helios__common__enum_tag_equals(data_95, 0)\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_96) -> {\n        __core__chooseData(data_96, () -> {\n            pair_29 = __core__unConstrData__safe(data_96);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_29), 0),\n                () -> {\n                    data_97 = __core__listData(__core__sndPair(pair_29));\n                    __core__chooseData(data_97, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_41 = __core__unListData__safe(data_97);\n                        __core__chooseList(fields_41, () -> {\n                            false\n                        }, () -> {\n                            head_26 = __core__headList__safe(fields_41);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_26),\n                                () -> {\n                                    fields_42 = __core__tailList__safe(fields_41);\n                                    __core__chooseList(fields_42, () -> {\n                                        false\n                                    }, () -> {\n                                        head_27 = __core__headList__safe(fields_42);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_27),\n                                            () -> {\n                                                fields_43 = __core__tailList__safe(fields_42);\n                                                __core__chooseList(fields_43, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_28 = __core__headList__safe(fields_43);\n                                                    __core__ifThenElse(\n                                                        __helios__string__is_valid_data(head_28),\n                                                        () -> {\n                                                            fields_44 = __core__tailList__safe(fields_43);\n                                                            __core__chooseList(fields_44, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_129) -> {\n        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_129))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_130) -> {\n        __helios__string__from_data(__helios__common__enum_field_1(self_130))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_131) -> {\n        __helios__string__from_data(__helios__common__enum_field_2(self_131))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_98) -> {\n        __helios__common__enum_tag_equals(data_98, 1)\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_99) -> {\n        __core__chooseData(data_99, () -> {\n            pair_30 = __core__unConstrData__safe(data_99);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_30), 1),\n                () -> {\n                    data_100 = __core__listData(__core__sndPair(pair_30));\n                    __core__chooseData(data_100, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_45 = __core__unListData__safe(data_100);\n                        __core__chooseList(fields_45, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_101) -> {\n        __helios__common__enum_tag_equals(data_101, 2)\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_102) -> {\n        __core__chooseData(data_102, () -> {\n            pair_31 = __core__unConstrData__safe(data_102);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_31), 2),\n                () -> {\n                    data_103 = __core__listData(__core__sndPair(pair_31));\n                    __core__chooseData(data_103, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_46 = __core__unListData__safe(data_103);\n                        __core__chooseList(fields_46, () -> {\n                            false\n                        }, () -> {\n                            head_29 = __core__headList__safe(fields_46);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_29),\n                                () -> {\n                                    fields_47 = __core__tailList__safe(fields_46);\n                                    __core__chooseList(fields_47, () -> {\n                                        false\n                                    }, () -> {\n                                        head_30 = __core__headList__safe(fields_47);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_30),\n                                            () -> {\n                                                fields_48 = __core__tailList__safe(fields_47);\n                                                __core__chooseList(fields_48, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_31 = __core__headList__safe(fields_48);\n                                                    __core__ifThenElse(\n                                                        __helios__string__is_valid_data(head_31),\n                                                        () -> {\n                                                            fields_49 = __core__tailList__safe(fields_48);\n                                                            __core__chooseList(fields_49, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_32 = __core__headList__safe(fields_49);\n                                                                __core__ifThenElse(\n                                                                    __helios__assetclass__is_valid_data(head_32),\n                                                                    () -> {\n                                                                        fields_50 = __core__tailList__safe(fields_49);\n                                                                        __core__chooseList(fields_50, true, false)\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_132) -> {\n        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_132))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_133) -> {\n        __helios__string__from_data(__helios__common__enum_field_1(self_133))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_134) -> {\n        __helios__string__from_data(__helios__common__enum_field_2(self_134))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_135) -> {\n        __helios__assetclass__from_data(__helios__common__enum_field_3(self_135))\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {\n        (data_104) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_104),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_104),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_104),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_104),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_104),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_104),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_104),\n                                                                () -> {\n                                                                    true\n                                                                },\n                                                                () -> {\n                                                                    false\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {\n        (data_105) -> {\n            ignore_5 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_105),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid CapoLifecycleActivity data\", ())\n                }\n            )();\n            data_105\n        }\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_106) -> {\n        __helios__common__enum_tag_equals(data_106, 0)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_107) -> {\n        __core__chooseData(data_107, () -> {\n            pair_32 = __core__unConstrData__safe(data_107);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_32), 0),\n                () -> {\n                    data_108 = __core__listData(__core__sndPair(pair_32));\n                    __core__chooseData(data_108, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_51 = __core__unListData__safe(data_108);\n                        __core__chooseList(fields_51, () -> {\n                            false\n                        }, () -> {\n                            head_33 = __core__headList__safe(fields_51);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_33),\n                                () -> {\n                                    fields_52 = __core__tailList__safe(fields_51);\n                                    __core__chooseList(fields_52, () -> {\n                                        false\n                                    }, () -> {\n                                        head_34 = __core__headList__safe(fields_52);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_34),\n                                            () -> {\n                                                fields_53 = __core__tailList__safe(fields_52);\n                                                __core__chooseList(fields_53, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_136) -> {\n        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_136))\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_137) -> {\n        __helios__string__from_data(__helios__common__enum_field_1(self_137))\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_109) -> {\n        __helios__common__enum_tag_equals(data_109, 1)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_110) -> {\n        __core__chooseData(data_110, () -> {\n            pair_33 = __core__unConstrData__safe(data_110);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_33), 1),\n                () -> {\n                    data_111 = __core__listData(__core__sndPair(pair_33));\n                    __core__chooseData(data_111, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_54 = __core__unListData__safe(data_111);\n                        __core__chooseList(fields_54, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_112) -> {\n        __helios__common__enum_tag_equals(data_112, 2)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_113) -> {\n        __core__chooseData(data_113, () -> {\n            pair_34 = __core__unConstrData__safe(data_113);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_34), 2),\n                () -> {\n                    data_114 = __core__listData(__core__sndPair(pair_34));\n                    __core__chooseData(data_114, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_55 = __core__unListData__safe(data_114);\n                        __core__chooseList(fields_55, () -> {\n                            false\n                        }, () -> {\n                            head_35 = __core__headList__safe(fields_55);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_35),\n                                () -> {\n                                    fields_56 = __core__tailList__safe(fields_55);\n                                    __core__chooseList(fields_56, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_115) -> {\n        __helios__common__enum_tag_equals(data_115, 3)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_116) -> {\n        __core__chooseData(data_116, () -> {\n            pair_35 = __core__unConstrData__safe(data_116);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_35), 3),\n                () -> {\n                    data_117 = __core__listData(__core__sndPair(pair_35));\n                    __core__chooseData(data_117, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_57 = __core__unListData__safe(data_117);\n                        __core__chooseList(fields_57, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_118) -> {\n        __helios__common__enum_tag_equals(data_118, 4)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_119) -> {\n        __core__chooseData(data_119, () -> {\n            pair_36 = __core__unConstrData__safe(data_119);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_36), 4),\n                () -> {\n                    data_120 = __core__listData(__core__sndPair(pair_36));\n                    __core__chooseData(data_120, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_58 = __core__unListData__safe(data_120);\n                        __core__chooseList(fields_58, () -> {\n                            false\n                        }, () -> {\n                            head_36 = __core__headList__safe(fields_58);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_36),\n                                () -> {\n                                    fields_59 = __core__tailList__safe(fields_58);\n                                    __core__chooseList(fields_59, () -> {\n                                        false\n                                    }, () -> {\n                                        head_37 = __core__headList__safe(fields_59);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_37),\n                                            () -> {\n                                                fields_60 = __core__tailList__safe(fields_59);\n                                                __core__chooseList(fields_60, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_121) -> {\n        __helios__common__enum_tag_equals(data_121, 5)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_122) -> {\n        __core__chooseData(data_122, () -> {\n            pair_37 = __core__unConstrData__safe(data_122);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_37), 5),\n                () -> {\n                    data_123 = __core__listData(__core__sndPair(pair_37));\n                    __core__chooseData(data_123, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_61 = __core__unListData__safe(data_123);\n                        __core__chooseList(fields_61, () -> {\n                            false\n                        }, () -> {\n                            head_38 = __core__headList__safe(fields_61);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_38),\n                                () -> {\n                                    fields_62 = __core__tailList__safe(fields_61);\n                                    __core__chooseList(fields_62, () -> {\n                                        false\n                                    }, () -> {\n                                        head_39 = __core__headList__safe(fields_62);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_39),\n                                            () -> {\n                                                fields_63 = __core__tailList__safe(fields_62);\n                                                __core__chooseList(fields_63, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_124) -> {\n        __helios__common__enum_tag_equals(data_124, 6)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_125) -> {\n        __core__chooseData(data_125, () -> {\n            pair_38 = __core__unConstrData__safe(data_125);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_38), 6),\n                () -> {\n                    data_126 = __core__listData(__core__sndPair(pair_38));\n                    __core__chooseData(data_126, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_64 = __core__unListData__safe(data_126);\n                        __core__chooseList(fields_64, () -> {\n                            false\n                        }, () -> {\n                            head_40 = __core__headList__safe(fields_64);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_40),\n                                () -> {\n                                    fields_65 = __core__tailList__safe(fields_64);\n                                    __core__chooseList(fields_65, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_138) -> {\n        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_138))\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]____to_data = __helios__common__identity;\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data) -> {\n        (data_127) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data(data_127),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_127),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_127),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_127),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_127),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_127),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_127),\n                                                                () -> {\n                                                                    true\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_127),\n                                                                        () -> {\n                                                                            true\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_127),\n                                                                                () -> {\n                                                                                    true\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_127),\n                                                                                        () -> {\n                                                                                            true\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __helios__list[__helios__string]__join = (self_139) -> {\n        (__useopt__separator, separator) -> {\n            separator_1 = __core__ifThenElse(\n                __useopt__separator,\n                separator,\n                \"\"\n            );\n            recurse_75 = (recurse_74, lst_13, sep) -> {\n                __core__chooseList(lst_13, () -> {\n                    \"\"\n                }, () -> {\n                    __helios__string____add(__helios__string____add(sep, __helios__string__from_data(__core__headList__safe(lst_13))), recurse_74(recurse_74, __core__tailList__safe(lst_13), separator_1))\n                })()\n            };\n            recurse_75(recurse_75, self_139, \"\")\n        }\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_1) -> {\n        (data_128) -> {\n            ignore_6 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_1)(data_128),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid AbstractDelegateActivitiesEnum data\", ())\n                }\n            )();\n            data_128\n        }\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_129) -> {\n        __core__chooseData(data_129, () -> {\n            pair_39 = __core__unConstrData__safe(data_129);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_39), 0),\n                () -> {\n                    data_130 = __core__listData(__core__sndPair(pair_39));\n                    __core__chooseData(data_130, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_66 = __core__unListData__safe(data_130);\n                        __core__chooseList(fields_66, () -> {\n                            false\n                        }, () -> {\n                            head_41 = __core__headList__safe(fields_66);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_41),\n                                () -> {\n                                    fields_67 = __core__tailList__safe(fields_66);\n                                    __core__chooseList(fields_67, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_131) -> {\n        __helios__common__enum_tag_equals(data_131, 1)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_132) -> {\n        __core__chooseData(data_132, () -> {\n            pair_40 = __core__unConstrData__safe(data_132);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_40), 1),\n                () -> {\n                    data_133 = __core__listData(__core__sndPair(pair_40));\n                    __core__chooseData(data_133, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_68 = __core__unListData__safe(data_133);\n                        __core__chooseList(fields_68, () -> {\n                            false\n                        }, () -> {\n                            head_42 = __core__headList__safe(fields_68);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_42),\n                                () -> {\n                                    fields_69 = __core__tailList__safe(fields_68);\n                                    __core__chooseList(fields_69, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_140) -> {\n        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_140))\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_134) -> {\n        __helios__common__enum_tag_equals(data_134, 2)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_135) -> {\n        __core__chooseData(data_135, () -> {\n            pair_41 = __core__unConstrData__safe(data_135);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_41), 2),\n                () -> {\n                    data_136 = __core__listData(__core__sndPair(pair_41));\n                    __core__chooseData(data_136, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_70 = __core__unListData__safe(data_136);\n                        __core__chooseList(fields_70, () -> {\n                            false\n                        }, () -> {\n                            head_43 = __core__headList__safe(fields_70);\n                            __core__ifThenElse(\n                                __helios__data__is_valid_data(head_43),\n                                () -> {\n                                    fields_71 = __core__tailList__safe(fields_70);\n                                    __core__chooseList(fields_71, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_141) -> {\n        __helios__data__from_data(__helios__common__enum_field_0(self_141))\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_137) -> {\n        __helios__common__enum_tag_equals(data_137, 3)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_138) -> {\n        __core__chooseData(data_138, () -> {\n            pair_42 = __core__unConstrData__safe(data_138);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_42), 3),\n                () -> {\n                    data_139 = __core__listData(__core__sndPair(pair_42));\n                    __core__chooseData(data_139, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_72 = __core__unListData__safe(data_139);\n                        __core__chooseList(fields_72, () -> {\n                            false\n                        }, () -> {\n                            head_44 = __core__headList__safe(fields_72);\n                            __core__ifThenElse(\n                                __helios__data__is_valid_data(head_44),\n                                () -> {\n                                    fields_73 = __core__tailList__safe(fields_72);\n                                    __core__chooseList(fields_73, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_142) -> {\n        __helios__data__from_data(__helios__common__enum_field_0(self_142))\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_140) -> {\n        __core__chooseData(data_140, () -> {\n            pair_43 = __core__unConstrData__safe(data_140);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_43), 4),\n                () -> {\n                    data_141 = __core__listData(__core__sndPair(pair_43));\n                    __core__chooseData(data_141, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_74 = __core__unListData__safe(data_141);\n                        __core__chooseList(fields_74, () -> {\n                            false\n                        }, () -> {\n                            head_45 = __core__headList__safe(fields_74);\n                            __core__ifThenElse(\n                                __helios__data__is_valid_data(head_45),\n                                () -> {\n                                    fields_75 = __core__tailList__safe(fields_74);\n                                    __core__chooseList(fields_75, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_142) -> {\n        __helios__common__enum_tag_equals(data_142, 5)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_143) -> {\n        __core__chooseData(data_143, () -> {\n            pair_44 = __core__unConstrData__safe(data_143);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_44), 5),\n                () -> {\n                    data_144 = __core__listData(__core__sndPair(pair_44));\n                    __core__chooseData(data_144, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_76 = __core__unListData__safe(data_144);\n                        __core__chooseList(fields_76, () -> {\n                            false\n                        }, () -> {\n                            head_46 = __core__headList__safe(fields_76);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_46),\n                                () -> {\n                                    fields_77 = __core__tailList__safe(fields_76);\n                                    __core__chooseList(fields_77, () -> {\n                                        false\n                                    }, () -> {\n                                        head_47 = __core__headList__safe(fields_77);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_47),\n                                            () -> {\n                                                fields_78 = __core__tailList__safe(fields_77);\n                                                __core__chooseList(fields_78, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_145) -> {\n        __helios__common__enum_tag_equals(data_145, 6)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_146) -> {\n        __core__chooseData(data_146, () -> {\n            pair_45 = __core__unConstrData__safe(data_146);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_45), 6),\n                () -> {\n                    data_147 = __core__listData(__core__sndPair(pair_45));\n                    __core__chooseData(data_147, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_79 = __core__unListData__safe(data_147);\n                        __core__chooseList(fields_79, () -> {\n                            false\n                        }, () -> {\n                            head_48 = __core__headList__safe(fields_79);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_48),\n                                () -> {\n                                    fields_80 = __core__tailList__safe(fields_79);\n                                    __core__chooseList(fields_80, () -> {\n                                        false\n                                    }, () -> {\n                                        head_49 = __core__headList__safe(fields_80);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_49),\n                                            () -> {\n                                                fields_81 = __core__tailList__safe(fields_80);\n                                                __core__chooseList(fields_81, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_148) -> {\n        __helios__common__enum_tag_equals(data_148, 7)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_149) -> {\n        __core__chooseData(data_149, () -> {\n            pair_46 = __core__unConstrData__safe(data_149);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_46), 7),\n                () -> {\n                    data_150 = __core__listData(__core__sndPair(pair_46));\n                    __core__chooseData(data_150, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_82 = __core__unListData__safe(data_150);\n                        __core__chooseList(fields_82, () -> {\n                            false\n                        }, () -> {\n                            head_50 = __core__headList__safe(fields_82);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_50),\n                                () -> {\n                                    fields_83 = __core__tailList__safe(fields_82);\n                                    __core__chooseList(fields_83, () -> {\n                                        false\n                                    }, () -> {\n                                        head_51 = __core__headList__safe(fields_83);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_51),\n                                            () -> {\n                                                fields_84 = __core__tailList__safe(fields_83);\n                                                __core__chooseList(fields_84, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_151) -> {\n        __helios__common__enum_tag_equals(data_151, 8)\n    };\n    __helios__list[__helios__data]__is_valid_data_internal = (lst_14) -> {\n        recurse_77 = (recurse_76, lst_15) -> {\n            __core__chooseList(lst_15, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    __helios__data__is_valid_data(__core__headList__safe(lst_15)),\n                    () -> {\n                        recurse_76(recurse_76, __core__tailList__safe(lst_15))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_77(recurse_77, lst_14)\n    };\n    __helios__list[__helios__data]__is_valid_data = (data_152) -> {\n        __core__chooseData(data_152, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_152))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_153) -> {\n        __core__chooseData(data_153, () -> {\n            pair_47 = __core__unConstrData__safe(data_153);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_47), 8),\n                () -> {\n                    data_154 = __core__listData(__core__sndPair(pair_47));\n                    __core__chooseData(data_154, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_85 = __core__unListData__safe(data_154);\n                        __core__chooseList(fields_85, () -> {\n                            false\n                        }, () -> {\n                            head_52 = __core__headList__safe(fields_85);\n                            __core__ifThenElse(\n                                __helios__list[__helios__data]__is_valid_data(head_52),\n                                () -> {\n                                    fields_86 = __core__tailList__safe(fields_85);\n                                    __core__chooseList(fields_86, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__list[__helios__data]__from_data = (data_155) -> {\n        lst_16 = __core__unListData(data_155);\n        __4 = __core__ifThenElse(\n            __helios__list[__helios__data]__is_valid_data_internal(lst_16),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid list data\", ())\n            }\n        )();\n        lst_16\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_143) -> {\n        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_143))\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities____is = (data_156) -> {\n        __helios__common__enum_tag_equals(data_156, 9)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2 = (data_157) -> {\n        __core__chooseData(data_157, () -> {\n            pair_48 = __core__unConstrData__safe(data_157);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_48), 9),\n                () -> {\n                    data_158 = __core__listData(__core__sndPair(pair_48));\n                    __core__chooseData(data_158, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_87 = __core__unListData__safe(data_158);\n                        __core__chooseList(fields_87, () -> {\n                            false\n                        }, () -> {\n                            head_53 = __core__headList__safe(fields_87);\n                            __core__ifThenElse(\n                                __helios__data__is_valid_data(head_53),\n                                () -> {\n                                    fields_88 = __core__tailList__safe(fields_87);\n                                    __core__chooseList(fields_88, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_159) -> {\n        __helios__common__enum_tag_equals(data_159, 0)\n    };\n    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {\n        __core__constrData(0, __core__mkNilData(()))\n    };\n    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_160) -> {\n        __helios__common__enum_tag_equals(data_160, 1)\n    };\n    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {\n        __core__constrData(1, __core__mkNilData(()))\n    };\n    __helios__option[__helios__validatorhash]__is_valid_data = (data_161) -> {\n        __core__chooseData(data_161, () -> {\n            pair_49 = __core__unConstrData__safe(data_161);\n            index_7 = __core__fstPair(pair_49);\n            fields_89 = __core__sndPair(pair_49);\n            __core__ifThenElse(\n                __core__equalsInteger(index_7, 0),\n                () -> {\n                    __core__chooseList(fields_89, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_89), () -> {\n                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_89))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_7, 1),\n                        () -> {\n                            __core__chooseList(fields_89, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_162) -> {\n        __core__chooseData(data_162, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_90 = __core__unListData__safe(data_162);\n            __core__chooseList(fields_90, () -> {\n                false\n            }, () -> {\n                head_54 = __core__headList__safe(fields_90);\n                __core__ifThenElse(\n                    __helios__string__is_valid_data(head_54),\n                    () -> {\n                        fields_91 = __core__tailList__safe(fields_90);\n                        __core__chooseList(fields_91, () -> {\n                            false\n                        }, () -> {\n                            head_55 = __core__headList__safe(fields_91);\n                            __core__ifThenElse(\n                                __helios__option[__helios__validatorhash]__is_valid_data(head_55),\n                                () -> {\n                                    fields_92 = __core__tailList__safe(fields_91);\n                                    __core__chooseList(fields_92, () -> {\n                                        false\n                                    }, () -> {\n                                        head_56 = __core__headList__safe(fields_92);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_56),\n                                            () -> {\n                                                fields_93 = __core__tailList__safe(fields_92);\n                                                __core__chooseList(fields_93, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_163) -> {\n        ignore_7 = __core__ifThenElse(\n            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_163),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid RelativeDelegateLink data\", ())\n            }\n        )();\n        __core__unListData(data_163)\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_144) -> {\n        __helios__string__from_data(__helios__common__struct_field_0(self_144))\n    };\n    __helios__option[__helios__validatorhash]__from_data = (data_164) -> {\n        __5 = __core__ifThenElse(\n            __helios__option[__helios__validatorhash]__is_valid_data(data_164),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid option data\", ())\n            }\n        )();\n        data_164\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_145) -> {\n        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_145))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken = (self_146) -> {\n        (mph_11) -> {\n            __module__StellarHeliosHelpers__mkTv(mph_11, true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_146), false, (), false, ())\n        }\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_147) -> {\n        (mph_12) -> {\n            __helios__assetclass__new(mph_12, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_147))())\n        }\n    };\n    __helios__option[__helios__txinput]__none____is = (data_165) -> {\n        __helios__common__enum_tag_equals(data_165, 1)\n    };\n    __helios__option[__helios__bool]__none____new = () -> {\n        __helios__option__NONE\n    };\n    __helios__option[__helios__bool]__some____new = (some_1) -> {\n        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_1)))\n    };\n    __helios__option[__helios__txinput]__some__some = (self_148) -> {\n        __helios__txinput__from_data(__helios__common__enum_field_0(self_148))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {\n        (self_149) -> {\n            (inputs, mph_13, inputRequired) -> {\n                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_149)(inputs, mph_13, true, inputRequired);\n                __core__ifThenElse(\n                    __helios__option[__helios__txinput]__none____is(__cond_3),\n                    () -> {\n                        (__lhs_0_5) -> {\n                            __helios__option[__helios__bool]__none____new()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_2) -> {\n                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);\n                            (spendDelegateIsValid) -> {\n                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, \"no way o\"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))\n                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),\n                                () -> {\n                                    (__lhs_0_3) -> {\n                                        a_27 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);\n                                        __cond_5 = a_27;\n                                        __core__ifThenElse(\n                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),\n                                            () -> {\n                                                (__lhs_0_4) -> {\n                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_149)(mph_13, false, (), false, ())\n                                                }\n                                            },\n                                            () -> {\n                                                (__7) -> {\n                                                    __helios__error(__helios__string____add(\"delegate not ValidatingSettings: \", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_149)))\n                                                }\n                                            }\n                                        )()(__cond_5)\n                                    }\n                                },\n                                () -> {\n                                    (__6) -> {\n                                        __helios__error(\"no way n\")\n                                    }\n                                }\n                            )()(__cond_4))\n                        }\n                    }\n                )()(__cond_3)\n            }\n        }\n    };\n    __helios__option[__helios__validatorhash]__none____is = (data_166) -> {\n        __helios__common__enum_tag_equals(data_166, 1)\n    };\n    __helios__option[__helios__txinput]__none____new = () -> {\n        __helios__option__NONE\n    };\n    __helios__option[__helios__txinput]__some____is = (data_167) -> {\n        __helios__common__enum_tag_equals(data_167, 0)\n    };\n    __helios__list[__helios__txinput]__find_safe = (self_150) -> {\n        (fn_17) -> {\n            __helios__common__find_safe(self_150, (item_8) -> {\n                fn_17(__helios__txinput__from_data(item_8))\n            }, __helios__common__identity)\n        }\n    };\n    __helios__option[__helios__validatorhash]__some__some = (self_151) -> {\n        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_151))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_152) -> {\n        (inputs_1, mph_14, __useopt__required, required) -> {\n            required_1 = __core__ifThenElse(\n                __useopt__required,\n                () -> {\n                    required\n                },\n                () -> {\n                    true\n                }\n            )();\n            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_152);\n            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_152);\n            __core__ifThenElse(\n                __helios__option[__helios__validatorhash]__none____is(__cond_6),\n                () -> {\n                    (__lhs_0_8) -> {\n                        __core__ifThenElse(\n                            required_1,\n                            () -> {\n                                __helios__error(__helios__string____add(\"❌❌ ➡️ 💁 missing required input with dgTkn \", uutName))\n                            },\n                            () -> {\n                                () -> {\n                                    __helios__option[__helios__txinput]__none____new()\n                                }()\n                            }\n                        )()\n                    }\n                },\n                () -> {\n                    (__lhs_0_6) -> {\n                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);\n                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);\n                        ac = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uutName)());\n                        __core__chooseUnit(__helios__print(__helios__string____add(\"  -- seeking input dgTkn: \", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_7) -> {\n                            __helios__bool__and(() -> {\n                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_7)), needsAddrWithCred)\n                            }, () -> {\n                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_7))(ac), 0)\n                            })\n                        });\n                        __core__ifThenElse(\n                            __helios__option[__helios__txinput]__some____is(__cond_7),\n                            () -> {\n                                (foundGood) -> {\n                                    __core__chooseUnit(__helios__print(\"     ✅ ➡️  💁 found ^ input dgTkn\"), foundGood)\n                                }\n                            },\n                            () -> {\n                                (__lhs_0_7) -> {\n                                    __core__ifThenElse(\n                                        required_1,\n                                        () -> {\n                                            __helios__error(__helios__string____add(\"_❌ ➡️  💁 missing req'd input dgTkn (at script addr) \", uutName))\n                                        },\n                                        () -> {\n                                            () -> {\n                                                __core__chooseUnit(__helios__print(\" <- 🚫 ➡️ 💁 no input with ^ dgTkn; not req'd; returning false\n\"), __helios__option[__helios__txinput]__none____new())\n                                            }()\n                                        }\n                                    )()\n                                }\n                            }\n                        )()(__cond_7))\n                    }\n                }\n            )()(__cond_6)\n        }\n    };\n    __helios__option[__helios__validatorhash]__some____is = (data_168) -> {\n        __helios__common__enum_tag_equals(data_168, 0)\n    };\n    __helios__option[__helios__txoutput]__some____is = (data_169) -> {\n        __helios__common__enum_tag_equals(data_169, 0)\n    };\n    __helios__list[__helios__txoutput]__find_safe = (self_153) -> {\n        (fn_18) -> {\n            __helios__common__find_safe(self_153, (item_9) -> {\n                fn_18(__helios__txoutput__from_data(item_9))\n            }, __helios__common__identity)\n        }\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_154) -> {\n        (mph_15, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {\n            required_3 = __core__ifThenElse(\n                __useopt__required_1,\n                () -> {\n                    required_2\n                },\n                () -> {\n                    true\n                }\n            )();\n            createdOrReturned_1 = __core__ifThenElse(\n                __useopt__createdOrReturned,\n                () -> {\n                    createdOrReturned\n                },\n                () -> {\n                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()\n                }\n            )();\n            __lhs_0_9 = self_154;\n            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);\n            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);\n            ac_1 = __helios__assetclass__new(mph_15, __helios__string__encode_utf8(uut)());\n            (cOrR) -> {\n                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\" ⬅️ 🔎 💁 expect dgTkn \", cOrR), \": \"), uut)), (hasDelegate) -> {\n                    __core__chooseUnit(__core__ifThenElse(\n                        __helios__bool__and(() -> {\n                            __helios__bool____not(hasDelegate)\n                        }, () -> {\n                            required_3\n                        }),\n                        () -> {\n                            __cond_11 = createdOrReturned_1;\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),\n                                () -> {\n                                    (__lhs_0_18) -> {\n                                        __helios__error(__helios__string____add(\"⬅️ ❌ 💁 dgTkn not created: \", uut))\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_16) -> {\n                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_154)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_15, true, true);\n                                        __helios__error(__helios__string____add(\"⬅️ ❌ 💁 dgTkn not returned: \", uut))\n                                    }\n                                }\n                            )()(__cond_11)\n                        },\n                        () -> {\n                            () -> {\n                                __core__ifThenElse(\n                                    hasDelegate,\n                                    () -> {\n                                        __helios__print(__helios__string____add(__helios__string____add(\"✅ ⬅️ 💁 ok:  ^ dgTkn has \", cOrR), \" a valid output\"))\n                                    },\n                                    () -> {\n                                        () -> {\n                                            __helios__print(\" ⬅️  ok 🚫💁 no delegate but not req'd; false\")\n                                        }()\n                                    }\n                                )()\n                            }()\n                        }\n                    )(), hasDelegate)\n                }(__cond_9 = validatorHash;\n                __core__ifThenElse(\n                    __helios__option[__helios__validatorhash]__some____is(__cond_9),\n                    () -> {\n                        (__lhs_0_15) -> {\n                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);\n                            __core__chooseUnit(__helios__print(__helios__string____add(\"  ... ^ sent to validator: \", __helios__validatorhash__show(vh_3)())), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_12) -> {\n                            __core__chooseUnit(__helios__print(\"   (to anywhere)\"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {\n                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)\n                            });\n                            __core__ifThenElse(\n                                __helios__option[__helios__txoutput]__some____is(__cond_10),\n                                () -> {\n                                    (__lhs_0_14) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_13) -> {\n                                        false\n                                    }\n                                }\n                            )()(__cond_10))\n                        }\n                    }\n                )()(__cond_9)))\n            }(__cond_8 = createdOrReturned_1;\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),\n                () -> {\n                    (__lhs_0_11) -> {\n                        \"returned\"\n                    }\n                },\n                () -> {\n                    (__lhs_0_10) -> {\n                        \"created\"\n                    }\n                }\n            )()(__cond_8))\n        }\n    };\n    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_170) -> {\n        __core__chooseData(data_170, () -> {\n            pair_50 = __core__unConstrData__safe(data_170);\n            index_8 = __core__fstPair(pair_50);\n            fields_94 = __core__sndPair(pair_50);\n            __core__ifThenElse(\n                __core__equalsInteger(index_8, 0),\n                () -> {\n                    __core__chooseList(fields_94, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_94), () -> {\n                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_94))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_8, 1),\n                        () -> {\n                            __core__chooseList(fields_94, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_171) -> {\n        __core__chooseData(data_171, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_95 = __core__unListData__safe(data_171);\n            __core__chooseList(fields_95, () -> {\n                false\n            }, () -> {\n                head_57 = __core__headList__safe(fields_95);\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_57),\n                    () -> {\n                        fields_96 = __core__tailList__safe(fields_95);\n                        __core__chooseList(fields_96, () -> {\n                            false\n                        }, () -> {\n                            head_58 = __core__headList__safe(fields_96);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_58),\n                                () -> {\n                                    fields_97 = __core__tailList__safe(fields_96);\n                                    __core__chooseList(fields_97, () -> {\n                                        false\n                                    }, () -> {\n                                        head_59 = __core__headList__safe(fields_97);\n                                        __core__ifThenElse(\n                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_59),\n                                            () -> {\n                                                fields_98 = __core__tailList__safe(fields_97);\n                                                __core__chooseList(fields_98, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_172) -> {\n        ignore_8 = __core__ifThenElse(\n            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_172),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid PendingDelegateChange data\", ())\n            }\n        )();\n        __core__unListData(data_172)\n    };\n    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_155) -> {\n        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_155))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_156) -> {\n        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_156))\n    };\n    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_173) -> {\n        __8 = __core__ifThenElse(\n            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_173),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid option data\", ())\n            }\n        )();\n        data_173\n    };\n    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_157) -> {\n        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_157))\n    };\n    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {\n        (data_174) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_174),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_174),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {\n        (data_175) -> {\n            ignore_9 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_175),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid PendingCharterChange data\", ())\n                }\n            )();\n            data_175\n        }\n    };\n    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_176) -> {\n        __helios__common__enum_tag_equals(data_176, 0)\n    };\n    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_177) -> {\n        __core__chooseData(data_177, () -> {\n            pair_51 = __core__unConstrData__safe(data_177);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_51), 0),\n                () -> {\n                    data_178 = __core__listData(__core__sndPair(pair_51));\n                    __core__chooseData(data_178, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_99 = __core__unListData__safe(data_178);\n                        __core__chooseList(fields_99, () -> {\n                            false\n                        }, () -> {\n                            head_60 = __core__headList__safe(fields_99);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_60),\n                                () -> {\n                                    fields_100 = __core__tailList__safe(fields_99);\n                                    __core__chooseList(fields_100, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_158) -> {\n        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_158))\n    };\n    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_17) -> {\n        recurse_79 = (recurse_78, lst_18) -> {\n            __core__chooseList(lst_18, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_18)),\n                    () -> {\n                        recurse_78(recurse_78, __core__tailList__safe(lst_18))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_79(recurse_79, lst_17)\n    };\n    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_179) -> {\n        __core__chooseData(data_179, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_179))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_180) -> {\n        __core__chooseData(data_180, () -> {\n            pair_52 = __core__unConstrData__safe(data_180);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_52), 1),\n                () -> {\n                    data_181 = __core__listData(__core__sndPair(pair_52));\n                    __core__chooseData(data_181, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_101 = __core__unListData__safe(data_181);\n                        __core__chooseList(fields_101, () -> {\n                            false\n                        }, () -> {\n                            head_61 = __core__headList__safe(fields_101);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_61),\n                                () -> {\n                                    fields_102 = __core__tailList__safe(fields_101);\n                                    __core__chooseList(fields_102, () -> {\n                                        false\n                                    }, () -> {\n                                        head_62 = __core__headList__safe(fields_102);\n                                        __core__ifThenElse(\n                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_62),\n                                            () -> {\n                                                fields_103 = __core__tailList__safe(fields_102);\n                                                __core__chooseList(fields_103, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_182) -> {\n        __core__chooseData(data_182, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_104 = __core__unListData__safe(data_182);\n            __core__chooseList(fields_104, () -> {\n                false\n            }, () -> {\n                head_63 = __core__headList__safe(fields_104);\n                __core__ifThenElse(\n                    __helios__address__is_valid_data(head_63),\n                    () -> {\n                        fields_105 = __core__tailList__safe(fields_104);\n                        __core__chooseList(fields_105, () -> {\n                            false\n                        }, () -> {\n                            head_64 = __core__headList__safe(fields_105);\n                            __core__ifThenElse(\n                                __helios__mintingpolicyhash__is_valid_data(head_64),\n                                () -> {\n                                    fields_106 = __core__tailList__safe(fields_105);\n                                    __core__chooseList(fields_106, () -> {\n                                        false\n                                    }, () -> {\n                                        head_65 = __core__headList__safe(fields_106);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_65),\n                                            () -> {\n                                                fields_107 = __core__tailList__safe(fields_106);\n                                                __core__chooseList(fields_107, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_183) -> {\n        ignore_10 = __core__ifThenElse(\n            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_183),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid DelegationDetail data\", ())\n            }\n        )();\n        __core__unListData(data_183)\n    };\n    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_159) -> {\n        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_159))\n    };\n    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_160) -> {\n        __helios__bytearray__from_data(__helios__common__struct_field_2(self_160))\n    };\n    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_161) -> {\n        () -> {\n            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_161), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_161))\n        }\n    };\n    __helios__list[__helios__txinput]__any = (self_162) -> {\n        (fn_19) -> {\n            __helios__common__any(self_162, (item_10) -> {\n                fn_19(__helios__txinput__from_data(item_10))\n            })\n        }\n    };\n    __module__CapoHelpers__dgd_DataSrc[]____to_data = __helios__common__identity;\n    __module__CapoHelpers__dgd_DataSrc[]__is_valid_data = (__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data) -> {\n        (data_184) -> {\n            __core__ifThenElse(\n                __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data(data_184),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data(data_184),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data(data_184),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data(data_184),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__from_data = (__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_1) -> {\n        (data_185) -> {\n            ignore_11 = __core__ifThenElse(\n                __module__CapoHelpers__dgd_DataSrc[]__is_valid_data(__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_1)(data_185),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid dgd_DataSrc data\", ())\n                }\n            )();\n            data_185\n        }\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_2 = (data_186) -> {\n        __core__chooseData(data_186, () -> {\n            pair_53 = __core__unConstrData__safe(data_186);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_53), 0),\n                () -> {\n                    data_187 = __core__listData(__core__sndPair(pair_53));\n                    __core__chooseData(data_187, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_108 = __core__unListData__safe(data_187);\n                        __core__chooseList(fields_108, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Input____is = (data_188) -> {\n        __helios__common__enum_tag_equals(data_188, 1)\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_2 = (data_189) -> {\n        __core__chooseData(data_189, () -> {\n            pair_54 = __core__unConstrData__safe(data_189);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_54), 1),\n                () -> {\n                    data_190 = __core__listData(__core__sndPair(pair_54));\n                    __core__chooseData(data_190, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_109 = __core__unListData__safe(data_190);\n                        __core__chooseList(fields_109, () -> {\n                            false\n                        }, () -> {\n                            head_66 = __core__headList__safe(fields_109);\n                            __core__ifThenElse(\n                                __helios__txinput__is_valid_data(head_66),\n                                () -> {\n                                    fields_110 = __core__tailList__safe(fields_109);\n                                    __core__chooseList(fields_110, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Input__utxo = (self_163) -> {\n        __helios__txinput__from_data(__helios__common__enum_field_0(self_163))\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Output____is = (data_191) -> {\n        __helios__common__enum_tag_equals(data_191, 2)\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_2 = (data_192) -> {\n        __core__chooseData(data_192, () -> {\n            pair_55 = __core__unConstrData__safe(data_192);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_55), 2),\n                () -> {\n                    data_193 = __core__listData(__core__sndPair(pair_55));\n                    __core__chooseData(data_193, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_111 = __core__unListData__safe(data_193);\n                        __core__chooseList(fields_111, () -> {\n                            false\n                        }, () -> {\n                            head_67 = __core__headList__safe(fields_111);\n                            __core__ifThenElse(\n                                __helios__txoutput__is_valid_data(head_67),\n                                () -> {\n                                    fields_112 = __core__tailList__safe(fields_111);\n                                    __core__chooseList(fields_112, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Output__txo = (self_164) -> {\n        __helios__txoutput__from_data(__helios__common__enum_field_0(self_164))\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Output____new = (self_165) -> {\n        __core__constrData(2, __helios__common__list_1(__helios__txoutput____to_data(self_165)))\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Both____is = (data_194) -> {\n        __helios__common__enum_tag_equals(data_194, 3)\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_2 = (data_195) -> {\n        __core__chooseData(data_195, () -> {\n            pair_56 = __core__unConstrData__safe(data_195);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_56), 3),\n                () -> {\n                    data_196 = __core__listData(__core__sndPair(pair_56));\n                    __core__chooseData(data_196, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_113 = __core__unListData__safe(data_196);\n                        __core__chooseList(fields_113, () -> {\n                            false\n                        }, () -> {\n                            head_68 = __core__headList__safe(fields_113);\n                            __core__ifThenElse(\n                                __helios__txinput__is_valid_data(head_68),\n                                () -> {\n                                    fields_114 = __core__tailList__safe(fields_113);\n                                    __core__chooseList(fields_114, () -> {\n                                        false\n                                    }, () -> {\n                                        head_69 = __core__headList__safe(fields_114);\n                                        __core__ifThenElse(\n                                            __helios__txoutput__is_valid_data(head_69),\n                                            () -> {\n                                                fields_115 = __core__tailList__safe(fields_114);\n                                                __core__chooseList(fields_115, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Both__utxo = (self_166) -> {\n        __helios__txinput__from_data(__helios__common__enum_field_0(self_166))\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Both__txo = (self_167) -> {\n        __helios__txoutput__from_data(__helios__common__enum_field_1(self_167))\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Both____new = (utxo, txo) -> {\n        __core__constrData(3, __core__mkCons(__helios__txinput____to_data(utxo), __core__mkCons(__helios__txoutput____to_data(txo), __core__mkNilData(()))))\n    };\n    __helios__option[__helios__int]__is_valid_data = (data_197) -> {\n        __core__chooseData(data_197, () -> {\n            pair_57 = __core__unConstrData__safe(data_197);\n            index_9 = __core__fstPair(pair_57);\n            fields_116 = __core__sndPair(pair_57);\n            __core__ifThenElse(\n                __core__equalsInteger(index_9, 0),\n                () -> {\n                    __core__chooseList(fields_116, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_116), () -> {\n                            __helios__int__is_valid_data(__core__headList__safe(fields_116))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_9, 1),\n                        () -> {\n                            __core__chooseList(fields_116, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {\n        (data_198) -> {\n            __core__ifThenElse(\n                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_198),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_198),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_198),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_198),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_198),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {\n        (data_199) -> {\n            ignore_12 = __core__ifThenElse(\n                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_199),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid ManifestEntryType data\", ())\n                }\n            )();\n            data_199\n        }\n    };\n    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_200) -> {\n        __helios__common__enum_tag_equals(data_200, 0)\n    };\n    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_201) -> {\n        __core__chooseData(data_201, () -> {\n            pair_58 = __core__unConstrData__safe(data_201);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_58), 0),\n                () -> {\n                    data_202 = __core__listData(__core__sndPair(pair_58));\n                    __core__chooseData(data_202, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_117 = __core__unListData__safe(data_202);\n                        __core__chooseList(fields_117, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_203) -> {\n        __helios__common__enum_tag_equals(data_203, 1)\n    };\n    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_204) -> {\n        __core__chooseData(data_204, () -> {\n            pair_59 = __core__unConstrData__safe(data_204);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_59), 1),\n                () -> {\n                    data_205 = __core__listData(__core__sndPair(pair_59));\n                    __core__chooseData(data_205, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_118 = __core__unListData__safe(data_205);\n                        __core__chooseList(fields_118, () -> {\n                            false\n                        }, () -> {\n                            head_70 = __core__headList__safe(fields_118);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_70),\n                                () -> {\n                                    fields_119 = __core__tailList__safe(fields_118);\n                                    __core__chooseList(fields_119, () -> {\n                                        false\n                                    }, () -> {\n                                        head_71 = __core__headList__safe(fields_119);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_71),\n                                            () -> {\n                                                fields_120 = __core__tailList__safe(fields_119);\n                                                __core__chooseList(fields_120, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_72 = __core__headList__safe(fields_120);\n                                                    __core__ifThenElse(\n                                                        __helios__int__is_valid_data(head_72),\n                                                        () -> {\n                                                            fields_121 = __core__tailList__safe(fields_120);\n                                                            __core__chooseList(fields_121, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_168) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_168))\n    };\n    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_169) -> {\n        __helios__string__from_data(__helios__common__enum_field_1(self_169))\n    };\n    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_170) -> {\n        __helios__int__from_data(__helios__common__enum_field_2(self_170))\n    };\n    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_206) -> {\n        __core__chooseData(data_206, () -> {\n            pair_60 = __core__unConstrData__safe(data_206);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_60), 2),\n                () -> {\n                    data_207 = __core__listData(__core__sndPair(pair_60));\n                    __core__chooseData(data_207, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_122 = __core__unListData__safe(data_207);\n                        __core__chooseList(fields_122, () -> {\n                            false\n                        }, () -> {\n                            head_73 = __core__headList__safe(fields_122);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_73),\n                                () -> {\n                                    fields_123 = __core__tailList__safe(fields_122);\n                                    __core__chooseList(fields_123, () -> {\n                                        false\n                                    }, () -> {\n                                        head_74 = __core__headList__safe(fields_123);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_74),\n                                            () -> {\n                                                fields_124 = __core__tailList__safe(fields_123);\n                                                __core__chooseList(fields_124, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_208) -> {\n        __core__chooseData(data_208, () -> {\n            pair_61 = __core__unConstrData__safe(data_208);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_61), 3),\n                () -> {\n                    data_209 = __core__listData(__core__sndPair(pair_61));\n                    __core__chooseData(data_209, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_125 = __core__unListData__safe(data_209);\n                        __core__chooseList(fields_125, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_210) -> {\n        __core__chooseData(data_210, () -> {\n            pair_62 = __core__unConstrData__safe(data_210);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_62), 4),\n                () -> {\n                    data_211 = __core__listData(__core__sndPair(pair_62));\n                    __core__chooseData(data_211, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_126 = __core__unListData__safe(data_211);\n                        __core__chooseList(fields_126, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_212) -> {\n        __core__chooseData(data_212, () -> {\n            pair_63 = __core__unConstrData__safe(data_212);\n            index_10 = __core__fstPair(pair_63);\n            fields_127 = __core__sndPair(pair_63);\n            __core__ifThenElse(\n                __core__equalsInteger(index_10, 0),\n                () -> {\n                    __core__chooseList(fields_127, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_127), () -> {\n                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_127))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_10, 1),\n                        () -> {\n                            __core__chooseList(fields_127, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_213) -> {\n        __core__ifThenElse(\n            __helios__common__test_mStruct_field(data_213, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),\n            () -> {\n                __core__ifThenElse(\n                    __helios__common__test_mStruct_field(data_213, __core__bData(#746e), __helios__bytearray__is_valid_data),\n                    () -> {\n                        __core__ifThenElse(\n                            __helios__common__test_mStruct_field(data_213, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),\n                            () -> {\n                                true\n                            },\n                            () -> {\n                                __core__trace(\"Warning: invalid data in CapoManifestEntry.tpe\", () -> {\n                                    false\n                                })()\n                            }\n                        )()\n                    },\n                    () -> {\n                        __core__trace(\"Warning: invalid data in CapoManifestEntry.tn\", () -> {\n                            false\n                        })()\n                    }\n                )()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid data in CapoManifestEntry.mph\", () -> {\n                    false\n                })()\n            }\n        )()\n    };\n    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_214) -> {\n        ignore_13 = __core__ifThenElse(\n            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_214),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid CapoManifestEntry data\", ())\n            }\n        )();\n        data_214\n    };\n    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_171) -> {\n        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_171, #747065))\n    };\n    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_172) -> {\n        __helios__bytearray__from_data(__helios__common__mStruct_field(self_172, #746e))\n    };\n    __helios__option[__helios__mintingpolicyhash]__from_data = (data_215) -> {\n        __9 = __core__ifThenElse(\n            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_215),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid option data\", ())\n            }\n        )();\n        data_215\n    };\n    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_173) -> {\n        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_173, #6d7068))\n    };\n    __helios__option[__helios__mintingpolicyhash]__some____is = (data_216) -> {\n        __helios__common__enum_tag_equals(data_216, 0)\n    };\n    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {\n        (data_217) -> {\n            __core__ifThenElse(\n                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_217),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_217),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_217),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {\n        (data_218) -> {\n            ignore_14 = __core__ifThenElse(\n                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_218),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid CapoDatum data\", ())\n                }\n            )();\n            data_218\n        }\n    };\n    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_19) -> {\n        recurse_81 = (recurse_80, lst_20) -> {\n            __core__chooseList(lst_20, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_20)),\n                    () -> {\n                        recurse_80(recurse_80, __core__tailList__safe(lst_20))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_81(recurse_81, lst_19)\n    };\n    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_219) -> {\n        __core__chooseData(data_219, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_219))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_25) -> {\n        recurse_83 = (recurse_82, map_26) -> {\n            __core__chooseList(map_26, () -> {\n                true\n            }, () -> {\n                head_75 = __core__headList__safe(map_26);\n                __core__ifThenElse(\n                    __helios__string__is_valid_data(__core__fstPair(head_75)),\n                    () -> {\n                        __core__ifThenElse(\n                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_75)),\n                            () -> {\n                                recurse_82(recurse_82, __core__tailList__safe(map_26))\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_83(recurse_83, map_25)\n    };\n    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_220) -> {\n        __core__chooseData(data_220, () -> {\n            false\n        }, () -> {\n            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_220))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_27) -> {\n        recurse_85 = (recurse_84, map_28) -> {\n            __core__chooseList(map_28, () -> {\n                true\n            }, () -> {\n                head_76 = __core__headList__safe(map_28);\n                __core__ifThenElse(\n                    __helios__string__is_valid_data(__core__fstPair(head_76)),\n                    () -> {\n                        __core__ifThenElse(\n                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_76)),\n                            () -> {\n                                recurse_84(recurse_84, __core__tailList__safe(map_28))\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_85(recurse_85, map_27)\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_221) -> {\n        __core__chooseData(data_221, () -> {\n            false\n        }, () -> {\n            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_221))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_21) -> {\n        recurse_87 = (recurse_86, lst_22) -> {\n            __core__chooseList(lst_22, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_22)),\n                    () -> {\n                        recurse_86(recurse_86, __core__tailList__safe(lst_22))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_87(recurse_87, lst_21)\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_222) -> {\n        __core__chooseData(data_222, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_222))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_223) -> {\n        __core__chooseData(data_223, () -> {\n            pair_64 = __core__unConstrData__safe(data_223);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_64), 0),\n                () -> {\n                    data_224 = __core__listData(__core__sndPair(pair_64));\n                    __core__chooseData(data_224, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_128 = __core__unListData__safe(data_224);\n                        __core__chooseList(fields_128, () -> {\n                            false\n                        }, () -> {\n                            head_77 = __core__headList__safe(fields_128);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_77),\n                                () -> {\n                                    fields_129 = __core__tailList__safe(fields_128);\n                                    __core__chooseList(fields_129, () -> {\n                                        false\n                                    }, () -> {\n                                        head_78 = __core__headList__safe(fields_129);\n                                        __core__ifThenElse(\n                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_78),\n                                            () -> {\n                                                fields_130 = __core__tailList__safe(fields_129);\n                                                __core__chooseList(fields_130, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_79 = __core__headList__safe(fields_130);\n                                                    __core__ifThenElse(\n                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_79),\n                                                        () -> {\n                                                            fields_131 = __core__tailList__safe(fields_130);\n                                                            __core__chooseList(fields_131, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_80 = __core__headList__safe(fields_131);\n                                                                __core__ifThenElse(\n                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_80),\n                                                                    () -> {\n                                                                        fields_132 = __core__tailList__safe(fields_131);\n                                                                        __core__chooseList(fields_132, () -> {\n                                                                            false\n                                                                        }, () -> {\n                                                                            head_81 = __core__headList__safe(fields_132);\n                                                                            __core__ifThenElse(\n                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_81),\n                                                                                () -> {\n                                                                                    fields_133 = __core__tailList__safe(fields_132);\n                                                                                    __core__chooseList(fields_133, () -> {\n                                                                                        false\n                                                                                    }, () -> {\n                                                                                        head_82 = __core__headList__safe(fields_133);\n                                                                                        __core__ifThenElse(\n                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_82),\n                                                                                            () -> {\n                                                                                                fields_134 = __core__tailList__safe(fields_133);\n                                                                                                __core__chooseList(fields_134, () -> {\n                                                                                                    false\n                                                                                                }, () -> {\n                                                                                                    head_83 = __core__headList__safe(fields_134);\n                                                                                                    __core__ifThenElse(\n                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_83),\n                                                                                                        () -> {\n                                                                                                            fields_135 = __core__tailList__safe(fields_134);\n                                                                                                            __core__chooseList(fields_135, () -> {\n                                                                                                                false\n                                                                                                            }, () -> {\n                                                                                                                head_84 = __core__headList__safe(fields_135);\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_84),\n                                                                                                                    () -> {\n                                                                                                                        fields_136 = __core__tailList__safe(fields_135);\n                                                                                                                        __core__chooseList(fields_136, true, false)\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        false\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            })()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )()\n                                                                                                })()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    })()\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        })()\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_225) -> {\n        ignore_15 = __core__ifThenElse(\n            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_225),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid CharterData data\", ())\n            }\n        )();\n        data_225\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;\n    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_174) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_174))\n    };\n    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_226) -> {\n        lst_23 = __core__unListData(data_226);\n        __10 = __core__ifThenElse(\n            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_23),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid list data\", ())\n            }\n        )();\n        lst_23\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_175) -> {\n        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_175))\n    };\n    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_227) -> {\n        map_29 = __core__unMapData(data_227);\n        __11 = __core__ifThenElse(\n            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_29),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid map data\", ())\n            }\n        )();\n        map_29\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_176) -> {\n        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_176))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_177) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_177))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_178) -> {\n        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_178))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_179) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_179))\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_228) -> {\n        map_30 = __core__unMapData(data_228);\n        __12 = __core__ifThenElse(\n            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_30),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid map data\", ())\n            }\n        )();\n        map_30\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_180) -> {\n        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_180))\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_229) -> {\n        lst_24 = __core__unListData(data_229);\n        __13 = __core__ifThenElse(\n            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_24),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid list data\", ())\n            }\n        )();\n        lst_24\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_181) -> {\n        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_181))\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;\n    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_230) -> {\n        __core__chooseData(data_230, () -> {\n            pair_65 = __core__unConstrData__safe(data_230);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_65), 1),\n                () -> {\n                    data_231 = __core__listData(__core__sndPair(pair_65));\n                    __core__chooseData(data_231, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_137 = __core__unListData__safe(data_231);\n                        __core__chooseList(fields_137, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_232) -> {\n        __helios__common__enum_tag_equals(data_232, 2)\n    };\n    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_31) -> {\n        recurse_89 = (recurse_88, map_32) -> {\n            __core__chooseList(map_32, () -> {\n                true\n            }, () -> {\n                head_85 = __core__headList__safe(map_32);\n                __core__ifThenElse(\n                    __helios__string__is_valid_data(__core__fstPair(head_85)),\n                    () -> {\n                        __core__ifThenElse(\n                            __helios__data__is_valid_data(__core__sndPair(head_85)),\n                            () -> {\n                                recurse_88(recurse_88, __core__tailList__safe(map_32))\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_89(recurse_89, map_31)\n    };\n    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_233) -> {\n        __core__chooseData(data_233, () -> {\n            false\n        }, () -> {\n            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_233))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_234) -> {\n        __core__chooseData(data_234, () -> {\n            pair_66 = __core__unConstrData__safe(data_234);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_66), 2),\n                () -> {\n                    data_235 = __core__listData(__core__sndPair(pair_66));\n                    __core__chooseData(data_235, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_138 = __core__unListData__safe(data_235);\n                        __core__chooseList(fields_138, () -> {\n                            false\n                        }, () -> {\n                            head_86 = __core__headList__safe(fields_138);\n                            __core__ifThenElse(\n                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_86),\n                                () -> {\n                                    fields_139 = __core__tailList__safe(fields_138);\n                                    __core__chooseList(fields_139, () -> {\n                                        false\n                                    }, () -> {\n                                        head_87 = __core__headList__safe(fields_139);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_87),\n                                            () -> {\n                                                fields_140 = __core__tailList__safe(fields_139);\n                                                __core__chooseList(fields_140, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_88 = __core__headList__safe(fields_140);\n                                                    __core__ifThenElse(\n                                                        __helios__data__is_valid_data(head_88),\n                                                        () -> {\n                                                            fields_141 = __core__tailList__safe(fields_140);\n                                                            __core__chooseList(fields_141, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;\n    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {\n        (data_236) -> {\n            __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_236),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_236),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_236),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {\n        (data_237) -> {\n            ignore_16 = __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_237),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid cctx_CharterInputType data\", ())\n                }\n            )();\n            data_237\n        }\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_238) -> {\n        __helios__common__enum_tag_equals(data_238, 0)\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_239) -> {\n        __core__chooseData(data_239, () -> {\n            pair_67 = __core__unConstrData__safe(data_239);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_67), 0),\n                () -> {\n                    data_240 = __core__listData(__core__sndPair(pair_67));\n                    __core__chooseData(data_240, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_142 = __core__unListData__safe(data_240);\n                        __core__chooseList(fields_142, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {\n        __core__constrData(0, __core__mkNilData(()))\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_241) -> {\n        __helios__common__enum_tag_equals(data_241, 1)\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_242) -> {\n        __core__chooseData(data_242, () -> {\n            pair_68 = __core__unConstrData__safe(data_242);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_68), 1),\n                () -> {\n                    data_243 = __core__listData(__core__sndPair(pair_68));\n                    __core__chooseData(data_243, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_143 = __core__unListData__safe(data_243);\n                        __core__chooseList(fields_143, () -> {\n                            false\n                        }, () -> {\n                            head_89 = __core__headList__safe(fields_143);\n                            __core__ifThenElse(\n                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_89),\n                                () -> {\n                                    fields_144 = __core__tailList__safe(fields_143);\n                                    __core__chooseList(fields_144, () -> {\n                                        false\n                                    }, () -> {\n                                        head_90 = __core__headList__safe(fields_144);\n                                        __core__ifThenElse(\n                                            __helios__txinput__is_valid_data(head_90),\n                                            () -> {\n                                                fields_145 = __core__tailList__safe(fields_144);\n                                                __core__chooseList(fields_145, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_182) -> {\n        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_182))\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_183) -> {\n        __helios__txinput__from_data(__helios__common__enum_field_1(self_183))\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo_1) -> {\n        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_244) -> {\n        __helios__common__enum_tag_equals(data_244, 2)\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_245) -> {\n        __core__chooseData(data_245, () -> {\n            pair_69 = __core__unConstrData__safe(data_245);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_69), 2),\n                () -> {\n                    data_246 = __core__listData(__core__sndPair(pair_69));\n                    __core__chooseData(data_246, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_146 = __core__unListData__safe(data_246);\n                        __core__chooseList(fields_146, () -> {\n                            false\n                        }, () -> {\n                            head_91 = __core__headList__safe(fields_146);\n                            __core__ifThenElse(\n                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_91),\n                                () -> {\n                                    fields_147 = __core__tailList__safe(fields_146);\n                                    __core__chooseList(fields_147, () -> {\n                                        false\n                                    }, () -> {\n                                        head_92 = __core__headList__safe(fields_147);\n                                        __core__ifThenElse(\n                                            __helios__txinput__is_valid_data(head_92),\n                                            () -> {\n                                                fields_148 = __core__tailList__safe(fields_147);\n                                                __core__chooseList(fields_148, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_184) -> {\n        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_184))\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_185) -> {\n        __helios__txinput__from_data(__helios__common__enum_field_1(self_185))\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_2) -> {\n        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_2), __core__mkNilData(()))))\n    };\n    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {\n        (data_247) -> {\n            __core__ifThenElse(\n                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_247),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_247),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_247),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_247),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_247),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_247),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {\n        (data_248) -> {\n            ignore_17 = __core__ifThenElse(\n                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_248),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid CapoActivity data\", ())\n                }\n            )();\n            data_248\n        }\n    };\n    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_249) -> {\n        __helios__common__enum_tag_equals(data_249, 0)\n    };\n    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_250) -> {\n        __core__chooseData(data_250, () -> {\n            pair_70 = __core__unConstrData__safe(data_250);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_70), 0),\n                () -> {\n                    data_251 = __core__listData(__core__sndPair(pair_70));\n                    __core__chooseData(data_251, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_149 = __core__unListData__safe(data_251);\n                        __core__chooseList(fields_149, () -> {\n                            false\n                        }, () -> {\n                            head_93 = __core__headList__safe(fields_149);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_93),\n                                () -> {\n                                    fields_150 = __core__tailList__safe(fields_149);\n                                    __core__chooseList(fields_150, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_186) -> {\n        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_186))\n    };\n    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_252) -> {\n        __helios__common__enum_tag_equals(data_252, 1)\n    };\n    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_253) -> {\n        __core__chooseData(data_253, () -> {\n            pair_71 = __core__unConstrData__safe(data_253);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_71), 1),\n                () -> {\n                    data_254 = __core__listData(__core__sndPair(pair_71));\n                    __core__chooseData(data_254, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_151 = __core__unListData__safe(data_254);\n                        __core__chooseList(fields_151, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {\n        __core__constrData(1, __core__mkNilData(()))\n    };\n    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_255) -> {\n        __helios__common__enum_tag_equals(data_255, 2)\n    };\n    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_256) -> {\n        __core__chooseData(data_256, () -> {\n            pair_72 = __core__unConstrData__safe(data_256);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_72), 2),\n                () -> {\n                    data_257 = __core__listData(__core__sndPair(pair_72));\n                    __core__chooseData(data_257, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_152 = __core__unListData__safe(data_257);\n                        __core__chooseList(fields_152, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_258) -> {\n        __helios__common__enum_tag_equals(data_258, 3)\n    };\n    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_259) -> {\n        __core__chooseData(data_259, () -> {\n            pair_73 = __core__unConstrData__safe(data_259);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_73), 3),\n                () -> {\n                    data_260 = __core__listData(__core__sndPair(pair_73));\n                    __core__chooseData(data_260, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_153 = __core__unListData__safe(data_260);\n                        __core__chooseList(fields_153, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_261) -> {\n        __helios__common__enum_tag_equals(data_261, 4)\n    };\n    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_262) -> {\n        __core__chooseData(data_262, () -> {\n            pair_74 = __core__unConstrData__safe(data_262);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_74), 4),\n                () -> {\n                    data_263 = __core__listData(__core__sndPair(pair_74));\n                    __core__chooseData(data_263, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_154 = __core__unListData__safe(data_263);\n                        __core__chooseList(fields_154, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_264) -> {\n        __helios__common__enum_tag_equals(data_264, 5)\n    };\n    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_265) -> {\n        __core__chooseData(data_265, () -> {\n            pair_75 = __core__unConstrData__safe(data_265);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_75), 5),\n                () -> {\n                    data_266 = __core__listData(__core__sndPair(pair_75));\n                    __core__chooseData(data_266, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_155 = __core__unListData__safe(data_266);\n                        __core__chooseList(fields_155, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__getRefCharterUtxo = (mph_16) -> {\n        charterAc = __helios__assetclass__new(mph_16, __helios__string__encode_utf8(\"charter\")());\n        hasCharter = (txin) -> {\n            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)\n        };\n        __core__chooseUnit(__helios__print(\"  -- getting ref_input for charter\"), (charterUtxo) -> {\n            charterUtxo\n        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);\n        __core__ifThenElse(\n            __helios__option[__helios__txinput]__some____is(__cond_12),\n            () -> {\n                (__lhs_0_20) -> {\n                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);\n                    ch\n                }\n            },\n            () -> {\n                (__lhs_0_19) -> {\n                    __helios__error(\"Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)\")\n                }\n            }\n        )()(__cond_12)))\n    };\n    __module__CapoHelpers__getTxCharterData = (mph_17, __useopt__refInputs, refInputs) -> {\n        refInputs_1 = __core__ifThenElse(\n            __useopt__refInputs,\n            () -> {\n                refInputs\n            },\n            () -> {\n                __helios__tx__ref_inputs(__helios__scriptcontext__tx)\n            }\n        )();\n        charterAc_1 = __helios__assetclass__new(mph_17, __helios__string__encode_utf8(\"charter\")());\n        hasCharter_1 = (txin_1) -> {\n            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)\n        };\n        (charterUtxo_1) -> {\n            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);\n            ctd\n        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);\n        __core__ifThenElse(\n            __helios__option[__helios__txinput]__some____is(__cond_13),\n            () -> {\n                (__lhs_0_24) -> {\n                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);\n                    ch_2\n                }\n            },\n            () -> {\n                (__lhs_0_21) -> {\n                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);\n                    __core__ifThenElse(\n                        __helios__option[__helios__txinput]__some____is(__cond_14),\n                        () -> {\n                            (__lhs_0_23) -> {\n                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);\n                                ch_1\n                            }\n                        },\n                        () -> {\n                            (__lhs_0_22) -> {\n                                __helios__error(\"Missing charter inputs / ref_inputs\")\n                            }\n                        }\n                    )()(__cond_14)\n                }\n            }\n        )()(__cond_13))\n    };\n    __helios__option[__helios__string]__is_valid_data = (data_267) -> {\n        __core__chooseData(data_267, () -> {\n            pair_76 = __core__unConstrData__safe(data_267);\n            index_11 = __core__fstPair(pair_76);\n            fields_156 = __core__sndPair(pair_76);\n            __core__ifThenElse(\n                __core__equalsInteger(index_11, 0),\n                () -> {\n                    __core__chooseList(fields_156, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_156), () -> {\n                            __helios__string__is_valid_data(__core__headList__safe(fields_156))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_11, 1),\n                        () -> {\n                            __core__chooseList(fields_156, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__option[__helios__txinput]__is_valid_data = (data_268) -> {\n        __core__chooseData(data_268, () -> {\n            pair_77 = __core__unConstrData__safe(data_268);\n            index_12 = __core__fstPair(pair_77);\n            fields_157 = __core__sndPair(pair_77);\n            __core__ifThenElse(\n                __core__equalsInteger(index_12, 0),\n                () -> {\n                    __core__chooseList(fields_157, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_157), () -> {\n                            __helios__txinput__is_valid_data(__core__headList__safe(fields_157))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_12, 1),\n                        () -> {\n                            __core__chooseList(fields_157, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;\n    __module__CapoHelpers__DelegateInput[]__link = (self_187) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_187))\n    };\n    __module__CapoHelpers__DelegateInput[]__role = (self_188) -> {\n        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_188))\n    };\n    __helios__option[__helios__string]__from_data = (data_269) -> {\n        __14 = __core__ifThenElse(\n            __helios__option[__helios__string]__is_valid_data(data_269),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid option data\", ())\n            }\n        )();\n        data_269\n    };\n    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_189) -> {\n        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_189))\n    };\n    __helios__option[__helios__txinput]__from_data = (data_270) -> {\n        __15 = __core__ifThenElse(\n            __helios__option[__helios__txinput]__is_valid_data(data_270),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid option data\", ())\n            }\n        )();\n        data_270\n    };\n    __module__CapoHelpers__DelegateInput[]__input = (self_190) -> {\n        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_190))\n    };\n    __module__CapoHelpers__DelegateInput[]__mph = (self_191) -> {\n        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_191))\n    };\n    __helios__option[__helios__string]____to_data = __helios__common__identity;\n    __helios__option[__helios__txinput]____to_data = __helios__common__identity;\n    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_18) -> {\n        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_18), __core__mkNilData(()))))))\n    };\n    __helios__option[__helios__txinput]__unwrap = (self_192) -> {\n        () -> {\n            __helios__txinput__from_data(__helios__common__enum_field_0(self_192))\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_193) -> {\n        () -> {\n            i_8 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_193))();\n            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);\n            __core__chooseUnit(__cond_15 = inputData;\n            __core__ifThenElse(\n                __helios__data__constrdata____is(__cond_15),\n                () -> {\n                    (__lhs_0_25) -> {\n                        index_13 = __helios__data__constrdata__tag(__lhs_0_25);\n                        fields_158 = __helios__data__constrdata__fields(__lhs_0_25);\n                        __core__chooseUnit(__helios__print(__helios__string____add(\"  --🐞 generic delegate activity at index \", __helios__int__show(index_13)())), __cond_16 = __helios__list[__helios__data]__head(fields_158);\n                        __core__ifThenElse(\n                            __helios__data__constrdata____is(__cond_16),\n                            () -> {\n                                (__lhs_0_26) -> {\n                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);\n                                    __helios__print(__helios__string____add(\"  --🐞 nested activity at index \", __helios__int__show(index2)()))\n                                }\n                            },\n                            () -> {\n                                (__17) -> {\n                                    ()\n                                }\n                            }\n                        )()(__cond_16))\n                    }\n                },\n                () -> {\n                    (__16) -> {\n                        ()\n                    }\n                }\n            )()(__cond_15), inputData)\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {\n        (self_194) -> {\n            () -> {\n                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_194)())\n            }\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {\n        (self_195) -> {\n            (assertionOk, msg_3) -> {\n                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                    true\n                }, () -> {\n                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_195)(), __module__CapoHelpers__DelegateInput[]__serialize(self_195)())\n                }), msg_3), __core__ifThenElse(\n                    assertionOk,\n                    () -> {\n                        __helios__assert(true, \"\")\n                    },\n                    () -> {\n                        () -> {\n                            __module__CapoHelpers__DelegateInput[]__error(self_195)(msg_3)\n                        }()\n                    }\n                )())\n            }\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__error_1 = (self_196) -> {\n        (msg_4) -> {\n            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                true\n            }, () -> {\n                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_196)(), __module__CapoHelpers__DelegateInput[]__serialize(self_196)())\n            }), msg_4), __core__chooseUnit(__helios__print(__helios__string____add(\"⚠️ ⚠️ ⚠️ error executing policy for dgTkn: \", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__DelegateInput[]__link(self_196)))), __core__chooseUnit(__helios__print(__helios__string____add(\"  ---- with input value: \", __helios__value__show(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_196))()))(false, ()))), __core__chooseUnit(__helios__print(\"\n\"), __helios__assert(false, msg_4)))))\n        }\n    };\n    __helios__list[__helios__data]__get = (self_197) -> {\n        (index_14) -> {\n            recurse_91 = (recurse_90, self_198, i_9) -> {\n                __core__chooseList(self_198, () -> {\n                    __helios__error(\"index out of range\")\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_14, i_9),\n                        () -> {\n                            __core__headList__safe(self_198)\n                        },\n                        () -> {\n                            recurse_90(recurse_90, __core__tailList__safe(self_198), __core__addInteger(i_9, 1))\n                        }\n                    )()\n                })()\n            };\n            recurse_91(recurse_91, self_197, 0)\n        }\n    };\n    __helios__list[__helios__data]__length = __helios__common__length;\n    __helios__list[__helios__data]__filter = (self_199) -> {\n        (fn_20) -> {\n            __helios__common__filter_list(self_199, (item_11) -> {\n                fn_20(__helios__data__from_data(item_11))\n            })\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {\n        (self_200) -> {\n            (seed) -> {\n                __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(\"\", false, ()), __core__chooseUnit(__helios__print(\"-- ensures the delegate is unchanged, so callers needn't.\"), (result_4) -> {\n                    __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, \"✅ unique seeded mint ok!\"), result_4)\n                }(__cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_200)();\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),\n                    () -> {\n                        (__lhs_0_30) -> {\n                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);\n                            __core__chooseUnit(__cond_20 = ma_1;\n                            __core__ifThenElse(\n                                __helios__data__constrdata____is(__cond_20),\n                                () -> {\n                                    (__lhs_0_31) -> {\n                                        fields_160 = __helios__data__constrdata__fields(__lhs_0_31);\n                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_160)(0))), \"seed mismatch\")\n                                    }\n                                },\n                                () -> {\n                                    (__21) -> {\n                                        __helios__error(\"no way\")\n                                    }\n                                }\n                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_200)())\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),\n                            () -> {\n                                (__lhs_0_27) -> {\n                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);\n                                    __core__chooseUnit(__helios__print(\"-- the delegated-data policy is triggered with a multi-activity\"), __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), \"no minting activities found\"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_28) -> {\n                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(a_28);\n                                        __core__ifThenElse(\n                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),\n                                            () -> {\n                                                (__lhs_0_28) -> {\n                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);\n                                                    __cond_19 = ma;\n                                                    __core__ifThenElse(\n                                                        __helios__data__constrdata____is(__cond_19),\n                                                        () -> {\n                                                            (__lhs_0_29) -> {\n                                                                fields_159 = __helios__data__constrdata__fields(__lhs_0_29);\n                                                                __helios__bool__and(() -> {\n                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_159)))\n                                                                }, () -> {\n                                                                    true\n                                                                })\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__20) -> {\n                                                                __helios__error(\"no way d\")\n                                                            }\n                                                        }\n                                                    )()(__cond_19)\n                                                }\n                                            },\n                                            () -> {\n                                                (__19) -> {\n                                                    false\n                                                }\n                                            }\n                                        )()(__cond_18)\n                                    });\n                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"one of the delegate multi-activities must be minting with this seed\", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_200)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), \"no minting activity found for seed!\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"only one of a multi-activity for a given seed is allowed\", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_200)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), \"multiple minting activities found for seed\"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_200)()))))))\n                                }\n                            },\n                            () -> {\n                                (__18) -> {\n                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_200)(\"non-mint activity!\"), __helios__error(\"\"))\n                                }\n                            }\n                        )()\n                    }\n                )()(__cond_17))))\n            }\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {\n        (self_201) -> {\n            (recId) -> {\n                strId = __helios__bytearray__decode_utf8_safe(recId)();\n                __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_201);\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),\n                    () -> {\n                        (__lhs_0_41) -> {\n                            \"finding unique spending activity for a delegated-data policy\"\n                        }\n                    },\n                    () -> {\n                        (__26) -> {\n                            __helios__error(\"withUniqueDDSpendingActivity: only valid for DgDataPolicy\")\n                        }\n                    }\n                )()(__cond_25), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"ensures the delegated-data controller's is spending recId\", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add(\"  -- recId: \", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"TEST THIS v\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"spendDgt must be acting on the matching record-id\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"ensures the delegate is unchanged, so callers needn't also check that\", false, (), false, (), false, ()), (result_5) -> {\n                    __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(false, ()), result_5)\n                }(__cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_201)();\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),\n                    () -> {\n                        (__lhs_0_39) -> {\n                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_39);\n                            __core__chooseUnit(__cond_24 = sa_1;\n                            __core__ifThenElse(\n                                __helios__data__constrdata____is(__cond_24),\n                                () -> {\n                                    (__lhs_0_40) -> {\n                                        index_16 = __helios__data__constrdata__tag(__lhs_0_40);\n                                        fields_162 = __helios__data__constrdata__fields(__lhs_0_40);\n                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_16, index_16), \"no way e\"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_162));\n                                        __core__ifThenElse(\n                                            __helios__bytearray____neq(recId, foundRecId_1),\n                                            () -> {\n                                                __core__chooseUnit(__helios__print(__helios__string____add(\"  -- expected: Spending:\", strId)), __core__chooseUnit(__helios__print(__helios__string____add(\"  -- actual: Spending:\", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_201)(\"recId mismatch\")))\n                                            },\n                                            () -> {\n                                                () -> {\n                                                    __helios__print(__helios__string____add(\"  -- ok: DD controller spending activity for \", strId))\n                                                }()\n                                            }\n                                        )())\n                                    }\n                                },\n                                () -> {\n                                    (__25) -> {\n                                        __helios__error(\"no way f\")\n                                    }\n                                }\n                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_201)())\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities____is(__cond_21),\n                            () -> {\n                                (__lhs_0_38) -> {\n                                    __helios__error(\"expected spending activity for the recId, got OtherActivities\")\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),\n                                    () -> {\n                                        (__lhs_0_32) -> {\n                                            activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);\n                                            __core__chooseUnit(__helios__print(\"    -- multiple activities found\"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_201)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), \"no spending activities found\"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_29) -> {\n                                                __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(a_29);\n                                                __core__ifThenElse(\n                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),\n                                                    () -> {\n                                                        (__lhs_0_37) -> {\n                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_201)(\"dgInput: withSpendingActivity: CreatingDelegatedData invalid\"), __helios__error(\"\"))\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),\n                                                            () -> {\n                                                                (__lhs_0_36) -> {\n                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_201)(\"dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy\"), __helios__error(\"\"))\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),\n                                                                    () -> {\n                                                                        (__lhs_0_35) -> {\n                                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_201)(\"dgInput: withSpendingActivity: DeletingDelegatedData invalid\"), __helios__error(\"\"))\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),\n                                                                            () -> {\n                                                                                (__lhs_0_33) -> {\n                                                                                    sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);\n                                                                                    __cond_23 = sa;\n                                                                                    __core__ifThenElse(\n                                                                                        __helios__data__constrdata____is(__cond_23),\n                                                                                        () -> {\n                                                                                            (__lhs_0_34) -> {\n                                                                                                index_15 = __helios__data__constrdata__tag(__lhs_0_34);\n                                                                                                fields_161 = __helios__data__constrdata__fields(__lhs_0_34);\n                                                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_15, index_15), \"no way h\"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_161));\n                                                                                                __core__ifThenElse(\n                                                                                                    __helios__bytearray____neq(recId, foundRecId),\n                                                                                                    () -> {\n                                                                                                        actualIdStr = __helios__bytearray__decode_utf8_safe(foundRecId)();\n                                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_201)(__helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add(\"recId mismatch: found \", actualIdStr), \" (expected \"), strId), \")\")), __helios__error(\"\"))\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        () -> {\n                                                                                                            __core__chooseUnit(__helios__print(\"  -- matched recId\"), true)\n                                                                                                        }()\n                                                                                                    }\n                                                                                                )())\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__24) -> {\n                                                                                                __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_201)(\"wrong structure for spending activity\"), __helios__error(\"\"))\n                                                                                            }\n                                                                                        }\n                                                                                    )()(__cond_23)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__23) -> {\n                                                                                    false\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(__cond_22)\n                                            });\n                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"one of the delegate data-controller multi-activities must treat this recId\", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_201)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))(\"dgt acting on this recId? \"), __helios__string____add(\"no spending activity found for recId: \", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"only one of a multi-activity for a given recId is allowed\", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_201)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))(\"exactly one activity? \"), __helios__string____add(\"multiple spending activities found for recId: \", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_201)()))))))\n                                        }\n                                    },\n                                    () -> {\n                                        (__22) -> {\n                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_201)(\"non-spend activity!\"), __helios__error(\"\"))\n                                        }\n                                    }\n                                )()\n                            }\n                        )()\n                    }\n                )()(__cond_21))))))))\n            }\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_202) -> {\n        () -> {\n            __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupUnit(\"the delegate must be unchanged\", true, true, () -> {\n                __lhs_0_42 = self_202;\n                link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_42);\n                input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_42);\n                mph_19 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_42);\n                __lhs_0_43 = link_1;\n                uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_43);\n                validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_43);\n                targetValue = __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken(link_1)(mph_19);\n                (returnedUnchanged) -> {\n                    __core__chooseUnit(__helios__assert(returnedUnchanged, \"no\"), __helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_19, false, (), false, ()), \"no\"))\n                }(__cond_26 = validatorHash_1;\n                __core__ifThenElse(\n                    __helios__option[__helios__validatorhash]__some____is(__cond_26),\n                    () -> {\n                        (__lhs_0_45) -> {\n                            vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_45);\n                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_202)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add(\"dgTkn not returned: \", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {\n                                __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())\n                            });\n                            __core__ifThenElse(\n                                __helios__option[__helios__txoutput]__some____is(__cond_27),\n                                () -> {\n                                    (__lhs_0_47) -> {\n                                        __core__chooseUnit(__helios__print(__helios__string____add(\"ok: the dgTkn is unchanged: \", uut_1)), true)\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_46) -> {\n                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_202)(\"The delegate's dgTkn datum MUST NOT be modified!\"), __helios__error(\"\"))\n                                    }\n                                }\n                            )()(__cond_27))\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_44) -> {\n                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_202)(\"unchOut - no vh\"), __helios__error(\"\"))\n                        }\n                    }\n                )()(__cond_26))\n            }), self_202)\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__orFail = (self_203) -> {\n        () -> {\n            __lhs_0_48 = self_203;\n            true\n        }\n    };\n    __module__CapoHelpers__DgDataDetails[]__dataSrc = (self_204) -> {\n        __module__CapoHelpers__dgd_DataSrc[]__from_data(__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_2)(__helios__common__struct_field_0(self_204))\n    };\n    __module__CapoHelpers__DgDataDetails[]__id = (self_205) -> {\n        __helios__bytearray__from_data(__helios__common__struct_field_1(self_205))\n    };\n    __module__CapoHelpers__DgDataDetails[]__mph = (self_206) -> {\n        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_3(self_206))\n    };\n    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]____to_data = __helios__common__identity;\n    __module__CapoHelpers__DgDataDetails[]____new = (dataSrc, id_1, type, mph_20, activity) -> {\n        __core__mkCons(__module__CapoHelpers__dgd_DataSrc[]____to_data(dataSrc), __core__mkCons(__helios__bytearray____to_data(id_1), __core__mkCons(__helios__string____to_data(type), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_20), __core__mkCons(__helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]____to_data(activity), __core__mkNilData(()))))))\n    };\n    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__none____new = () -> {\n        __helios__option__NONE\n    };\n    __module__CapoHelpers__DgDataDetails[]__updating = (id_2, input_2, output_1, mph_21, __useopt__activity, activity_1) -> {\n        activity_2 = __core__ifThenElse(\n            __useopt__activity,\n            () -> {\n                activity_1\n            },\n            () -> {\n                __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__none____new()\n            }\n        )();\n        __module__CapoHelpers__DgDataDetails[]____new(__module__CapoHelpers__dgd_DataSrc[]__Both____new(input_2, output_1), id_2, \"\", mph_21, activity_2)\n    };\n    __module__CapoHelpers__DgDataDetails[]__creating = (id_3, output_2, mph_22, __useopt__activity_1, activity_3) -> {\n        activity_4 = __core__ifThenElse(\n            __useopt__activity_1,\n            () -> {\n                activity_3\n            },\n            () -> {\n                __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__none____new()\n            }\n        )();\n        __module__CapoHelpers__DgDataDetails[]____new(__module__CapoHelpers__dgd_DataSrc[]__Output____new(output_2), id_3, \"\", mph_22, activity_4)\n    };\n    __module__CapoHelpers__DgDataDetails[]__uutValue = (self_207) -> {\n        () -> {\n            __helios__value__new(__helios__assetclass__new(__module__CapoHelpers__DgDataDetails[]__mph(self_207), __module__CapoHelpers__DgDataDetails[]__id(self_207)), 1)\n        }\n    };\n    __module__CapoHelpers__DgDataDetails[]__input = (self_208) -> {\n        () -> {\n            __cond_28 = __module__CapoHelpers__DgDataDetails[]__dataSrc(self_208);\n            __core__ifThenElse(\n                __module__CapoHelpers__dgd_DataSrc[]__Input____is(__cond_28),\n                () -> {\n                    (__lhs_0_50) -> {\n                        utxo_4 = __module__CapoHelpers__dgd_DataSrc[]__Input__utxo(__lhs_0_50);\n                        utxo_4\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__dgd_DataSrc[]__Both____is(__cond_28),\n                        () -> {\n                            (__lhs_0_49) -> {\n                                utxo_3 = __module__CapoHelpers__dgd_DataSrc[]__Both__utxo(__lhs_0_49);\n                                utxo_3\n                            }\n                        },\n                        () -> {\n                            (__27) -> {\n                                __helios__error(\"no input data; use findInput() first\")\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_28)\n        }\n    };\n    __module__CapoHelpers__DgDataDetails[]__output = (self_209) -> {\n        () -> {\n            __cond_29 = __module__CapoHelpers__DgDataDetails[]__dataSrc(self_209);\n            __core__ifThenElse(\n                __module__CapoHelpers__dgd_DataSrc[]__Output____is(__cond_29),\n                () -> {\n                    (__lhs_0_52) -> {\n                        txo_2 = __module__CapoHelpers__dgd_DataSrc[]__Output__txo(__lhs_0_52);\n                        txo_2\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__dgd_DataSrc[]__Both____is(__cond_29),\n                        () -> {\n                            (__lhs_0_51) -> {\n                                txo_1 = __module__CapoHelpers__dgd_DataSrc[]__Both__txo(__lhs_0_51);\n                                txo_1\n                            }\n                        },\n                        () -> {\n                            (__28) -> {\n                                __helios__error(\"no output data\")\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_29)\n        }\n    };\n    __module__CapoHelpers__DgDataDetails[]__inputData = (self_210) -> {\n        () -> {\n            __cond_30 = __helios__txoutputdatum__inline(__helios__txinput__datum(__module__CapoHelpers__DgDataDetails[]__input(self_210)()));\n            __core__ifThenElse(\n                __helios__data__constrdata____is(__cond_30),\n                () -> {\n                    (__lhs_0_53) -> {\n                        fields_163 = __helios__data__constrdata__fields(__lhs_0_53);\n                        __helios__list[__helios__data]__head(fields_163)\n                    }\n                },\n                () -> {\n                    (__29) -> {\n                        __helios__error(\"expected ConstrData{mStruct} for DgData input\")\n                    }\n                }\n            )()(__cond_30)\n        }\n    };\n    __module__CapoHelpers__DgDataDetails[]__outputData = (self_211) -> {\n        () -> {\n            __cond_31 = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__DgDataDetails[]__output(self_211)()));\n            __core__ifThenElse(\n                __helios__data__constrdata____is(__cond_31),\n                () -> {\n                    (__lhs_0_54) -> {\n                        fields_164 = __helios__data__constrdata__fields(__lhs_0_54);\n                        __helios__list[__helios__data]__head(fields_164)\n                    }\n                },\n                () -> {\n                    (__30) -> {\n                        __helios__error(\"expected ConstrData{mStruct} for DgData output\")\n                    }\n                }\n            )()(__cond_31)\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;\n    __module__CapoHelpers__CapoCtx[]__mph = (self_212) -> {\n        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_212))\n    };\n    __module__CapoHelpers__CapoCtx[]__charter = (self_213) -> {\n        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_213))\n    };\n    __module__CapoHelpers__CapoCtx[]____new = (mph_23, charter) -> {\n        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_23), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))\n    };\n    __helios__map[__helios__bytearray@__helios__int]__show = (self_214) -> {\n        () -> {\n            recurse_93 = (recurse_92, self_215, first) -> {\n                __core__chooseList(self_215, () -> {\n                    \"\"\n                }, () -> {\n                    __core__appendString(__core__ifThenElse(\n                        first,\n                        \"\",\n                        \",\"\n                    ), head_94 = __core__headList__safe(self_215);\n                    key_data = __core__fstPair(head_94);\n                    key_16 = __helios__bytearray__from_data_safe(key_data);\n                    value_data = __core__sndPair(head_94);\n                    value_8 = __helios__int__from_data_safe(value_data);\n                    __core__appendString(__core__appendString(__core__appendString(key_16((valid_7, key_17) -> {\n                        __core__ifThenElse(\n                            valid_7,\n                            () -> {\n                                __helios__bytearray__show(key_17)()\n                            },\n                            () -> {\n                                __helios__data__show(key_data)()\n                            }\n                        )()\n                    }), \":\"), value_8((valid_6, value_9) -> {\n                        __core__ifThenElse(\n                            valid_6,\n                            () -> {\n                                __helios__int__show(value_9)()\n                            },\n                            () -> {\n                                __helios__data__show(value_data)()\n                            }\n                        )()\n                    })), recurse_92(recurse_92, __core__tailList__safe(self_215), false)))\n                })()\n            };\n            __core__appendString(\"{\", __core__appendString(recurse_93(recurse_93, self_214, true), \"}\"))\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__creatingDgData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {\n        (self_216) -> {\n            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes, __useopt__reqt, reqt_5) -> {\n                recId_2 = __core__ifThenElse(\n                    __useopt__recId,\n                    () -> {\n                        recId_1\n                    },\n                    () -> {\n                        \"\"\n                    }\n                )();\n                recIdBytes_1 = __core__ifThenElse(\n                    __useopt__recIdBytes,\n                    () -> {\n                        recIdBytes\n                    },\n                    () -> {\n                        __helios__string__encode_utf8(recId_2)()\n                    }\n                )();\n                reqt_6 = __core__ifThenElse(\n                    __useopt__reqt,\n                    () -> {\n                        reqt_5\n                    },\n                    () -> {\n                        \"the delegated-data record must be created\"\n                    }\n                )();\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupStart(reqt_6, true, true), output_3 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_216)(recIdBytes_1);\n                recIdAssetClass = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_216), recIdBytes_1);\n                minted = __helios__value__get_safe(__helios__tx__minted(__helios__scriptcontext__tx))(recIdAssetClass);\n                __core__chooseUnit(__core__ifThenElse(\n                    __helios__int____eq(minted, 1),\n                    () -> {\n                        __module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add(\"✅ creating: \", __helios__bytearray__decode_utf8_safe(recIdBytes_1)()))\n                    },\n                    () -> {\n                        () -> {\n                            __core__chooseUnit(__core__ifThenElse(\n                                __helios__value__contains_policy(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoHelpers__CapoCtx[]__mph(self_216)),\n                                () -> {\n                                    __helios__print(__helios__string____add(\"  -- policy mint: \", __helios__map[__helios__bytearray@__helios__int]__show(__helios__value__get_policy(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoHelpers__CapoCtx[]__mph(self_216)))()))\n                                },\n                                () -> {\n                                    () -> {\n                                        __helios__print(\"  -- no mint in this policy\")\n                                    }()\n                                }\n                            )(), __helios__error(__helios__string____add(\"creatingDgData(): required record not minted: \", __helios__bytearray__decode_utf8_safe(recIdBytes_1)())))\n                        }()\n                    }\n                )(), __module__CapoHelpers__DgDataDetails[]__creating(recIdBytes_1, output_3, __module__CapoHelpers__CapoCtx[]__mph(self_216), false, ())))\n            }\n        }\n    };\n    __helios__option[__helios__string]__some____is = (data_271) -> {\n        __helios__common__enum_tag_equals(data_271, 0)\n    };\n    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__some____new = (some_2) -> {\n        __core__constrData(0, __helios__common__list_1(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]____to_data(some_2)))\n    };\n    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__some__new = __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__some____new;\n    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__none__new = __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__none____new;\n    __helios__option[__helios__string]__map[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]] = (self_217) -> {\n        (fn_21) -> {\n            pair_78 = __core__unConstrData(self_217);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_78), 0),\n                () -> {\n                    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__some__new(fn_21(__helios__string__from_data(__core__headList(__core__sndPair(pair_78)))))\n                },\n                () -> {\n                    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__none__new()\n                }\n            )()\n        }\n    };\n    __helios__option[__helios__string]__none____new = () -> {\n        __helios__option__NONE\n    };\n    __module__CapoHelpers__CapoCtx[]__updatingDgData = (__module__CapoHelpers__CapoCtx[]__findModelActivity, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput, __module__CapoHelpers__CapoCtx[]__getCharterData, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput, __module__CapoHelpers__CapoCtx[]__address_1, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1) -> {\n        (self_218) -> {\n            (__useopt__recId_1, recId_3, __useopt__recIdBytes_1, recIdBytes_2, __useopt__withActivity, withActivity, __useopt__reqt_1, reqt_7) -> {\n                recId_4 = __core__ifThenElse(\n                    __useopt__recId_1,\n                    () -> {\n                        recId_3\n                    },\n                    () -> {\n                        \"\"\n                    }\n                )();\n                recIdBytes_3 = __core__ifThenElse(\n                    __useopt__recIdBytes_1,\n                    () -> {\n                        recIdBytes_2\n                    },\n                    () -> {\n                        __helios__string__encode_utf8(recId_4)()\n                    }\n                )();\n                withActivity_1 = __core__ifThenElse(\n                    __useopt__withActivity,\n                    () -> {\n                        withActivity\n                    },\n                    () -> {\n                        __helios__option[__helios__string]__none____new()\n                    }\n                )();\n                reqt_8 = __core__ifThenElse(\n                    __useopt__reqt_1,\n                    () -> {\n                        reqt_7\n                    },\n                    () -> {\n                        \"updates the delegated-data record\"\n                    }\n                )();\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupStart(reqt_8, true, __cond_32 = withActivity_1;\n                __core__ifThenElse(\n                    __helios__option[__helios__string]__some____is(__cond_32),\n                    () -> {\n                        (__lhs_0_56) -> {\n                            false\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_55) -> {\n                            true\n                        }\n                    }\n                )()(__cond_32)), input_3 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate)(self_218)(recIdBytes_3, false, ());\n                output_4 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1(self_218)(recIdBytes_3);\n                activity_5 = __helios__option[__helios__string]__map[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]](withActivity_1)(__module__CapoHelpers__CapoCtx[]__findModelActivity(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput, __module__CapoHelpers__CapoCtx[]__getCharterData, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput)(self_218));\n                __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add(\"✅ updating: \", __helios__bytearray__decode_utf8_safe(recIdBytes_3)())), __module__CapoHelpers__DgDataDetails[]__updating(recIdBytes_3, input_3, output_4, __module__CapoHelpers__CapoCtx[]__mph(self_218), true, activity_5)))\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__findModelActivity_1 = (__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_1, __module__CapoHelpers__CapoCtx[]__getCharterData_1, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1) -> {\n        (self_219) -> {\n            (modelName) -> {\n                delegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_1(__module__CapoHelpers__CapoCtx[]__getCharterData_1, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(self_219)(modelName, false, (), false, ());\n                __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(delegateInput)()\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_220) -> {\n        () -> {\n            e = \"requires charter as input\";\n            __cond_33 = __module__CapoHelpers__CapoCtx[]__charter(self_220);\n            __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_33),\n                () -> {\n                    (__lhs_0_65) -> {\n                        __helios__error(e)\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_33),\n                        () -> {\n                            (__lhs_0_64) -> {\n                                __helios__error(e)\n                            }\n                        },\n                        () -> {\n                            (__lhs_0_57) -> {\n                                utxo_5 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_57);\n                                activity_6 = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_5));\n                                wrongActivity = () -> {\n                                    __core__ifThenElse(\n                                        true,\n                                        () -> {\n                                            __helios__error(\"non-CharterData activity\")\n                                        },\n                                        () -> {\n                                            () -> {\n                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()\n                                            }()\n                                        }\n                                    )()\n                                };\n                                __cond_34 = activity_6;\n                                __core__ifThenElse(\n                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_34),\n                                    () -> {\n                                        (__lhs_0_63) -> {\n                                            wrongActivity()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_34),\n                                            () -> {\n                                                (__lhs_0_62) -> {\n                                                    wrongActivity()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_34),\n                                                    () -> {\n                                                        (__lhs_0_61) -> {\n                                                            activity_6\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_34),\n                                                            () -> {\n                                                                (__lhs_0_60) -> {\n                                                                    activity_6\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_34),\n                                                                    () -> {\n                                                                        (__lhs_0_59) -> {\n                                                                            activity_6\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__lhs_0_58) -> {\n                                                                            activity_6\n                                                                        }\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()(__cond_34)\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_33)\n        }\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_221) -> {\n        (key_18) -> {\n            __helios__common__map_get(self_221, __helios__string____to_data(key_18), (x_5) -> {\n                __core__constrData(0, __helios__common__list_1(x_5))\n            }, () -> {\n                __core__constrData(1, __helios__common__list_0)\n            })\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {\n        (self_222) -> {\n            (key_19) -> {\n                __core__chooseUnit(__helios__print(__helios__string____add(\"    -- looking for capo's manifest entry: \", key_19)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_2(self_222)(), 0);\n                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_19))\n            }\n        }\n    };\n    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_272) -> {\n        __helios__common__enum_tag_equals(data_272, 0)\n    };\n    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_223) -> {\n        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_223))\n    };\n    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_273) -> {\n        __helios__common__enum_tag_equals(data_273, 1)\n    };\n    __helios__option[__helios__bytearray]__none____new = () -> {\n        __helios__option__NONE\n    };\n    __helios__option[__helios__bytearray]__some____new = (some_3) -> {\n        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_3)))\n    };\n    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {\n        (self_224) -> {\n            (key_20, __useopt__required_2, required_4) -> {\n                required_5 = __core__ifThenElse(\n                    __useopt__required_2,\n                    () -> {\n                        required_4\n                    },\n                    () -> {\n                        true\n                    }\n                )();\n                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_3)(self_224)(key_20);\n                __cond_35 = oe;\n                __core__ifThenElse(\n                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_35),\n                    () -> {\n                        (__lhs_0_67) -> {\n                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add(\"missing required manifest entry: \", key_20)), __helios__option[__helios__bytearray]__none____new())\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_66) -> {\n                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_66);\n                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))\n                        }\n                    }\n                )()(__cond_35)\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_4) -> {\n        (self_225) -> {\n            (__useopt__required_3, required_6) -> {\n                required_7 = __core__ifThenElse(\n                    __useopt__required_3,\n                    () -> {\n                        required_6\n                    },\n                    () -> {\n                        true\n                    }\n                )();\n                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_4)(self_225)(\"currentSettings\", true, required_7)\n            }\n        }\n    };\n    __helios__option[__helios__txoutput]__some__some = (self_226) -> {\n        __helios__txoutput__from_data(__helios__common__enum_field_0(self_226))\n    };\n    __module__StellarHeliosHelpers__REQTgroup[__module__CapoHelpers__CapoCtx[]] = (reqt_9, __useopt__collapsed_6, collapsed_12, callback_13) -> {\n        collapsed_13 = __core__ifThenElse(\n            __useopt__collapsed_6,\n            () -> {\n                collapsed_12\n            },\n            () -> {\n                false\n            }\n        )();\n        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(__helios__string____add(\"❗\", reqt_9), true, collapsed_13), result_6 = callback_13();\n        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, \"✅\"), result_6))\n    };\n    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {\n        (self_227) -> {\n            () -> {\n                __module__StellarHeliosHelpers__REQTgroup[__module__CapoHelpers__CapoCtx[]](\"MUST have the Capo's govAuthority approval\", true, true, () -> {\n                    __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_227)()))(__module__CapoHelpers__CapoCtx[]__mph(self_227), false, (), false, ()), \"^ that fails, this can't\"), __core__chooseUnit(__helios__print(\"✅ govAuthority ok!\"), self_227))\n                })\n            }\n        }\n    };\n    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_274) -> {\n        __helios__common__enum_tag_equals(data_274, 1)\n    };\n    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_228) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_228))\n    };\n    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_229) -> {\n        (key_21) -> {\n            __helios__common__map_get(self_229, __helios__string____to_data(key_21), (x_6) -> {\n                __core__constrData(0, __helios__common__list_1(x_6))\n            }, () -> {\n                __core__constrData(1, __helios__common__list_0)\n            })\n        }\n    };\n    __helios__option[__helios__string]__some____new = (some_4) -> {\n        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_4)))\n    };\n    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2 = (__module__CapoHelpers__CapoCtx[]__getCharterData_6, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_2) -> {\n        (self_230) -> {\n            (typeName, __useopt__required_4, required_8, __useopt__message, message) -> {\n                required_9 = __core__ifThenElse(\n                    __useopt__required_4,\n                    () -> {\n                        required_8\n                    },\n                    () -> {\n                        true\n                    }\n                )();\n                message_1 = __core__ifThenElse(\n                    __useopt__message,\n                    () -> {\n                        message\n                    },\n                    () -> {\n                        \"\"\n                    }\n                )();\n                __core__chooseUnit(__core__ifThenElse(\n                    required_9,\n                    () -> {\n                        __core__ifThenElse(\n                            __helios__int____gt(__helios__bytearray__length(__helios__string__encode_utf8(message_1)()), 0),\n                            () -> {\n                                __module__StellarHeliosHelpers__REQTgroupStart(message_1, true, true)\n                            },\n                            () -> {\n                                () -> {\n                                    __module__StellarHeliosHelpers__REQTgroupStart(__helios__string____add(\"MUST find the policy for record-type \", typeName), true, true)\n                                }()\n                            }\n                        )()\n                    },\n                    () -> {\n                        () -> {\n                            __core__ifThenElse(\n                                __helios__int____gt(__helios__bytearray__length(__helios__string__encode_utf8(message_1)()), 0),\n                                () -> {\n                                    __module__StellarHeliosHelpers__logGroupStart(message_1, true, false)\n                                },\n                                () -> {\n                                    () -> {\n                                        __module__StellarHeliosHelpers__logGroupStart(__helios__string____add(\"trying to find the policy for record-type \", typeName), true, false)\n                                    }()\n                                }\n                            )()\n                        }()\n                    }\n                )(), __core__chooseUnit(__helios__print(\"     -- locates the needed policy through the Capo manifest\"), (result_7) -> {\n                    __core__chooseUnit(__core__ifThenElse(\n                        __helios__bool__or(() -> {\n                            required_9\n                        }, () -> {\n                            __cond_38 = __module__CapoHelpers__DelegateInput[]__input(result_7);\n                            __core__ifThenElse(\n                                __helios__option[__helios__txinput]__some____is(__cond_38),\n                                () -> {\n                                    (__lhs_0_72) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_71) -> {\n                                        false\n                                    }\n                                }\n                            )()(__cond_38)\n                        }),\n                        () -> {\n                            __module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add(\"✅ dgData policy found: \", typeName))\n                        },\n                        () -> {\n                            () -> {\n                                __module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add(\"✅ dgData policy found: \", typeName))\n                            }()\n                        }\n                    )(), result_7)\n                }(__cond_36 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_230)()))(typeName);\n                __core__ifThenElse(\n                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_36),\n                    () -> {\n                        (__lhs_0_70) -> {\n                            __helios__error(__helios__string____add(__helios__string____add(\"missing data-policy manifest for record-type '\", typeName), \"'\"))\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_68) -> {\n                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_68);\n                            __cond_37 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);\n                            __core__ifThenElse(\n                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_37),\n                                () -> {\n                                    (__lhs_0_69) -> {\n                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_69);\n                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_69);\n                                        (callback_14) -> {\n                                            callback_14(policyLink, idPrefix_2)\n                                        }\n                                    }\n                                },\n                                () -> {\n                                    (__31) -> {\n                                        __helios__error(__helios__string____add(\"manifest entry is not a data policy: \", typeName))\n                                    }\n                                }\n                            )()(__cond_37)((dgtLink, idPrefix_1) -> {\n                                __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_2(self_230)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1))\n                            })\n                        }\n                    }\n                )()(__cond_36))))\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_7) -> {\n        (self_231) -> {\n            (__useopt__required_5, required_10) -> {\n                required_11 = __core__ifThenElse(\n                    __useopt__required_5,\n                    () -> {\n                        required_10\n                    },\n                    () -> {\n                        true\n                    }\n                )();\n                input_4 = __helios__scriptcontext__get_current_input();\n                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_7(self_231)()))(__module__CapoHelpers__CapoCtx[]__mph(self_231));\n                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_4))(acMintDgt), 0))(\"    -- acting on mintDgt-* token right now? \");\n                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                    isUsingMintDgt\n                }, () -> {\n                    __helios__bool____not(required_11)\n                }), \"not acting as mint delegate!\"), isUsingMintDgt)\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_8) -> {\n        (self_232) -> {\n            (__useopt__required_6, required_12) -> {\n                required_13 = __core__ifThenElse(\n                    __useopt__required_6,\n                    () -> {\n                        required_12\n                    },\n                    () -> {\n                        true\n                    }\n                )();\n                input_5 = __helios__scriptcontext__get_current_input();\n                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_8(self_232)()))(__module__CapoHelpers__CapoCtx[]__mph(self_232));\n                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_5))(acSpendDgt), 0))(\"    -- acting on spendDgt-* token right now? \");\n                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                    isUsingSpendDgt\n                }, () -> {\n                    __helios__bool____not(required_13)\n                }), \"not acting as spend delegate!\"), isUsingSpendDgt)\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterData_9 = (self_233) -> {\n        () -> {\n            __cond_39 = __module__CapoHelpers__CapoCtx[]__charter(self_233);\n            __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_39),\n                () -> {\n                    (__lhs_0_74) -> {\n                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_74);\n                        datum_3\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_39),\n                        () -> {\n                            (__lhs_0_73) -> {\n                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_73);\n                                datum_2\n                            }\n                        },\n                        () -> {\n                            (__32) -> {\n                                __helios__error(\"CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first\")\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_39)\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2) -> {\n        (self_234) -> {\n            () -> {\n                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_234), __helios__string__encode_utf8(\"charter\")());\n                capoAddr = __module__CapoHelpers__CapoCtx[]__address_2(self_234)();\n                __cond_40 = __module__CapoHelpers__CapoCtx[]__charter(self_234);\n                __core__ifThenElse(\n                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_40),\n                    () -> {\n                        (__lhs_0_75) -> {\n                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo_3) -> {\n                                __helios__bool__and(() -> {\n                                    __helios__address____eq(__helios__txoutput__address(txo_3), capoAddr)\n                                }, () -> {\n                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo_3))(charterAc_2), 0)\n                                })\n                            })))), 0);\n                            charterData_1\n                        }\n                    },\n                    () -> {\n                        (__33) -> {\n                            __helios__error(\"CapoCtx.getNextCharterData(): invalid except with charter strategy Input\")\n                        }\n                    }\n                )()(__cond_40)\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3 = (self_235) -> {\n        () -> {\n            __cond_41 = __module__CapoHelpers__CapoCtx[]__charter(self_235);\n            __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_41),\n                () -> {\n                    (__lhs_0_77) -> {\n                        utxo_7 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_77);\n                        utxo_7\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_41),\n                        () -> {\n                            (__lhs_0_76) -> {\n                                utxo_6 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_76);\n                                utxo_6\n                            }\n                        },\n                        () -> {\n                            (__34) -> {\n                                __helios__error(\"CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first\")\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_41)\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3 = (self_236) -> {\n        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {\n            required_15 = __core__ifThenElse(\n                __useopt__required_7,\n                () -> {\n                    required_14\n                },\n                () -> {\n                    true\n                }\n            )();\n            idPrefix_4 = __core__ifThenElse(\n                __useopt__idPrefix,\n                () -> {\n                    idPrefix_3\n                },\n                () -> {\n                    __helios__option[__helios__string]__none____new()\n                }\n            )();\n            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_236), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_236))\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__address_3 = (self_237) -> {\n        () -> {\n            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3(self_237)());\n            addr\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {\n        (self_238) -> {\n            (__useopt__recId_2, recId_5, __useopt__recIdBytes_2, recIdBytes_4) -> {\n                recId_6 = __core__ifThenElse(\n                    __useopt__recId_2,\n                    () -> {\n                        recId_5\n                    },\n                    () -> {\n                        \"\"\n                    }\n                )();\n                recIdBytes_5 = __core__ifThenElse(\n                    __useopt__recIdBytes_2,\n                    () -> {\n                        recIdBytes_4\n                    },\n                    () -> {\n                        __helios__string__encode_utf8(recId_6)()\n                    }\n                )();\n                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_238)(false, (), true, recIdBytes_5);\n                recIdStr = __helios__bytearray__decode_utf8_safe(recIdBytes_5)();\n                __cond_42 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);\n                __core__ifThenElse(\n                    __helios__option[__helios__txinput]__none____is(__cond_42),\n                    () -> {\n                        (__lhs_0_79) -> {\n                            __helios__error(__helios__string____add(\"❌❌ 📎 input: delegated-data ref not found: \", recIdStr))\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_78) -> {\n                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_78);\n                            txin_2\n                        }\n                    }\n                )()(__cond_42)\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1 = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2) -> {\n        (self_239) -> {\n            (recIdBytes_6, __useopt__reqt_2, reqt_10) -> {\n                reqt_11 = __core__ifThenElse(\n                    __useopt__reqt_2,\n                    () -> {\n                        reqt_10\n                    },\n                    () -> {\n                        \"MUST have the input data record\"\n                    }\n                )();\n                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(self_239)(false, (), true, recIdBytes_6);\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupStart(reqt_11, true, true), recIdStr_1 = __helios__bytearray__decode_utf8_safe(recIdBytes_6)();\n                __cond_43 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);\n                __core__ifThenElse(\n                    __helios__option[__helios__txinput]__none____is(__cond_43),\n                    () -> {\n                        (__lhs_0_81) -> {\n                            __helios__error(__helios__string____add(\"❌❌ 📎 input: delegated-data record: not found: \", recIdStr_1))\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_80) -> {\n                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_80);\n                            __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add(\"✅ 📎 input: delegated-data record: ok: \", recIdStr_1)), txin_3)\n                        }\n                    }\n                )()(__cond_43))\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3 = (self_240) -> {\n        (__useopt__typeName, typeName_1, __useopt__id, id_4) -> {\n            typeName_2 = __core__ifThenElse(\n                __useopt__typeName,\n                () -> {\n                    typeName_1\n                },\n                () -> {\n                    \"\"\n                }\n            )();\n            id_5 = __core__ifThenElse(\n                __useopt__id,\n                () -> {\n                    id_4\n                },\n                () -> {\n                    #\n                }\n            )();\n            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_3(self_240)();\n            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                __helios__int____gt(__helios__bytearray__length(id_5), 0)\n            }, () -> {\n                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)\n            }), \"data predicate must have id or typeName\"), (txin_4) -> {\n                __core__ifThenElse(\n                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),\n                    () -> {\n                        data_275 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));\n                        __cond_44 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_275);\n                        __core__ifThenElse(\n                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_44),\n                            () -> {\n                                (__lhs_0_82) -> {\n                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_275));\n                                    __helios__bool__and(() -> {\n                                        __helios__bool__and(() -> {\n                                            true\n                                        }, () -> {\n                                            __helios__bool__or(() -> {\n                                                __helios__string____eq(typeName_2, \"\")\n                                            }, () -> {\n                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)\n                                            })\n                                        })\n                                    }, () -> {\n                                        __helios__bool__or(() -> {\n                                            __helios__bytearray____eq(id_5, #)\n                                        }, () -> {\n                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_5)\n                                        })\n                                    })\n                                }\n                            },\n                            () -> {\n                                (__35) -> {\n                                    false\n                                }\n                            }\n                        )()(__cond_44)\n                    },\n                    () -> {\n                        () -> {\n                            false\n                        }()\n                    }\n                )()\n            })\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2) -> {\n        (self_241) -> {\n            (newDataId, dataTypePurpose) -> {\n                __module__StellarHeliosHelpers__bREQTgroup(\"The new record MUST be saved in the Capo address\", true, true, () -> {\n                    dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2(self_241)(newDataId)));\n                    dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);\n                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the new record must match type-name in dgDataPolicy manifest\", false, (), false, (), false, ()), __cond_45 = dgDatum;\n                    __core__ifThenElse(\n                        __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_45),\n                        () -> {\n                            (__lhs_0_83) -> {\n                                data_276 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));\n                                recIdStr_2 = __helios__bytearray__decode_utf8_safe(newDataId)();\n                                __core__ifThenElse(\n                                    __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_276), newDataId),\n                                    () -> {\n                                        actualIdStr_1 = __helios__bytearray__decode_utf8_safe(__module__StellarHeliosHelpers__AnyData[]__id(data_276))();\n                                        __helios__error(__helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add(\"❌❌ 📎 outDD: wrong id: \", actualIdStr_1), \" (expected \"), recIdStr_2), \")\"))\n                                    },\n                                    () -> {\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_276), dataTypePurpose),\n                                                () -> {\n                                                    __helios__error(__helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add(\"❌❌ 📎 outDD: bad type: \", __module__StellarHeliosHelpers__AnyData[]__type(data_276)), \" (expected \"), dataTypePurpose), \")\"))\n                                                },\n                                                () -> {\n                                                    () -> {\n                                                        true\n                                                    }()\n                                                }\n                                            )()\n                                        }()\n                                    }\n                                )()\n                            }\n                        },\n                        () -> {\n                            (__36) -> {\n                                __helios__error(\"output not delegated data\")\n                            }\n                        }\n                    )()(__cond_45))\n                })\n            }\n        }\n    };\n    __helios__option[__helios__txoutput]__none____is = (data_277) -> {\n        __helios__common__enum_tag_equals(data_277, 1)\n    };\n    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3 = (self_242) -> {\n        (recId_7) -> {\n            recIdStr_3 = __helios__bytearray__decode_utf8_safe(recId_7)();\n            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_242), recId_7);\n            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_3(self_242)();\n            __cond_46 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {\n                __helios__bool__and(() -> {\n                    __helios__bool__and(() -> {\n                        true\n                    }, () -> {\n                        __helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1)\n                    })\n                }, () -> {\n                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_2))(\"output found!  ... at the right capoAddr? \")\n                })\n            });\n            __core__ifThenElse(\n                __helios__option[__helios__txoutput]__none____is(__cond_46),\n                () -> {\n                    (__lhs_0_85) -> {\n                        __helios__error(__helios__string____add(\"❌❌ 📎 delegated-data output: not found: \", recIdStr_3))\n                    }\n                },\n                () -> {\n                    (__lhs_0_84) -> {\n                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_84);\n                        __core__chooseUnit(__helios__print(__helios__string____add(\"✅ 📎 delegated-data output: found \", recIdStr_3)), txout_1)\n                    }\n                }\n            )()(__cond_46)\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {\n        (self_243) -> {\n            () -> {\n                charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_243);\n                __cond_47 = charter_1;\n                __core__ifThenElse(\n                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_47),\n                    () -> {\n                        (__lhs_0_91) -> {\n                            __core__chooseUnit(__helios__print(\"      -- needs charter, anywhere in the tx (already found as ref : )\"), self_243)\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_47),\n                            () -> {\n                                (__lhs_0_90) -> {\n                                    __core__chooseUnit(__helios__print(\"      -- needs charter, anywhere in the tx (already found as input : )\"), self_243)\n                                }\n                            },\n                            () -> {\n                                (__lhs_0_86) -> {\n                                    __lhs_0_87 = self_243;\n                                    mph_24 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_87);\n                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the charter to be available in the transaction (input or ref)\", false, (), false, (), false, ()), charterAc_3 = __helios__assetclass__new(mph_24, __helios__string__encode_utf8(\"charter\")());\n                                    hasCharter_2 = (txin_5) -> {\n                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)\n                                    };\n                                    __cond_48 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);\n                                    __core__ifThenElse(\n                                        __helios__option[__helios__txinput]__none____is(__cond_48),\n                                        () -> {\n                                            (__lhs_0_89) -> {\n                                                __core__chooseUnit(__helios__print(\"CapoCtx needsCharter(): no charter ref; must be in inputs...\"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_243)())\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_88) -> {\n                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_88);\n                                                __core__chooseUnit(__helios__print(\"    -- CapoCtx needsCharter(): found charter ref\"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);\n                                                __module__CapoHelpers__CapoCtx[]____new(mph_24, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))\n                                            }\n                                        }\n                                    )()(__cond_48))\n                                }\n                            }\n                        )()\n                    }\n                )()(__cond_47)\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_244) -> {\n        () -> {\n            charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_244);\n            __cond_49 = charter_2;\n            __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_49),\n                () -> {\n                    (__lhs_0_97) -> {\n                        __core__chooseUnit(__helios__print(\"      -- needs charter spent in inputs (already checked : )\"), self_244)\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_49),\n                        () -> {\n                            (__lhs_0_96) -> {\n                                __helios__error(\"CapoCtx.withCharterInput(): charter is from ref!\")\n                            }\n                        },\n                        () -> {\n                            (__lhs_0_92) -> {\n                                __lhs_0_93 = self_244;\n                                mph_25 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_93);\n                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the charter to be spent in the inputs\", false, (), false, (), false, ()), charterAc_4 = __helios__assetclass__new(mph_25, __helios__string__encode_utf8(\"charter\")());\n                                hasCharter_3 = (txin_6) -> {\n                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)\n                                };\n                                __core__chooseUnit(__helios__print(\"    -- CapoCtx finding charter in inputs\"), (charterUtxo_3) -> {\n                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);\n                                    __module__CapoHelpers__CapoCtx[]____new(mph_25, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))\n                                }(__cond_50 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);\n                                __core__ifThenElse(\n                                    __helios__option[__helios__txinput]__some____is(__cond_50),\n                                    () -> {\n                                        (__lhs_0_95) -> {\n                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_95);\n                                            ch_3\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_94) -> {\n                                            __helios__error(\"Missing required charter input\")\n                                        }\n                                    }\n                                )()(__cond_50))))\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_49)\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_245) -> {\n        () -> {\n            charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_245);\n            __cond_51 = charter_3;\n            __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_51),\n                () -> {\n                    (__lhs_0_101) -> {\n                        __core__chooseUnit(__helios__print(\"      -- needs charter ref (already checked : )\"), self_245)\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_51),\n                        () -> {\n                            (__lhs_0_100) -> {\n                                __helios__error(\"CapoCtx.withCharterRef(): charter is from inputs!\")\n                            }\n                        },\n                        () -> {\n                            (__lhs_0_98) -> {\n                                __lhs_0_99 = self_245;\n                                mph_26 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_99);\n                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the charter to be referenced in the txn, but unspent\", false, (), false, (), false, ()), utxo_8 = __module__CapoHelpers__getRefCharterUtxo(mph_26);\n                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_8))), 0);\n                                __module__CapoHelpers__CapoCtx[]____new(mph_26, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_8)))\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_51)\n        }\n    };\n    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_246) -> {\n        (fn_22, z_2) -> {\n            __helios__common__fold(self_246, (z_3, pair_79) -> {\n                fn_22(z_3, __helios__string__from_data(__core__fstPair(pair_79)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_79)))\n            }, z_2)\n        }\n    };\n    __helios__option[__helios__bool]__unwrap = (self_247) -> {\n        () -> {\n            __helios__bool__from_data(__helios__common__enum_field_0(self_247))\n        }\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_248) -> {\n        (fn_23) -> {\n            fn_24 = (pair_80) -> {\n                fn_23(__helios__string__from_data(__core__fstPair(pair_80)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_80)))\n            };\n            __helios__common__all(self_248, fn_24)\n        }\n    };\n    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_249) -> {\n        (fn_25) -> {\n            __helios__common__all(self_249, (item_12) -> {\n                fn_25(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))\n            })\n        }\n    };\n    __helios__option[__helios__bool]__some____is = (data_278) -> {\n        __helios__common__enum_tag_equals(data_278, 0)\n    };\n    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_250) -> {\n        () -> {\n            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_9(self_250)();\n            mph_27 = __module__CapoHelpers__CapoCtx[]__mph(self_250);\n            __lhs_0_102 = __helios__common__assert_constr_index(charterData_2, 0);\n            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_102);\n            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_102);\n            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_102);\n            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_102);\n            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_102);\n            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);\n            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"   -- only the spend delegate calls this function\", false, (), false, (), false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(self_250)(false, ());\n            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"govDelegate MAY contribute to settings validation\", false, (), false, (), false, ()), (govDelegateMaybeValidating) -> {\n                checkOneInvariant = (oneDgt) -> {\n                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"invariant must validate settings\", false, (), false, (), false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_27, true))())\n                };\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"spend invariants must validate settings\", false, (), false, (), false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"mint invariants must validate settings\", false, (), false, (), false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"dgDataControllers must validate settings\", false, (), false, (), false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_22, entry_1) -> {\n                    __cond_53 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);\n                    __core__ifThenElse(\n                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_53),\n                        () -> {\n                            (__lhs_0_105) -> {\n                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_105);\n                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_27, true))()\n                            }\n                        },\n                        () -> {\n                            (__37) -> {\n                                __core__chooseUnit(__helios__print(__helios__string____add(\"  -- ignoring manifest entry (not a data policy): \", key_22)), true)\n                            }\n                        }\n                    )()(__cond_53)\n                });\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"named delegates must validate settings\", false, (), false, (), false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  - each other-named-delegate must validate settings\", false, (), false, (), false, ()), (ok, key_23, dgt) -> {\n                    __core__chooseUnit(__helios__print(__helios__string____add(\"  - other-named-delegate: \", key_23)), __core__chooseUnit(__helios__print(\"\n\"), __helios__bool__and(() -> {\n                        ok\n                    }, () -> {\n                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_27, true))()\n                    })))\n                }), true);\n                __helios__bool__and(() -> {\n                    __helios__bool__and(() -> {\n                        __helios__bool__and(() -> {\n                            __helios__bool__and(() -> {\n                                __helios__bool__and(() -> {\n                                    dgDataPoliciesAreValidating\n                                }, () -> {\n                                    spendDelegateIsValidating\n                                })\n                            }, () -> {\n                                govDelegateMaybeValidating\n                            })\n                        }, () -> {\n                            spendInvariantsAreValidating\n                        })\n                    }, () -> {\n                        mintInvariantsAreValidating\n                    })\n                }, () -> {\n                    namedDelegatesAreValidating\n                })))))\n            }(__cond_52 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_27, false);\n            __core__ifThenElse(\n                __helios__option[__helios__bool]__some____is(__cond_52),\n                () -> {\n                    (__lhs_0_104) -> {\n                        true\n                    }\n                },\n                () -> {\n                    (__lhs_0_103) -> {\n                        __core__chooseUnit(__helios__print(\"  -- govAuthority isn't a script-based validator; doesn't validate new settings\"), true)\n                    }\n                }\n            )()(__cond_52)))))\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_251) -> {\n        (activity_7) -> {\n            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                true\n            }, () -> {\n                __module__CapoHelpers__CapoCtx[]____eq(self_251, self_251)\n            }), \"prevent unused var\"), __cond_54 = activity_7;\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_54),\n                () -> {\n                    (__lhs_0_112) -> {\n                        __helios__error(\"the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo\")\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_54),\n                        () -> {\n                            (__lhs_0_111) -> {\n                                __helios__error(\"the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo\")\n                            }\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_54),\n                                () -> {\n                                    (__lhs_0_110) -> {\n                                        __core__chooseUnit(__helios__print(\"-- Updating the Capo manifest uses the spend delegate\"), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_54),\n                                        () -> {\n                                            (__lhs_0_109) -> {\n                                                __core__chooseUnit(__helios__print(\"-- Queuing a pending dgt-change uses the mint delegate\"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_54),\n                                                () -> {\n                                                    (__lhs_0_108) -> {\n                                                        __core__chooseUnit(__helios__print(\"-- Removing a pending dgt-change entry uses the spend delegate\"), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_54),\n                                                        () -> {\n                                                            (__lhs_0_107) -> {\n                                                                __core__chooseUnit(__helios__print(\"-- Committing pending dgt-changes uses both the mint and spend delegates\"), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_106) -> {\n                                                                __core__chooseUnit(__helios__assert(false, \"Obsolete code path\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Creating a new delegate (deprecated path)...\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"deprecate use of CLA::CreatingDelegate\"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())))\n                                                            }\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()(__cond_54))\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__orFail = (self_252) -> {\n        () -> {\n            __lhs_0_113 = self_252;\n            true\n        }\n    };\n    __module__CapoHelpers__mkCapoCtx = (mph_28) -> {\n        __module__CapoHelpers__CapoCtx[]____new(mph_28, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())\n    };\n    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo, __useopt__reqt_3, reqt_12) -> {\n        reqt_13 = __core__ifThenElse(\n            __useopt__reqt_3,\n            () -> {\n                reqt_12\n            },\n            () -> {\n                \"the indicated seed UTXO must be spent\"\n            }\n        )();\n        __module__StellarHeliosHelpers__bREQTgroup(reqt_13, false, true, () -> {\n            __core__chooseUnit(__core__ifThenElse(\n                __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_6) -> {\n                    __helios__txoutputid____eq(__helios__txinput__output_id(input_6), seedUtxo)\n                })),\n                () -> {\n                    __core__chooseUnit(__helios__print(__helios__string____add(\"  -- seedUtxo: \", __helios__txoutputid__show(seedUtxo)())), __helios__error(\"missing expected seed input for minting\"))\n                },\n                () -> {\n                    () -> {\n                        ()\n                    }()\n                }\n            )(), __core__chooseUnit(__helios__print(__helios__string____add(\"✅ ok: seedUtxo: \", __helios__txoutputid__show(seedUtxo)())), true))\n        })\n    };\n    __module__CapoMintHelpers__noOtherActivitiesSupported = (__38) -> {\n        __core__chooseUnit(__helios__print(\"yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...\n\"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(\"   -- note: for other cases, a context-specific check via validateUutMinting's (\n\", \"  ...\n  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)\n\"), \") option can be used to steer around this failure.\n\")), __core__chooseUnit(__helios__assert(false, \"unexpected delegate activity\"), false)))\n    };\n    __helios__option[__helios__data]__none____is = (data_279) -> {\n        __helios__common__enum_tag_equals(data_279, 1)\n    };\n    __helios__option[__helios__data]__some__some = (self_253) -> {\n        __helios__data__from_data(__helios__common__enum_field_0(self_253))\n    };\n    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_254) -> {\n        (key_24) -> {\n            __helios__common__map_get(self_254, __helios__scriptpurpose____to_data(key_24), (x_8) -> {\n                __core__constrData(0, __helios__common__list_1(x_8))\n            }, () -> {\n                __core__constrData(1, __helios__common__list_0)\n            })\n        }\n    };\n    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_29, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {\n        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(\n            __useopt__extraMintDelegateRedeemerCheck,\n            () -> {\n                extraMintDelegateRedeemerCheck\n            },\n            () -> {\n                true\n            }\n        )();\n        checkMintDgtActivity_1 = __core__ifThenElse(\n            __useopt__checkMintDgtActivity,\n            () -> {\n                checkMintDgtActivity\n            },\n            () -> {\n                __module__CapoMintHelpers__noOtherActivitiesSupported\n            }\n        )();\n        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_29);\n        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the charter's mint-delegate to authorize this mint activity\", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add(\"  -- finding input dgTkn: \", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {\n            __core__chooseUnit(__helios__print(\"     ✅ ➡️  💁found dgTkn ^\"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {\n                __cond_56 = purpose_1;\n                __core__ifThenElse(\n                    __helios__scriptpurpose__spending____is(__cond_56),\n                    () -> {\n                        (sp_1) -> {\n                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)\n                        }\n                    },\n                    () -> {\n                        (__39) -> {\n                            false\n                        }\n                    }\n                )()(__cond_56)\n            });\n            err = __helios__string____add(__helios__string____add(\"dgTkn \", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), \" not being spent as expected\");\n            (maybeCheckedMintDelegateAuthority) -> {\n                delegateDidAuthorize = true;\n                __helios__bool__and(() -> {\n                    delegateDidAuthorize\n                }, () -> {\n                    maybeCheckedMintDelegateAuthority\n                })\n            }(__cond_57 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);\n            __core__ifThenElse(\n                __helios__option[__helios__data]__none____is(__cond_57),\n                () -> {\n                    (__lhs_0_121) -> {\n                        __helios__error(err)\n                    }\n                },\n                () -> {\n                    (__lhs_0_116) -> {\n                        x_10 = __helios__option[__helios__data]__some__some(__lhs_0_116);\n                        activity_8 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(x_10);\n                        __cond_58 = activity_8;\n                        __core__ifThenElse(\n                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_58),\n                            () -> {\n                                (__lhs_0_117) -> {\n                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_117);\n                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"VERIFY we ---------------- don't need the funny redeemer-check skipping\"), __core__chooseUnit(__core__ifThenElse(\n                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),\n                                        () -> {\n                                            __core__chooseUnit(__helios__print(\" vvv wherever it is, probably best it uses the checkMintDgtActivity option\"), __helios__error(\"where is extraMintDelegateRedeemerCheck=false really needed?\"))\n                                        },\n                                        () -> {\n                                            () -> {\n                                                ()\n                                            }()\n                                        }\n                                    )(), __cond_59 = DLA;\n                                    __core__ifThenElse(\n                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_59),\n                                        () -> {\n                                            (__lhs_0_120) -> {\n                                                __core__chooseUnit(__helios__print(\"  -- ok, dgTkn spent\n\"), true)\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_59),\n                                                () -> {\n                                                    (__lhs_0_119) -> {\n                                                        __helios__error(\"DLA::Retiring can't mint!\")\n                                                    }\n                                                },\n                                                () -> {\n                                                    (__lhs_0_118) -> {\n                                                        __helios__error(\"DLA::ValidatingSettings can't mint!\")\n                                                    }\n                                                }\n                                            )()\n                                        }\n                                    )()(__cond_59)))\n                                }\n                            },\n                            () -> {\n                                (__40) -> {\n                                    checkMintDgtActivity_1(activity_8)\n                                }\n                            }\n                        )()(__cond_58)\n                    }\n                }\n            )()(__cond_57)))\n        }(__cond_55 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_10) -> {\n            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(authzAc), 0)\n        });\n        __core__ifThenElse(\n            __helios__option[__helios__txinput]__some____is(__cond_55),\n            () -> {\n                (__lhs_0_115) -> {\n                    x_9 = __helios__option[__helios__txinput]__some__some(__lhs_0_115);\n                    __helios__txinput__output_id(x_9)\n                }\n            },\n            () -> {\n                (__lhs_0_114) -> {\n                    __helios__error(__helios__string____add(\"  ❌❌ missing dgTkn \", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))\n                }\n            }\n        )()(__cond_55))))\n    };\n    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {\n        seedTxId = __helios__txoutputid__tx_id(seed_1);\n        seedIdx = __helios__txoutputid__index(seed_1);\n        idxBytes = __helios__int__serialize(seedIdx)();\n        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);\n        txoInfo = __core__ifThenElse(\n            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),\n            () -> {\n                __core__chooseUnit(__helios__assert(false, \"cbor(txoId) len > 9 !!\"), idxBytes)\n            },\n            () -> {\n                () -> {\n                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8(\"@\")()), idxBytes)\n                }()\n            }\n        )();\n        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);\n        mhs = __helios__bytearray__show(miniHash)();\n        (p) -> {\n            __helios__string____add(__helios__string____add(p, \"-\"), mhs)\n        }\n    };\n    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {\n        __helios__bytearray____lt(k1, k2)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_255) -> {\n        (fn_26) -> {\n            recurse_95 = (recurse_94, map_33) -> {\n                __core__chooseList(map_33, () -> {\n                    ()\n                }, () -> {\n                    head_95 = __core__headList__safe(map_33);\n                    __core__chooseUnit(fn_26(__helios__bytearray__from_data(__core__fstPair(head_95)), __helios__int__from_data(__core__sndPair(head_95))), recurse_94(recurse_94, __core__tailList__safe(map_33)))\n                })()\n            };\n            recurse_95(recurse_95, self_255)\n        }\n    };\n    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_256) -> {\n        (fn_27) -> {\n            __helios__common__filter_map(self_256, (pair_81) -> {\n                fn_27(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_81)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_81)))\n            })\n        }\n    };\n    __helios__list[__helios__string]__length = __helios__common__length;\n    __helios__list[__helios__string]__head = (self_257) -> {\n        __helios__string__from_data(__core__headList(self_257))\n    };\n    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_258) -> {\n        (fn_28) -> {\n            recurse_97 = (recurse_96, map_34) -> {\n                __core__chooseList(map_34, () -> {\n                    ()\n                }, () -> {\n                    head_96 = __core__headList__safe(map_34);\n                    __core__chooseUnit(fn_28(__helios__mintingpolicyhash__from_data(__core__fstPair(head_96)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_96))), recurse_96(recurse_96, __core__tailList__safe(map_34)))\n                })()\n            };\n            recurse_97(recurse_97, self_258)\n        }\n    };\n    __helios__option[__helios__int]__none____is = (data_280) -> {\n        __helios__common__enum_tag_equals(data_280, 1)\n    };\n    __helios__option[__helios__int]__some__some = (self_259) -> {\n        __helios__int__from_data(__helios__common__enum_field_0(self_259))\n    };\n    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_260) -> {\n        (key_25) -> {\n            __helios__common__map_get(self_260, __helios__bytearray____to_data(key_25), (x_11) -> {\n                __core__constrData(0, __helios__common__list_1(x_11))\n            }, () -> {\n                __core__constrData(1, __helios__common__list_0)\n            })\n        }\n    };\n    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_261) -> {\n        (key_26) -> {\n            key_27 = __helios__mintingpolicyhash____to_data(key_26);\n            recurse_99 = (recurse_98, self_262) -> {\n                __core__chooseList(self_262, () -> {\n                    self_262\n                }, () -> {\n                    head_97 = __core__headList__safe(self_262);\n                    tail_5 = __core__tailList__safe(self_262);\n                    __core__ifThenElse(\n                        __core__equalsData(key_27, __core__fstPair(head_97)),\n                        () -> {\n                            recurse_98(recurse_98, tail_5)\n                        },\n                        () -> {\n                            __core__mkCons(head_97, recurse_98(recurse_98, tail_5))\n                        }\n                    )()\n                })()\n            };\n            recurse_99(recurse_99, self_261)\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;\n    __helios__map[__helios__bytearray@__helios__int]____eq = (self_263, other_4) -> {\n        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_263), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))\n    };\n    __helios__map[__helios__bytearray@__helios__int]__sort = (self_264) -> {\n        (comp_4) -> {\n            __helios__common__sort(self_264, (a_30, b_27) -> {\n                comp_4(__helios__bytearray__from_data(__core__fstPair(a_30)), __helios__int__from_data(__core__sndPair(a_30)), __helios__bytearray__from_data(__core__fstPair(b_27)), __helios__int__from_data(__core__sndPair(b_27)))\n            })\n        }\n    };\n    __helios__value__sum[__helios__value] = (self_265) -> {\n        recurse_101 = (recurse_100, lst_25) -> {\n            __core__chooseList(lst_25, () -> {\n                __helios__value__ZERO\n            }, () -> {\n                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_25))), recurse_100(recurse_100, __core__tailList__safe(lst_25)))\n            })()\n        };\n        recurse_101(recurse_101, self_265)\n    };\n    __helios__list[__helios__string]__map[__helios__value] = (self_266) -> {\n        (fn_29) -> {\n            __helios__common__map(self_266, (item_13) -> {\n                __helios__value____to_data(fn_29(__helios__string__from_data(item_13)))\n            }, __core__mkNilData(()))\n        }\n    };\n    __helios__list[__helios__string]__map[__helios__string] = (self_267) -> {\n        (fn_30) -> {\n            __helios__common__map(self_267, (item_14) -> {\n                __helios__string____to_data(fn_30(__helios__string__from_data(item_14)))\n            }, __core__mkNilData(()))\n        }\n    };\n    __module__CapoMintHelpers__validateUutMinting = (mph_30, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {\n        mkTokenName_1 = __core__ifThenElse(\n            __useopt__mkTokenName,\n            () -> {\n                mkTokenName\n            },\n            () -> {\n                __module__CapoMintHelpers__mkUutTnFactory(seed_2)\n            }\n        )();\n        bootstrapCharter_1 = __core__ifThenElse(\n            __useopt__bootstrapCharter,\n            () -> {\n                bootstrapCharter\n            },\n            () -> {\n                __helios__value__ZERO\n            }\n        )();\n        otherMintedValue_1 = __core__ifThenElse(\n            __useopt__otherMintedValue,\n            () -> {\n                otherMintedValue\n            },\n            () -> {\n                __helios__value__ZERO\n            }\n        )();\n        needsMintDelegateApproval_1 = __core__ifThenElse(\n            __useopt__needsMintDelegateApproval,\n            () -> {\n                needsMintDelegateApproval\n            },\n            () -> {\n                true\n            }\n        )();\n        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(\n            __useopt__extraMintDelegateRedeemerCheck_1,\n            () -> {\n                extraMintDelegateRedeemerCheck_2\n            },\n            () -> {\n                true\n            }\n        )();\n        checkMintDgtActivity_3 = __core__ifThenElse(\n            __useopt__checkMintDgtActivity_1,\n            () -> {\n                checkMintDgtActivity_2\n            },\n            () -> {\n                __module__CapoMintHelpers__noOtherActivitiesSupported\n            }\n        )();\n        __module__StellarHeliosHelpers__bREQTgroup(\"checks that the UUTs are minted correctly\", true, true, () -> {\n            __core__chooseUnit(__helios__print(__helios__string____add(\"-- uut purposes: \", __helios__list[__helios__string]__join(purposes)(true, \", \"))), isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());\n            delegateApproval = __core__ifThenElse(\n                isBootstrapping,\n                () -> {\n                    __core__chooseUnit(__helios__print(\"  -- bootstrapping; no delegate approval required\"), true)\n                },\n                () -> {\n                    () -> {\n                        __core__chooseUnit(__helios__print(\"  -- not bootstrapping; must honor the mintDelegate's authority\"), __lhs_0_122 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_30, false, ()), 0);\n                        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_122);\n                        __core__ifThenElse(\n                            needsMintDelegateApproval_1,\n                            () -> {\n                                __core__chooseUnit(__helios__print(\"  -- checking mintDelegate's authority\"), __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_30, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3))\n                            },\n                            () -> {\n                                () -> {\n                                    true\n                                }()\n                            }\n                        )())\n                    }()\n                }\n            )();\n            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);\n            tokenNames = __helios__list[__helios__string]__map[__helios__string](purposes)(mkTokenName_1);\n            expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](tokenNames)((tn_2) -> {\n                __module__StellarHeliosHelpers__mkTv(mph_30, true, tn_2, false, (), false, ())\n            })));\n            __core__chooseUnit(__core__ifThenElse(\n                __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_30)),\n                () -> {\n                    mphStr = __helios__mintingpolicyhash__show(mph_30)();\n                    valStr = __helios__value__show(valueMinted)(false, ());\n                    __core__chooseUnit(__helios__print(__helios__string____add(\"  -- no mint from our policy \", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print(\"^^  value minted\"), __helios__error(\"❌❌ validateUutMinting(): no mint from our policy\"))))\n                },\n                () -> {\n                    () -> {\n                        ()\n                    }()\n                }\n            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_30))(__module__CapoMintHelpers__sortPolicyValuesPredictably);\n            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_4, i_12) -> {\n                tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_4)();\n                __helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"    ℹ️ 🐞 expected: \", __helios__int__show(i_12)()), \"x \"), tnStr_1))\n            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_30);\n            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);\n            __core__chooseUnit(__core__ifThenElse(\n                true,\n                () -> {\n                    __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_3, i_11) -> {\n                        tnStr = __helios__bytearray__decode_utf8_safe(tn_3)();\n                        __helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"    ℹ️ 🐞   actual: \", __helios__int__show(i_11)()), \"x \"), tnStr))\n                    }), filteredOtherMint = __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_28, __41) -> {\n                        __helios__mintingpolicyhash____neq(b_28, mph_30)\n                    }));\n                    __core__ifThenElse(\n                        __helios__bool____not(__helios__value__is_zero(filteredOtherMint)()),\n                        () -> {\n                            __core__chooseUnit(__helios__print(\"other policy values minted: \n\"), __helios__print(__helios__value__show(__helios__value__get_assets(filteredOtherMint)())(false, ())))\n                        },\n                        () -> {\n                            () -> {\n                                ()\n                            }()\n                        }\n                    )())\n                },\n                () -> {\n                    () -> {\n                        ()\n                    }()\n                }\n            )(), thisPolicyMintOK = __module__StellarHeliosHelpers__bREQTgroup(\"Ensures the mint for this policy-id is exactly the expected value\", true, true, () -> {\n                __core__chooseUnit(__helios__assert(__helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted), \"❌❌ validateUutMinting(): mismatch in UUT mint\"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2, false, ()), \"❌❌ validateUutMinting(): no seed\"), __core__chooseUnit(__helios__print(\"✅ ok: this-policy mint value matches\"), true)))\n            });\n            otherPoliciesMintOk = __core__ifThenElse(\n                __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),\n                () -> {\n                    true\n                },\n                () -> {\n                    () -> {\n                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... with an additional mint-value indicated\", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add(\"  -- other-minted-value: \", __helios__value__show(otherMintedValue_1)(false, ()))), remainingExpectedMint = __core__ifThenElse(\n                            __helios__value__contains_policy(expectedValue)(mph_30),\n                            () -> {\n                                __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_30))\n                            },\n                            () -> {\n                                () -> {\n                                    expectedValue\n                                }()\n                            }\n                        )();\n                        __core__ifThenElse(\n                            __helios__value__is_zero(remainingExpectedMint)(),\n                            () -> {\n                                true\n                            },\n                            () -> {\n                                () -> {\n                                    __module__StellarHeliosHelpers__bREQTgroup(\"...with other-policy values expected: \", false, true, () -> {\n                                        __core__chooseUnit(__helios__print(__helios__string____add(\"  -- expecting other-mint value: \", __helios__value__show(remainingExpectedMint)(false, ()))), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"It should mint exactly the indicated token names\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Doesn't constrain any mentioned policy's minting of any other tokens\", false, (), false, (), false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {\n                                            mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);\n                                            __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_3, expectedCount) -> {\n                                                __core__ifThenElse(\n                                                    __helios__bool____not(__cond_60 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_3);\n                                                    __core__ifThenElse(\n                                                        __helios__option[__helios__int]__none____is(__cond_60),\n                                                        () -> {\n                                                            (__lhs_0_124) -> {\n                                                                false\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_123) -> {\n                                                                actualCount = __helios__option[__helios__int]__some__some(__lhs_0_123);\n                                                                __helios__int____eq(actualCount, expectedCount)\n                                                            }\n                                                        }\n                                                    )()(__cond_60)),\n                                                    () -> {\n                                                        tnString = __helios__bytearray__decode_utf8_safe(tokenName_3)();\n                                                        __helios__error(__helios__string____add(__helios__string____add(__helios__string____add(\"❌❌ validateUutMinting(): wrong mint for \", __helios__mintingpolicyhash__show(otherMph)()), \":\"), tnString))\n                                                    },\n                                                    () -> {\n                                                        () -> {\n                                                            ()\n                                                        }()\n                                                    }\n                                                )()\n                                            })\n                                        }), true))))\n                                    })\n                                }()\n                            }\n                        )()))\n                    }()\n                }\n            )();\n            __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)(\"  -- other-expected-mints ok? \"), \"unreachable exception: otherPoliciesMintOk\"), __core__chooseUnit(__core__ifThenElse(\n                __helios__int____gt(__helios__list[__helios__string]__length(purposes), 1),\n                () -> {\n                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"✅ ok: minted uuts: {\", __helios__list[__helios__string]__join(purposes)(true, \", \")), \"}\"), mkTokenName_1(\"\")))\n                },\n                () -> {\n                    () -> {\n                        __helios__print(__helios__string____add(\"✅ ok: minted uut: \", __helios__list[__helios__string]__head(tokenNames)))\n                    }()\n                }\n            )(), __helios__bool__and(() -> {\n                __helios__bool__and(() -> {\n                    delegateApproval\n                }, () -> {\n                    thisPolicyMintOK\n                })\n            }, () -> {\n                otherPoliciesMintOk\n            })))))))\n        })\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__is_valid_data = (data_281) -> {\n        __core__chooseData(data_281, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_165 = __core__unListData__safe(data_281);\n            __core__chooseList(fields_165, () -> {\n                false\n            }, () -> {\n                head_98 = __core__headList__safe(fields_165);\n                __core__ifThenElse(\n                    __helios__real__is_valid_data(head_98),\n                    () -> {\n                        fields_166 = __core__tailList__safe(fields_165);\n                        __core__chooseList(fields_166, () -> {\n                            false\n                        }, () -> {\n                            head_99 = __core__headList__safe(fields_166);\n                            __core__ifThenElse(\n                                __helios__duration__is_valid_data(head_99),\n                                () -> {\n                                    fields_167 = __core__tailList__safe(fields_166);\n                                    __core__chooseList(fields_167, () -> {\n                                        false\n                                    }, () -> {\n                                        head_100 = __core__headList__safe(fields_167);\n                                        __core__ifThenElse(\n                                            __helios__real__is_valid_data(head_100),\n                                            () -> {\n                                                fields_168 = __core__tailList__safe(fields_167);\n                                                __core__chooseList(fields_168, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_101 = __core__headList__safe(fields_168);\n                                                    __core__ifThenElse(\n                                                        __helios__real__is_valid_data(head_101),\n                                                        () -> {\n                                                            fields_169 = __core__tailList__safe(fields_168);\n                                                            __core__chooseList(fields_169, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_102 = __core__headList__safe(fields_169);\n                                                                __core__ifThenElse(\n                                                                    __helios__real__is_valid_data(head_102),\n                                                                    () -> {\n                                                                        fields_170 = __core__tailList__safe(fields_169);\n                                                                        __core__chooseList(fields_170, () -> {\n                                                                            false\n                                                                        }, () -> {\n                                                                            head_103 = __core__headList__safe(fields_170);\n                                                                            __core__ifThenElse(\n                                                                                __helios__real__is_valid_data(head_103),\n                                                                                () -> {\n                                                                                    fields_171 = __core__tailList__safe(fields_170);\n                                                                                    __core__chooseList(fields_171, () -> {\n                                                                                        false\n                                                                                    }, () -> {\n                                                                                        head_104 = __core__headList__safe(fields_171);\n                                                                                        __core__ifThenElse(\n                                                                                            __helios__real__is_valid_data(head_104),\n                                                                                            () -> {\n                                                                                                fields_172 = __core__tailList__safe(fields_171);\n                                                                                                __core__chooseList(fields_172, () -> {\n                                                                                                    false\n                                                                                                }, () -> {\n                                                                                                    head_105 = __core__headList__safe(fields_172);\n                                                                                                    __core__ifThenElse(\n                                                                                                        __helios__real__is_valid_data(head_105),\n                                                                                                        () -> {\n                                                                                                            fields_173 = __core__tailList__safe(fields_172);\n                                                                                                            __core__chooseList(fields_173, () -> {\n                                                                                                                false\n                                                                                                            }, () -> {\n                                                                                                                head_106 = __core__headList__safe(fields_173);\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __helios__real__is_valid_data(head_106),\n                                                                                                                    () -> {\n                                                                                                                        fields_174 = __core__tailList__safe(fields_173);\n                                                                                                                        __core__chooseList(fields_174, () -> {\n                                                                                                                            false\n                                                                                                                        }, () -> {\n                                                                                                                            head_107 = __core__headList__safe(fields_174);\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __helios__real__is_valid_data(head_107),\n                                                                                                                                () -> {\n                                                                                                                                    fields_175 = __core__tailList__safe(fields_174);\n                                                                                                                                    __core__chooseList(fields_175, true, false)\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    false\n                                                                                                                                }\n                                                                                                                            )()\n                                                                                                                        })()\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        false\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            })()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )()\n                                                                                                })()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    })()\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        })()\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]____eq = __helios__struct____eq;\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__from_data = (data_282) -> {\n        ignore_18 = __core__ifThenElse(\n            __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__is_valid_data(data_282),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid DynamicSaleV1Settings data\", ())\n            }\n        )();\n        __core__unListData(data_282)\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]____to_data = __helios__struct____to_data;\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__targetPrice = (self_268) -> {\n        __helios__real__from_data(__helios__common__struct_field_0(self_268))\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__targetedSellingTime = (self_269) -> {\n        __helios__duration__from_data(__helios__common__struct_field_1(self_269))\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__minPrice = (self_270) -> {\n        __helios__real__from_data(__helios__common__struct_field_2(self_270))\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__maxPrice = (self_271) -> {\n        __helios__real__from_data(__helios__common__struct_field_3(self_271))\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountFloorPoint = (self_272) -> {\n        __helios__real__from_data(__helios__common__struct_field_4(self_272))\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountWhenSlow = (self_273) -> {\n        __helios__real__from_data(__helios__common__struct_field_5(self_273))\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingExpansionWhenFast = (self_274) -> {\n        __helios__real__from_data(__helios__common__struct_field_6(self_274))\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__dynaPaceFasterSaleWeight = (self_275) -> {\n        __helios__real__from_data(__helios__common__struct_field_7(self_275))\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__dynaPaceIdleDecayRate = (self_276) -> {\n        __helios__real__from_data(__helios__common__struct_field_8(self_276))\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__pricingWeightDynaPace = (self_277) -> {\n        __helios__real__from_data(__helios__common__struct_field_9(self_277))\n    };\n    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__validateCreatedDetails = (self_278) -> {\n        () -> {\n            __core__chooseUnit(__helios__assert(__helios__real____gt(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountFloorPoint(self_278), 50000), \"floor point too low\"), __core__chooseUnit(__helios__assert(__helios__real____lt(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountFloorPoint(self_278), 500000), \"floor point too high\"), __core__chooseUnit(__helios__assert(__helios__real____geq(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountWhenSlow(self_278), 0), \"negative discount\"), __core__chooseUnit(__helios__assert(__helios__real____lt(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountWhenSlow(self_278), 1000000), \"discount too high\"), __core__chooseUnit(__helios__assert(__helios__real____gt(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingExpansionWhenFast(self_278), 50000), \"expansion too low\"), __core__chooseUnit(__helios__assert(__helios__real____lt(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingExpansionWhenFast(self_278), 10000000), \"expansion too high\"), __core__chooseUnit(__helios__assert(__helios__real____geq(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__dynaPaceFasterSaleWeight(self_278), 0), \"faster weight negative\"), __core__chooseUnit(__helios__assert(__helios__real____lt(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__dynaPaceFasterSaleWeight(self_278), 2000000), \"faster weight way too high\"), __core__chooseUnit(__helios__assert(__helios__real____geq(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__dynaPaceIdleDecayRate(self_278), 0), \"negative decay rate\"), __core__chooseUnit(__helios__assert(__helios__real____lt(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__dynaPaceIdleDecayRate(self_278), 2000000), \"decay rate too high\"), __core__chooseUnit(__helios__assert(__helios__real____geq(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__pricingWeightDynaPace(self_278), 0), \"dyna pace weight negative\"), __core__chooseUnit(__helios__assert(__helios__real____lt1(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__pricingWeightDynaPace(self_278), 15), \"dyna pace weight way too high\"), true))))))))))))\n        }\n    };\n    __module__SaleProgressDetails__SaleProgressDetailsV1[]__is_valid_data = (data_283) -> {\n        __core__chooseData(data_283, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_176 = __core__unListData__safe(data_283);\n            __core__chooseList(fields_176, () -> {\n                false\n            }, () -> {\n                head_108 = __core__headList__safe(fields_176);\n                __core__ifThenElse(\n                    __helios__time__is_valid_data(head_108),\n                    () -> {\n                        fields_177 = __core__tailList__safe(fields_176);\n                        __core__chooseList(fields_177, () -> {\n                            false\n                        }, () -> {\n                            head_109 = __core__headList__safe(fields_177);\n                            __core__ifThenElse(\n                                __helios__time__is_valid_data(head_109),\n                                () -> {\n                                    fields_178 = __core__tailList__safe(fields_177);\n                                    __core__chooseList(fields_178, () -> {\n                                        false\n                                    }, () -> {\n                                        head_110 = __core__headList__safe(fields_178);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_110),\n                                            () -> {\n                                                fields_179 = __core__tailList__safe(fields_178);\n                                                __core__chooseList(fields_179, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_111 = __core__headList__safe(fields_179);\n                                                    __core__ifThenElse(\n                                                        __helios__int__is_valid_data(head_111),\n                                                        () -> {\n                                                            fields_180 = __core__tailList__safe(fields_179);\n                                                            __core__chooseList(fields_180, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__SaleProgressDetails__SaleProgressDetailsV1[]__from_data = (data_284) -> {\n        ignore_19 = __core__ifThenElse(\n            __module__SaleProgressDetails__SaleProgressDetailsV1[]__is_valid_data(data_284),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid SaleProgressDetailsV1 data\", ())\n            }\n        )();\n        __core__unListData(data_284)\n    };\n    __module__SaleProgressDetails__SaleProgressDetailsV1[]____to_data = __helios__struct____to_data;\n    __module__SaleProgressDetails__SaleProgressDetailsV1[]__lastPurchaseAt = (self_279) -> {\n        __helios__time__from_data(__helios__common__struct_field_0(self_279))\n    };\n    __module__SaleProgressDetails__SaleProgressDetailsV1[]__prevPurchaseAt = (self_280) -> {\n        __helios__time__from_data(__helios__common__struct_field_1(self_280))\n    };\n    __module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitCount = (self_281) -> {\n        __helios__int__from_data(__helios__common__struct_field_2(self_281))\n    };\n    __module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitsSold = (self_282) -> {\n        __helios__int__from_data(__helios__common__struct_field_3(self_282))\n    };\n    __module__SaleProgressDetails__SaleProgressDetailsV1[]____new = (lastPurchaseAt, prevPurchaseAt, chunkUnitCount, chunkUnitsSold) -> {\n        __core__mkCons(__helios__time____to_data(lastPurchaseAt), __core__mkCons(__helios__time____to_data(prevPurchaseAt), __core__mkCons(__helios__int____to_data(chunkUnitCount), __core__mkCons(__helios__int____to_data(chunkUnitsSold), __core__mkNilData(())))))\n    };\n    __module__SaleProgressDetails__SaleProgressDetailsV1[]__validateCreatedDetails = (self_283) -> {\n        (saleStartTime, totalSaleUnits) -> {\n            __core__chooseUnit(__helios__print(\"progDtls: validate\"), __core__chooseUnit(__helios__assert(__helios__time____eq(__module__SaleProgressDetails__SaleProgressDetailsV1[]__lastPurchaseAt(self_283), saleStartTime), \"lastPurchaseAt must be equal to startAt\"), __core__chooseUnit(__helios__assert(__helios__time____eq(__module__SaleProgressDetails__SaleProgressDetailsV1[]__prevPurchaseAt(self_283), saleStartTime), \"prevPurchaseAt must be equal to startAt\"), __core__chooseUnit(__helios__assert(__helios__int____eq(__module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitCount(self_283), totalSaleUnits), \"chunkUnitCount must be equal to totalSaleUnits\"), __core__chooseUnit(__helios__assert(__helios__int____eq(__module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitsSold(self_283), 0), \"chunkUnitsSold must be zero\"), true)))))\n        }\n    };\n    __module__SaleProgressDetails__SaleProgressDetailsV1[]__validateUpdatedDetails = (self_284) -> {\n        (prevProgress, now, unitsSold) -> {\n            __core__chooseUnit(__helios__print(\"SaleProgressDetails: validating update\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Updates last-purchase-time to the current tx time\", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add(\"   ----  lastPurchaseAt: \", __helios__time__show(__module__SaleProgressDetails__SaleProgressDetailsV1[]__lastPurchaseAt(self_284))())), __core__chooseUnit(__helios__print(__helios__string____add(\"   ----  now: \", __helios__time__show(now)())), __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__time____eq(__module__SaleProgressDetails__SaleProgressDetailsV1[]__lastPurchaseAt(self_284), now))(\"  -- updated lastPurchaseAt ok? \"), \"lastPurchaseAt not updated correctly\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Keeps a record of the prior purchase time for dynamic pacing\", false, (), false, (), false, ()), prevNow = __module__SaleProgressDetails__SaleProgressDetailsV1[]__lastPurchaseAt(prevProgress);\n            __core__chooseUnit(__helios__assert(__helios__time____eq(__module__SaleProgressDetails__SaleProgressDetailsV1[]__prevPurchaseAt(self_284), prevNow), __helios__string____add(__helios__string____add(__helios__string____add(\"must update prevPurchaseAt to prev lastPurchaseAt \", __helios__time__show(prevNow)()), \", got \"), __helios__time__show(__module__SaleProgressDetails__SaleProgressDetailsV1[]__prevPurchaseAt(self_284))())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Updates total-sale-units to include the new units being purchased\", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add(\"   ----  prev unitsSold: \", __helios__int__show(__module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitsSold(prevProgress))())), __core__chooseUnit(__helios__print(__helios__string____add(\"   ----  unitsSold: \", __helios__int__show(__module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitsSold(self_284))())), __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__int____eq(__module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitsSold(self_284), __helios__int____add(__module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitsSold(prevProgress), unitsSold)))(\"  -- updated chunkUnitsSold ok? \"), \"must update progress units sold\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Ensures the total number of units available for purchase is unchanged\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__int____eq(__module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitCount(self_284), __module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitCount(prevProgress)))(\"  -- chunkUnitCount unchanged? \"), \"must not change chunk unit count\"), __core__chooseUnit(__helios__print(\"✔ progress details updated OK\"), true))))))))))))))\n        }\n    };\n    __module__VxfProtocol__VxfExpectedActivity[]__is_valid_data = (__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer__is_valid_data, __module__VxfProtocol__VxfExpectedActivity[]__VxfStorage__is_valid_data, __module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId__is_valid_data, __module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer__is_valid_data) -> {\n        (data_285) -> {\n            __core__ifThenElse(\n                __module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer__is_valid_data(data_285),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId__is_valid_data(data_285),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__VxfProtocol__VxfExpectedActivity[]__VxfStorage__is_valid_data(data_285),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer__is_valid_data(data_285),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __helios__option[__helios__data]__is_valid_data = (data_286) -> {\n        __core__chooseData(data_286, () -> {\n            pair_82 = __core__unConstrData__safe(data_286);\n            index_17 = __core__fstPair(pair_82);\n            fields_181 = __core__sndPair(pair_82);\n            __core__ifThenElse(\n                __core__equalsInteger(index_17, 0),\n                () -> {\n                    __core__chooseList(fields_181, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_181), () -> {\n                            __helios__data__is_valid_data(__core__headList__safe(fields_181))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_17, 1),\n                        () -> {\n                            __core__chooseList(fields_181, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer__is_valid_data_1 = (data_287) -> {\n        __core__chooseData(data_287, () -> {\n            pair_83 = __core__unConstrData__safe(data_287);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_83), 22104),\n                () -> {\n                    data_288 = __core__listData(__core__sndPair(pair_83));\n                    __core__chooseData(data_288, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_182 = __core__unListData__safe(data_288);\n                        __core__chooseList(fields_182, () -> {\n                            false\n                        }, () -> {\n                            head_112 = __core__headList__safe(fields_182);\n                            __core__ifThenElse(\n                                __helios__option[__helios__data]__is_valid_data(head_112),\n                                () -> {\n                                    fields_183 = __core__tailList__safe(fields_182);\n                                    __core__chooseList(fields_183, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfExpectedActivity[]__VxfStorage__is_valid_data_1 = (data_289) -> {\n        __core__chooseData(data_289, () -> {\n            pair_84 = __core__unConstrData__safe(data_289);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_84), 22106),\n                () -> {\n                    data_290 = __core__listData(__core__sndPair(pair_84));\n                    __core__chooseData(data_290, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_184 = __core__unListData__safe(data_290);\n                        __core__chooseList(fields_184, () -> {\n                            false\n                        }, () -> {\n                            head_113 = __core__headList__safe(fields_184);\n                            __core__ifThenElse(\n                                __helios__option[__helios__data]__is_valid_data(head_113),\n                                () -> {\n                                    fields_185 = __core__tailList__safe(fields_184);\n                                    __core__chooseList(fields_185, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId__is_valid_data_1 = (data_291) -> {\n        __core__chooseData(data_291, () -> {\n            pair_85 = __core__unConstrData__safe(data_291);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_85), 22107),\n                () -> {\n                    data_292 = __core__listData(__core__sndPair(pair_85));\n                    __core__chooseData(data_292, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_186 = __core__unListData__safe(data_292);\n                        __core__chooseList(fields_186, () -> {\n                            false\n                        }, () -> {\n                            head_114 = __core__headList__safe(fields_186);\n                            __core__ifThenElse(\n                                __helios__int__is_valid_data(head_114),\n                                () -> {\n                                    fields_187 = __core__tailList__safe(fields_186);\n                                    __core__chooseList(fields_187, () -> {\n                                        false\n                                    }, () -> {\n                                        head_115 = __core__headList__safe(fields_187);\n                                        __core__ifThenElse(\n                                            __helios__bool__is_valid_data(head_115),\n                                            () -> {\n                                                fields_188 = __core__tailList__safe(fields_187);\n                                                __core__chooseList(fields_188, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_116 = __core__headList__safe(fields_188);\n                                                    __core__ifThenElse(\n                                                        __helios__option[__helios__int]__is_valid_data(head_116),\n                                                        () -> {\n                                                            fields_189 = __core__tailList__safe(fields_188);\n                                                            __core__chooseList(fields_189, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_117 = __core__headList__safe(fields_189);\n                                                                __core__ifThenElse(\n                                                                    __helios__option[__helios__data]__is_valid_data(head_117),\n                                                                    () -> {\n                                                                        fields_190 = __core__tailList__safe(fields_189);\n                                                                        __core__chooseList(fields_190, true, false)\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer__is_valid_data_1 = (data_293) -> {\n        __core__chooseData(data_293, () -> {\n            pair_86 = __core__unConstrData__safe(data_293);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_86), 22108),\n                () -> {\n                    data_294 = __core__listData(__core__sndPair(pair_86));\n                    __core__chooseData(data_294, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_191 = __core__unListData__safe(data_294);\n                        __core__chooseList(fields_191, () -> {\n                            false\n                        }, () -> {\n                            head_118 = __core__headList__safe(fields_191);\n                            __core__ifThenElse(\n                                __helios__int__is_valid_data(head_118),\n                                () -> {\n                                    fields_192 = __core__tailList__safe(fields_191);\n                                    __core__chooseList(fields_192, () -> {\n                                        false\n                                    }, () -> {\n                                        head_119 = __core__headList__safe(fields_192);\n                                        __core__ifThenElse(\n                                            __helios__bool__is_valid_data(head_119),\n                                            () -> {\n                                                fields_193 = __core__tailList__safe(fields_192);\n                                                __core__chooseList(fields_193, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_120 = __core__headList__safe(fields_193);\n                                                    __core__ifThenElse(\n                                                        __helios__option[__helios__data]__is_valid_data(head_120),\n                                                        () -> {\n                                                            fields_194 = __core__tailList__safe(fields_193);\n                                                            __core__chooseList(fields_194, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__is_valid_data = (__module__VxfProtocol__VxfDestination[]__RelativeLink__is_valid_data, __module__VxfProtocol__VxfDestination[]__AnyTokenHolder__is_valid_data, __module__VxfProtocol__VxfDestination[]__PubKey__is_valid_data, __module__VxfProtocol__VxfDestination[]__Anywhere__is_valid_data, __module__VxfProtocol__VxfDestination[]__NotYetDefined__is_valid_data) -> {\n        (data_295) -> {\n            __core__ifThenElse(\n                __module__VxfProtocol__VxfDestination[]__NotYetDefined__is_valid_data(data_295),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__VxfProtocol__VxfDestination[]__Anywhere__is_valid_data(data_295),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__VxfProtocol__VxfDestination[]__PubKey__is_valid_data(data_295),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__VxfProtocol__VxfDestination[]__AnyTokenHolder__is_valid_data(data_295),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__VxfProtocol__VxfDestination[]__RelativeLink__is_valid_data(data_295),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__VxfProtocol__VxfDestination[]__from_data = (__module__VxfProtocol__VxfDestination[]__RelativeLink__is_valid_data_1, __module__VxfProtocol__VxfDestination[]__AnyTokenHolder__is_valid_data_1, __module__VxfProtocol__VxfDestination[]__PubKey__is_valid_data_1, __module__VxfProtocol__VxfDestination[]__Anywhere__is_valid_data_1, __module__VxfProtocol__VxfDestination[]__NotYetDefined__is_valid_data_1) -> {\n        (data_296) -> {\n            ignore_20 = __core__ifThenElse(\n                __module__VxfProtocol__VxfDestination[]__is_valid_data(__module__VxfProtocol__VxfDestination[]__RelativeLink__is_valid_data_1, __module__VxfProtocol__VxfDestination[]__AnyTokenHolder__is_valid_data_1, __module__VxfProtocol__VxfDestination[]__PubKey__is_valid_data_1, __module__VxfProtocol__VxfDestination[]__Anywhere__is_valid_data_1, __module__VxfProtocol__VxfDestination[]__NotYetDefined__is_valid_data_1)(data_296),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid VxfDestination data\", ())\n                }\n            )();\n            data_296\n        }\n    };\n    __module__VxfProtocol__VxfDestination[]__RelativeLink____is = (data_297) -> {\n        __helios__common__enum_tag_equals(data_297, 0)\n    };\n    __helios__option[__module__VxfProtocol__VxfExpectedActivity[]]__is_valid_data = (data_298) -> {\n        __core__chooseData(data_298, () -> {\n            pair_87 = __core__unConstrData__safe(data_298);\n            index_18 = __core__fstPair(pair_87);\n            fields_195 = __core__sndPair(pair_87);\n            __core__ifThenElse(\n                __core__equalsInteger(index_18, 0),\n                () -> {\n                    __core__chooseList(fields_195, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_195), () -> {\n                            __module__VxfProtocol__VxfExpectedActivity[]__is_valid_data(__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer__is_valid_data_1, __module__VxfProtocol__VxfExpectedActivity[]__VxfStorage__is_valid_data_1, __module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId__is_valid_data_1, __module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer__is_valid_data_1)(__core__headList__safe(fields_195))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_18, 1),\n                        () -> {\n                            __core__chooseList(fields_195, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__RelativeLink__is_valid_data_2 = (data_299) -> {\n        __core__chooseData(data_299, () -> {\n            pair_88 = __core__unConstrData__safe(data_299);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_88), 0),\n                () -> {\n                    data_300 = __core__listData(__core__sndPair(pair_88));\n                    __core__chooseData(data_300, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_196 = __core__unListData__safe(data_300);\n                        __core__chooseList(fields_196, () -> {\n                            false\n                        }, () -> {\n                            head_121 = __core__headList__safe(fields_196);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_121),\n                                () -> {\n                                    fields_197 = __core__tailList__safe(fields_196);\n                                    __core__chooseList(fields_197, () -> {\n                                        false\n                                    }, () -> {\n                                        head_122 = __core__headList__safe(fields_197);\n                                        __core__ifThenElse(\n                                            __helios__option[__module__VxfProtocol__VxfExpectedActivity[]]__is_valid_data(head_122),\n                                            () -> {\n                                                fields_198 = __core__tailList__safe(fields_197);\n                                                __core__chooseList(fields_198, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__AnyTokenHolder____is = (data_301) -> {\n        __helios__common__enum_tag_equals(data_301, 1)\n    };\n    __module__VxfProtocol__VxfDestination[]__AnyTokenHolder__is_valid_data_2 = (data_302) -> {\n        __core__chooseData(data_302, () -> {\n            pair_89 = __core__unConstrData__safe(data_302);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_89), 1),\n                () -> {\n                    data_303 = __core__listData(__core__sndPair(pair_89));\n                    __core__chooseData(data_303, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_199 = __core__unListData__safe(data_303);\n                        __core__chooseList(fields_199, () -> {\n                            false\n                        }, () -> {\n                            head_123 = __core__headList__safe(fields_199);\n                            __core__ifThenElse(\n                                __helios__mintingpolicyhash__is_valid_data(head_123),\n                                () -> {\n                                    fields_200 = __core__tailList__safe(fields_199);\n                                    __core__chooseList(fields_200, () -> {\n                                        false\n                                    }, () -> {\n                                        head_124 = __core__headList__safe(fields_200);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_124),\n                                            () -> {\n                                                fields_201 = __core__tailList__safe(fields_200);\n                                                __core__chooseList(fields_201, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__PubKey____is = (data_304) -> {\n        __helios__common__enum_tag_equals(data_304, 2)\n    };\n    __module__VxfProtocol__VxfDestination[]__PubKey__is_valid_data_2 = (data_305) -> {\n        __core__chooseData(data_305, () -> {\n            pair_90 = __core__unConstrData__safe(data_305);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_90), 2),\n                () -> {\n                    data_306 = __core__listData(__core__sndPair(pair_90));\n                    __core__chooseData(data_306, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_202 = __core__unListData__safe(data_306);\n                        __core__chooseList(fields_202, () -> {\n                            false\n                        }, () -> {\n                            head_125 = __core__headList__safe(fields_202);\n                            __core__ifThenElse(\n                                __helios__pubkeyhash__is_valid_data(head_125),\n                                () -> {\n                                    fields_203 = __core__tailList__safe(fields_202);\n                                    __core__chooseList(fields_203, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__Anywhere____is = (data_307) -> {\n        __helios__common__enum_tag_equals(data_307, 98)\n    };\n    __module__VxfProtocol__VxfDestination[]__Anywhere__is_valid_data_2 = (data_308) -> {\n        __core__chooseData(data_308, () -> {\n            pair_91 = __core__unConstrData__safe(data_308);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_91), 98),\n                () -> {\n                    data_309 = __core__listData(__core__sndPair(pair_91));\n                    __core__chooseData(data_309, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_204 = __core__unListData__safe(data_309);\n                        __core__chooseList(fields_204, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__NotYetDefined__is_valid_data_2 = (data_310) -> {\n        __core__chooseData(data_310, () -> {\n            pair_92 = __core__unConstrData__safe(data_310);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_92), 99),\n                () -> {\n                    data_311 = __core__listData(__core__sndPair(pair_92));\n                    __core__chooseData(data_311, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_205 = __core__unListData__safe(data_311);\n                        __core__chooseList(fields_205, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__validate = (self_285) -> {\n        (fieldName) -> {\n            __cond_61 = self_285;\n            __core__ifThenElse(\n                __module__VxfProtocol__VxfDestination[]__RelativeLink____is(__cond_61),\n                () -> {\n                    (__lhs_0_129) -> {\n                        __helios__error(__helios__string____add(fieldName, \": todo: RelativeLink support\"))\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__VxfProtocol__VxfDestination[]__AnyTokenHolder____is(__cond_61),\n                        () -> {\n                            (__lhs_0_128) -> {\n                                __helios__error(__helios__string____add(fieldName, \": todo: AnyTokenHolder support\"))\n                            }\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__VxfProtocol__VxfDestination[]__PubKey____is(__cond_61),\n                                () -> {\n                                    (__lhs_0_127) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__VxfProtocol__VxfDestination[]__Anywhere____is(__cond_61),\n                                        () -> {\n                                            (__lhs_0_126) -> {\n                                                true\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_125) -> {\n                                                __helios__error(__helios__string____add(__helios__string____add(\"VxfDestination: \", fieldName), \": NotYetDefined\"))\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()(__cond_61)\n        }\n    };\n    __module__MarketSaleData__MarketSaleState[]____eq = __helios__common____eq;\n    __module__MarketSaleData__MarketSaleState[]__is_valid_data = (__module__MarketSaleData__MarketSaleState[]__Pending__is_valid_data, __module__MarketSaleData__MarketSaleState[]__Active__is_valid_data, __module__MarketSaleData__MarketSaleState[]__Retired__is_valid_data, __module__MarketSaleData__MarketSaleState[]__SoldOut__is_valid_data) -> {\n        (data_312) -> {\n            __core__ifThenElse(\n                __module__MarketSaleData__MarketSaleState[]__SoldOut__is_valid_data(data_312),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__MarketSaleData__MarketSaleState[]__Retired__is_valid_data(data_312),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__MarketSaleData__MarketSaleState[]__Active__is_valid_data(data_312),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__MarketSaleData__MarketSaleState[]__Pending__is_valid_data(data_312),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__MarketSaleData__MarketSaleState[]__from_data = (__module__MarketSaleData__MarketSaleState[]__Pending__is_valid_data_1, __module__MarketSaleData__MarketSaleState[]__Active__is_valid_data_1, __module__MarketSaleData__MarketSaleState[]__Retired__is_valid_data_1, __module__MarketSaleData__MarketSaleState[]__SoldOut__is_valid_data_1) -> {\n        (data_313) -> {\n            ignore_21 = __core__ifThenElse(\n                __module__MarketSaleData__MarketSaleState[]__is_valid_data(__module__MarketSaleData__MarketSaleState[]__Pending__is_valid_data_1, __module__MarketSaleData__MarketSaleState[]__Active__is_valid_data_1, __module__MarketSaleData__MarketSaleState[]__Retired__is_valid_data_1, __module__MarketSaleData__MarketSaleState[]__SoldOut__is_valid_data_1)(data_313),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid MarketSaleState data\", ())\n                }\n            )();\n            data_313\n        }\n    };\n    __module__MarketSaleData__MarketSaleState[]__Pending__is_valid_data_2 = (data_314) -> {\n        __core__chooseData(data_314, () -> {\n            pair_93 = __core__unConstrData__safe(data_314);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_93), 0),\n                () -> {\n                    data_315 = __core__listData(__core__sndPair(pair_93));\n                    __core__chooseData(data_315, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_206 = __core__unListData__safe(data_315);\n                        __core__chooseList(fields_206, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSaleData__MarketSaleState[]__Pending____new = () -> {\n        __core__constrData(0, __core__mkNilData(()))\n    };\n    __module__MarketSaleData__MarketSaleState[]__Active__is_valid_data_2 = (data_316) -> {\n        __core__chooseData(data_316, () -> {\n            pair_94 = __core__unConstrData__safe(data_316);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_94), 1),\n                () -> {\n                    data_317 = __core__listData(__core__sndPair(pair_94));\n                    __core__chooseData(data_317, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_207 = __core__unListData__safe(data_317);\n                        __core__chooseList(fields_207, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSaleData__MarketSaleState[]__Active____new = () -> {\n        __core__constrData(1, __core__mkNilData(()))\n    };\n    __module__MarketSaleData__MarketSaleState[]__Retired__is_valid_data_2 = (data_318) -> {\n        __core__chooseData(data_318, () -> {\n            pair_95 = __core__unConstrData__safe(data_318);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_95), 2),\n                () -> {\n                    data_319 = __core__listData(__core__sndPair(pair_95));\n                    __core__chooseData(data_319, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_208 = __core__unListData__safe(data_319);\n                        __core__chooseList(fields_208, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSaleData__MarketSaleState[]__SoldOut__is_valid_data_2 = (data_320) -> {\n        __core__chooseData(data_320, () -> {\n            pair_96 = __core__unConstrData__safe(data_320);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_96), 3),\n                () -> {\n                    data_321 = __core__listData(__core__sndPair(pair_96));\n                    __core__chooseData(data_321, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_209 = __core__unListData__safe(data_321);\n                        __core__chooseList(fields_209, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSaleData__SaleAssetsV1[]__is_valid_data = (data_322) -> {\n        __core__chooseData(data_322, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_210 = __core__unListData__safe(data_322);\n            __core__chooseList(fields_210, () -> {\n                false\n            }, () -> {\n                head_126 = __core__headList__safe(fields_210);\n                __core__ifThenElse(\n                    __helios__value__is_valid_data(head_126),\n                    () -> {\n                        fields_211 = __core__tailList__safe(fields_210);\n                        __core__chooseList(fields_211, () -> {\n                            false\n                        }, () -> {\n                            head_127 = __core__headList__safe(fields_211);\n                            __core__ifThenElse(\n                                __helios__int__is_valid_data(head_127),\n                                () -> {\n                                    fields_212 = __core__tailList__safe(fields_211);\n                                    __core__chooseList(fields_212, () -> {\n                                        false\n                                    }, () -> {\n                                        head_128 = __core__headList__safe(fields_212);\n                                        __core__ifThenElse(\n                                            __helios__mintingpolicyhash__is_valid_data(head_128),\n                                            () -> {\n                                                fields_213 = __core__tailList__safe(fields_212);\n                                                __core__chooseList(fields_213, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_129 = __core__headList__safe(fields_213);\n                                                    __core__ifThenElse(\n                                                        __helios__bytearray__is_valid_data(head_129),\n                                                        () -> {\n                                                            fields_214 = __core__tailList__safe(fields_213);\n                                                            __core__chooseList(fields_214, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_130 = __core__headList__safe(fields_214);\n                                                                __core__ifThenElse(\n                                                                    __helios__int__is_valid_data(head_130),\n                                                                    () -> {\n                                                                        fields_215 = __core__tailList__safe(fields_214);\n                                                                        __core__chooseList(fields_215, () -> {\n                                                                            false\n                                                                        }, () -> {\n                                                                            head_131 = __core__headList__safe(fields_215);\n                                                                            __core__ifThenElse(\n                                                                                __helios__int__is_valid_data(head_131),\n                                                                                () -> {\n                                                                                    fields_216 = __core__tailList__safe(fields_215);\n                                                                                    __core__chooseList(fields_216, true, false)\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        })()\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSaleData__SaleAssetsV1[]__from_data = (data_323) -> {\n        ignore_22 = __core__ifThenElse(\n            __module__MarketSaleData__SaleAssetsV1[]__is_valid_data(data_323),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid SaleAssetsV1 data\", ())\n            }\n        )();\n        __core__unListData(data_323)\n    };\n    __module__MarketSaleData__SaleAssetsV1[]__saleUnitAssets = (self_286) -> {\n        __helios__value__from_data(__helios__common__struct_field_0(self_286))\n    };\n    __module__MarketSaleData__SaleAssetsV1[]__singleBuyMaxUnits = (self_287) -> {\n        __helios__int__from_data(__helios__common__struct_field_1(self_287))\n    };\n    __module__MarketSaleData__SaleAssetsV1[]__primaryAssetMph = (self_288) -> {\n        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_2(self_288))\n    };\n    __module__MarketSaleData__SaleAssetsV1[]__primaryAssetName = (self_289) -> {\n        __helios__bytearray__from_data(__helios__common__struct_field_3(self_289))\n    };\n    __module__MarketSaleData__SaleAssetsV1[]__primaryAssetTargetCount = (self_290) -> {\n        __helios__int__from_data(__helios__common__struct_field_4(self_290))\n    };\n    __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits = (self_291) -> {\n        __helios__int__from_data(__helios__common__struct_field_5(self_291))\n    };\n    __helios__option[__module__VxfProtocol__VxfDestination[]]__is_valid_data = (data_324) -> {\n        __core__chooseData(data_324, () -> {\n            pair_97 = __core__unConstrData__safe(data_324);\n            index_19 = __core__fstPair(pair_97);\n            fields_217 = __core__sndPair(pair_97);\n            __core__ifThenElse(\n                __core__equalsInteger(index_19, 0),\n                () -> {\n                    __core__chooseList(fields_217, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_217), () -> {\n                            __module__VxfProtocol__VxfDestination[]__is_valid_data(__module__VxfProtocol__VxfDestination[]__RelativeLink__is_valid_data_2, __module__VxfProtocol__VxfDestination[]__AnyTokenHolder__is_valid_data_2, __module__VxfProtocol__VxfDestination[]__PubKey__is_valid_data_2, __module__VxfProtocol__VxfDestination[]__Anywhere__is_valid_data_2, __module__VxfProtocol__VxfDestination[]__NotYetDefined__is_valid_data_2)(__core__headList__safe(fields_217))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_19, 1),\n                        () -> {\n                            __core__chooseList(fields_217, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSaleData__FixedSaleDetailsV1[]__is_valid_data = (data_325) -> {\n        __core__chooseData(data_325, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_218 = __core__unListData__safe(data_325);\n            __core__chooseList(fields_218, () -> {\n                false\n            }, () -> {\n                head_132 = __core__headList__safe(fields_218);\n                __core__ifThenElse(\n                    __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__is_valid_data(head_132),\n                    () -> {\n                        fields_219 = __core__tailList__safe(fields_218);\n                        __core__chooseList(fields_219, () -> {\n                            false\n                        }, () -> {\n                            head_133 = __core__headList__safe(fields_219);\n                            __core__ifThenElse(\n                                __helios__time__is_valid_data(head_133),\n                                () -> {\n                                    fields_220 = __core__tailList__safe(fields_219);\n                                    __core__chooseList(fields_220, () -> {\n                                        false\n                                    }, () -> {\n                                        head_134 = __core__headList__safe(fields_220);\n                                        __core__ifThenElse(\n                                            __helios__option[__module__VxfProtocol__VxfDestination[]]__is_valid_data(head_134),\n                                            () -> {\n                                                fields_221 = __core__tailList__safe(fields_220);\n                                                __core__chooseList(fields_221, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_135 = __core__headList__safe(fields_221);\n                                                    __core__ifThenElse(\n                                                        __helios__option[__module__VxfProtocol__VxfDestination[]]__is_valid_data(head_135),\n                                                        () -> {\n                                                            fields_222 = __core__tailList__safe(fields_221);\n                                                            __core__chooseList(fields_222, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSaleData__FixedSaleDetailsV1[]__from_data = (data_326) -> {\n        ignore_23 = __core__ifThenElse(\n            __module__MarketSaleData__FixedSaleDetailsV1[]__is_valid_data(data_326),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid FixedSaleDetailsV1 data\", ())\n            }\n        )();\n        __core__unListData(data_326)\n    };\n    __module__MarketSaleData__FixedSaleDetailsV1[]__settings = (self_292) -> {\n        __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__from_data(__helios__common__struct_field_0(self_292))\n    };\n    __module__MarketSaleData__FixedSaleDetailsV1[]__startAt = (self_293) -> {\n        __helios__time__from_data(__helios__common__struct_field_1(self_293))\n    };\n    __helios__option[__module__VxfProtocol__VxfDestination[]]__from_data = (data_327) -> {\n        __42 = __core__ifThenElse(\n            __helios__option[__module__VxfProtocol__VxfDestination[]]__is_valid_data(data_327),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid option data\", ())\n            }\n        )();\n        data_327\n    };\n    __module__MarketSaleData__FixedSaleDetailsV1[]__vxfTokensTo = (self_294) -> {\n        __helios__option[__module__VxfProtocol__VxfDestination[]]__from_data(__helios__common__struct_field_2(self_294))\n    };\n    __module__MarketSaleData__FixedSaleDetailsV1[]__vxfFundsTo = (self_295) -> {\n        __helios__option[__module__VxfProtocol__VxfDestination[]]__from_data(__helios__common__struct_field_3(self_295))\n    };\n    __module__MarketSaleData__OtherSaleStateV1[]__is_valid_data = (data_328) -> {\n        __core__chooseData(data_328, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_223 = __core__unListData__safe(data_328);\n            __core__chooseList(fields_223, () -> {\n                false\n            }, () -> {\n                head_136 = __core__headList__safe(fields_223);\n                __core__ifThenElse(\n                    __module__SaleProgressDetails__SaleProgressDetailsV1[]__is_valid_data(head_136),\n                    () -> {\n                        fields_224 = __core__tailList__safe(fields_223);\n                        __core__chooseList(fields_224, () -> {\n                            false\n                        }, () -> {\n                            head_137 = __core__headList__safe(fields_224);\n                            __core__ifThenElse(\n                                __helios__real__is_valid_data(head_137),\n                                () -> {\n                                    fields_225 = __core__tailList__safe(fields_224);\n                                    __core__chooseList(fields_225, () -> {\n                                        false\n                                    }, () -> {\n                                        head_138 = __core__headList__safe(fields_225);\n                                        __core__ifThenElse(\n                                            __module__MarketSaleData__MarketSaleState[]__is_valid_data(__module__MarketSaleData__MarketSaleState[]__Pending__is_valid_data_2, __module__MarketSaleData__MarketSaleState[]__Active__is_valid_data_2, __module__MarketSaleData__MarketSaleState[]__Retired__is_valid_data_2, __module__MarketSaleData__MarketSaleState[]__SoldOut__is_valid_data_2)(head_138),\n                                            () -> {\n                                                fields_226 = __core__tailList__safe(fields_225);\n                                                __core__chooseList(fields_226, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSaleData__OtherSaleStateV1[]__from_data = (data_329) -> {\n        ignore_24 = __core__ifThenElse(\n            __module__MarketSaleData__OtherSaleStateV1[]__is_valid_data(data_329),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid OtherSaleStateV1 data\", ())\n            }\n        )();\n        __core__unListData(data_329)\n    };\n    __module__MarketSaleData__OtherSaleStateV1[]__progressDetails = (self_296) -> {\n        __module__SaleProgressDetails__SaleProgressDetailsV1[]__from_data(__helios__common__struct_field_0(self_296))\n    };\n    __module__MarketSaleData__OtherSaleStateV1[]__salePace = (self_297) -> {\n        __helios__real__from_data(__helios__common__struct_field_1(self_297))\n    };\n    __module__MarketSaleData__OtherSaleStateV1[]__state = (self_298) -> {\n        __module__MarketSaleData__MarketSaleState[]__from_data(__module__MarketSaleData__MarketSaleState[]__Pending__is_valid_data_2, __module__MarketSaleData__MarketSaleState[]__Active__is_valid_data_2, __module__MarketSaleData__MarketSaleState[]__Retired__is_valid_data_2, __module__MarketSaleData__MarketSaleState[]__SoldOut__is_valid_data_2)(__helios__common__struct_field_2(self_298))\n    };\n    __module__MarketSaleData__OtherSaleStateV1[]__mustBeActive = (self_299) -> {\n        (which) -> {\n            __core__ifThenElse(\n                __module__MarketSaleData__MarketSaleState[]____eq(__module__MarketSaleData__OtherSaleStateV1[]__state(self_299), __module__MarketSaleData__MarketSaleState[]__Active____new()),\n                () -> {\n                    true\n                },\n                () -> {\n                    () -> {\n                        __helios__error(__helios__string____add(which, \": state must be Active\"))\n                    }()\n                }\n            )()\n        }\n    };\n    __module__MarketSaleData__OtherSaleStateV1[]__mustBePending = (self_300) -> {\n        (which_1) -> {\n            __core__ifThenElse(\n                __module__MarketSaleData__MarketSaleState[]____eq(__module__MarketSaleData__OtherSaleStateV1[]__state(self_300), __module__MarketSaleData__MarketSaleState[]__Pending____new()),\n                () -> {\n                    true\n                },\n                () -> {\n                    () -> {\n                        __helios__error(__helios__string____add(which_1, \": state must be Pending\"))\n                    }()\n                }\n            )()\n        }\n    };\n    __module__MarketSaleData__ThreadInfoV1[]__is_valid_data = (data_330) -> {\n        __core__chooseData(data_330, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_227 = __core__unListData__safe(data_330);\n            __core__chooseList(fields_227, () -> {\n                false\n            }, () -> {\n                head_139 = __core__headList__safe(fields_227);\n                __core__ifThenElse(\n                    __helios__int__is_valid_data(head_139),\n                    () -> {\n                        fields_228 = __core__tailList__safe(fields_227);\n                        __core__chooseList(fields_228, () -> {\n                            false\n                        }, () -> {\n                            head_140 = __core__headList__safe(fields_228);\n                            __core__ifThenElse(\n                                __helios__int__is_valid_data(head_140),\n                                () -> {\n                                    fields_229 = __core__tailList__safe(fields_228);\n                                    __core__chooseList(fields_229, () -> {\n                                        false\n                                    }, () -> {\n                                        head_141 = __core__headList__safe(fields_229);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_141),\n                                            () -> {\n                                                fields_230 = __core__tailList__safe(fields_229);\n                                                __core__chooseList(fields_230, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_142 = __core__headList__safe(fields_230);\n                                                    __core__ifThenElse(\n                                                        __helios__time__is_valid_data(head_142),\n                                                        () -> {\n                                                            fields_231 = __core__tailList__safe(fields_230);\n                                                            __core__chooseList(fields_231, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_143 = __core__headList__safe(fields_231);\n                                                                __core__ifThenElse(\n                                                                    __helios__bytearray__is_valid_data(head_143),\n                                                                    () -> {\n                                                                        fields_232 = __core__tailList__safe(fields_231);\n                                                                        __core__chooseList(fields_232, true, false)\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSaleData__ThreadInfoV1[]__from_data = (data_331) -> {\n        ignore_25 = __core__ifThenElse(\n            __module__MarketSaleData__ThreadInfoV1[]__is_valid_data(data_331),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid ThreadInfoV1 data\", ())\n            }\n        )();\n        __core__unListData(data_331)\n    };\n    __module__MarketSaleData__ThreadInfoV1[]__nestedThreads = (self_301) -> {\n        __helios__int__from_data(__helios__common__struct_field_0(self_301))\n    };\n    __module__MarketSaleData__ThreadInfoV1[]__retiredThreads = (self_302) -> {\n        __helios__int__from_data(__helios__common__struct_field_1(self_302))\n    };\n    __module__MarketSaleData__ThreadInfoV1[]__parentChunkId = (self_303) -> {\n        __helios__bytearray__from_data(__helios__common__struct_field_2(self_303))\n    };\n    __module__MarketSaleData__ThreadInfoV1[]__saleId = (self_304) -> {\n        __helios__bytearray__from_data(__helios__common__struct_field_4(self_304))\n    };\n    __module__MarketSaleData__MktSaleDetails[]__is_valid_data = (__module__MarketSaleData__MktSaleDetails[]__V1__is_valid_data) -> {\n        (data_332) -> {\n            __core__ifThenElse(\n                __module__MarketSaleData__MktSaleDetails[]__V1__is_valid_data(data_332),\n                () -> {\n                    true\n                },\n                () -> {\n                    false\n                }\n            )()\n        }\n    };\n    __module__MarketSaleData__MktSaleDetails[]__from_data = (__module__MarketSaleData__MktSaleDetails[]__V1__is_valid_data_1) -> {\n        (data_333) -> {\n            ignore_26 = __core__ifThenElse(\n                __module__MarketSaleData__MktSaleDetails[]__is_valid_data(__module__MarketSaleData__MktSaleDetails[]__V1__is_valid_data_1)(data_333),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid MktSaleDetails data\", ())\n                }\n            )();\n            data_333\n        }\n    };\n    __module__MarketSaleData__MktSaleDetails[]__V1__is_valid_data_2 = (data_334) -> {\n        __core__chooseData(data_334, () -> {\n            pair_98 = __core__unConstrData__safe(data_334);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_98), 4000),\n                () -> {\n                    data_335 = __core__listData(__core__sndPair(pair_98));\n                    __core__chooseData(data_335, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_233 = __core__unListData__safe(data_335);\n                        __core__chooseList(fields_233, () -> {\n                            false\n                        }, () -> {\n                            head_144 = __core__headList__safe(fields_233);\n                            __core__ifThenElse(\n                                __module__MarketSaleData__OtherSaleStateV1[]__is_valid_data(head_144),\n                                () -> {\n                                    fields_234 = __core__tailList__safe(fields_233);\n                                    __core__chooseList(fields_234, () -> {\n                                        false\n                                    }, () -> {\n                                        head_145 = __core__headList__safe(fields_234);\n                                        __core__ifThenElse(\n                                            __module__MarketSaleData__FixedSaleDetailsV1[]__is_valid_data(head_145),\n                                            () -> {\n                                                fields_235 = __core__tailList__safe(fields_234);\n                                                __core__chooseList(fields_235, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_146 = __core__headList__safe(fields_235);\n                                                    __core__ifThenElse(\n                                                        __module__MarketSaleData__SaleAssetsV1[]__is_valid_data(head_146),\n                                                        () -> {\n                                                            fields_236 = __core__tailList__safe(fields_235);\n                                                            __core__chooseList(fields_236, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_147 = __core__headList__safe(fields_236);\n                                                                __core__ifThenElse(\n                                                                    __module__MarketSaleData__ThreadInfoV1[]__is_valid_data(head_147),\n                                                                    () -> {\n                                                                        fields_237 = __core__tailList__safe(fields_236);\n                                                                        __core__chooseList(fields_237, true, false)\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSaleData__MktSaleDetails[]__V1__saleState = (self_305) -> {\n        __module__MarketSaleData__OtherSaleStateV1[]__from_data(__helios__common__enum_field_0(self_305))\n    };\n    __module__MarketSaleData__MktSaleDetails[]__V1__fixedSaleDetails = (self_306) -> {\n        __module__MarketSaleData__FixedSaleDetailsV1[]__from_data(__helios__common__enum_field_1(self_306))\n    };\n    __module__MarketSaleData__MktSaleDetails[]__V1__saleAssets = (self_307) -> {\n        __module__MarketSaleData__SaleAssetsV1[]__from_data(__helios__common__enum_field_2(self_307))\n    };\n    __module__MarketSaleData__MktSaleDetails[]__V1__threadInfo = (self_308) -> {\n        __module__MarketSaleData__ThreadInfoV1[]__from_data(__helios__common__enum_field_3(self_308))\n    };\n    __module__MarketSaleData__MarketSaleData[]__is_valid_data = (data_336) -> {\n        __core__ifThenElse(\n            __helios__common__test_mStruct_field(data_336, __core__bData(#64746c), __module__MarketSaleData__MktSaleDetails[]__is_valid_data(__module__MarketSaleData__MktSaleDetails[]__V1__is_valid_data_2)),\n            () -> {\n                __core__ifThenElse(\n                    __helios__common__test_mStruct_field(data_336, __core__bData(#6e616d65), __helios__string__is_valid_data),\n                    () -> {\n                        __core__ifThenElse(\n                            __helios__common__test_mStruct_field(data_336, __core__bData(#747065), __helios__string__is_valid_data),\n                            () -> {\n                                __core__ifThenElse(\n                                    __helios__common__test_mStruct_field(data_336, __core__bData(#406964), __helios__bytearray__is_valid_data),\n                                    () -> {\n                                        true\n                                    },\n                                    () -> {\n                                        __core__trace(\"Warning: invalid data in MarketSaleData.@id\", () -> {\n                                            false\n                                        })()\n                                    }\n                                )()\n                            },\n                            () -> {\n                                __core__trace(\"Warning: invalid data in MarketSaleData.tpe\", () -> {\n                                    false\n                                })()\n                            }\n                        )()\n                    },\n                    () -> {\n                        __core__trace(\"Warning: invalid data in MarketSaleData.name\", () -> {\n                            false\n                        })()\n                    }\n                )()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid data in MarketSaleData.dtl\", () -> {\n                    false\n                })()\n            }\n        )()\n    };\n    __module__MarketSaleData__MarketSaleData[]____to_data = __helios__common__identity;\n    __module__MarketSaleData__MarketSaleData[]__from_data = (data_337) -> {\n        ignore_27 = __core__ifThenElse(\n            __module__MarketSaleData__MarketSaleData[]__is_valid_data(data_337),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid MarketSaleData data\", ())\n            }\n        )();\n        data_337\n    };\n    __module__MarketSaleData__MarketSaleData[]__id = (self_309) -> {\n        __helios__bytearray__from_data(__helios__common__mStruct_field(self_309, #406964))\n    };\n    __module__MarketSaleData__MarketSaleData[]__type = (self_310) -> {\n        __helios__string__from_data(__helios__common__mStruct_field(self_310, #747065))\n    };\n    __module__MarketSaleData__MarketSaleData[]__name = (self_311) -> {\n        __helios__string__from_data(__helios__common__mStruct_field(self_311, #6e616d65))\n    };\n    __module__MarketSaleData__MarketSaleData[]__details = (self_312) -> {\n        __module__MarketSaleData__MktSaleDetails[]__from_data(__module__MarketSaleData__MktSaleDetails[]__V1__is_valid_data_2)(__helios__common__mStruct_field(self_312, #64746c))\n    };\n    __module__MarketSaleData__MarketSaleData[]__v1details = (self_313) -> {\n        () -> {\n            __cond_62 = __module__MarketSaleData__MarketSaleData[]__details(self_313);\n            v1 = __cond_62;\n            v1\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]__get = (self_314) -> {\n        (key_28) -> {\n            __helios__common__map_get(self_314, __helios__bytearray____to_data(key_28), (x_12) -> {\n                __helios__int__from_data(x_12)\n            }, () -> {\n                __helios__error(\"key not found\")\n            })\n        }\n    };\n    __module__MarketSaleData__MarketSaleData[]__validate = (self_315) -> {\n        () -> {\n            __core__chooseUnit(__helios__print(\"mktSale: validate()\"), __core__chooseUnit(__helios__assert(__helios__string____eq(__module__MarketSaleData__MarketSaleData[]__type(self_315), \"mktSale\"), \"wrong type\"), __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(__helios__string__serialize(__module__MarketSaleData__MarketSaleData[]__name(self_315))()), 10), \"name must be at least 10 characters\"), saleAssets = __module__MarketSaleData__MktSaleDetails[]__V1__saleAssets(__module__MarketSaleData__MarketSaleData[]__v1details(self_315)());\n            __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__int____mul(__module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(saleAssets), __helios__map[__helios__bytearray@__helios__int]__get(__helios__value__get_policy(__helios__value__get_assets(__module__MarketSaleData__SaleAssetsV1[]__saleUnitAssets(saleAssets))())(__module__MarketSaleData__SaleAssetsV1[]__primaryAssetMph(saleAssets)))(__module__MarketSaleData__SaleAssetsV1[]__primaryAssetName(saleAssets))), __module__MarketSaleData__SaleAssetsV1[]__primaryAssetTargetCount(saleAssets)), \"saleUnitAssets' primary-token value must divide the target-count over the sale-unit count\"), __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(__helios__value__to_map(__helios__value__get_assets(__module__MarketSaleData__SaleAssetsV1[]__saleUnitAssets(saleAssets))())()), 0), \"saleUnitAssets must not be empty\"), __core__chooseUnit(__helios__assert(__helios__int____gt(__module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(saleAssets), 0), \"totalSaleUnits must be greater than zero\"), __core__chooseUnit(__helios__assert(__helios__int____gt(__module__MarketSaleData__SaleAssetsV1[]__singleBuyMaxUnits(saleAssets), 0), \"singleBuyMaxUnits must be greater than zero\"), __core__chooseUnit(__helios__assert(__helios__int____lt(__module__MarketSaleData__SaleAssetsV1[]__singleBuyMaxUnits(saleAssets), __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(saleAssets)), \"singleBuyMaxUnits must be less than totalSaleUnits\"), true))))))))\n        }\n    };\n    __module__MarketSaleData__MarketSaleData[]__validatePendingDetails = (self_316) -> {\n        () -> {\n            __core__chooseUnit(__helios__print(\"mktSale: validatePendingDetails()\"), threadInfo = __module__MarketSaleData__MktSaleDetails[]__V1__threadInfo(__module__MarketSaleData__MarketSaleData[]__v1details(self_316)());\n            __core__chooseUnit(__helios__assert(__helios__bytearray____eq(__module__MarketSaleData__ThreadInfoV1[]__parentChunkId(threadInfo), #), \"parentChunkId must be empty\"), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(__module__MarketSaleData__ThreadInfoV1[]__saleId(threadInfo), __module__MarketSaleData__MarketSaleData[]__id(self_316)), \"saleId must be equal to id\"), __core__chooseUnit(__helios__assert(__helios__int____eq(__module__MarketSaleData__ThreadInfoV1[]__nestedThreads(threadInfo), 0), \"nestedThreads must be zero\"), __core__chooseUnit(__helios__assert(__helios__int____eq(__module__MarketSaleData__ThreadInfoV1[]__retiredThreads(threadInfo), 0), \"retiredThreads must be zero\"), true)))))\n        }\n    };\n    __module__MarketSaleData__MarketSaleData[]__validateCreatedDetails = (self_317) -> {\n        () -> {\n            __core__chooseUnit(__helios__print(\"mktSale: validateCreatedDetails()\"), saleState = __module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(self_317)());\n            __core__chooseUnit(__helios__assert(__helios__real____eq(__module__MarketSaleData__OtherSaleStateV1[]__salePace(saleState), 1000000), \"salePace must be initialized to 1.0\"), saleDetails = __module__MarketSaleData__MktSaleDetails[]__V1__fixedSaleDetails(__module__MarketSaleData__MarketSaleData[]__v1details(self_317)());\n            saleAssets_1 = __module__MarketSaleData__MktSaleDetails[]__V1__saleAssets(__module__MarketSaleData__MarketSaleData[]__v1details(self_317)());\n            __helios__bool__and(() -> {\n                __helios__bool__and(() -> {\n                    __helios__bool__and(() -> {\n                        __helios__bool__and(() -> {\n                            true\n                        }, () -> {\n                            __helios__bool__trace(__module__MarketSaleData__OtherSaleStateV1[]__mustBePending(saleState)(\"created\"))(\"must be Pending? \")\n                        })\n                    }, () -> {\n                        __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__validateCreatedDetails(__module__MarketSaleData__FixedSaleDetailsV1[]__settings(saleDetails))()\n                    })\n                }, () -> {\n                    __helios__bool__trace(__module__SaleProgressDetails__SaleProgressDetailsV1[]__validateCreatedDetails(__module__MarketSaleData__OtherSaleStateV1[]__progressDetails(saleState))(__module__MarketSaleData__FixedSaleDetailsV1[]__startAt(saleDetails), __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(saleAssets_1)))(\"progress details OK? \")\n                })\n            }, () -> {\n                true\n            })))\n        }\n    };\n    __helios__option[__module__VxfProtocol__VxfDestination[]]__some____is = (data_338) -> {\n        __helios__common__enum_tag_equals(data_338, 0)\n    };\n    __helios__option[__module__VxfProtocol__VxfDestination[]]__some__some = (self_318) -> {\n        __module__VxfProtocol__VxfDestination[]__from_data(__module__VxfProtocol__VxfDestination[]__RelativeLink__is_valid_data_2, __module__VxfProtocol__VxfDestination[]__AnyTokenHolder__is_valid_data_2, __module__VxfProtocol__VxfDestination[]__PubKey__is_valid_data_2, __module__VxfProtocol__VxfDestination[]__Anywhere__is_valid_data_2, __module__VxfProtocol__VxfDestination[]__NotYetDefined__is_valid_data_2)(__helios__common__enum_field_0(self_318))\n    };\n    __helios__option[__module__VxfProtocol__VxfDestination[]]__unwrap = (self_319) -> {\n        () -> {\n            __module__VxfProtocol__VxfDestination[]__from_data(__module__VxfProtocol__VxfDestination[]__RelativeLink__is_valid_data_2, __module__VxfProtocol__VxfDestination[]__AnyTokenHolder__is_valid_data_2, __module__VxfProtocol__VxfDestination[]__PubKey__is_valid_data_2, __module__VxfProtocol__VxfDestination[]__Anywhere__is_valid_data_2, __module__VxfProtocol__VxfDestination[]__NotYetDefined__is_valid_data_2)(__helios__common__enum_field_0(self_319))\n        }\n    };\n    __module__MarketSaleData__MarketSaleData[]__validateActivating = (self_320) -> {\n        (utxoValue, DDdetails) -> {\n            __core__chooseUnit(__helios__print(\"mktSale: validateActivating()\"), prevMktSale = __module__MarketSaleData__MarketSaleData[]__from_data(__module__CapoHelpers__DgDataDetails[]__inputData(DDdetails)());\n            __core__chooseUnit(__helios__assert(__helios__string____eq(__module__MarketSaleData__MarketSaleData[]__name(self_320), __module__MarketSaleData__MarketSaleData[]__name(prevMktSale)), \"name must not change\"), __core__chooseUnit(__helios__assert(__module__MarketSaleData__OtherSaleStateV1[]__mustBePending(__module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(prevMktSale)()))(\"old\"), \"previous sale not Pending\"), __core__chooseUnit(__helios__assert(__module__MarketSaleData__MarketSaleState[]____eq(__module__MarketSaleData__OtherSaleStateV1[]__state(__module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(self_320)())), __module__MarketSaleData__MarketSaleState[]__Active____new()), \"state must be Active\"), assets = __helios__value____sub(__helios__value__get_assets(utxoValue)(), __module__CapoHelpers__DgDataDetails[]__uutValue(DDdetails)());\n            __core__chooseUnit(__helios__print(\"expected assets: \"), __core__chooseUnit(__helios__print(__helios__value__show(assets)(false, ())), __core__chooseUnit(__helios__assert(__helios__value____eq(__helios__value____mul(__module__MarketSaleData__SaleAssetsV1[]__saleUnitAssets(__module__MarketSaleData__MktSaleDetails[]__V1__saleAssets(__module__MarketSaleData__MarketSaleData[]__v1details(self_320)())), __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(__module__MarketSaleData__MktSaleDetails[]__V1__saleAssets(__module__MarketSaleData__MarketSaleData[]__v1details(self_320)()))), assets), \"utxo must contain the supply of tokens to be sold\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"validates VxfDestination in vxfTokensTo field\", false, (), false, (), false, ()), __core__chooseUnit(__cond_63 = __module__MarketSaleData__FixedSaleDetailsV1[]__vxfTokensTo(__module__MarketSaleData__MktSaleDetails[]__V1__fixedSaleDetails(__module__MarketSaleData__MarketSaleData[]__v1details(self_320)()));\n            __core__ifThenElse(\n                __helios__option[__module__VxfProtocol__VxfDestination[]]__some____is(__cond_63),\n                () -> {\n                    (__lhs_0_131) -> {\n                        vxf = __helios__option[__module__VxfProtocol__VxfDestination[]]__some__some(__lhs_0_131);\n                        __helios__assert(__module__VxfProtocol__VxfDestination[]__validate(vxf)(\"vxfTokensTo\"), \"<-- that fails; this can't\")\n                    }\n                },\n                () -> {\n                    (__lhs_0_130) -> {\n                        __helios__print(\"  -- vxfTokensTo is not restricted\")\n                    }\n                }\n            )()(__cond_63), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"validates VxfDestination in vxfFundsTo field\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__bool__trace(__module__VxfProtocol__VxfDestination[]__validate(__helios__option[__module__VxfProtocol__VxfDestination[]]__unwrap(__module__MarketSaleData__FixedSaleDetailsV1[]__vxfFundsTo(__module__MarketSaleData__MktSaleDetails[]__V1__fixedSaleDetails(__module__MarketSaleData__MarketSaleData[]__v1details(self_320)())))())(\"vxfFundsTo\"))(\"  -- vxfFundsTo ok? \"), \"^^^ that fails; this can't\"), __helios__bool__and(() -> {\n                __helios__bool__and(() -> {\n                    true\n                }, () -> {\n                    __module__MarketSaleData__MarketSaleData[]__validatePendingDetails(self_320)()\n                })\n            }, () -> {\n                true\n            }))))))))))))\n        }\n    };\n    __module__MarketSaleData__MarketSaleData[]__previous = (ddd) -> {\n        __module__MarketSaleData__MarketSaleData[]__from_data(__module__CapoHelpers__DgDataDetails[]__inputData(ddd)())\n    };\n    __module__MarketSaleData__MarketSaleData[]__updated = (ddd_1) -> {\n        __module__MarketSaleData__MarketSaleData[]__from_data(__module__CapoHelpers__DgDataDetails[]__outputData(ddd_1)())\n    };\n    __module__MarketSaleData__MarketSaleData[]__validateAdding = (self_321) -> {\n        (ddd_2, mph_31, tn_5) -> {\n            updated = __module__MarketSaleData__MarketSaleData[]__updated(ddd_2);\n            outValue = __helios__txoutput__value(__module__CapoHelpers__DgDataDetails[]__output(ddd_2)());\n            updatedAssetCount = __helios__map[__helios__bytearray@__helios__int]__get(__helios__value__get_policy(outValue)(mph_31))(tn_5);\n            currentAssets = __module__MarketSaleData__MktSaleDetails[]__V1__saleAssets(__module__MarketSaleData__MarketSaleData[]__v1details(self_321)());\n            currentState = __module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(self_321)());\n            nextAssets = __module__MarketSaleData__MktSaleDetails[]__V1__saleAssets(__module__MarketSaleData__MarketSaleData[]__v1details(updated)());\n            nextState = __module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(updated)());\n            isPrimary = __helios__bool__trace(__helios__bool__and(() -> {\n                __helios__bool__and(() -> {\n                    true\n                }, () -> {\n                    __helios__bool__trace(__helios__mintingpolicyhash____eq(mph_31, __module__MarketSaleData__SaleAssetsV1[]__primaryAssetMph(currentAssets)))(\"    -- is primary mph? \")\n                })\n            }, () -> {\n                __helios__bool__trace(__helios__bytearray____eq(tn_5, __module__MarketSaleData__SaleAssetsV1[]__primaryAssetName(currentAssets)))(\"    -- is primary tn? \")\n            }))(\"  -- isPrimary? \");\n            __core__chooseUnit(__helios__print(__helios__string____add(\"vvv ... for added tn: \", __helios__bytearray__show(tn_5)())), updatedAssetChunkSize = __helios__map[__helios__bytearray@__helios__int]__get(__helios__value__get_policy(__module__MarketSaleData__SaleAssetsV1[]__saleUnitAssets(nextAssets))(mph_31))(tn_5);\n            expectedAssetCount = __core__ifThenElse(\n                isPrimary,\n                () -> {\n                    existingAssetChunkSize = __helios__map[__helios__bytearray@__helios__int]__get(__helios__value__get_policy(__module__MarketSaleData__SaleAssetsV1[]__saleUnitAssets(currentAssets))(mph_31))(tn_5);\n                    __core__chooseUnit(__core__ifThenElse(\n                        __helios__int____lt(updatedAssetChunkSize, existingAssetChunkSize),\n                        () -> {\n                            __helios__error(\"primary asset chunk size shouldn't decrease\")\n                        },\n                        () -> {\n                            () -> {\n                                ()\n                            }()\n                        }\n                    )(), __core__chooseUnit(__helios__print(__helios__string____add(\"    ... each sale-unit has \", __helios__int__show(updatedAssetChunkSize)())), __core__chooseUnit(__helios__print(__helios__string____add(\"    ... sale now supplied with \", __helios__int__show(updatedAssetCount)())), __core__chooseUnit(__helios__print(__helios__string____add(\"    ... ^ / saleUnits  \", __helios__int__show(__module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(nextAssets))())), percentSupplied = __helios__real____div1(__helios__real____mul1(100000000, updatedAssetCount), __module__MarketSaleData__SaleAssetsV1[]__primaryAssetTargetCount(nextAssets));\n                    __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(\"Now supplied with \", __helios__real__show(percentSupplied)()), \"% of the primary token\")), updatedAssetCount)))))\n                },\n                () -> {\n                    () -> {\n                        isEvenChunk = __helios__int____eq(__helios__int____mod(updatedAssetCount, __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(nextAssets)), 0);\n                        __core__chooseUnit(__helios__print(__helios__string____add(\"got \", __helios__int__show(updatedAssetCount)())), __core__chooseUnit(__helios__print(__helios__string____add(\"Expected chunks of \", __helios__int__show(__module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(nextAssets))())), __core__chooseUnit(__core__ifThenElse(\n                            __helios__bool____not(isEvenChunk),\n                            () -> {\n                                __helios__error(\"new non-primary asset must have an even distribution for each unit of sale\")\n                            },\n                            () -> {\n                                () -> {\n                                    ()\n                                }()\n                            }\n                        )(), __core__chooseUnit(__helios__print(__helios__string____add(\"    ... each sale-unit has \", __helios__int__show(updatedAssetChunkSize)())), __core__chooseUnit(__helios__print(__helios__string____add(\"    ... ^ times sale-units  \", __helios__int__show(__module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(nextAssets))())), expected = __helios__int____mul(updatedAssetChunkSize, __module__MarketSaleData__SaleAssetsV1[]__totalSaleUnits(nextAssets));\n                        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(\"Expecting the value to be = \", __helios__int__show(expected)()), \" (= current Value/this-tn)\")), expected))))))\n                    }()\n                }\n            )();\n            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"    ... updated value has \", __helios__int__show(updatedAssetCount)()), \" \"), __helios__bytearray__show(tn_5)())), hasMatchyValue = __core__ifThenElse(\n                __helios__int____neq(updatedAssetCount, expectedAssetCount),\n                () -> {\n                    __core__chooseUnit(__core__ifThenElse(\n                        isPrimary,\n                        () -> {\n                            __helios__error(\"no way\")\n                        },\n                        () -> {\n                            () -> {\n                                ()\n                            }()\n                        }\n                    )(), __helios__error(\"The updated sale-units * sale-unit-count / this-tn must match the updated deposit-value / this-tn\"))\n                },\n                () -> {\n                    () -> {\n                        true\n                    }()\n                }\n            )();\n            __helios__bool__and(() -> {\n                __helios__bool__and(() -> {\n                    __helios__bool__and(() -> {\n                        __helios__bool__and(() -> {\n                            __helios__bool__and(() -> {\n                                __helios__bool__and(() -> {\n                                    __helios__bool__and(() -> {\n                                        true\n                                    }, () -> {\n                                        hasMatchyValue\n                                    })\n                                }, () -> {\n                                    __helios__bool__trace(__module__MarketSaleData__OtherSaleStateV1[]__mustBePending(currentState)(\"old: AddTokens\"))(\"input sale must be Pending: \")\n                                })\n                            }, () -> {\n                                __helios__bool__trace(__module__MarketSaleData__OtherSaleStateV1[]__mustBePending(nextState)(\"new:AddTokens\"))(\"updated sale must be Pending: \")\n                            })\n                        }, () -> {\n                            __module__MarketSaleData__MarketSaleData[]__validate(updated)()\n                        })\n                    }, () -> {\n                        __module__MarketSaleData__MarketSaleData[]__validateCreatedDetails(updated)()\n                    })\n                }, () -> {\n                    __module__MarketSaleData__MarketSaleData[]__validatePendingDetails(updated)()\n                })\n            }, () -> {\n                true\n            })))\n        }\n    };\n    __module__DynamicSaleV1__maxReal = (a_31, b_29) -> {\n        __core__ifThenElse(\n            __helios__real____gt(a_31, b_29),\n            () -> {\n                a_31\n            },\n            () -> {\n                () -> {\n                    b_29\n                }()\n            }\n        )()\n    };\n    __module__DynamicSaleV1__minReal = (a_32, b_30) -> {\n        __core__ifThenElse(\n            __helios__real____lt(a_32, b_30),\n            () -> {\n                a_32\n            },\n            () -> {\n                () -> {\n                    b_30\n                }()\n            }\n        )()\n    };\n    __module__DynamicSaleV1__DTS_PurchaseInfo[]__is_valid_data = (data_339) -> {\n        __core__chooseData(data_339, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_238 = __core__unListData__safe(data_339);\n            __core__chooseList(fields_238, () -> {\n                false\n            }, () -> {\n                head_148 = __core__headList__safe(fields_238);\n                __core__ifThenElse(\n                    __helios__real__is_valid_data(head_148),\n                    () -> {\n                        fields_239 = __core__tailList__safe(fields_238);\n                        __core__chooseList(fields_239, () -> {\n                            false\n                        }, () -> {\n                            head_149 = __core__headList__safe(fields_239);\n                            __core__ifThenElse(\n                                __helios__real__is_valid_data(head_149),\n                                () -> {\n                                    fields_240 = __core__tailList__safe(fields_239);\n                                    __core__chooseList(fields_240, () -> {\n                                        false\n                                    }, () -> {\n                                        head_150 = __core__headList__safe(fields_240);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_150),\n                                            () -> {\n                                                fields_241 = __core__tailList__safe(fields_240);\n                                                __core__chooseList(fields_241, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_151 = __core__headList__safe(fields_241);\n                                                    __core__ifThenElse(\n                                                        __helios__time__is_valid_data(head_151),\n                                                        () -> {\n                                                            fields_242 = __core__tailList__safe(fields_241);\n                                                            __core__chooseList(fields_242, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_152 = __core__headList__safe(fields_242);\n                                                                __core__ifThenElse(\n                                                                    __helios__real__is_valid_data(head_152),\n                                                                    () -> {\n                                                                        fields_243 = __core__tailList__safe(fields_242);\n                                                                        __core__chooseList(fields_243, () -> {\n                                                                            false\n                                                                        }, () -> {\n                                                                            head_153 = __core__headList__safe(fields_243);\n                                                                            __core__ifThenElse(\n                                                                                __module__SaleProgressDetails__SaleProgressDetailsV1[]__is_valid_data(head_153),\n                                                                                () -> {\n                                                                                    fields_244 = __core__tailList__safe(fields_243);\n                                                                                    __core__chooseList(fields_244, true, false)\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        })()\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__DynamicSaleV1__DTS_PurchaseInfo[]__from_data = (data_340) -> {\n        ignore_28 = __core__ifThenElse(\n            __module__DynamicSaleV1__DTS_PurchaseInfo[]__is_valid_data(data_340),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid DTS_PurchaseInfo data\", ())\n            }\n        )();\n        __core__unListData(data_340)\n    };\n    __module__DynamicSaleV1__DTS_PurchaseInfo[]____to_data = __helios__struct____to_data;\n    __module__DynamicSaleV1__DTS_PurchaseInfo[]__inferredPace = (self_322) -> {\n        __helios__real__from_data(__helios__common__struct_field_0(self_322))\n    };\n    __module__DynamicSaleV1__DTS_PurchaseInfo[]__hoursSinceLastPurchase = (self_323) -> {\n        __helios__real__from_data(__helios__common__struct_field_1(self_323))\n    };\n    __module__DynamicSaleV1__DTS_PurchaseInfo[]__unitsPurchased = (self_324) -> {\n        __helios__int__from_data(__helios__common__struct_field_2(self_324))\n    };\n    __module__DynamicSaleV1__DTS_PurchaseInfo[]__purchaseTime = (self_325) -> {\n        __helios__time__from_data(__helios__common__struct_field_3(self_325))\n    };\n    __module__DynamicSaleV1__DTS_PurchaseInfo[]__prevSalePace = (self_326) -> {\n        __helios__real__from_data(__helios__common__struct_field_4(self_326))\n    };\n    __module__DynamicSaleV1__DTS_PurchaseInfo[]__totalProgress = (self_327) -> {\n        __module__SaleProgressDetails__SaleProgressDetailsV1[]__from_data(__helios__common__struct_field_5(self_327))\n    };\n    __module__DynamicSaleV1__DTS_PurchaseInfo[]____new = (inferredPace, hoursSinceLastPurchase, unitsPurchased, purchaseTime, prevSalePace, totalProgress) -> {\n        __core__mkCons(__helios__real____to_data(inferredPace), __core__mkCons(__helios__real____to_data(hoursSinceLastPurchase), __core__mkCons(__helios__int____to_data(unitsPurchased), __core__mkCons(__helios__time____to_data(purchaseTime), __core__mkCons(__helios__real____to_data(prevSalePace), __core__mkCons(__module__SaleProgressDetails__SaleProgressDetailsV1[]____to_data(totalProgress), __core__mkNilData(())))))))\n    };\n    __module__DynamicSaleV1__DTS_PurchaseInfo[]__create = (unitsPurchased_1, purchaseTime_1, prevPurchaseTime, prevSalePace_1, totalProgress_1) -> {\n        hoursSinceLastPurchase_1 = __helios__real____div(__helios__real____div(__helios__int____mul1(__helios__duration____div1(__helios__time____sub(purchaseTime_1, prevPurchaseTime), __helios__duration__new(1)), 1000000000000), 3600000000000), 1000000000000);\n        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Infers the pace of the current purchase\", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add(\"      ---- unitsPurchased \", __helios__int__show(unitsPurchased_1)())), __core__chooseUnit(__helios__print(__helios__string____add(\"      ---- hoursSinceLastPurchase \", __helios__real__show(hoursSinceLastPurchase_1)())), inferredPace_1 = __helios__int____div1(unitsPurchased_1, hoursSinceLastPurchase_1);\n        __core__chooseUnit(__helios__print(__helios__string____add(\"  -- inferredPace \", __helios__real__show(inferredPace_1)())), __module__DynamicSaleV1__DTS_PurchaseInfo[]____new(inferredPace_1, hoursSinceLastPurchase_1, unitsPurchased_1, purchaseTime_1, prevSalePace_1, totalProgress_1)))))\n    };\n    __helios__option[__module__MarketSaleData__MarketSaleData[]]__is_valid_data = (data_341) -> {\n        __core__chooseData(data_341, () -> {\n            pair_99 = __core__unConstrData__safe(data_341);\n            index_20 = __core__fstPair(pair_99);\n            fields_245 = __core__sndPair(pair_99);\n            __core__ifThenElse(\n                __core__equalsInteger(index_20, 0),\n                () -> {\n                    __core__chooseList(fields_245, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_245), () -> {\n                            __module__MarketSaleData__MarketSaleData[]__is_valid_data(__core__headList__safe(fields_245))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_20, 1),\n                        () -> {\n                            __core__chooseList(fields_245, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__settings = (self_328) -> {\n        __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__from_data(__helios__common__struct_field_0(self_328))\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__purchase = (self_329) -> {\n        __module__DynamicSaleV1__DTS_PurchaseInfo[]__from_data(__helios__common__struct_field_1(self_329))\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__sale = (self_330) -> {\n        __module__MarketSaleData__MarketSaleData[]__from_data(__helios__common__struct_field_2(self_330))\n    };\n    __helios__option[__module__MarketSaleData__MarketSaleData[]]__from_data = (data_342) -> {\n        __43 = __core__ifThenElse(\n            __helios__option[__module__MarketSaleData__MarketSaleData[]]__is_valid_data(data_342),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid option data\", ())\n            }\n        )();\n        data_342\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__updatedSale = (self_331) -> {\n        __helios__option[__module__MarketSaleData__MarketSaleData[]]__from_data(__helios__common__struct_field_3(self_331))\n    };\n    __helios__option[__module__MarketSaleData__MarketSaleData[]]____to_data = __helios__common__identity;\n    __module__DynamicSaleV1__DynamicSaleV1[]____new = (settings, purchase, sale, updatedSale) -> {\n        __core__mkCons(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]____to_data(settings), __core__mkCons(__module__DynamicSaleV1__DTS_PurchaseInfo[]____to_data(purchase), __core__mkCons(__module__MarketSaleData__MarketSaleData[]____to_data(sale), __core__mkCons(__helios__option[__module__MarketSaleData__MarketSaleData[]]____to_data(updatedSale), __core__mkNilData(())))))\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__isRightPayment = (__module__DynamicSaleV1__DynamicSaleV1[]__unitPriceForSale, __module__DynamicSaleV1__DynamicSaleV1[]__actualSellingPace, __module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace, __module__DynamicSaleV1__DynamicSaleV1[]__elapsedSaleHours, __module__DynamicSaleV1__DynamicSaleV1[]__overallPaceIncludingThisPurchase, __module__DynamicSaleV1__DynamicSaleV1[]__pricingFactorDynamicPace, __module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace, __module__DynamicSaleV1__DynamicSaleV1[]__pricingFactorOverallProgress, __module__DynamicSaleV1__DynamicSaleV1[]__priceExpansion, __module__DynamicSaleV1__DynamicSaleV1[]__progressPricingDiscountDepth) -> {\n        (self_332) -> {\n            (payment) -> {\n                expected_1 = __helios__real____mul1(__module__DynamicSaleV1__DynamicSaleV1[]__unitPriceForSale(__module__DynamicSaleV1__DynamicSaleV1[]__actualSellingPace, __module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace, __module__DynamicSaleV1__DynamicSaleV1[]__elapsedSaleHours, __module__DynamicSaleV1__DynamicSaleV1[]__overallPaceIncludingThisPurchase, __module__DynamicSaleV1__DynamicSaleV1[]__pricingFactorDynamicPace, __module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace, __module__DynamicSaleV1__DynamicSaleV1[]__pricingFactorOverallProgress, __module__DynamicSaleV1__DynamicSaleV1[]__priceExpansion, __module__DynamicSaleV1__DynamicSaleV1[]__progressPricingDiscountDepth)(self_332)(), __module__DynamicSaleV1__DTS_PurchaseInfo[]__unitsPurchased(__module__DynamicSaleV1__DynamicSaleV1[]__purchase(self_332)));\n                actual = __helios__int____div1(__helios__value__get_lovelace(payment)(), 1000000000000);\n                __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- expected payment \", __helios__real__show(expected_1)())), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(\"    ---- actual payment \", __helios__real__show(actual)()), \" +/- 0.000002\")), __core__chooseUnit(__helios__assert(__helios__value__is_zero(__helios__value__get_assets(payment)())(), \"non-ADA assets not yet supported here\"), __core__chooseUnit(__core__ifThenElse(\n                    __helios__real____gt(__helios__real__abs(__helios__real____sub(actual, expected_1))(), 2),\n                    () -> {\n                        __helios__error(\"payment amount is not correct\")\n                    },\n                    () -> {\n                        () -> {\n                            ()\n                        }()\n                    }\n                )(), true))))\n            }\n        }\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__unitPriceForSale_1 = (__module__DynamicSaleV1__DynamicSaleV1[]__actualSellingPace_1, __module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace_1, __module__DynamicSaleV1__DynamicSaleV1[]__elapsedSaleHours_1, __module__DynamicSaleV1__DynamicSaleV1[]__overallPaceIncludingThisPurchase_1, __module__DynamicSaleV1__DynamicSaleV1[]__pricingFactorDynamicPace_1, __module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace_1, __module__DynamicSaleV1__DynamicSaleV1[]__pricingFactorOverallProgress_1, __module__DynamicSaleV1__DynamicSaleV1[]__priceExpansion_1, __module__DynamicSaleV1__DynamicSaleV1[]__progressPricingDiscountDepth_1) -> {\n        (self_333) -> {\n            () -> {\n                __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- target price \", __helios__real__show(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__targetPrice(__module__DynamicSaleV1__DynamicSaleV1[]__settings(self_333)))())), targetPrice = __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__targetPrice(__module__DynamicSaleV1__DynamicSaleV1[]__settings(self_333));\n                price = __helios__real____mul(__helios__real____mul(targetPrice, __module__DynamicSaleV1__DynamicSaleV1[]__pricingFactorOverallProgress_1(__module__DynamicSaleV1__DynamicSaleV1[]__priceExpansion_1, __module__DynamicSaleV1__DynamicSaleV1[]__progressPricingDiscountDepth_1)(self_333)()), __module__DynamicSaleV1__DynamicSaleV1[]__pricingFactorDynamicPace_1(__module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace_1)(self_333)());\n                __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- unitPriceForSale - unclamped \", __helios__real__show(price)())), clamped = __module__DynamicSaleV1__minReal(__module__DynamicSaleV1__maxReal(price, __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__minPrice(__module__DynamicSaleV1__DynamicSaleV1[]__settings(self_333))), __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__maxPrice(__module__DynamicSaleV1__DynamicSaleV1[]__settings(self_333)));\n                __core__chooseUnit(__helios__print(__helios__string____add(\"    -- unitPriceForSale: clamped = \", __helios__real__show(clamped)())), clamped)))\n            }\n        }\n    };\n    __helios__option[__module__MarketSaleData__MarketSaleData[]]__none____is = (data_343) -> {\n        __helios__common__enum_tag_equals(data_343, 1)\n    };\n    __helios__option[__module__MarketSaleData__MarketSaleData[]]__some__some = (self_334) -> {\n        __module__MarketSaleData__MarketSaleData[]__from_data(__helios__common__enum_field_0(self_334))\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__validateUpdatedDetails = (__module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace_2, __module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace_2) -> {\n        (self_335) -> {\n            () -> {\n                __core__chooseUnit(__helios__print(\"DynamicSaleV1: validating updated details\"), (upd) -> {\n                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"EXPECTS the basic SaleProgressDetails to be validated separately\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"The sale settings must not be changed\", false, (), false, (), false, ()), prevSettings = __module__DynamicSaleV1__DynamicSaleV1[]__settings(self_335);\n                    nextSettings = __module__MarketSaleData__FixedSaleDetailsV1[]__settings(__module__MarketSaleData__MktSaleDetails[]__V1__fixedSaleDetails(__module__MarketSaleData__MarketSaleData[]__v1details(upd)()));\n                    __core__chooseUnit(__helios__assert(__helios__bool__trace(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]____eq(prevSettings, nextSettings))(\"  -- settings unchanged? \"), \"settings were changed\"), expectedPace = __module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace_2(self_335)();\n                    nextPace = __module__MarketSaleData__OtherSaleStateV1[]__salePace(__module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(upd)()));\n                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Updates the nextPace to reflect the ongoing dynamic sale progress\", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add(\"  ---- updated salePace: \", __helios__real__show(nextPace)())), __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__real____lt(__helios__real__abs(__helios__real____sub(nextPace, expectedPace))(), 5))(\"  -- nextPace ok? \"), __helios__string____add(\"wrong next salePace in updated sale, expected \", __helios__real__show(expectedPace)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Guards against underflow in dynamic pace calculations, by enforcing a minimum chunk age\", false, (), false, (), false, ()), chunkAge = __helios__time____sub(__module__SaleProgressDetails__SaleProgressDetailsV1[]__lastPurchaseAt(__module__MarketSaleData__OtherSaleStateV1[]__progressDetails(__module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(upd)()))), __module__SaleProgressDetails__SaleProgressDetailsV1[]__lastPurchaseAt(__module__MarketSaleData__OtherSaleStateV1[]__progressDetails(__module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(__module__DynamicSaleV1__DynamicSaleV1[]__sale(self_335))()))));\n                    __core__chooseUnit(__helios__print(__helios__string____add(\"  ---- chunkAge: \", __helios__duration__show(chunkAge)())), __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__duration____geq(chunkAge, __helios__duration____mul(__helios__duration__MINUTE, 10)))(\"  -- chunkAge ok? \"), \"sale chunk too fresh (less than 10 minutes)\"), true)))))))))\n                }(__cond_64 = __module__DynamicSaleV1__DynamicSaleV1[]__updatedSale(self_335);\n                __core__ifThenElse(\n                    __helios__option[__module__MarketSaleData__MarketSaleData[]]__none____is(__cond_64),\n                    () -> {\n                        (__lhs_0_133) -> {\n                            __helios__error(\"must have updatedSale during tx validation\")\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_132) -> {\n                            s_1 = __helios__option[__module__MarketSaleData__MarketSaleData[]]__some__some(__lhs_0_132);\n                            s_1\n                        }\n                    }\n                )()(__cond_64)))\n            }\n        }\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__actualSellingPace_2 = (__module__DynamicSaleV1__DynamicSaleV1[]__elapsedSaleHours_2) -> {\n        (self_336) -> {\n            () -> {\n                t_1 = __helios__int____div1(__helios__int____add(__module__DynamicSaleV1__DTS_PurchaseInfo[]__unitsPurchased(__module__DynamicSaleV1__DynamicSaleV1[]__purchase(self_336)), __module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitsSold(__module__MarketSaleData__OtherSaleStateV1[]__progressDetails(__module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(__module__DynamicSaleV1__DynamicSaleV1[]__sale(self_336))())))), __module__DynamicSaleV1__DynamicSaleV1[]__elapsedSaleHours_2(self_336)());\n                __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- actualSellingPace \", __helios__real__show(t_1)())), t_1)\n            }\n        }\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace_3 = (self_337) -> {\n        () -> {\n            chunkUnitCount_1 = __module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitCount(__module__DynamicSaleV1__DTS_PurchaseInfo[]__totalProgress(__module__DynamicSaleV1__DynamicSaleV1[]__purchase(self_337)));\n            t_2 = __helios__real____div(__helios__int____add1(chunkUnitCount_1, 0), __helios__int____div1(__helios__duration____div1(__helios__duration____mul(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__targetedSellingTime(__module__DynamicSaleV1__DynamicSaleV1[]__settings(self_337)), 100), __helios__duration__HOUR), 100000000));\n            __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- targetSellingPace \", __helios__real__show(t_2)())), t_2)\n        }\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__elapsedSaleHours_3 = (self_338) -> {\n        () -> {\n            h = __helios__int____div1(__helios__duration____div1(__helios__duration____mul(__helios__time____sub(__module__DynamicSaleV1__DTS_PurchaseInfo[]__purchaseTime(__module__DynamicSaleV1__DynamicSaleV1[]__purchase(self_338)), __module__MarketSaleData__FixedSaleDetailsV1[]__startAt(__module__MarketSaleData__MktSaleDetails[]__V1__fixedSaleDetails(__module__MarketSaleData__MarketSaleData[]__v1details(__module__DynamicSaleV1__DynamicSaleV1[]__sale(self_338))()))), 1000000), __helios__duration__HOUR), 1000000000000);\n            __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- elapsedSaleHours \", __helios__real__show(h)())), h)\n        }\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__overallPaceIncludingThisPurchase_2 = (self_339) -> {\n        () -> {\n            op_3 = __helios__real____div(__module__DynamicSaleV1__DynamicSaleV1[]__actualSellingPace_2(__module__DynamicSaleV1__DynamicSaleV1[]__elapsedSaleHours_3)(self_339)(), __module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace_3(self_339)());\n            __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- overallPaceIncludingThisPurchase \", __helios__real__show(op_3)())), op_3)\n        }\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__pricingFactorDynamicPace_2 = (__module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace_3) -> {\n        (self_340) -> {\n            () -> {\n                prevWeight = 1000000;\n                nextPace_1 = __module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace_3(self_340)();\n                prevPace = __module__DynamicSaleV1__DTS_PurchaseInfo[]__prevSalePace(__module__DynamicSaleV1__DynamicSaleV1[]__purchase(self_340));\n                nextWeight = __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__pricingWeightDynaPace(__module__DynamicSaleV1__DynamicSaleV1[]__settings(self_340));\n                targetSellingPace = __module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace_3(self_340)();\n                r = __helios__real____div(__helios__real____add(__helios__real____mul(__core__ifThenElse(\n                    __helios__real____eq1(prevPace, 0),\n                    () -> {\n                        1000000\n                    },\n                    () -> {\n                        () -> {\n                            __helios__real____div(prevPace, targetSellingPace)\n                        }()\n                    }\n                )(), prevWeight), __helios__real____mul(__core__ifThenElse(\n                    __helios__real____eq1(nextPace_1, 0),\n                    () -> {\n                        1000000\n                    },\n                    () -> {\n                        () -> {\n                            __helios__real____div(nextPace_1, targetSellingPace)\n                        }()\n                    }\n                )(), nextWeight)), __helios__real____add(prevWeight, nextWeight));\n                __core__chooseUnit(__helios__print(__helios__string____add(\"  -- pricingFactorDynamicPace \", __helios__real__show(r)())), r)\n            }\n        }\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace_4 = (self_341) -> {\n        () -> {\n            purchase_1 = __module__DynamicSaleV1__DynamicSaleV1[]__purchase(self_341);\n            settings_1 = __module__DynamicSaleV1__DynamicSaleV1[]__settings(self_341);\n            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Computes the next sale pace, escalating when the pace increases or decaying when the pace below the target pace\", false, (), false, (), false, ()), inferredPace_2 = __module__DynamicSaleV1__DTS_PurchaseInfo[]__inferredPace(purchase_1);\n            __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- inferredPace \", __helios__real__show(inferredPace_2)())), nextPaceWeight = __core__ifThenElse(\n                __helios__real____gt(inferredPace_2, __module__DynamicSaleV1__DTS_PurchaseInfo[]__prevSalePace(purchase_1)),\n                () -> {\n                    __core__chooseUnit(__helios__print(\"    ---- nextPaceWeight: dynaPaceFasterSaleWeight (sale is speeding up)\"), __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__dynaPaceFasterSaleWeight(settings_1))\n                },\n                () -> {\n                    () -> {\n                        __core__ifThenElse(\n                            __helios__real____gt(inferredPace_2, __module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace_3(self_341)()),\n                            () -> {\n                                __core__chooseUnit(__helios__print(\"    ---- nextPaceWeight: 1.0 (sale is proceeding faster than target pace)\"), 1000000)\n                            },\n                            () -> {\n                                () -> {\n                                    __core__chooseUnit(__helios__print(\"    ---- nextPaceWeight: slowing sale; using dynaPaceIdleDecayRate \"), __core__chooseUnit(__helios__print(__helios__string____add(\"      ---- hoursSinceLastPurchase \", __helios__real__show(__module__DynamicSaleV1__DTS_PurchaseInfo[]__hoursSinceLastPurchase(purchase_1))())), __core__chooseUnit(__helios__print(__helios__string____add(\"      ---- * dynaPaceIdleDecayRate \", __helios__real__show(__module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__dynaPaceIdleDecayRate(settings_1))())), result_8 = __module__DynamicSaleV1__maxReal(1000000, __helios__real____mul(__module__DynamicSaleV1__DTS_PurchaseInfo[]__hoursSinceLastPurchase(purchase_1), __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__dynaPaceIdleDecayRate(settings_1)));\n                                    __core__chooseUnit(__helios__print(__helios__string____add(\"  -- nextPaceWeight = \", __helios__real__show(result_8)())), result_8))))\n                                }()\n                            }\n                        )()\n                    }()\n                }\n            )();\n            __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- nextPaceWeight \", __helios__real__show(nextPaceWeight)())), psp = __module__DynamicSaleV1__DTS_PurchaseInfo[]__prevSalePace(purchase_1);\n            __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- prev salePace \", __helios__real__show(psp)())), nextDynamicPace = __helios__real____div(__helios__real____add(__helios__real____mul(inferredPace_2, nextPaceWeight), psp), __helios__real____add1(nextPaceWeight, 1));\n            __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- next salePace: \", __helios__real__show(nextDynamicPace)())), nextDynamicPace)))))\n        }\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__pricingFactorOverallProgress_2 = (__module__DynamicSaleV1__DynamicSaleV1[]__priceExpansion_2, __module__DynamicSaleV1__DynamicSaleV1[]__progressPricingDiscountDepth_2) -> {\n        (self_342) -> {\n            () -> {\n                settings_2 = __module__DynamicSaleV1__DynamicSaleV1[]__settings(self_342);\n                overallPacingProgress = __module__DynamicSaleV1__DynamicSaleV1[]__overallPaceIncludingThisPurchase_2(self_342)();\n                discountEarned = __helios__real____mul(__module__DynamicSaleV1__DynamicSaleV1[]__progressPricingDiscountDepth_2(self_342)(overallPacingProgress), __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountWhenSlow(settings_2));\n                __core__chooseUnit(__helios__print(__helios__string____add(\"      ---- unclamped discountEarned \", __helios__real__show(discountEarned)())), clampedMaxDiscount = __module__DynamicSaleV1__maxReal(0, __module__DynamicSaleV1__minReal(discountEarned, __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountWhenSlow(settings_2)));\n                __core__chooseUnit(__helios__print(__helios__string____add(\"      ---- clampedDiscount \", __helios__real__show(clampedMaxDiscount)())), r_1 = __helios__real____mul(__helios__int____sub1(1, clampedMaxDiscount), __module__DynamicSaleV1__DynamicSaleV1[]__priceExpansion_2(self_342)(overallPacingProgress));\n                __core__chooseUnit(__helios__print(__helios__string____add(\"  -- pricingFactorOverallProgress \", __helios__real__show(r_1)())), r_1)))\n            }\n        }\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__priceExpansion_3 = (self_343) -> {\n        (overallPace) -> {\n            expansion = __core__ifThenElse(\n                __helios__real____lt(overallPace, 1000000),\n                () -> {\n                    1000000\n                },\n                () -> {\n                    () -> {\n                        __helios__real____add(1000000, __helios__real____div(__helios__real____mul(__helios__real____sub(overallPace, 1000000), __helios__real____add(1000000, __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingExpansionWhenFast(__module__DynamicSaleV1__DynamicSaleV1[]__settings(self_343)))), 3000000))\n                    }()\n                }\n            )();\n            __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- priceExpansion \", __helios__real__show(expansion)())), expansion)\n        }\n    };\n    __module__DynamicSaleV1__DynamicSaleV1[]__progressPricingDiscountDepth_3 = (self_344) -> {\n        (overallPace_1) -> {\n            settings_3 = __module__DynamicSaleV1__DynamicSaleV1[]__settings(self_344);\n            __core__chooseUnit(__helios__print(__helios__string____add(\"      ---- pPDD overallPace \", __helios__real__show(overallPace_1)())), ceilingHeight = __helios__real____sub(1000000, __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountFloorPoint(settings_3));\n            aboveFloor = __core__ifThenElse(\n                __helios__real____gt(overallPace_1, __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountFloorPoint(settings_3)),\n                () -> {\n                    __helios__real____sub(overallPace_1, __module__DynamicSaleV1Settings__DynamicSaleV1Settings[]__progressPricingDiscountFloorPoint(settings_3))\n                },\n                () -> {\n                    () -> {\n                        0\n                    }()\n                }\n            )();\n            relativeHeight = __core__ifThenElse(\n                __helios__real____leq1(aboveFloor, 0),\n                () -> {\n                    0\n                },\n                () -> {\n                    () -> {\n                        __helios__real____div(aboveFloor, ceilingHeight)\n                    }()\n                }\n            )();\n            __core__chooseUnit(__helios__print(__helios__string____add(\"      ---- pPDD ceilingHeight \", __helios__real__show(ceilingHeight)())), __core__chooseUnit(__helios__print(__helios__string____add(\"      ---- pPDD aboveFloor \", __helios__real__show(aboveFloor)())), __core__chooseUnit(__helios__print(__helios__string____add(\"      ---- pPDD relativeHeight \", __helios__real__show(relativeHeight)())), ppdd = __helios__int____sub1(1, relativeHeight);\n            __core__chooseUnit(__helios__print(__helios__string____add(\"    ---- progressPricingDiscountDepth \", __helios__real__show(ppdd)())), ppdd)))))\n        }\n    };\n    __module__MarketSalePolicy__DelegateDatum[]__is_valid_data = (__module__MarketSalePolicy__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__MarketSalePolicy__DelegateDatum[]__IsDelegation__is_valid_data, __module__MarketSalePolicy__DelegateDatum[]__capoStoredData__is_valid_data) -> {\n        (data_344) -> {\n            __core__ifThenElse(\n                __module__MarketSalePolicy__DelegateDatum[]__capoStoredData__is_valid_data(data_344),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__MarketSalePolicy__DelegateDatum[]__IsDelegation__is_valid_data(data_344),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__MarketSalePolicy__DelegateDatum[]__Cip68RefToken__is_valid_data(data_344),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__MarketSalePolicy__DelegateDatum[]__from_data = (__module__MarketSalePolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__MarketSalePolicy__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__MarketSalePolicy__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {\n        (data_345) -> {\n            ignore_29 = __core__ifThenElse(\n                __module__MarketSalePolicy__DelegateDatum[]__is_valid_data(__module__MarketSalePolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__MarketSalePolicy__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__MarketSalePolicy__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_345),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid DelegateDatum data\", ())\n                }\n            )();\n            data_345\n        }\n    };\n    __module__MarketSalePolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_346) -> {\n        __core__chooseData(data_346, () -> {\n            pair_100 = __core__unConstrData__safe(data_346);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_100), 0),\n                () -> {\n                    data_347 = __core__listData(__core__sndPair(pair_100));\n                    __core__chooseData(data_347, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_246 = __core__unListData__safe(data_347);\n                        __core__chooseList(fields_246, () -> {\n                            false\n                        }, () -> {\n                            head_154 = __core__headList__safe(fields_246);\n                            __core__ifThenElse(\n                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_154),\n                                () -> {\n                                    fields_247 = __core__tailList__safe(fields_246);\n                                    __core__chooseList(fields_247, () -> {\n                                        false\n                                    }, () -> {\n                                        head_155 = __core__headList__safe(fields_247);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_155),\n                                            () -> {\n                                                fields_248 = __core__tailList__safe(fields_247);\n                                                __core__chooseList(fields_248, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_156 = __core__headList__safe(fields_248);\n                                                    __core__ifThenElse(\n                                                        __helios__data__is_valid_data(head_156),\n                                                        () -> {\n                                                            fields_249 = __core__tailList__safe(fields_248);\n                                                            __core__chooseList(fields_249, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;\n    __module__MarketSalePolicy__DelegateDatum[]__IsDelegation____is = (data_348) -> {\n        __helios__common__enum_tag_equals(data_348, 1)\n    };\n    __module__MarketSalePolicy__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_349) -> {\n        __core__chooseData(data_349, () -> {\n            pair_101 = __core__unConstrData__safe(data_349);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_101), 1),\n                () -> {\n                    data_350 = __core__listData(__core__sndPair(pair_101));\n                    __core__chooseData(data_350, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_250 = __core__unListData__safe(data_350);\n                        __core__chooseList(fields_250, () -> {\n                            false\n                        }, () -> {\n                            head_157 = __core__headList__safe(fields_250);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_157),\n                                () -> {\n                                    fields_251 = __core__tailList__safe(fields_250);\n                                    __core__chooseList(fields_251, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__DelegateDatum[]__IsDelegation__dd = (self_345) -> {\n        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_345))\n    };\n    __module__MarketSalePolicy__DelegateDatum[]__capoStoredData____is = (data_351) -> {\n        __helios__common__enum_tag_equals(data_351, 2)\n    };\n    __module__MarketSalePolicy__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_352) -> {\n        __core__chooseData(data_352, () -> {\n            pair_102 = __core__unConstrData__safe(data_352);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_102), 2),\n                () -> {\n                    data_353 = __core__listData(__core__sndPair(pair_102));\n                    __core__chooseData(data_353, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_252 = __core__unListData__safe(data_353);\n                        __core__chooseList(fields_252, () -> {\n                            false\n                        }, () -> {\n                            head_158 = __core__headList__safe(fields_252);\n                            __core__ifThenElse(\n                                __module__MarketSaleData__MarketSaleData[]__is_valid_data(head_158),\n                                () -> {\n                                    fields_253 = __core__tailList__safe(fields_252);\n                                    __core__chooseList(fields_253, () -> {\n                                        false\n                                    }, () -> {\n                                        head_159 = __core__headList__safe(fields_253);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_159),\n                                            () -> {\n                                                fields_254 = __core__tailList__safe(fields_253);\n                                                __core__chooseList(fields_254, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_160 = __core__headList__safe(fields_254);\n                                                    __core__ifThenElse(\n                                                        __helios__data__is_valid_data(head_160),\n                                                        () -> {\n                                                            fields_255 = __core__tailList__safe(fields_254);\n                                                            __core__chooseList(fields_255, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__MintingActivity[]__is_valid_data = (__module__MarketSalePolicy__MintingActivity[]__CreatingRecord__is_valid_data, __module__MarketSalePolicy__MintingActivity[]__SplittingSaleChunkAndBuying__is_valid_data) -> {\n        (data_354) -> {\n            __core__ifThenElse(\n                __module__MarketSalePolicy__MintingActivity[]__SplittingSaleChunkAndBuying__is_valid_data(data_354),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__MarketSalePolicy__MintingActivity[]__CreatingRecord__is_valid_data(data_354),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__MarketSalePolicy__MintingActivity[]__from_data = (__module__MarketSalePolicy__MintingActivity[]__CreatingRecord__is_valid_data_1, __module__MarketSalePolicy__MintingActivity[]__SplittingSaleChunkAndBuying__is_valid_data_1) -> {\n        (data_355) -> {\n            ignore_30 = __core__ifThenElse(\n                __module__MarketSalePolicy__MintingActivity[]__is_valid_data(__module__MarketSalePolicy__MintingActivity[]__CreatingRecord__is_valid_data_1, __module__MarketSalePolicy__MintingActivity[]__SplittingSaleChunkAndBuying__is_valid_data_1)(data_355),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid MintingActivity data\", ())\n                }\n            )();\n            data_355\n        }\n    };\n    __module__MarketSalePolicy__MintingActivity[]__CreatingRecord__is_valid_data_2 = (data_356) -> {\n        __core__chooseData(data_356, () -> {\n            pair_103 = __core__unConstrData__safe(data_356);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_103), 0),\n                () -> {\n                    data_357 = __core__listData(__core__sndPair(pair_103));\n                    __core__chooseData(data_357, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_256 = __core__unListData__safe(data_357);\n                        __core__chooseList(fields_256, () -> {\n                            false\n                        }, () -> {\n                            head_161 = __core__headList__safe(fields_256);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_161),\n                                () -> {\n                                    fields_257 = __core__tailList__safe(fields_256);\n                                    __core__chooseList(fields_257, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__MintingActivity[]__CreatingRecord__seed = (self_346) -> {\n        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_346))\n    };\n    __module__MarketSalePolicy__MintingActivity[]__SplittingSaleChunkAndBuying____is = (data_358) -> {\n        __helios__common__enum_tag_equals(data_358, 1)\n    };\n    __module__MarketSalePolicy__MintingActivity[]__SplittingSaleChunkAndBuying__is_valid_data_2 = (data_359) -> {\n        __core__chooseData(data_359, () -> {\n            pair_104 = __core__unConstrData__safe(data_359);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_104), 1),\n                () -> {\n                    data_360 = __core__listData(__core__sndPair(pair_104));\n                    __core__chooseData(data_360, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_258 = __core__unListData__safe(data_360);\n                        __core__chooseList(fields_258, () -> {\n                            false\n                        }, () -> {\n                            head_162 = __core__headList__safe(fields_258);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_162),\n                                () -> {\n                                    fields_259 = __core__tailList__safe(fields_258);\n                                    __core__chooseList(fields_259, () -> {\n                                        false\n                                    }, () -> {\n                                        head_163 = __core__headList__safe(fields_259);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_163),\n                                            () -> {\n                                                fields_260 = __core__tailList__safe(fields_259);\n                                                __core__chooseList(fields_260, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_164 = __core__headList__safe(fields_260);\n                                                    __core__ifThenElse(\n                                                        __helios__int__is_valid_data(head_164),\n                                                        () -> {\n                                                            fields_261 = __core__tailList__safe(fields_260);\n                                                            __core__chooseList(fields_261, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__is_valid_data = (__module__MarketSalePolicy__SpendingActivity[]__UpdatingRecord__is_valid_data, __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__is_valid_data, __module__MarketSalePolicy__SpendingActivity[]__Activating__is_valid_data, __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__is_valid_data, __module__MarketSalePolicy__SpendingActivity[]__MergingChildChunk__is_valid_data, __module__MarketSalePolicy__SpendingActivity[]__Retiring__is_valid_data) -> {\n        (data_361) -> {\n            __core__ifThenElse(\n                __module__MarketSalePolicy__SpendingActivity[]__Retiring__is_valid_data(data_361),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__MarketSalePolicy__SpendingActivity[]__MergingChildChunk__is_valid_data(data_361),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__is_valid_data(data_361),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__MarketSalePolicy__SpendingActivity[]__Activating__is_valid_data(data_361),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__is_valid_data(data_361),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__MarketSalePolicy__SpendingActivity[]__UpdatingRecord__is_valid_data(data_361),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__from_data = (__module__MarketSalePolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_1, __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__is_valid_data_1, __module__MarketSalePolicy__SpendingActivity[]__Activating__is_valid_data_1, __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__is_valid_data_1, __module__MarketSalePolicy__SpendingActivity[]__MergingChildChunk__is_valid_data_1, __module__MarketSalePolicy__SpendingActivity[]__Retiring__is_valid_data_1) -> {\n        (data_362) -> {\n            ignore_31 = __core__ifThenElse(\n                __module__MarketSalePolicy__SpendingActivity[]__is_valid_data(__module__MarketSalePolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_1, __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__is_valid_data_1, __module__MarketSalePolicy__SpendingActivity[]__Activating__is_valid_data_1, __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__is_valid_data_1, __module__MarketSalePolicy__SpendingActivity[]__MergingChildChunk__is_valid_data_1, __module__MarketSalePolicy__SpendingActivity[]__Retiring__is_valid_data_1)(data_362),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid SpendingActivity data\", ())\n                }\n            )();\n            data_362\n        }\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__UpdatingRecord____is = (data_363) -> {\n        __helios__common__enum_tag_equals(data_363, 0)\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2 = (data_364) -> {\n        __core__chooseData(data_364, () -> {\n            pair_105 = __core__unConstrData__safe(data_364);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_105), 0),\n                () -> {\n                    data_365 = __core__listData(__core__sndPair(pair_105));\n                    __core__chooseData(data_365, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_262 = __core__unListData__safe(data_365);\n                        __core__chooseList(fields_262, () -> {\n                            false\n                        }, () -> {\n                            head_165 = __core__headList__safe(fields_262);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_165),\n                                () -> {\n                                    fields_263 = __core__tailList__safe(fields_262);\n                                    __core__chooseList(fields_263, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__AddingToSale____is = (data_366) -> {\n        __helios__common__enum_tag_equals(data_366, 1)\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__is_valid_data_2 = (data_367) -> {\n        __core__chooseData(data_367, () -> {\n            pair_106 = __core__unConstrData__safe(data_367);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_106), 1),\n                () -> {\n                    data_368 = __core__listData(__core__sndPair(pair_106));\n                    __core__chooseData(data_368, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_264 = __core__unListData__safe(data_368);\n                        __core__chooseList(fields_264, () -> {\n                            false\n                        }, () -> {\n                            head_166 = __core__headList__safe(fields_264);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_166),\n                                () -> {\n                                    fields_265 = __core__tailList__safe(fields_264);\n                                    __core__chooseList(fields_265, () -> {\n                                        false\n                                    }, () -> {\n                                        head_167 = __core__headList__safe(fields_265);\n                                        __core__ifThenElse(\n                                            __helios__mintingpolicyhash__is_valid_data(head_167),\n                                            () -> {\n                                                fields_266 = __core__tailList__safe(fields_265);\n                                                __core__chooseList(fields_266, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_168 = __core__headList__safe(fields_266);\n                                                    __core__ifThenElse(\n                                                        __helios__bytearray__is_valid_data(head_168),\n                                                        () -> {\n                                                            fields_267 = __core__tailList__safe(fields_266);\n                                                            __core__chooseList(fields_267, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__id = (self_347) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_0(self_347))\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__mph = (self_348) -> {\n        __helios__mintingpolicyhash__from_data(__helios__common__enum_field_1(self_348))\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__tn = (self_349) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_2(self_349))\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__Activating____is = (data_369) -> {\n        __helios__common__enum_tag_equals(data_369, 2)\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__Activating__is_valid_data_2 = (data_370) -> {\n        __core__chooseData(data_370, () -> {\n            pair_107 = __core__unConstrData__safe(data_370);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_107), 2),\n                () -> {\n                    data_371 = __core__listData(__core__sndPair(pair_107));\n                    __core__chooseData(data_371, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_268 = __core__unListData__safe(data_371);\n                        __core__chooseList(fields_268, () -> {\n                            false\n                        }, () -> {\n                            head_169 = __core__headList__safe(fields_268);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_169),\n                                () -> {\n                                    fields_269 = __core__tailList__safe(fields_268);\n                                    __core__chooseList(fields_269, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__Activating__id = (self_350) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_0(self_350))\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__SellingTokens____is = (data_372) -> {\n        __helios__common__enum_tag_equals(data_372, 3)\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__is_valid_data_2 = (data_373) -> {\n        __core__chooseData(data_373, () -> {\n            pair_108 = __core__unConstrData__safe(data_373);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_108), 3),\n                () -> {\n                    data_374 = __core__listData(__core__sndPair(pair_108));\n                    __core__chooseData(data_374, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_270 = __core__unListData__safe(data_374);\n                        __core__chooseList(fields_270, () -> {\n                            false\n                        }, () -> {\n                            head_170 = __core__headList__safe(fields_270);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_170),\n                                () -> {\n                                    fields_271 = __core__tailList__safe(fields_270);\n                                    __core__chooseList(fields_271, () -> {\n                                        false\n                                    }, () -> {\n                                        head_171 = __core__headList__safe(fields_271);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_171),\n                                            () -> {\n                                                fields_272 = __core__tailList__safe(fields_271);\n                                                __core__chooseList(fields_272, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_172 = __core__headList__safe(fields_272);\n                                                    __core__ifThenElse(\n                                                        __helios__value__is_valid_data(head_172),\n                                                        () -> {\n                                                            fields_273 = __core__tailList__safe(fields_272);\n                                                            __core__chooseList(fields_273, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__id = (self_351) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_0(self_351))\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__sellingUnitQuantity = (self_352) -> {\n        __helios__int__from_data(__helios__common__enum_field_1(self_352))\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__salePrice = (self_353) -> {\n        __helios__value__from_data(__helios__common__enum_field_2(self_353))\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__MergingChildChunk____is = (data_375) -> {\n        __helios__common__enum_tag_equals(data_375, 4)\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__MergingChildChunk__is_valid_data_2 = (data_376) -> {\n        __core__chooseData(data_376, () -> {\n            pair_109 = __core__unConstrData__safe(data_376);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_109), 4),\n                () -> {\n                    data_377 = __core__listData(__core__sndPair(pair_109));\n                    __core__chooseData(data_377, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_274 = __core__unListData__safe(data_377);\n                        __core__chooseList(fields_274, () -> {\n                            false\n                        }, () -> {\n                            head_173 = __core__headList__safe(fields_274);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_173),\n                                () -> {\n                                    fields_275 = __core__tailList__safe(fields_274);\n                                    __core__chooseList(fields_275, () -> {\n                                        false\n                                    }, () -> {\n                                        head_174 = __core__headList__safe(fields_275);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_174),\n                                            () -> {\n                                                fields_276 = __core__tailList__safe(fields_275);\n                                                __core__chooseList(fields_276, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__SpendingActivity[]__Retiring__is_valid_data_2 = (data_378) -> {\n        __core__chooseData(data_378, () -> {\n            pair_110 = __core__unConstrData__safe(data_378);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_110), 5),\n                () -> {\n                    data_379 = __core__listData(__core__sndPair(pair_110));\n                    __core__chooseData(data_379, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_277 = __core__unListData__safe(data_379);\n                        __core__chooseList(fields_277, () -> {\n                            false\n                        }, () -> {\n                            head_175 = __core__headList__safe(fields_277);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_175),\n                                () -> {\n                                    fields_278 = __core__tailList__safe(fields_277);\n                                    __core__chooseList(fields_278, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__BurningActivity[]__is_valid_data = (__module__MarketSalePolicy__BurningActivity[]__DeletingRecord__is_valid_data, __module__MarketSalePolicy__BurningActivity[]__JoiningWithParentChunk__is_valid_data, __module__MarketSalePolicy__BurningActivity[]__CleanupRetired__is_valid_data) -> {\n        (data_380) -> {\n            __core__ifThenElse(\n                __module__MarketSalePolicy__BurningActivity[]__CleanupRetired__is_valid_data(data_380),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__MarketSalePolicy__BurningActivity[]__JoiningWithParentChunk__is_valid_data(data_380),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__MarketSalePolicy__BurningActivity[]__DeletingRecord__is_valid_data(data_380),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__MarketSalePolicy__BurningActivity[]__from_data = (__module__MarketSalePolicy__BurningActivity[]__DeletingRecord__is_valid_data_1, __module__MarketSalePolicy__BurningActivity[]__JoiningWithParentChunk__is_valid_data_1, __module__MarketSalePolicy__BurningActivity[]__CleanupRetired__is_valid_data_1) -> {\n        (data_381) -> {\n            ignore_32 = __core__ifThenElse(\n                __module__MarketSalePolicy__BurningActivity[]__is_valid_data(__module__MarketSalePolicy__BurningActivity[]__DeletingRecord__is_valid_data_1, __module__MarketSalePolicy__BurningActivity[]__JoiningWithParentChunk__is_valid_data_1, __module__MarketSalePolicy__BurningActivity[]__CleanupRetired__is_valid_data_1)(data_381),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid BurningActivity data\", ())\n                }\n            )();\n            data_381\n        }\n    };\n    __module__MarketSalePolicy__BurningActivity[]__DeletingRecord____is = (data_382) -> {\n        __helios__common__enum_tag_equals(data_382, 0)\n    };\n    __module__MarketSalePolicy__BurningActivity[]__DeletingRecord__is_valid_data_2 = (data_383) -> {\n        __core__chooseData(data_383, () -> {\n            pair_111 = __core__unConstrData__safe(data_383);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_111), 0),\n                () -> {\n                    data_384 = __core__listData(__core__sndPair(pair_111));\n                    __core__chooseData(data_384, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_279 = __core__unListData__safe(data_384);\n                        __core__chooseList(fields_279, () -> {\n                            false\n                        }, () -> {\n                            head_176 = __core__headList__safe(fields_279);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_176),\n                                () -> {\n                                    fields_280 = __core__tailList__safe(fields_279);\n                                    __core__chooseList(fields_280, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__BurningActivity[]__JoiningWithParentChunk____is = (data_385) -> {\n        __helios__common__enum_tag_equals(data_385, 1)\n    };\n    __module__MarketSalePolicy__BurningActivity[]__JoiningWithParentChunk__is_valid_data_2 = (data_386) -> {\n        __core__chooseData(data_386, () -> {\n            pair_112 = __core__unConstrData__safe(data_386);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_112), 1),\n                () -> {\n                    data_387 = __core__listData(__core__sndPair(pair_112));\n                    __core__chooseData(data_387, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_281 = __core__unListData__safe(data_387);\n                        __core__chooseList(fields_281, () -> {\n                            false\n                        }, () -> {\n                            head_177 = __core__headList__safe(fields_281);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_177),\n                                () -> {\n                                    fields_282 = __core__tailList__safe(fields_281);\n                                    __core__chooseList(fields_282, () -> {\n                                        false\n                                    }, () -> {\n                                        head_178 = __core__headList__safe(fields_282);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_178),\n                                            () -> {\n                                                fields_283 = __core__tailList__safe(fields_282);\n                                                __core__chooseList(fields_283, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__BurningActivity[]__CleanupRetired__is_valid_data_2 = (data_388) -> {\n        __core__chooseData(data_388, () -> {\n            pair_113 = __core__unConstrData__safe(data_388);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_113), 2),\n                () -> {\n                    data_389 = __core__listData(__core__sndPair(pair_113));\n                    __core__chooseData(data_389, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_284 = __core__unListData__safe(data_389);\n                        __core__chooseList(fields_284, () -> {\n                            false\n                        }, () -> {\n                            head_179 = __core__headList__safe(fields_284);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_179),\n                                () -> {\n                                    fields_285 = __core__tailList__safe(fields_284);\n                                    __core__chooseList(fields_285, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__is_valid_data = (__module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities__is_valid_data, __module__MarketSalePolicy__DelegateActivity[]__MintingActivities__is_valid_data, __module__MarketSalePolicy__DelegateActivity[]__BurningActivities__is_valid_data, __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data, __module__MarketSalePolicy__DelegateActivity[]__OtherActivities__is_valid_data) -> {\n        (data_390) -> {\n            __core__ifThenElse(\n                __module__MarketSalePolicy__DelegateActivity[]__OtherActivities__is_valid_data(data_390),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_390),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_390),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_390),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_390),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__MarketSalePolicy__DelegateActivity[]__BurningActivities__is_valid_data(data_390),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__MarketSalePolicy__DelegateActivity[]__MintingActivities__is_valid_data(data_390),\n                                                                () -> {\n                                                                    true\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities__is_valid_data(data_390),\n                                                                        () -> {\n                                                                            true\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_390),\n                                                                                () -> {\n                                                                                    true\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_390),\n                                                                                        () -> {\n                                                                                            true\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__from_data = (__module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__OtherActivities__is_valid_data_1) -> {\n        (data_391) -> {\n            ignore_33 = __core__ifThenElse(\n                __module__MarketSalePolicy__DelegateActivity[]__is_valid_data(__module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1, __module__MarketSalePolicy__DelegateActivity[]__OtherActivities__is_valid_data_1)(data_391),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid DelegateActivity data\", ())\n                }\n            )();\n            data_391\n        }\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities____is = (data_392) -> {\n        __helios__common__enum_tag_equals(data_392, 0)\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_393) -> {\n        __core__chooseData(data_393, () -> {\n            pair_114 = __core__unConstrData__safe(data_393);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_114), 0),\n                () -> {\n                    data_394 = __core__listData(__core__sndPair(pair_114));\n                    __core__chooseData(data_394, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_286 = __core__unListData__safe(data_394);\n                        __core__chooseList(fields_286, () -> {\n                            false\n                        }, () -> {\n                            head_180 = __core__headList__safe(fields_286);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_180),\n                                () -> {\n                                    fields_287 = __core__tailList__safe(fields_286);\n                                    __core__chooseList(fields_287, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities__activity = (self_354) -> {\n        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_354))\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities____is = (data_395) -> {\n        __helios__common__enum_tag_equals(data_395, 1)\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_396) -> {\n        __core__chooseData(data_396, () -> {\n            pair_115 = __core__unConstrData__safe(data_396);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_115), 1),\n                () -> {\n                    data_397 = __core__listData(__core__sndPair(pair_115));\n                    __core__chooseData(data_397, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_288 = __core__unListData__safe(data_397);\n                        __core__chooseList(fields_288, () -> {\n                            false\n                        }, () -> {\n                            head_181 = __core__headList__safe(fields_288);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_181),\n                                () -> {\n                                    fields_289 = __core__tailList__safe(fields_288);\n                                    __core__chooseList(fields_289, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_355) -> {\n        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_355))\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities____is = (data_398) -> {\n        __helios__common__enum_tag_equals(data_398, 2)\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_399) -> {\n        __core__chooseData(data_399, () -> {\n            pair_116 = __core__unConstrData__safe(data_399);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_116), 2),\n                () -> {\n                    data_400 = __core__listData(__core__sndPair(pair_116));\n                    __core__chooseData(data_400, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_290 = __core__unListData__safe(data_400);\n                        __core__chooseList(fields_290, () -> {\n                            false\n                        }, () -> {\n                            head_182 = __core__headList__safe(fields_290);\n                            __core__ifThenElse(\n                                __module__MarketSalePolicy__SpendingActivity[]__is_valid_data(__module__MarketSalePolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2, __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__is_valid_data_2, __module__MarketSalePolicy__SpendingActivity[]__Activating__is_valid_data_2, __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__is_valid_data_2, __module__MarketSalePolicy__SpendingActivity[]__MergingChildChunk__is_valid_data_2, __module__MarketSalePolicy__SpendingActivity[]__Retiring__is_valid_data_2)(head_182),\n                                () -> {\n                                    fields_291 = __core__tailList__safe(fields_290);\n                                    __core__chooseList(fields_291, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities__activity = (self_356) -> {\n        __module__MarketSalePolicy__SpendingActivity[]__from_data(__module__MarketSalePolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2, __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__is_valid_data_2, __module__MarketSalePolicy__SpendingActivity[]__Activating__is_valid_data_2, __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__is_valid_data_2, __module__MarketSalePolicy__SpendingActivity[]__MergingChildChunk__is_valid_data_2, __module__MarketSalePolicy__SpendingActivity[]__Retiring__is_valid_data_2)(__helios__common__enum_field_0(self_356))\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__MintingActivities____is = (data_401) -> {\n        __helios__common__enum_tag_equals(data_401, 3)\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_402) -> {\n        __core__chooseData(data_402, () -> {\n            pair_117 = __core__unConstrData__safe(data_402);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_117), 3),\n                () -> {\n                    data_403 = __core__listData(__core__sndPair(pair_117));\n                    __core__chooseData(data_403, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_292 = __core__unListData__safe(data_403);\n                        __core__chooseList(fields_292, () -> {\n                            false\n                        }, () -> {\n                            head_183 = __core__headList__safe(fields_292);\n                            __core__ifThenElse(\n                                __module__MarketSalePolicy__MintingActivity[]__is_valid_data(__module__MarketSalePolicy__MintingActivity[]__CreatingRecord__is_valid_data_2, __module__MarketSalePolicy__MintingActivity[]__SplittingSaleChunkAndBuying__is_valid_data_2)(head_183),\n                                () -> {\n                                    fields_293 = __core__tailList__safe(fields_292);\n                                    __core__chooseList(fields_293, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__MintingActivities__activity = (self_357) -> {\n        __module__MarketSalePolicy__MintingActivity[]__from_data(__module__MarketSalePolicy__MintingActivity[]__CreatingRecord__is_valid_data_2, __module__MarketSalePolicy__MintingActivity[]__SplittingSaleChunkAndBuying__is_valid_data_2)(__helios__common__enum_field_0(self_357))\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__BurningActivities____is = (data_404) -> {\n        __helios__common__enum_tag_equals(data_404, 4)\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_405) -> {\n        __core__chooseData(data_405, () -> {\n            pair_118 = __core__unConstrData__safe(data_405);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_118), 4),\n                () -> {\n                    data_406 = __core__listData(__core__sndPair(pair_118));\n                    __core__chooseData(data_406, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_294 = __core__unListData__safe(data_406);\n                        __core__chooseList(fields_294, () -> {\n                            false\n                        }, () -> {\n                            head_184 = __core__headList__safe(fields_294);\n                            __core__ifThenElse(\n                                __module__MarketSalePolicy__BurningActivity[]__is_valid_data(__module__MarketSalePolicy__BurningActivity[]__DeletingRecord__is_valid_data_2, __module__MarketSalePolicy__BurningActivity[]__JoiningWithParentChunk__is_valid_data_2, __module__MarketSalePolicy__BurningActivity[]__CleanupRetired__is_valid_data_2)(head_184),\n                                () -> {\n                                    fields_295 = __core__tailList__safe(fields_294);\n                                    __core__chooseList(fields_295, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__BurningActivities__activity = (self_358) -> {\n        __module__MarketSalePolicy__BurningActivity[]__from_data(__module__MarketSalePolicy__BurningActivity[]__DeletingRecord__is_valid_data_2, __module__MarketSalePolicy__BurningActivity[]__JoiningWithParentChunk__is_valid_data_2, __module__MarketSalePolicy__BurningActivity[]__CleanupRetired__is_valid_data_2)(__helios__common__enum_field_0(self_358))\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData____is = (data_407) -> {\n        __helios__common__enum_tag_equals(data_407, 5)\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_408) -> {\n        __core__chooseData(data_408, () -> {\n            pair_119 = __core__unConstrData__safe(data_408);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_119), 5),\n                () -> {\n                    data_409 = __core__listData(__core__sndPair(pair_119));\n                    __core__chooseData(data_409, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_296 = __core__unListData__safe(data_409);\n                        __core__chooseList(fields_296, () -> {\n                            false\n                        }, () -> {\n                            head_185 = __core__headList__safe(fields_296);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_185),\n                                () -> {\n                                    fields_297 = __core__tailList__safe(fields_296);\n                                    __core__chooseList(fields_297, () -> {\n                                        false\n                                    }, () -> {\n                                        head_186 = __core__headList__safe(fields_297);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_186),\n                                            () -> {\n                                                fields_298 = __core__tailList__safe(fields_297);\n                                                __core__chooseList(fields_298, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__seed = (self_359) -> {\n        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_359))\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__dataType = (self_360) -> {\n        __helios__string__from_data(__helios__common__enum_field_1(self_360))\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData____is = (data_410) -> {\n        __helios__common__enum_tag_equals(data_410, 6)\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_411) -> {\n        __core__chooseData(data_411, () -> {\n            pair_120 = __core__unConstrData__safe(data_411);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_120), 6),\n                () -> {\n                    data_412 = __core__listData(__core__sndPair(pair_120));\n                    __core__chooseData(data_412, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_299 = __core__unListData__safe(data_412);\n                        __core__chooseList(fields_299, () -> {\n                            false\n                        }, () -> {\n                            head_187 = __core__headList__safe(fields_299);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_187),\n                                () -> {\n                                    fields_300 = __core__tailList__safe(fields_299);\n                                    __core__chooseList(fields_300, () -> {\n                                        false\n                                    }, () -> {\n                                        head_188 = __core__headList__safe(fields_300);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_188),\n                                            () -> {\n                                                fields_301 = __core__tailList__safe(fields_300);\n                                                __core__chooseList(fields_301, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_361) -> {\n        __helios__string__from_data(__helios__common__enum_field_0(self_361))\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__recId = (self_362) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_1(self_362))\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData____is = (data_413) -> {\n        __helios__common__enum_tag_equals(data_413, 7)\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_414) -> {\n        __core__chooseData(data_414, () -> {\n            pair_121 = __core__unConstrData__safe(data_414);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_121), 7),\n                () -> {\n                    data_415 = __core__listData(__core__sndPair(pair_121));\n                    __core__chooseData(data_415, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_302 = __core__unListData__safe(data_415);\n                        __core__chooseList(fields_302, () -> {\n                            false\n                        }, () -> {\n                            head_189 = __core__headList__safe(fields_302);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_189),\n                                () -> {\n                                    fields_303 = __core__tailList__safe(fields_302);\n                                    __core__chooseList(fields_303, () -> {\n                                        false\n                                    }, () -> {\n                                        head_190 = __core__headList__safe(fields_303);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_190),\n                                            () -> {\n                                                fields_304 = __core__tailList__safe(fields_303);\n                                                __core__chooseList(fields_304, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData__recId = (self_363) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_1(self_363))\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities____is = (data_416) -> {\n        __helios__common__enum_tag_equals(data_416, 8)\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_417) -> {\n        __core__chooseData(data_417, () -> {\n            pair_122 = __core__unConstrData__safe(data_417);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_122), 8),\n                () -> {\n                    data_418 = __core__listData(__core__sndPair(pair_122));\n                    __core__chooseData(data_418, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_305 = __core__unListData__safe(data_418);\n                        __core__chooseList(fields_305, () -> {\n                            false\n                        }, () -> {\n                            head_191 = __core__headList__safe(fields_305);\n                            __core__ifThenElse(\n                                __helios__list[__helios__data]__is_valid_data(head_191),\n                                () -> {\n                                    fields_306 = __core__tailList__safe(fields_305);\n                                    __core__chooseList(fields_306, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities__activities = (self_364) -> {\n        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_364))\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__OtherActivities____is = (data_419) -> {\n        __helios__common__enum_tag_equals(data_419, 9)\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__OtherActivities__is_valid_data_2 = (data_420) -> {\n        __core__chooseData(data_420, () -> {\n            pair_123 = __core__unConstrData__safe(data_420);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_123), 9),\n                () -> {\n                    data_421 = __core__listData(__core__sndPair(pair_123));\n                    __core__chooseData(data_421, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_307 = __core__unListData__safe(data_421);\n                        __core__chooseList(fields_307, () -> {\n                            false\n                        }, () -> {\n                            head_192 = __core__headList__safe(fields_307);\n                            __core__ifThenElse(\n                                __helios__data__is_valid_data(head_192),\n                                () -> {\n                                    fields_308 = __core__tailList__safe(fields_307);\n                                    __core__chooseList(fields_308, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__option[__module__MarketSaleData__MarketSaleData[]]__some____new = (some_5) -> {\n        __core__constrData(0, __helios__common__list_1(__module__MarketSaleData__MarketSaleData[]____to_data(some_5)))\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__additionalDelegateValidation = (self_365) -> {\n        (priorMddd, cctx) -> {\n            __core__chooseUnit(__helios__print(\"  -- mktSalePolicy: checking additional delegate validation\"), __helios__bool__or(() -> {\n                __cond_65 = self_365;\n                __core__ifThenElse(\n                    __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_65),\n                    () -> {\n                        (__lhs_0_150) -> {\n                            true\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_65),\n                            () -> {\n                                (__lhs_0_149) -> {\n                                    __helios__error(\"unreachable\")\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __module__MarketSalePolicy__DelegateActivity[]__MintingActivities____is(__cond_65),\n                                    () -> {\n                                        (__lhs_0_146) -> {\n                                            ma_2 = __module__MarketSalePolicy__DelegateActivity[]__MintingActivities__activity(__lhs_0_146);\n                                            __cond_68 = ma_2;\n                                            __core__ifThenElse(\n                                                __module__MarketSalePolicy__MintingActivity[]__SplittingSaleChunkAndBuying____is(__cond_68),\n                                                () -> {\n                                                    (__lhs_0_148) -> {\n                                                        __helios__error(\"SplittingSaleChunk: Implement the above details\")\n                                                    }\n                                                },\n                                                () -> {\n                                                    (__lhs_0_147) -> {\n                                                        seed_3 = __module__MarketSalePolicy__MintingActivity[]__CreatingRecord__seed(__lhs_0_147);\n                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), \"can't\"), mktSaleId = __module__CapoMintHelpers__mkUutTnFactory(seed_3)(\"mktSale\");\n                                                        mktSaleDD_3 = __module__CapoHelpers__CapoCtx[]__creatingDgData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(true, mktSaleId, false, (), false, ());\n                                                        mktSale = __module__MarketSaleData__MarketSaleData[]__from_data(__module__CapoHelpers__DgDataDetails[]__outputData(mktSaleDD_3)());\n                                                        __helios__bool__and(() -> {\n                                                            __helios__bool__and(() -> {\n                                                                __helios__bool__and(() -> {\n                                                                    __helios__bool__and(() -> {\n                                                                        true\n                                                                    }, () -> {\n                                                                        __module__MarketSaleData__MarketSaleData[]__validate(mktSale)()\n                                                                    })\n                                                                }, () -> {\n                                                                    __module__MarketSaleData__MarketSaleData[]__validateCreatedDetails(mktSale)()\n                                                                })\n                                                            }, () -> {\n                                                                __module__MarketSaleData__MarketSaleData[]__validatePendingDetails(mktSale)()\n                                                            })\n                                                        }, () -> {\n                                                            true\n                                                        }))\n                                                    }\n                                                }\n                                            )()(__cond_68)\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities____is(__cond_65),\n                                            () -> {\n                                                (__lhs_0_139) -> {\n                                                    x_13 = __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities__activity(__lhs_0_139);\n                                                    __cond_67 = x_13;\n                                                    __core__ifThenElse(\n                                                        __module__MarketSalePolicy__SpendingActivity[]__UpdatingRecord____is(__cond_67),\n                                                        () -> {\n                                                            (__lhs_0_145) -> {\n                                                                __helios__error(\"use more specific spending activity\")\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__MarketSalePolicy__SpendingActivity[]__AddingToSale____is(__cond_67),\n                                                                () -> {\n                                                                    (__lhs_0_144) -> {\n                                                                        saleId_1 = __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__id(__lhs_0_144);\n                                                                        mph_32 = __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__mph(__lhs_0_144);\n                                                                        tn_6 = __module__MarketSalePolicy__SpendingActivity[]__AddingToSale__tn(__lhs_0_144);\n                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"AddingToSale mktSale: test this code path\"), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), \"can't\"), mktSaleDD_2 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__findModelActivity_1, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2, __module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(false, (), true, saleId_1, false, (), false, ());\n                                                                        previous_2 = __module__MarketSaleData__MarketSaleData[]__previous(mktSaleDD_2);\n                                                                        __helios__bool__and(() -> {\n                                                                            __helios__bool__and(() -> {\n                                                                                true\n                                                                            }, () -> {\n                                                                                __module__MarketSaleData__MarketSaleData[]__validateAdding(previous_2)(mktSaleDD_2, mph_32, tn_6)\n                                                                            })\n                                                                        }, () -> {\n                                                                            __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx)())()\n                                                                        })))\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__MarketSalePolicy__SpendingActivity[]__Activating____is(__cond_67),\n                                                                        () -> {\n                                                                            (__lhs_0_143) -> {\n                                                                                saleId = __module__MarketSalePolicy__SpendingActivity[]__Activating__id(__lhs_0_143);\n                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"Activating mktSale: test this code path\"), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), \"can't\"), mktSaleDD_1 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__findModelActivity_1, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2, __module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(false, (), true, saleId, false, (), false, ());\n                                                                                previous_1 = __module__MarketSaleData__MarketSaleData[]__previous(mktSaleDD_1);\n                                                                                updated_2 = __module__MarketSaleData__MarketSaleData[]__updated(mktSaleDD_1);\n                                                                                prevState = __module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(previous_1)());\n                                                                                nextState_1 = __module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(updated_2)());\n                                                                                newValue_1 = __helios__txoutput__value(__module__CapoHelpers__DgDataDetails[]__output(mktSaleDD_1)());\n                                                                                __helios__bool__and(() -> {\n                                                                                    __helios__bool__and(() -> {\n                                                                                        __helios__bool__and(() -> {\n                                                                                            __helios__bool__and(() -> {\n                                                                                                __helios__bool__and(() -> {\n                                                                                                    __helios__bool__and(() -> {\n                                                                                                        true\n                                                                                                    }, () -> {\n                                                                                                        __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx)())()\n                                                                                                    })\n                                                                                                }, () -> {\n                                                                                                    __helios__bool__trace(__module__MarketSaleData__OtherSaleStateV1[]__mustBePending(prevState)(\"old\"))(\"sale was Pending? \")\n                                                                                                })\n                                                                                            }, () -> {\n                                                                                                __helios__bool__trace(__module__MarketSaleData__OtherSaleStateV1[]__mustBeActive(nextState_1)(\"new\"))(\"Pending -> Active ok: \")\n                                                                                            })\n                                                                                        }, () -> {\n                                                                                            __module__MarketSaleData__MarketSaleData[]__validate(updated_2)()\n                                                                                        })\n                                                                                    }, () -> {\n                                                                                        __helios__bool__trace(__module__MarketSaleData__MarketSaleData[]__validateActivating(updated_2)(newValue_1, mktSaleDD_1))(\"valid for activation: \")\n                                                                                    })\n                                                                                }, () -> {\n                                                                                    true\n                                                                                })))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__MarketSalePolicy__SpendingActivity[]__SellingTokens____is(__cond_67),\n                                                                                () -> {\n                                                                                    (__lhs_0_142) -> {\n                                                                                        recId_8 = __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__id(__lhs_0_142);\n                                                                                        sellingUnitQuantity = __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__sellingUnitQuantity(__lhs_0_142);\n                                                                                        unitSellPrice = __module__MarketSalePolicy__SpendingActivity[]__SellingTokens__salePrice(__lhs_0_142);\n                                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), \"can't\"), mktSaleDD = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__findModelActivity_1, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2, __module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(false, (), true, recId_8, false, (), false, ());\n                                                                                        previous = __module__MarketSaleData__MarketSaleData[]__previous(mktSaleDD);\n                                                                                        updated_1 = __module__MarketSaleData__MarketSaleData[]__updated(mktSaleDD);\n                                                                                        correctActiveState = __helios__bool__and(() -> {\n                                                                                            __helios__bool__and(() -> {\n                                                                                                true\n                                                                                            }, () -> {\n                                                                                                __helios__bool__trace(__module__MarketSaleData__OtherSaleStateV1[]__mustBeActive(__module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(previous)()))(\"old\"))(\"sale was Active? \")\n                                                                                            })\n                                                                                        }, () -> {\n                                                                                            __helios__bool__trace(__module__MarketSaleData__OtherSaleStateV1[]__mustBeActive(__module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(updated_1)()))(\"new\"))(\"sale is still Active? \")\n                                                                                        });\n                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't sell before the start date\", false, (), false, (), false, ()), nowRange = __module__StellarHeliosHelpers__getTimeRange(true, __helios__duration____mul(__helios__duration__MINUTE, 5));\n                                                                                        __core__chooseUnit(__helios__print(__helios__string____add(\"   --- now start: \", __helios__time__show(__helios__timerange__start(nowRange))())), __core__chooseUnit(__helios__print(__helios__string____add(\"   --- startAt:   \", __helios__time__show(__module__MarketSaleData__FixedSaleDetailsV1[]__startAt(__module__MarketSaleData__MktSaleDetails[]__V1__fixedSaleDetails(__module__MarketSaleData__MarketSaleData[]__v1details(previous)())))())), __core__chooseUnit(__helios__print(__helios__string____add(\"   --- now end:   \", __helios__time__show(__helios__timerange__end(nowRange))())), __core__chooseUnit(__helios__assert(__helios__timerange__is_after(nowRange)(__module__MarketSaleData__FixedSaleDetailsV1[]__startAt(__module__MarketSaleData__MktSaleDetails[]__V1__fixedSaleDetails(__module__MarketSaleData__MarketSaleData[]__v1details(previous)()))), \"sale not yet started\"), __core__chooseUnit(__helios__assert(__helios__int____gt(sellingUnitQuantity, 0), \"must sell at least one unit\"), __core__chooseUnit(__helios__assert(__helios__int____leq(sellingUnitQuantity, __module__MarketSaleData__SaleAssetsV1[]__singleBuyMaxUnits(__module__MarketSaleData__MktSaleDetails[]__V1__saleAssets(__module__MarketSaleData__MarketSaleData[]__v1details(previous)()))), \"attempted to buy too many units\"), prevProgress_1 = __module__MarketSaleData__OtherSaleStateV1[]__progressDetails(__module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(previous)()));\n                                                                                        nextProgress = __module__MarketSaleData__OtherSaleStateV1[]__progressDetails(__module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(updated_1)()));\n                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"don't gather the payments to the mktSale, but follow the VxfDestination instead\"), oldValue = __helios__txinput__value(__module__CapoHelpers__DgDataDetails[]__input(mktSaleDD)());\n                                                                                        newValue = __helios__txoutput__value(__module__CapoHelpers__DgDataDetails[]__output(mktSaleDD)());\n                                                                                        purchasedTokens = __helios__value____mul(__module__MarketSaleData__SaleAssetsV1[]__saleUnitAssets(__module__MarketSaleData__MktSaleDetails[]__V1__saleAssets(__module__MarketSaleData__MarketSaleData[]__v1details(previous)())), sellingUnitQuantity);\n                                                                                        totalProgress_2 = __module__SaleProgressDetails__SaleProgressDetailsV1[]____new(__helios__timerange__start(nowRange), __module__SaleProgressDetails__SaleProgressDetailsV1[]__lastPurchaseAt(prevProgress_1), __module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitCount(nextProgress), __helios__int____add(__module__SaleProgressDetails__SaleProgressDetailsV1[]__chunkUnitsSold(prevProgress_1), sellingUnitQuantity));\n                                                                                        pricingStrategy = __module__DynamicSaleV1__DynamicSaleV1[]____new(__module__MarketSaleData__FixedSaleDetailsV1[]__settings(__module__MarketSaleData__MktSaleDetails[]__V1__fixedSaleDetails(__module__MarketSaleData__MarketSaleData[]__v1details(previous)())), __module__DynamicSaleV1__DTS_PurchaseInfo[]__create(sellingUnitQuantity, __helios__timerange__start(nowRange), __module__SaleProgressDetails__SaleProgressDetailsV1[]__lastPurchaseAt(prevProgress_1), __module__MarketSaleData__OtherSaleStateV1[]__salePace(__module__MarketSaleData__MktSaleDetails[]__V1__saleState(__module__MarketSaleData__MarketSaleData[]__v1details(previous)())), totalProgress_2), previous, __helios__option[__module__MarketSaleData__MarketSaleData[]]__some____new(updated_1));\n                                                                                        paidValue = __helios__value____add(__helios__value____sub(newValue, oldValue), purchasedTokens);\n                                                                                        __core__chooseUnit(__helios__print(\"  -- paidValue: \"), __core__chooseUnit(__helios__print(__helios__value__show(paidValue)(false, ())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Matches redeemer payment with paid value\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__value____eq(paidValue, __helios__value____mul(unitSellPrice, sellingUnitQuantity)))(\" -- found payment matching redeemer details? \"), \"actual payment/redeemer mismatch\"), __helios__bool__and(() -> {\n                                                                                            __helios__bool__and(() -> {\n                                                                                                __helios__bool__and(() -> {\n                                                                                                    __helios__bool__and(() -> {\n                                                                                                        __helios__bool__and(() -> {\n                                                                                                            __helios__bool__and(() -> {\n                                                                                                                __helios__bool__and(() -> {\n                                                                                                                    __helios__bool__and(() -> {\n                                                                                                                        __helios__bool__and(() -> {\n                                                                                                                            true\n                                                                                                                        }, () -> {\n                                                                                                                            correctActiveState\n                                                                                                                        })\n                                                                                                                    }, () -> {\n                                                                                                                        __module__StellarHeliosHelpers__bREQT(\"ensures the sale record is updated with sale-progress details\", false, (), false, (), false, ())\n                                                                                                                    })\n                                                                                                                }, () -> {\n                                                                                                                    __helios__bool__trace(__module__SaleProgressDetails__SaleProgressDetailsV1[]__validateUpdatedDetails(nextProgress)(prevProgress_1, __helios__timerange__start(nowRange), sellingUnitQuantity))(\"details updated correctly? \")\n                                                                                                                })\n                                                                                                            }, () -> {\n                                                                                                                __module__StellarHeliosHelpers__bREQT(\"ensures the sale record is updated with dynamic sale details\", false, (), false, (), false, ())\n                                                                                                            })\n                                                                                                        }, () -> {\n                                                                                                            __module__DynamicSaleV1__DynamicSaleV1[]__validateUpdatedDetails(__module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace_3, __module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace_4)(pricingStrategy)()\n                                                                                                        })\n                                                                                                    }, () -> {\n                                                                                                        __module__StellarHeliosHelpers__bREQT(\"Requires payment according to the dynamic pricing strategy\", false, (), false, (), false, ())\n                                                                                                    })\n                                                                                                }, () -> {\n                                                                                                    __helios__bool__trace(__module__DynamicSaleV1__DynamicSaleV1[]__isRightPayment(__module__DynamicSaleV1__DynamicSaleV1[]__unitPriceForSale_1, __module__DynamicSaleV1__DynamicSaleV1[]__actualSellingPace_2, __module__DynamicSaleV1__DynamicSaleV1[]__targetSellingPace_3, __module__DynamicSaleV1__DynamicSaleV1[]__elapsedSaleHours_3, __module__DynamicSaleV1__DynamicSaleV1[]__overallPaceIncludingThisPurchase_2, __module__DynamicSaleV1__DynamicSaleV1[]__pricingFactorDynamicPace_2, __module__DynamicSaleV1__DynamicSaleV1[]__nextSalePace_4, __module__DynamicSaleV1__DynamicSaleV1[]__pricingFactorOverallProgress_2, __module__DynamicSaleV1__DynamicSaleV1[]__priceExpansion_3, __module__DynamicSaleV1__DynamicSaleV1[]__progressPricingDiscountDepth_3)(pricingStrategy)(paidValue))(\"  -- right payment? \")\n                                                                                                })\n                                                                                            }, () -> {\n                                                                                                true\n                                                                                            })\n                                                                                        }, () -> {\n                                                                                            true\n                                                                                        }))))))))))))))\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __module__MarketSalePolicy__SpendingActivity[]__MergingChildChunk____is(__cond_67),\n                                                                                        () -> {\n                                                                                            (__lhs_0_141) -> {\n                                                                                                __helios__error(\"todo: MergingChildChunk\")\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__lhs_0_140) -> {\n                                                                                                __helios__error(\"todo: Retiring\")\n                                                                                            }\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()(__cond_67)\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __module__MarketSalePolicy__DelegateActivity[]__BurningActivities____is(__cond_65),\n                                                    () -> {\n                                                        (__lhs_0_135) -> {\n                                                            ba = __module__MarketSalePolicy__DelegateActivity[]__BurningActivities__activity(__lhs_0_135);\n                                                            __cond_66 = ba;\n                                                            __core__ifThenElse(\n                                                                __module__MarketSalePolicy__BurningActivity[]__DeletingRecord____is(__cond_66),\n                                                                () -> {\n                                                                    (__lhs_0_138) -> {\n                                                                        __helios__error(\"use more specific burning activity\")\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__MarketSalePolicy__BurningActivity[]__JoiningWithParentChunk____is(__cond_66),\n                                                                        () -> {\n                                                                            (__lhs_0_137) -> {\n                                                                                __helios__error(\"todo: JoinWithParent: Implement the above details\")\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            (__lhs_0_136) -> {\n                                                                                __helios__error(\"todo: CleanupRetired\")\n                                                                            }\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(__cond_66)\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __module__MarketSalePolicy__DelegateActivity[]__OtherActivities____is(__cond_65),\n                                                            () -> {\n                                                                (__lhs_0_134) -> {\n                                                                    __helios__error(\"no other activities exist in this delegate\")\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__44) -> {\n                                                                    false\n                                                                }\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()\n                    }\n                )()(__cond_65)\n            }, () -> {\n                __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__MarketSalePolicy__DelegateDatum[]__IsDelegation__serialize(priorMddd)())\n            }))\n        }\n    };\n    __module__MarketSalePolicy__DelegateActivity[]__otherDatumValidation = (self_366) -> {\n        (_priorMdd) -> {\n            neverTriggered = () -> {\n                __helios__error(\"never called\")\n            };\n            __cond_69 = self_366;\n            __core__ifThenElse(\n                __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_69),\n                () -> {\n                    (__lhs_0_152) -> {\n                        neverTriggered()\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_69),\n                        () -> {\n                            (__lhs_0_151) -> {\n                                neverTriggered()\n                            }\n                        },\n                        () -> {\n                            (__45) -> {\n                                false\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_69)\n        }\n    };\n    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));\n    __module__BasicDelegate__instance = #67656e6572616c;\n    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#4d61726b657453616c65506f6c696379));\n    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));\n    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));\n    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));\n    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));\n    __helios__list[__helios__data]__all = (self_367) -> {\n        (fn_31) -> {\n            __helios__common__all(self_367, (item_15) -> {\n                fn_31(__helios__data__from_data(item_15))\n            })\n        }\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_368, other_5) -> {\n        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_368), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;\n    __helios__option[__helios__assetclass]__unwrap = (self_369) -> {\n        () -> {\n            __helios__assetclass__from_data(__helios__common__enum_field_0(self_369))\n        }\n    };\n    __helios__option[__helios__assetclass]__some____new = (some_6) -> {\n        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_6)))\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_370) -> {\n        (fn_32) -> {\n            __helios__common__all(self_370, (item_16) -> {\n                fn_32(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_16))\n            })\n        }\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_371) -> {\n        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_371))\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_372) -> {\n        (fn_33, a0) -> {\n            __helios__common__fold(self_372, (prev_4, item_17) -> {\n                fn_33(prev_4, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))\n            }, a0)\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]__delete = (self_373) -> {\n        (key_29) -> {\n            key_30 = __helios__bytearray____to_data(key_29);\n            recurse_103 = (recurse_102, self_374) -> {\n                __core__chooseList(self_374, () -> {\n                    self_374\n                }, () -> {\n                    head_193 = __core__headList__safe(self_374);\n                    tail_6 = __core__tailList__safe(self_374);\n                    __core__ifThenElse(\n                        __core__equalsData(key_30, __core__fstPair(head_193)),\n                        () -> {\n                            recurse_102(recurse_102, tail_6)\n                        },\n                        () -> {\n                            __core__mkCons(head_193, recurse_102(recurse_102, tail_6))\n                        }\n                    )()\n                })()\n            };\n            recurse_103(recurse_103, self_373)\n        }\n    };\n    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_422) -> {\n        __helios__common__enum_tag_equals(data_422, 0)\n    };\n    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_375) -> {\n        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_375))\n    };\n    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_376) -> {\n        (key_31) -> {\n            __helios__common__map_get(self_376, __helios__mintingpolicyhash____to_data(key_31), (x_14) -> {\n                __core__constrData(0, __helios__common__list_1(x_14))\n            }, () -> {\n                __core__constrData(1, __helios__common__list_0)\n            })\n        }\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_377) -> {\n        (fn_34, a0_1, b0_1) -> {\n            __helios__common__fold(self_377, (prev_5, item_18) -> {\n                prev_5((a_33, b_31) -> {\n                    fn_34(a_33, b_31, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))\n                })\n            }, (callback_15) -> {\n                callback_15(a0_1, b0_1)\n            })\n        }\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_378) -> {\n        __helios__common__length(self_378)\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_379) -> {\n        head_194 = __core__headList(self_379);\n        (callback_16) -> {\n            callback_16(__helios__string__from_data(__core__fstPair(head_194)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_194)))\n        }\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;\n    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_380) -> {\n        () -> {\n            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_380))\n        }\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_381) -> {\n        (key_32) -> {\n            key_33 = __helios__string____to_data(key_32);\n            recurse_105 = (recurse_104, self_382) -> {\n                __core__chooseList(self_382, () -> {\n                    self_382\n                }, () -> {\n                    head_195 = __core__headList__safe(self_382);\n                    tail_7 = __core__tailList__safe(self_382);\n                    __core__ifThenElse(\n                        __core__equalsData(key_33, __core__fstPair(head_195)),\n                        () -> {\n                            recurse_104(recurse_104, tail_7)\n                        },\n                        () -> {\n                            __core__mkCons(head_195, recurse_104(recurse_104, tail_7))\n                        }\n                    )()\n                })()\n            };\n            recurse_105(recurse_105, self_381)\n        }\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_383, other_6) -> {\n        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_383), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))\n    };\n    __helios__option[__helios__string]__unwrap = (self_384) -> {\n        () -> {\n            __helios__string__from_data(__helios__common__enum_field_0(self_384))\n        }\n    };\n    __helios__option[__helios__bytearray]__unwrap = (self_385) -> {\n        () -> {\n            __helios__bytearray__from_data(__helios__common__enum_field_0(self_385))\n        }\n    };\n    __module__BasicDelegate__checkOneActivity_1 = (__module__BasicDelegate__checkOneActivity) -> {\n        (dgtionDatum, activity_9, __useopt__dd, dd, __useopt__baseCctx, baseCctx, __useopt__desc, desc) -> {\n            dd_1 = __core__ifThenElse(\n                __useopt__dd,\n                () -> {\n                    dd\n                },\n                () -> {\n                    __module__MarketSalePolicy__DelegateDatum[]__IsDelegation__dd(dgtionDatum)\n                }\n            )();\n            baseCctx_1 = __core__ifThenElse(\n                __useopt__baseCctx,\n                () -> {\n                    baseCctx\n                },\n                () -> {\n                    __module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1))\n                }\n            )();\n            desc_1 = __core__ifThenElse(\n                __useopt__desc,\n                () -> {\n                    desc\n                },\n                () -> {\n                    \"‹unspecified›\"\n                }\n            )();\n            __module__StellarHeliosHelpers__logGroup_1(__module__StellarHeliosHelpers__logGroup_1)(__helios__string____add(\"🏒 checking activity: \", desc_1), false, true, () -> {\n                result_9 = __core__ifThenElse(\n                    true,\n                    () -> {\n                        (checkNonDelegatedActivities) -> {\n                            __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, \"checkNonDelegatedActivities failed\"), __module__StellarHeliosHelpers__bREQTgroup(__core__ifThenElse(\n                                __helios__bool__and(() -> {\n                                    __module__BasicDelegate__isMintDelegate\n                                }, () -> {\n                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(baseCctx_1)(true, false)\n                                }),\n                                () -> {\n                                    __helios__string____add(\"mintDgt: additionalDelegateValidation in \", __module__BasicDelegate__delegateName)\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __helios__bool__and(() -> {\n                                            __module__BasicDelegate__isSpendDelegate\n                                        }, () -> {\n                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(baseCctx_1)(true, false)\n                                        }),\n                                        () -> {\n                                            __helios__string____add(\"spendDgt: additionalDelegateValidation in \", __module__BasicDelegate__delegateName)\n                                        },\n                                        () -> {\n                                            () -> {\n                                                __helios__string____add(__module__BasicDelegate__delegateName, \": additionalDelegateValidation()\")\n                                            }()\n                                        }\n                                    )()\n                                }\n                            )(), false, true, () -> {\n                                __module__MarketSalePolicy__DelegateActivity[]__additionalDelegateValidation(activity_9)(dgtionDatum, __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(baseCctx_1)())\n                            }))\n                        }(__cond_70 = activity_9;\n                        __core__ifThenElse(\n                            __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_70),\n                            () -> {\n                                (__lhs_0_266) -> {\n                                    activities_2 = __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_266);\n                                    cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();\n                                    actingAsMintDgt = __helios__bool__and(() -> {\n                                        __helios__bool__and(() -> {\n                                            __module__BasicDelegate__isMintDelegate\n                                        }, () -> {\n                                            __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_6)(true, false)\n                                        })\n                                    }, () -> {\n                                        __module__StellarHeliosHelpers__bREQT(\"Mint delegate: checks that all the indicated create/remove activities are valid\", false, (), false, (), false, ())\n                                    });\n                                    actingAsSpendDgt = __helios__bool__and(() -> {\n                                        __helios__bool__and(() -> {\n                                            __helios__bool__and(() -> {\n                                                __helios__bool____not(actingAsMintDgt)\n                                            }, () -> {\n                                                __module__BasicDelegate__isSpendDelegate\n                                            })\n                                        }, () -> {\n                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_6)(true, false)\n                                        })\n                                    }, () -> {\n                                        __module__StellarHeliosHelpers__bREQT(\"Spend delegate: checks that all the indicated record-update activities are valid\", false, (), false, (), false, ())\n                                    });\n                                    notMintDgt = __helios__bool____not(actingAsMintDgt);\n                                    notSpendDgt = __helios__bool____not(actingAsSpendDgt);\n                                    mintDgtCheck_1 = __helios__bool__or(() -> {\n                                        notMintDgt\n                                    }, () -> {\n                                        __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {\n                                            a_34 = __module__MarketSalePolicy__DelegateActivity[]__from_data(__module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__OtherActivities__is_valid_data_2)(rawActivity);\n                                            __core__chooseUnit(__helios__print(\"  -- mintDgt checking multi-activity\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"    -- validates nested activities: in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities\", false, (), false, (), false, ()), __cond_119 = a_34;\n                                            __core__ifThenElse(\n                                                __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_119),\n                                                () -> {\n                                                    (__lhs_0_272) -> {\n                                                        __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_34, true, dd_1, true, cctx_6, true, \"one create is properly delegated\")\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_119),\n                                                        () -> {\n                                                            (__lhs_0_271) -> {\n                                                                __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_34, true, dd_1, true, cctx_6, true, \"one delete is properly delegated\")\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_119),\n                                                                () -> {\n                                                                    (__lhs_0_270) -> {\n                                                                        __helios__error(\"UpdatingDelegatedData only ok at level-1 spendDgt\")\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_119),\n                                                                        () -> {\n                                                                            (__lhs_0_269) -> {\n                                                                                __helios__error(\"multi:DelegateLifecycleActivities not ok\")\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_119),\n                                                                                () -> {\n                                                                                    (__lhs_0_268) -> {\n                                                                                        __helios__error(\"multi:CapoLifecycleActivities not ok\")\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_119),\n                                                                                        () -> {\n                                                                                            (__lhs_0_267) -> {\n                                                                                                __helios__error(\"multi:multi: nesting not ok\")\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__79) -> {\n                                                                                                __helios__error(\"multi:non-minting activities are invalid for mintDgt\")\n                                                                                            }\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()(__cond_119)))\n                                        })\n                                    });\n                                    spendDgtCheck_1 = __helios__bool__or(() -> {\n                                        notSpendDgt\n                                    }, () -> {\n                                        __module__StellarHeliosHelpers__bREQTgroup(\"validates nested activities: in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities\", false, true, () -> {\n                                            __helios__list[__helios__data]__all(activities_2)((rawActivity_1) -> {\n                                                a_35 = __module__MarketSalePolicy__DelegateActivity[]__from_data(__module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__OtherActivities__is_valid_data_2)(rawActivity_1);\n                                                __core__chooseUnit(__helios__print(\"  -- spendDgt checking multi-activity\"), __cond_120 = a_35;\n                                                __core__ifThenElse(\n                                                    __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_120),\n                                                    () -> {\n                                                        (__lhs_0_278) -> {\n                                                            __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {\n                                                                __module__BasicDelegate__isSpendDelegate\n                                                            }, () -> {\n                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_6)(false, ())\n                                                            }), \"UpdatingDelegatedData only ok at level-1 spendDgt\"), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_35, true, dd_1, true, cctx_6, true, \"one update is properly delegated\"))\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_120),\n                                                            () -> {\n                                                                (__lhs_0_277) -> {\n                                                                    __helios__error(\"CreatingDelegatedData only ok in mintDgt\")\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_120),\n                                                                    () -> {\n                                                                        (__lhs_0_276) -> {\n                                                                            __helios__error(\"TODO: validate spending the datum for burn\")\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_120),\n                                                                            () -> {\n                                                                                (__lhs_0_275) -> {\n                                                                                    __helios__error(\"multi:DelegateLifecycleActivities not ok\")\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_120),\n                                                                                    () -> {\n                                                                                        (__lhs_0_274) -> {\n                                                                                            __helios__error(\"multi:CapoLifecycleActivities not ok\")\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_120),\n                                                                                            () -> {\n                                                                                                (__lhs_0_273) -> {\n                                                                                                    __helios__error(\"multi:multi: nesting not ok\")\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__80) -> {\n                                                                                                    __helios__error(\"multi: non-spending activities are invalid for spendDgt\")\n                                                                                                }\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(__cond_120))\n                                            })\n                                        })\n                                    });\n                                    dgDataPolicyCheck = __core__ifThenElse(\n                                        __helios__bool__or(() -> {\n                                            __module__BasicDelegate__isMintDelegate\n                                        }, () -> {\n                                            __module__BasicDelegate__isSpendDelegate\n                                        }),\n                                        () -> {\n                                            __core__chooseUnit(__helios__assert(__helios__bool____not(__module__BasicDelegate__isDgDataPolicy), \"ack! mint/spend delegate can't be a delegated-data policy!\"), true)\n                                        },\n                                        () -> {\n                                            () -> {\n                                                __module__StellarHeliosHelpers__bREQTgroup(\"multi-activity: in DgDataPolicy, only Minting/Burning/Spending activities are valid\", false, true, () -> {\n                                                    __helios__list[__helios__data]__all(activities_2)((rawActivity_2) -> {\n                                                        a_36 = __module__MarketSalePolicy__DelegateActivity[]__from_data(__module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__OtherActivities__is_valid_data_2)(rawActivity_2);\n                                                        __cond_121 = a_36;\n                                                        __core__ifThenElse(\n                                                            __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_121),\n                                                            () -> {\n                                                                (__lhs_0_288) -> {\n                                                                    __helios__error(\"UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)\")\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_121),\n                                                                    () -> {\n                                                                        (__lhs_0_287) -> {\n                                                                            __helios__error(\"CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)\")\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_121),\n                                                                            () -> {\n                                                                                (__lhs_0_286) -> {\n                                                                                    __helios__error(\"DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)\")\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities____is(__cond_121),\n                                                                                    () -> {\n                                                                                        (__lhs_0_285) -> {\n                                                                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_36, true, dd_1, true, cctx_6, true, \"biz-logic for one record update\")\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __module__MarketSalePolicy__DelegateActivity[]__MintingActivities____is(__cond_121),\n                                                                                            () -> {\n                                                                                                (__lhs_0_284) -> {\n                                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_36, true, dd_1, true, cctx_6, true, \"biz-logic for one record create\")\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __module__MarketSalePolicy__DelegateActivity[]__BurningActivities____is(__cond_121),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_283) -> {\n                                                                                                            __core__chooseUnit(__helios__assert(false, \"TODO: support multi:BurningActivities for dgDataPolicy or other delegate\"), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_36, true, dd_1, true, cctx_6, true, \"biz-logic for one record delete\"))\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __module__MarketSalePolicy__DelegateActivity[]__OtherActivities____is(__cond_121),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_282) -> {\n                                                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_36, true, dd_1, true, cctx_6, true, \"biz-logic for OtherActivities \")\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_121),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_281) -> {\n                                                                                                                            __helios__error(\"multi:DelegateLifecycleActivities not ok\")\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_121),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_280) -> {\n                                                                                                                                    __helios__error(\"multi:CapoLifecycleActivities not ok\")\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_279) -> {\n                                                                                                                                    __helios__error(\"multi:multi: nesting not ok\")\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()(__cond_121)\n                                                    })\n                                                })\n                                            }()\n                                        }\n                                    )();\n                                    __helios__bool__and(() -> {\n                                        __helios__bool__and(() -> {\n                                            mintDgtCheck_1\n                                        }, () -> {\n                                            spendDgtCheck_1\n                                        })\n                                    }, () -> {\n                                        dgDataPolicyCheck\n                                    })\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_70),\n                                    () -> {\n                                        (__lhs_0_260) -> {\n                                            innerActivity = __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_260);\n                                            __cond_117 = innerActivity;\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_117),\n                                                () -> {\n                                                    (__lhs_0_264) -> {\n                                                        seed_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_264);\n                                                        purpose_7 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_264);\n                                                        BURNED = __helios__int____neg(1);\n                                                        otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_1)), BURNED);\n                                                        tnStr_3 = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_1))();\n                                                        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"checking ReplacingMe on \", purpose_7), \": \"), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"needs the charter to be approving the the new mint-delegate\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"  ^^^ should queue the new delegate in pendingChanges\"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(baseCctx_1)();\n                                                        (isUpdatingCharter) -> {\n                                                            isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_9, __core__mkCons(__helios__string____to_data(purpose_7), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());\n                                                            __helios__bool__and(() -> {\n                                                                isMintingOk\n                                                            }, () -> {\n                                                                isUpdatingCharter\n                                                            })\n                                                        }(__cond_118 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();\n                                                        __core__ifThenElse(\n                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_118),\n                                                            () -> {\n                                                                (__lhs_0_265) -> {\n                                                                    true\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__78) -> {\n                                                                    false\n                                                                }\n                                                            }\n                                                        )()(__cond_118)))))\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_117),\n                                                        () -> {\n                                                            (__lhs_0_263) -> {\n                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... Retiring delegate authority token\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"   -- must burn the indicated authority token\", false, (), false, (), false, ()), __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd_1)()), __helios__int____neg(1))))\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_261) -> {\n                                                                __lhs_0_262 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), false, ()), 0);\n                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"import settings from delegate and validate them\"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {\n                                                                    false\n                                                                }, () -> {\n                                                                    true\n                                                                }), \"ValidateSettings temporarily disabled\"), false))\n                                                            }\n                                                        }\n                                                    )()\n                                                }\n                                            )()(__cond_117)\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_70),\n                                            () -> {\n                                                (__lhs_0_161) -> {\n                                                    dCLA = __module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_161);\n                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... with any CapoLifecycle activity: \", false, (), false, (), false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))())();\n                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the Capo's CharterData activity to match this delegate's activity\", false, (), false, (), false, ()), __core__chooseUnit(__cond_115 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();\n                                                    __core__ifThenElse(\n                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_115),\n                                                        () -> {\n                                                            (__lhs_0_259) -> {\n                                                                cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_259);\n                                                                __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), \"activity mismatch with Capo's CharterData activity\"), __helios__print(\"  -- ok, CharterData capoLifecycleActivity matches ours\n\"))\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_115),\n                                                                () -> {\n                                                                    (__lhs_0_257) -> {\n                                                                        __cond_116 = dCLA;\n                                                                        __core__ifThenElse(\n                                                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_116),\n                                                                            () -> {\n                                                                                (__lhs_0_258) -> {\n                                                                                    __helios__print(\"ok, Capo:updatingCharter works for now with CreatingDelegate\n\")\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__77) -> {\n                                                                                    __helios__error(\"when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate\")\n                                                                                }\n                                                                            }\n                                                                        )()(__cond_116)\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__76) -> {\n                                                                        __helios__error(\"this activity must match the capo's own CharterData activity\")\n                                                                    }\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()(__cond_115), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);\n                                                    (myCurrentRole) -> {\n                                                        __helios__bool__and(() -> {\n                                                            __cond_72 = dCLA;\n                                                            __core__ifThenElse(\n                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_72),\n                                                                () -> {\n                                                                    (__lhs_0_253) -> {\n                                                                        seed_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_253);\n                                                                        purpose_6 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_253);\n                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"XXX it should output the new delegate token to the Capo as a PendingDelegate datum\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated\", false, (), false, (), false, ()), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_8);\n                                                                        __cond_113 = myCurrentRole;\n                                                                        __core__ifThenElse(\n                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_113),\n                                                                            () -> {\n                                                                                (__lhs_0_254) -> {\n                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"validates the new delegate's UUT is minted\", false, (), false, (), false, ()), __core__chooseUnit(__core__ifThenElse(\n                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_8, __core__mkCons(__helios__string____to_data(purpose_6), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ()),\n                                                                                        () -> {\n                                                                                            __helios__print(\"  -- ok, minted the new delegate's UUT\n\")\n                                                                                        },\n                                                                                        () -> {\n                                                                                            () -> {\n                                                                                                ()\n                                                                                            }()\n                                                                                        }\n                                                                                    )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the UUT must have the right disposition (is it checked somewhere else?!?)\", false, (), false, (), false, ()), __cond_114 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__address_3)(cctx_4)()))(purpose_6);\n                                                                                    __core__ifThenElse(\n                                                                                        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_114),\n                                                                                        () -> {\n                                                                                            (__lhs_0_256) -> {\n                                                                                                __helios__error(\"the new delegate is not present in the Capo's named-delegates list\")\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__lhs_0_255) -> {\n                                                                                                dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_255);\n                                                                                                __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn(purpose_6)), \"uutName mismatch\"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))\n                                                                                            }\n                                                                                        }\n                                                                                    )()(__cond_114))))\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__75) -> {\n                                                                                    __helios__error(\"unreachable wrong role for CreatingDelegate\")\n                                                                                }\n                                                                            }\n                                                                        )()(__cond_113)))\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_72),\n                                                                        () -> {\n                                                                            (__lhs_0_201) -> {\n                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... for the addingPendingDgt activity:\", false, (), false, (), false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_9(cctx_4)(), 0);\n                                                                                nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__address_3)(cctx_4)();\n                                                                                oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);\n                                                                                nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);\n                                                                                newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);\n                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"support otherManifestChange here\"), __lhs_0_202 = __helios__common__assert_constr_index(newChange, 0);\n                                                                                __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_202);\n                                                                                action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);\n                                                                                role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);\n                                                                                OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);\n                                                                                (newDgtRoleName) -> {\n                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupUnit(\"The new pending-delegate action must be found at the head of the new change-list\", false, true, () -> {\n                                                                                        __cond_111 = action;\n                                                                                        __core__ifThenElse(\n                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_111),\n                                                                                            () -> {\n                                                                                                (__lhs_0_251) -> {\n                                                                                                    __core__chooseUnit(__helios__print(\"   -- another delegate-role check would be redundant.\"), __cond_112 = myCurrentRole;\n                                                                                                    __core__ifThenElse(\n                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_112),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_252) -> {\n                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"verifies that the delegate queued for removal is present in the Capo's charterData\", false, (), false, (), false, ()), __helios__error(\"implement me\"))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__74) -> {\n                                                                                                                __helios__error(\"unreachable\")\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()(__cond_112))\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__73) -> {\n                                                                                                    __helios__assert(true, \"no way l\")\n                                                                                                }\n                                                                                            }\n                                                                                        )()(__cond_111)\n                                                                                    }), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the remainder of the change-list should be unchanged\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), \"invalid update of pendingChanges; the new action must be prepended to the existing list.\"), __cond_110 = action;\n                                                                                    __core__ifThenElse(\n                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_110),\n                                                                                        () -> {\n                                                                                            (__lhs_0_250) -> {\n                                                                                                __helios__error(\"unreachable\")\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_110),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_249) -> {\n                                                                                                        seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_249);\n                                                                                                        purpose_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_249);\n                                                                                                        idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_249);\n                                                                                                        (callback_20) -> {\n                                                                                                            callback_20(seed_7, purpose_5, idPrefix_9)\n                                                                                                        }\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__lhs_0_248) -> {\n                                                                                                        seed_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_248);\n                                                                                                        purpose_4 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_248);\n                                                                                                        idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_248);\n                                                                                                        (callback_19) -> {\n                                                                                                            callback_19(seed_6, purpose_4, idPrefix_8)\n                                                                                                        }\n                                                                                                    }\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(__cond_110)((seed_5, purpose_3, pendingActionIdPrefix) -> {\n                                                                                        (possibleMintDgtVerifications) -> {\n                                                                                            (otherPossibleVerifications) -> {\n                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"TEMPORARY: only one pending change is allowed\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(oldPendingChanges), 0), \"only one pending change is allowed for now (avoids resource-exhaustion)\"), __helios__bool__and(() -> {\n                                                                                                    __helios__bool__and(() -> {\n                                                                                                        true\n                                                                                                    }, () -> {\n                                                                                                        possibleMintDgtVerifications\n                                                                                                    })\n                                                                                                }, () -> {\n                                                                                                    otherPossibleVerifications\n                                                                                                })))\n                                                                                            }(__cond_99 = myCurrentRole;\n                                                                                            __core__ifThenElse(\n                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_99),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_247) -> {\n                                                                                                        __helios__error(__helios__string____add(__helios__string____add(\"this block had been run by spendDgt, but\n\", \"... it's much cheaper to let the MintDgt do it ...\n\"), \"... since it's already involved anyway\"))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_99),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_221) -> {\n                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't allow a queued change to duplicate any other pending entry for the same delegate name\", false, (), false, (), false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {\n                                                                                                                    __cond_100 = pdChange_2;\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_100),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_222) -> {\n                                                                                                                                __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_222);\n                                                                                                                                pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);\n                                                                                                                                __cond_101 = pendingRole;\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_101),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_223) -> {\n                                                                                                                                            changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_223);\n                                                                                                                                            __helios__string____neq(changingDgtName, newDgtRoleName)\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__67) -> {\n                                                                                                                                            __helios__error(\"only DgDataPolicy is yet supported in queuePendingChange\")\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(__cond_101)\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__66) -> {\n                                                                                                                                __helios__error(\"otherManifestChange not yet supported\")\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(__cond_100)\n                                                                                                                });\n                                                                                                                __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add(\"already has a pending change for this delegate: \", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);\n                                                                                                                (possibleReplacementIsCorrect) -> {\n                                                                                                                    __helios__bool__and(() -> {\n                                                                                                                        __helios__bool__and(() -> {\n                                                                                                                            true\n                                                                                                                        }, () -> {\n                                                                                                                            isNotADuplicate\n                                                                                                                        })\n                                                                                                                    }, () -> {\n                                                                                                                        possibleReplacementIsCorrect\n                                                                                                                    })\n                                                                                                                }(__cond_102 = action;\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_102),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_245) -> {\n                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't allow an Add for an existing policy name\", false, (), false, (), false, ()), __core__chooseUnit(__cond_109 = existingRoleEntryMaybe;\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_109),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_246) -> {\n                                                                                                                                        __helios__error(__helios__string____add(\"queuing Add failed: already has a delegate for policy name: \", newDgtRoleName))\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__72) -> {\n                                                                                                                                        ()\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(__cond_109), true))\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_102),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_226) -> {\n                                                                                                                                    replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_226);\n                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"For Replace on an existing delegate... \", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- Replace: invariants cannot be replaced\", false, (), false, (), false, ()), __core__chooseUnit(__cond_108 = role_2;\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_108),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_244) -> {\n                                                                                                                                                __helios__error(\"cannot Replace role: MintInvariant\")\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_108),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_243) -> {\n                                                                                                                                                        __helios__error(\"cannot Replace role: SpendInvariant\")\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_108),\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__lhs_0_242) -> {\n                                                                                                                                                                __helios__error(\"HandledByCapoOnly role is not applicable in delegate context\")\n                                                                                                                                                            }\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__71) -> {\n                                                                                                                                                                __helios__print(\"  -- ok (not trying to replace an invariant)\")\n                                                                                                                                                            }\n                                                                                                                                                        }\n                                                                                                                                                    )()\n                                                                                                                                                }\n                                                                                                                                            )()\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_108), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- doesn't allow a Replace if the policy-name doesn't already exist\", false, (), false, (), false, ()), (existingDgtLink_1) -> {\n                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token\", false, (), false, (), false, ()), (existingDgTkn) -> {\n                                                                                                                                            __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add(\"the current \", __cond_107 = role_2;\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_107),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_241) -> {\n                                                                                                                                                        \"mint\"\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_107),\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__lhs_0_240) -> {\n                                                                                                                                                                \"spend\"\n                                                                                                                                                            }\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_107),\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__lhs_0_239) -> {\n                                                                                                                                                                        \"dgDataPolicy\"\n                                                                                                                                                                    }\n                                                                                                                                                                },\n                                                                                                                                                                () -> {\n                                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_107),\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            (__lhs_0_238) -> {\n                                                                                                                                                                                \"named\"\n                                                                                                                                                                            }\n                                                                                                                                                                        },\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            (__70) -> {\n                                                                                                                                                                                \"‹incontheeiieivable›\"\n                                                                                                                                                                            }\n                                                                                                                                                                        }\n                                                                                                                                                                    )()\n                                                                                                                                                                }\n                                                                                                                                                            )()\n                                                                                                                                                        }\n                                                                                                                                                    )()\n                                                                                                                                                }\n                                                                                                                                            )()(__cond_107)), \" delegate's authority token doesn't match the queued action's token name \"), __helios__assetclass__show(replacesDgt)())), true)\n                                                                                                                                        }(__cond_106 = role_2;\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_106),\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_237) -> {\n                                                                                                                                                    __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_106),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_236) -> {\n                                                                                                                                                            __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_106),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_235) -> {\n                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest\", false, (), false, (), false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1))))\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_106),\n                                                                                                                                                                    () -> {\n                                                                                                                                                                        (__lhs_0_234) -> {\n                                                                                                                                                                            __helios__error(\"unreachable: OtherNamedDgt deprecated\")\n                                                                                                                                                                        }\n                                                                                                                                                                    },\n                                                                                                                                                                    () -> {\n                                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_106),\n                                                                                                                                                                            () -> {\n                                                                                                                                                                                (__lhs_0_233) -> {\n                                                                                                                                                                                    __helios__error(\"DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity\")\n                                                                                                                                                                                }\n                                                                                                                                                                            },\n                                                                                                                                                                            () -> {\n                                                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_106),\n                                                                                                                                                                                    () -> {\n                                                                                                                                                                                        (__lhs_0_232) -> {\n                                                                                                                                                                                            __helios__error(\"unreachable\")\n                                                                                                                                                                                        }\n                                                                                                                                                                                    },\n                                                                                                                                                                                    () -> {\n                                                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_106),\n                                                                                                                                                                                            () -> {\n                                                                                                                                                                                                (__lhs_0_231) -> {\n                                                                                                                                                                                                    __helios__error(\"unreachable\")\n                                                                                                                                                                                                }\n                                                                                                                                                                                            },\n                                                                                                                                                                                            () -> {\n                                                                                                                                                                                                (__lhs_0_230) -> {\n                                                                                                                                                                                                    __helios__error(\"unreachable\")\n                                                                                                                                                                                                }\n                                                                                                                                                                                            }\n                                                                                                                                                                                        )()\n                                                                                                                                                                                    }\n                                                                                                                                                                                )()\n                                                                                                                                                                            }\n                                                                                                                                                                        )()\n                                                                                                                                                                    }\n                                                                                                                                                                )()\n                                                                                                                                                            }\n                                                                                                                                                        )()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }\n                                                                                                                                        )()(__cond_106)))\n                                                                                                                                    }(__cond_104 = existingRoleEntryMaybe;\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_104),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_229) -> {\n                                                                                                                                                __helios__error(__helios__string____add(\"queuing Replace failed: the policy-name doesn't exist: \", newDgtRoleName))\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_227) -> {\n                                                                                                                                                __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_227);\n                                                                                                                                                entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);\n                                                                                                                                                __cond_105 = entryType_2;\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_105),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_228) -> {\n                                                                                                                                                            existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_228);\n                                                                                                                                                            existingDgtLink\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__69) -> {\n                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add(\"invalid Replace; the matching manifest entry for '\", newDgtRoleName), \"' isn't a DgDataPolicy.\"))\n                                                                                                                                                        }\n                                                                                                                                                    }\n                                                                                                                                                )()(__cond_105)\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_104))))))\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_224) -> {\n                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't allow a Remove if the policy-name doesn't already exist\", false, (), false, (), false, ()), __core__chooseUnit(__cond_103 = existingRoleEntryMaybe;\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_103),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_225) -> {\n                                                                                                                                                __helios__error(__helios__string____add(\"queuing Remove failed: the policy-name doesn't exist: \", newDgtRoleName))\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__68) -> {\n                                                                                                                                                ()\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_103), __helios__error(\"unreachable: Remove not yet supported\")))\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()(__cond_102))))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__65) -> {\n                                                                                                                __helios__error(\"unreachable\")\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()(__cond_99))\n                                                                                        }(__cond_92 = myCurrentRole;\n                                                                                        __core__ifThenElse(\n                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_92),\n                                                                                            () -> {\n                                                                                                (__lhs_0_220) -> {\n                                                                                                    true\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_92),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_204) -> {\n                                                                                                            __helios__bool__and(() -> {\n                                                                                                                __module__StellarHeliosHelpers__bREQT(\"(general) the mintDgt checks everything about the mint\", false, (), false, (), false, ())\n                                                                                                            }, () -> {\n                                                                                                                __cond_93 = action;\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_93),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_212) -> {\n                                                                                                                            __core__chooseUnit(__cond_98 = role_2;\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_98),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_219) -> {\n                                                                                                                                        __helios__error(\"cannot Remove role: MintDgt\")\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_98),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_218) -> {\n                                                                                                                                                __helios__error(\"cannot Remove role: SpendDgt\")\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_98),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_217) -> {\n                                                                                                                                                        __helios__error(\"cannot Remove role: MintInvariant\")\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_98),\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__lhs_0_216) -> {\n                                                                                                                                                                __helios__error(\"cannot Remove role: SpendInvariant\")\n                                                                                                                                                            }\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_98),\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__lhs_0_215) -> {\n                                                                                                                                                                        __helios__assert(false, \"todo\")\n                                                                                                                                                                    }\n                                                                                                                                                                },\n                                                                                                                                                                () -> {\n                                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_98),\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            (__lhs_0_214) -> {\n                                                                                                                                                                                __helios__assert(false, \"todo\")\n                                                                                                                                                                            }\n                                                                                                                                                                        },\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_98),\n                                                                                                                                                                                () -> {\n                                                                                                                                                                                    (__lhs_0_213) -> {\n                                                                                                                                                                                        __helios__error(\"DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity\")\n                                                                                                                                                                                    }\n                                                                                                                                                                                },\n                                                                                                                                                                                () -> {\n                                                                                                                                                                                    (__64) -> {\n                                                                                                                                                                                        ()\n                                                                                                                                                                                    }\n                                                                                                                                                                                }\n                                                                                                                                                                            )()\n                                                                                                                                                                        }\n                                                                                                                                                                    )()\n                                                                                                                                                                }\n                                                                                                                                                            )()\n                                                                                                                                                        }\n                                                                                                                                                    )()\n                                                                                                                                                }\n                                                                                                                                            )()\n                                                                                                                                        }\n                                                                                                                                    )()\n                                                                                                                                }\n                                                                                                                            )()(__cond_98), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't allow a Remove to duplicate an Add or Replace or Remove entry\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"^^^\"), __core__chooseUnit(__helios__assert(false, \"what else should be checked here?\"), false))))\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        (__61) -> {\n                                                                                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                false,\n                                                                                                                                () -> {\n                                                                                                                                    __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(false, ()), \"<----- that can fail, this can't\")\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    () -> {\n                                                                                                                                        ()\n                                                                                                                                    }()\n                                                                                                                                }\n                                                                                                                            )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);\n                                                                                                                            dgTknName = mkTokenName_2(purpose_3);\n                                                                                                                            mintedDgTkn = __helios__bool__and(() -> {\n                                                                                                                                __module__StellarHeliosHelpers__bREQT(\"the new delegate is created with the indicated authority token\", false, (), false, (), false, ())\n                                                                                                                            }, () -> {\n                                                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_5, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, (), false, (), true, false, false, (), false, ())\n                                                                                                                            });\n                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"The new policy-token must match the seed\", false, (), false, (), false, ()), (dgtLink_2) -> {\n                                                                                                                                __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add(\"uutName mismatch; expected \", dgTknName), \" but found \"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT(\"the new policy-delegate-script must take ownership of the dgTkn\", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()), false, (), false, ());\n                                                                                                                                (possibleExtraReplacementCheck) -> {\n                                                                                                                                    __helios__bool__and(() -> {\n                                                                                                                                        __helios__bool__and(() -> {\n                                                                                                                                            mintedDgTkn\n                                                                                                                                        }, () -> {\n                                                                                                                                            delegateTakesOwnership\n                                                                                                                                        })\n                                                                                                                                    }, () -> {\n                                                                                                                                        possibleExtraReplacementCheck\n                                                                                                                                    })\n                                                                                                                                }(__cond_95 = action;\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_95),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_207) -> {\n                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Replace: the queued change must match the idPrefix of the current delegate \", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"VALIDATE this through a unit-test ^\"), __core__chooseUnit(__cond_96 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_96),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_209) -> {\n                                                                                                                                                        dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_209);\n                                                                                                                                                        __lhs_0_210 = dde;\n                                                                                                                                                        entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_210);\n                                                                                                                                                        __cond_97 = entryType_1;\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_97),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_211) -> {\n                                                                                                                                                                    idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_211);\n                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"expects the queued idPrefix to match the existing policy's idPrefix\", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add(\"   -- expected: \", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add(\"   --   actual: \", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), \"idPrefix mismatch\"))))\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__63) -> {\n                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add(\"invalid Replace; the matching manifest entry for '\", newDgtRoleName), \"' isn't a DgDataPolicy.\"))\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()(__cond_97)\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_208) -> {\n                                                                                                                                                        __helios__error(__helios__string____add(\"no existing dgDataPolicy found with key: \", newDgtRoleName))\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            )()(__cond_96), true)))\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__62) -> {\n                                                                                                                                            true\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(__cond_95)))\n                                                                                                                            }(__cond_94 = OdgtLink;\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_94),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_206) -> {\n                                                                                                                                        __helios__error(\"missing required delegate link in pending dgt change\")\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_205) -> {\n                                                                                                                                        dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_205);\n                                                                                                                                        dl\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(__cond_94))))\n                                                                                                                        }\n                                                                                                                    }\n                                                                                                                )()(__cond_93)\n                                                                                                            })\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__60) -> {\n                                                                                                            __helios__error(\"unreachable\")\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )()(__cond_92))\n                                                                                    }))))\n                                                                                }(__cond_91 = role_2;\n                                                                                __core__ifThenElse(\n                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_91),\n                                                                                    () -> {\n                                                                                        (__lhs_0_203) -> {\n                                                                                            dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_203);\n                                                                                            dgtName\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__59) -> {\n                                                                                            __helios__error(\"only DgDataPolicy is yet supported in queuePendingChange\")\n                                                                                        }\n                                                                                    }\n                                                                                )()(__cond_91))))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_72),\n                                                                                () -> {\n                                                                                    (__lhs_0_200) -> {\n                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"implement removePendDgt\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"allows the removal of a queued pending-delegate-change that can't be completed\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(false, \"not yet implemented\"), false)))\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_72),\n                                                                                        () -> {\n                                                                                            (__lhs_0_177) -> {\n                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... To commit pending changes:\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"invariants cannot be replaced\", false, (), false, (), false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_9(cctx_4)());\n                                                                                                previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_9(cctx_4)());\n                                                                                                nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__address_3)(cctx_4)();\n                                                                                                nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);\n                                                                                                __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {\n                                                                                                    __module__StellarHeliosHelpers__bREQT(\"the next-changes list must be empty\", false, (), false, (), false, ())\n                                                                                                }, () -> {\n                                                                                                    __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)\n                                                                                                }), \"pendingChanges must be emptied\"), spendDgtCheck = __core__ifThenElse(\n                                                                                                    __helios__bool____not(__module__BasicDelegate__isSpendDelegate),\n                                                                                                    () -> {\n                                                                                                        true\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        () -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(true, false)),\n                                                                                                                () -> {\n                                                                                                                    true\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    () -> {\n                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"...spendDgt: validates that all the pending delegates are installed\", false, (), false, (), false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange) -> {\n                                                                                                                            (pdChange) -> {\n                                                                                                                                (pendingTypeName) -> {\n                                                                                                                                    __core__chooseUnit(__cond_80 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_80),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_186) -> {\n                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- Remove: verifies that the delegate queued for removal is now removed from the Capo manifest\", false, (), false, (), false, ()), __cond_83 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_83),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_187) -> {\n                                                                                                                                                            __helios__error(__helios__string____add(\"queued Remove failed: name still present in next-manifest item: \", pendingTypeName))\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__55) -> {\n                                                                                                                                                            ()\n                                                                                                                                                        }\n                                                                                                                                                    }\n                                                                                                                                                )()(__cond_83))\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__52) -> {\n                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"   -- verifies that added & replaced entries are present in the updated map (at its next position)\", false, (), false, (), false, ()), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                    __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),\n                                                                                                                                                    () -> {\n                                                                                                                                                        __helios__error(\"queued Add/Replace failed: no more items in next-manifest map\")\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        () -> {\n                                                                                                                                                            ()\n                                                                                                                                                        }()\n                                                                                                                                                    }\n                                                                                                                                                )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {\n                                                                                                                                                    ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);\n                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add(\"vv @CME entry: \", CME_key)), __lhs_0_182 = __helios__common__assert_constr_index(ME_type, 1);\n                                                                                                                                                    ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_182);\n                                                                                                                                                    ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_182);\n                                                                                                                                                    refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_182);\n                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"support minting multiple threads of a dgDataPolicy\"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount, 1), \"refCount must be 1 when adding a new dgDataPolicy\"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), \"queued change: name mismatch with next-manifest item\"), ME_name = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))();\n                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add(\"    -- ME policy link \", ME_name)), pendingLink = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange))();\n                                                                                                                                                    pendingName = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(pendingLink))();\n                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add(\"    -- pdChange policy link \", pendingName)), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, pendingLink), \"queued change: policyLink mismatch with next-manifest item\"), (nextIdPrefix) -> {\n                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"    -- @each manifest entry: next-manifest's idPrefix must match the queued change\", false, (), false, (), false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), \"idPrefix mismatch with next-manifest's dgDataPolicy\"))\n                                                                                                                                                    }(__cond_81 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_81),\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__lhs_0_184) -> {\n                                                                                                                                                                idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_184);\n                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"    -- Replace: verifies that the next-manifest no longer has the replaced entry\", false, (), false, (), false, ()), __core__chooseUnit(__cond_82 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))(pendingTypeName);\n                                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_82),\n                                                                                                                                                                    () -> {\n                                                                                                                                                                        (__lhs_0_185) -> {\n                                                                                                                                                                            __helios__error(__helios__string____add(\"queued Replace failed: duplicate name remaining in next-manifest map: \", pendingTypeName))\n                                                                                                                                                                        }\n                                                                                                                                                                    },\n                                                                                                                                                                    () -> {\n                                                                                                                                                                        (__54) -> {\n                                                                                                                                                                            ()\n                                                                                                                                                                        }\n                                                                                                                                                                    }\n                                                                                                                                                                )()(__cond_82), idPrefix_6))\n                                                                                                                                                            }\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_81),\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__lhs_0_183) -> {\n                                                                                                                                                                        idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_183);\n                                                                                                                                                                        idPrefix_5\n                                                                                                                                                                    }\n                                                                                                                                                                },\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__53) -> {\n                                                                                                                                                                        __helios__error(\"unreachable\")\n                                                                                                                                                                    }\n                                                                                                                                                                }\n                                                                                                                                                            )()\n                                                                                                                                                        }\n                                                                                                                                                    )()(__cond_81)))))))))\n                                                                                                                                                })))\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_80), __cond_79 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_79),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_181) -> {\n                                                                                                                                                (callback_18) -> {\n                                                                                                                                                    callback_18(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))\n                                                                                                                                                }\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__51) -> {\n                                                                                                                                                (callback_17) -> {\n                                                                                                                                                    callback_17(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))\n                                                                                                                                                }\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_79))\n                                                                                                                                }(__cond_78 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_78),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_180) -> {\n                                                                                                                                            typeName_3 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_180);\n                                                                                                                                            __core__chooseUnit(__helios__print(\"  -- ok: DgDataPolicy in commitPendingChanges\"), typeName_3)\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__50) -> {\n                                                                                                                                            __helios__error(\"invalid delegate-change role (for now) in commitPendingChanges\")\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(__cond_78))\n                                                                                                                            }(__cond_77 = pcChange;\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_77),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_179) -> {\n                                                                                                                                        dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_179);\n                                                                                                                                        dgtChange\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_178) -> {\n                                                                                                                                        __helios__error(\"otherManifestChange not yet supported\")\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(__cond_77))\n                                                                                                                        }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {\n                                                                                                                            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)\n                                                                                                                        }))\n                                                                                                                    }()\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        }()\n                                                                                                    }\n                                                                                                )();\n                                                                                                mintDgtCheck = __core__ifThenElse(\n                                                                                                    __helios__bool____not(__module__BasicDelegate__isMintDelegate),\n                                                                                                    () -> {\n                                                                                                        true\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(true, false)),\n                                                                                                            () -> {\n                                                                                                                true\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                () -> {\n                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... mintDgt: validates that all the removed dgTkns are burned\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the txn must have all the expected burns\", false, (), false, (), false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();\n                                                                                                                    mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1));\n                                                                                                                    len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);\n                                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                                        __helios__int____gt(len, 1),\n                                                                                                                        () -> {\n                                                                                                                            __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))(false, ())), __helios__error(__helios__string____add(\"currently supporting only one minting policy being burned in the tx \", __helios__int__show(len)())))\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            () -> {\n                                                                                                                                ()\n                                                                                                                            }()\n                                                                                                                        }\n                                                                                                                    )(), (observedTokenBurn) -> {\n                                                                                                                        remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange_1) -> {\n                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"EXPECTS the spendDgt to check details of Replace activities\", false, (), false, (), false, ()), (pdChange_1) -> {\n                                                                                                                                __cond_86 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_86),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_192) -> {\n                                                                                                                                            typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_192);\n                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add(\"  -- ok: DgDataPolicy in commitPendingChanges: \", typeName_4)), __cond_87 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_87),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_199) -> {\n                                                                                                                                                        foldingBurn\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    (__57) -> {\n                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"verifies that a delegate queued for removal or replacement is burned\", false, (), false, (), false, ()), __cond_88 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_4);\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_88),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_198) -> {\n                                                                                                                                                                    __helios__error(__helios__string____add(\"queued Remove failed: not present in previous-manifest map: \", typeName_4))\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_193) -> {\n                                                                                                                                                                    __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_193);\n                                                                                                                                                                    ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);\n                                                                                                                                                                    tn_8 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);\n                                                                                                                                                                    mph_34 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);\n                                                                                                                                                                    __cond_89 = mph_34;\n                                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                                        __helios__option[__helios__mintingpolicyhash]__some____is(__cond_89),\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            (__lhs_0_197) -> {\n                                                                                                                                                                                __core__chooseUnit(__helios__print(\"    -- TODO: manifest entry with other-mph: allow optional burn\"), foldingBurn)\n                                                                                                                                                                            }\n                                                                                                                                                                        },\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            (__58) -> {\n                                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"each pending change must have a name recognized by the manifest\", false, (), false, (), false, ()), __lhs_0_194 = __helios__common__assert_constr_index(ME_type_1, 1);\n                                                                                                                                                                                refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_194);\n                                                                                                                                                                                tnStr_2 = __helios__bytearray__decode_utf8_safe(tn_8)();\n                                                                                                                                                                                __cond_90 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_8);\n                                                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                                                    __helios__option[__helios__int]__none____is(__cond_90),\n                                                                                                                                                                                    () -> {\n                                                                                                                                                                                        (__lhs_0_196) -> {\n                                                                                                                                                                                            __helios__error(__helios__string____add(\"queued Remove/Replace failed: no burn, or double-burn: \", tnStr_2))\n                                                                                                                                                                                        }\n                                                                                                                                                                                    },\n                                                                                                                                                                                    () -> {\n                                                                                                                                                                                        (__lhs_0_195) -> {\n                                                                                                                                                                                            burningCount = __helios__option[__helios__int]__some__some(__lhs_0_195);\n                                                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"    -- ok: BURN 🔥\", __helios__int__show(burningCount)()), \"×💴 \"), tnStr_2)), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                                                                __helios__int____neq(__helios__int____sub(0, refCount_1), burningCount),\n                                                                                                                                                                                                () -> {\n                                                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add(__helios__string____add(\"queued Remove/Replace failed: expected burn of \", __helios__int__show(refCount_1)()), \"×💴 \"), tnStr_2))\n                                                                                                                                                                                                },\n                                                                                                                                                                                                () -> {\n                                                                                                                                                                                                    () -> {\n                                                                                                                                                                                                        ()\n                                                                                                                                                                                                    }()\n                                                                                                                                                                                                }\n                                                                                                                                                                                            )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_8)))\n                                                                                                                                                                                        }\n                                                                                                                                                                                    }\n                                                                                                                                                                                )()(__cond_90))\n                                                                                                                                                                            }\n                                                                                                                                                                        }\n                                                                                                                                                                    )()(__cond_89)\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()(__cond_88))\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            )()(__cond_87))\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__56) -> {\n                                                                                                                                            __helios__error(\"invalid delegate-change role (for now) in commitPendingChanges\")\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(__cond_86)\n                                                                                                                            }(__cond_85 = pcChange_1;\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_85),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_191) -> {\n                                                                                                                                        dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_191);\n                                                                                                                                        dgtChange_1\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_190) -> {\n                                                                                                                                        __helios__error(\"otherManifestChange not yet supported\")\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(__cond_85)))\n                                                                                                                        }, observedTokenBurn);\n                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires all the burns of our policy-id to be accounted for\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add(\"extra burns found in the transaction: \n\", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... -- end of commitPendingChanges\", false, (), false, (), false, ()), true)))\n                                                                                                                    }(__cond_84 = mintThisPolicy;\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_84),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_189) -> {\n                                                                                                                                minted_1 = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_189);\n                                                                                                                                minted_1\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_188) -> {\n                                                                                                                                __core__mkNilPairData(())\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(__cond_84)))))\n                                                                                                                }()\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }\n                                                                                                )();\n                                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                                    __helios__bool__and(() -> {\n                                                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate)\n                                                                                                    }, () -> {\n                                                                                                        __helios__bool____not(__module__BasicDelegate__isSpendDelegate)\n                                                                                                    }),\n                                                                                                    () -> {\n                                                                                                        __helios__error(\"unreachable? not mintDgt or spendDgt\")\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        }()\n                                                                                                    }\n                                                                                                )(), __helios__bool__and(() -> {\n                                                                                                    mintDgtCheck\n                                                                                                }, () -> {\n                                                                                                    spendDgtCheck\n                                                                                                })))))\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_72),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_168) -> {\n                                                                                                        manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_168);\n                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't allow updating anything except the manifest\", false, (), false, (), false, ()), __core__chooseUnit(__cond_73 = manifestActivity;\n                                                                                                        __core__ifThenElse(\n                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_73),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_176) -> {\n                                                                                                                    __core__chooseUnit(__helios__assert(false, \"TODO: support retirement activity\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"removes the indicated key from the manifest\", false, (), false, (), false, ()), __module__StellarHeliosHelpers__REQT(\"delegates MUST be allowed to validate that this doesn't drop something they need\", false, (), false, (), false, ()))))\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_73),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_175) -> {\n                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"if delegates need a hook to validate that the updte is acceptable, that might be enforced here\"), __core__chooseUnit(__helios__assert(false, \"TODO: support updatingEntry activity\"), __module__StellarHeliosHelpers__REQT(\"the indicated token MUST be referenced in the transaction\", false, (), false, (), false, ())))\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_73),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_170) -> {\n                                                                                                                                    key_34 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_170);\n                                                                                                                                    tokenName_4 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_170);\n                                                                                                                                    charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_9(cctx_4)(), 0);\n                                                                                                                                    nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__address_3)(cctx_4)();\n                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the indicated token MUST be referenced in the transaction\", false, (), false, (), false, ()), refInput = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3)(cctx_4)(false, (), true, tokenName_4);\n                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__txinput____eq(refInput, refInput))(__helios__string____add(__helios__string____add(\"  -- found refInput: \", __helios__bytearray__decode_utf8_safe(tokenName_4)()), \"?\")), \"refInput must be found\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the new entry MUST be found in the new manifest\", false, (), false, (), false, ()), __core__chooseUnit(__cond_74 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_34);\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_74),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_174) -> {\n                                                                                                                                                __helios__error(__helios__string____add(\"the new manifest entry is missing: \", key_34))\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_171) -> {\n                                                                                                                                                __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_171);\n                                                                                                                                                entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);\n                                                                                                                                                tn_7 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);\n                                                                                                                                                mph_33 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);\n                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add(\"   -- ok, found the manifest entry for \", key_34)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the new entry must have the right token-name\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_7, tokenName_4), \"token-name mismatch\"), __core__chooseUnit(__cond_76 = mph_33;\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __helios__option[__helios__mintingpolicyhash]__some____is(__cond_76),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_173) -> {\n                                                                                                                                                            __helios__error(\"other-mph not yet supported\")\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__49) -> {\n                                                                                                                                                            ()\n                                                                                                                                                        }\n                                                                                                                                                    }\n                                                                                                                                                )()(__cond_76), __cond_75 = entryType;\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_75),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_172) -> {\n                                                                                                                                                            __helios__print(\"   -- ok: matching name, with NamedTokenRef added in updatingManifest\")\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__48) -> {\n                                                                                                                                                            __helios__error(\"addingEntry: the new manifest entry must be a NamedTokenRef for now\")\n                                                                                                                                                        }\n                                                                                                                                                    }\n                                                                                                                                                )()(__cond_75)))))\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_74), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the remainder of the manifest must be unchanged\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_34)), \"manifest modified in an unexpected way\"), __helios__print(\"  -- ok! new manifest as expected\")))))))\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_73),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_169) -> {\n                                                                                                                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(false, ()), \"<----- that can fail, this can't\"), __core__chooseUnit(__helios__assert(false, \"TODO: support forkingThreadToken activity\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the indicated token MUST be referenced in the transaction\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"validates that another copy of the token name is minted\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"when the key is a DgDataPolicy, the existing manifest entry is updated\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist\", false, (), false, (), false, ()), __module__StellarHeliosHelpers__REQT(\"when the manifest already has the entry, the refCount is incremented by newThreadCount\", false, (), false, (), false, ())))))))\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__47) -> {\n                                                                                                                                            ()\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(__cond_73), true))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_72),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_167) -> {\n                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"a forced delegate change is an escape-hatch only involving the minter and the Capo\", false, (), false, (), false, ()), __helios__error(\"the mint/spend delegate never is involved when the minter is instructed to force a new delegate\"))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_166) -> {\n                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"a forced delegate change is an escape-hatch only involving the minter and the Capo\", false, (), false, (), false, ()), __helios__error(\"the mint/spend delegate never is involved when the spender is instructed to force a new delegate\"))\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(__cond_72)\n                                                        }, () -> {\n                                                            __core__ifThenElse(\n                                                                true,\n                                                                () -> {\n                                                                    __core__chooseUnit(__helios__print(\"BasicDelegate harness deferring to specialization for CapoLifecycleActivities\n\"), true)\n                                                                },\n                                                                () -> {\n                                                                    () -> {\n                                                                        false\n                                                                    }()\n                                                                }\n                                                            )()\n                                                        })\n                                                    }(__cond_71 = neededRole;\n                                                    __core__ifThenElse(\n                                                        __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_71),\n                                                        () -> {\n                                                            (__lhs_0_165) -> {\n                                                                __helios__error(\"delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)\")\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_71),\n                                                                () -> {\n                                                                    (__lhs_0_164) -> {\n                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... this Capo lifecycle activity is only valid on spend delegate\", true, __module__BasicDelegate__isSpendDelegate, false, (), false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(false, ()), \"<----- that can fail, this can't\"), __core__chooseUnit(__helios__print(\"  -- ok: spendDgt checking CapoLifecycleActivity\"), neededRole)))\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_71),\n                                                                        () -> {\n                                                                            (__lhs_0_163) -> {\n                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... this Capo lifecycle activity is only valid on mint delegate\", true, __module__BasicDelegate__isMintDelegate, false, (), false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(false, ()), \"<----- that can fail, this can't\"), __core__chooseUnit(__helios__print(\"  -- ok: mintDgt checking CapoLifecycleActivity\"), neededRole)))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_71),\n                                                                                () -> {\n                                                                                    (__lhs_0_162) -> {\n                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)\", false, (), false, (), false, ()), __core__ifThenElse(\n                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(true, false),\n                                                                                            () -> {\n                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(true, false),\n                                                                                                    () -> {\n                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        () -> {\n                                                                                                            __helios__error(__helios__string____add(\"this Capo lifecycle activity is only valid on mint/spend delegate, not \", __module__BasicDelegate__delegateName))\n                                                                                                        }()\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )())\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    (__46) -> {\n                                                                                        __helios__error(\"no way k\")\n                                                                                    }\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()(__cond_71)))))\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_70),\n                                                    () -> {\n                                                        (__lhs_0_160) -> {\n                                                            seed_4 = __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_160);\n                                                            dDataTypeName_1 = __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_160);\n                                                            __core__ifThenElse(\n                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),\n                                                                () -> {\n                                                                    __helios__error(\"CreatingDelegatedData activity is only allowed in the mint delegate\")\n                                                                },\n                                                                () -> {\n                                                                    () -> {\n                                                                        cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();\n                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_3)(false, ()), \"<---- fails in there, not here\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"context: CreatingDelegatedData\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- ensures the data-controller is invoked with its minting activity for the indicated recId\", false, (), false, (), false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2(__module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3)(cctx_3)(dDataTypeName_1, false, (), false, ());\n                                                                        tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);\n                                                                        purpose_2 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();\n                                                                        newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_2))();\n                                                                        __helios__bool__and(() -> {\n                                                                            __helios__bool__and(() -> {\n                                                                                __helios__bool__and(() -> {\n                                                                                    __helios__bool__and(() -> {\n                                                                                        true\n                                                                                    }, () -> {\n                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_4, __core__mkCons(__helios__string____to_data(purpose_2), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())\n                                                                                    })\n                                                                                }, () -> {\n                                                                                    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx_3)(newDataId_1, dDataTypeName_1)\n                                                                                })\n                                                                            }, () -> {\n                                                                                __module__StellarHeliosHelpers__bREQT(\"ensures the data-controller is invoked with ONE minting activity for the indicated recId\", false, (), false, (), false, ())\n                                                                            })\n                                                                        }, () -> {\n                                                                            __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_4))()\n                                                                        }))))\n                                                                    }()\n                                                                }\n                                                            )()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_70),\n                                                            () -> {\n                                                                (__lhs_0_159) -> {\n                                                                    dDataTypeName = __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_159);\n                                                                    recId_10 = __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_159);\n                                                                    __core__ifThenElse(\n                                                                        __helios__bool____not(__module__BasicDelegate__isSpendDelegate),\n                                                                        () -> {\n                                                                            __helios__error(\"UpdatingDelegatedData activity is only allowed in the spend delegate\")\n                                                                        },\n                                                                        () -> {\n                                                                            () -> {\n                                                                                cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();\n                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_2)(false, ()), \"<---- fails in there, not here\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"ensures the data-controller is invoked with ONE spending activity for the indicated recId\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2(__module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3)(cctx_2)(dDataTypeName, false, (), false, ()))(recId_10))(), \"^^^ those can fail, this assert won't.\"), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3)(cctx_2)(recId_10, false, ());\n                                                                                __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), \"no way m\"), __core__chooseUnit(__core__ifThenElse(\n                                                                                    __helios__string____eq(\"settings\", dDataTypeName),\n                                                                                    () -> {\n                                                                                        curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_2)(true, true))();\n                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add(\"when updating the current Capo settings, the delegates must all \", \"have a chance to ensure the settings are valid for their needs\")), __core__ifThenElse(\n                                                                                            false,\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __helios__bytearray____eq(curSettingsId, recId_10),\n                                                                                                    () -> {\n                                                                                                        __core__chooseUnit(__helios__print(\" -> \"), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), \"no way jose\"), __helios__print(\" <- \")))\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        () -> {\n                                                                                                            recIdStr_4 = __helios__bytearray__decode_utf8_safe(recId_10)();\n                                                                                                            curSettingsIdStr = __helios__bytearray__decode_utf8_safe(curSettingsId)();\n                                                                                                            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"  -- NOTE: updating \", recIdStr_4), \", which isn't currentSettings=\"), curSettingsIdStr))\n                                                                                                        }()\n                                                                                                    }\n                                                                                                )()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                () -> {\n                                                                                                    ()\n                                                                                                }()\n                                                                                            }\n                                                                                        )())\n                                                                                    },\n                                                                                    () -> {\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        }()\n                                                                                    }\n                                                                                )(), __helios__bool__and(() -> {\n                                                                                    __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx_2)(recId_10, dDataTypeName))(\"  -- did output delegated data? \")\n                                                                                }, () -> {\n                                                                                    true\n                                                                                }))))))))\n                                                                            }()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_70),\n                                                                    () -> {\n                                                                        (__lhs_0_157) -> {\n                                                                            recId_9 = __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_157);\n                                                                            __core__ifThenElse(\n                                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),\n                                                                                () -> {\n                                                                                    __helios__error(\"DeletingDelegatedData activity is only allowed in the mint delegate\")\n                                                                                },\n                                                                                () -> {\n                                                                                    () -> {\n                                                                                        cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();\n                                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_1)(false, ()), \"<---- fails in there, not here\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the spendDgt allows the spending of the utxo\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the mintDgt requires the burning of its UUT\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"it must not delete a record that's still referenced by the Capo manifest\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"a matching manifest entry has to be changed or removed prior to deletion\", false, (), false, (), false, ()), __lhs_0_158 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3)(cctx_1)(recId_9, false, ());\n                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"verify the input was found ^\"), __core__chooseUnit(__helios__assert(false, \"Delete not supported yet\"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"implement the generic data-controller re-delegation convention here\"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"ensure that the right delegate is consulted with its BurningActivities.*\"), false))))))))))\n                                                                                    }()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities____is(__cond_70),\n                                                                            () -> {\n                                                                                (__lhs_0_156) -> {\n                                                                                    true\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __module__MarketSalePolicy__DelegateActivity[]__MintingActivities____is(__cond_70),\n                                                                                    () -> {\n                                                                                        (__lhs_0_155) -> {\n                                                                                            true\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __module__MarketSalePolicy__DelegateActivity[]__BurningActivities____is(__cond_70),\n                                                                                            () -> {\n                                                                                                (__lhs_0_154) -> {\n                                                                                                    true\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__lhs_0_153) -> {\n                                                                                                    true\n                                                                                                }\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()(__cond_70))\n                    },\n                    () -> {\n                        () -> {\n                            false\n                        }()\n                    }\n                )();\n                result_9\n            })\n        }\n    };\n    __module__BasicDelegate__main = (mdd, activity_10) -> {\n        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(\" 🚥❓delegate: \", __module__BasicDelegate__delegateName), \"\n\")), (result_10) -> {\n            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(\"🚥🟢 delegate: \", __module__BasicDelegate__delegateName), \": ok!\n\")), result_10)\n        }(__cond_122 = mdd;\n        __core__ifThenElse(\n            __module__MarketSalePolicy__DelegateDatum[]__capoStoredData____is(__cond_122),\n            () -> {\n                (__lhs_0_291) -> {\n                    __helios__error(\"Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum\")\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __module__MarketSalePolicy__DelegateDatum[]__IsDelegation____is(__cond_122),\n                    () -> {\n                        (isD) -> {\n                            dd_2 = __module__MarketSalePolicy__DelegateDatum[]__IsDelegation__dd(isD);\n                            __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __helios__int__serialize(__module__BasicDelegate__rev)()), \"param/script-hash uniqueness\"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __module__BasicDelegate__instance), \"param/script-hash uniqueness\"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __helios__string__encode_utf8(__module__BasicDelegate__delegateName)()), \"param/script-hash uniqueness\"), __core__chooseUnit(__module__StellarHeliosHelpers__logGroupUnit(\"delegate: spending dgTkn\", true, false, true, () -> {\n                                __helios__print(__helios__value__show(__helios__txinput__value(__helios__scriptcontext__get_current_input()))(false, ()))\n                            }), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_2)))();\n                            govAuthorityCheck = __core__ifThenElse(\n                                __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),\n                                            () -> {\n                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(\"📝 \", __module__BasicDelegate__delegateName), \": requiresGovAuthority is overridden to false in the delegate's .hlb.ts\")), __core__chooseUnit(__helios__print(\"   -- the policy can still choose to situationally enforce gov-authority\"), true))\n                                            },\n                                            () -> {\n                                                () -> {\n                                                    __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_7)())()\n                                                }()\n                                            }\n                                        )()\n                                    }()\n                                }\n                            )();\n                            __helios__bool__and(() -> {\n                                govAuthorityCheck\n                            }, () -> {\n                                __module__BasicDelegate__checkOneActivity_1(__module__BasicDelegate__checkOneActivity_1)(isD, activity_10, true, dd_2, true, cctx_7, true, __helios__string____add(__helios__string____add(\"delegate \", __module__BasicDelegate__delegateName), \"'s overall policy\"))\n                            })))))\n                        }\n                    },\n                    () -> {\n                        (__81) -> {\n                            kaboomInvalidRedeemer = () -> {\n                                __helios__error(\"wrong Actvy/dtm\")\n                            };\n                            __cond_123 = activity_10;\n                            __core__ifThenElse(\n                                __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_123),\n                                () -> {\n                                    (__lhs_0_290) -> {\n                                        kaboomInvalidRedeemer()\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_123),\n                                        () -> {\n                                            (__lhs_0_289) -> {\n                                                kaboomInvalidRedeemer()\n                                            }\n                                        },\n                                        () -> {\n                                            (__82) -> {\n                                                __module__MarketSalePolicy__DelegateActivity[]__otherDatumValidation(activity_10)(mdd)\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(__cond_123)\n                        }\n                    }\n                )()\n            }\n        )()(__cond_122)))\n    };\n    __core__ifThenElse(\n        __module__BasicDelegate__main(__module__MarketSalePolicy__DelegateDatum[]__from_data(__module__MarketSalePolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__MarketSalePolicy__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__MarketSalePolicy__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__MarketSalePolicy__DelegateActivity[]__from_data(__module__MarketSalePolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__MarketSalePolicy__DelegateActivity[]__OtherActivities__is_valid_data_2)(__REDEEMER)),\n        () -> {\n            ()\n        },\n        () -> {\n            __helios__error(\"validation returned false\")\n        }\n    )()\n}",
        "optimizedSmap": {
            "sourceNames": [
                "src/CapoHelpers.hl",
                "src/MarketSale/DynamicSaleV1.hl",
                "src/delegation/BasicDelegate.hl",
                "src/MarketSale/MarketSalePolicy.hl",
                "src/MarketSale/MarketSaleData.hl",
                "src/MarketSale/SaleProgressDetails.hl",
                "src/MarketSale/DynamicSaleV1Settings.hl",
                "src/CapoMintHelpers.hl",
                "src/StellarHeliosHelpers.hl",
                "src/delegation/CapoDelegateHelpers.hl"
            ],
            "indices": "9f186b001903e908187d001906130818a90118240418b1021905c00418b2021905c0041902a00319014c181f1902be03190158181b1902c20319015a181b1902c70319015b181b1902d50019049f18341902db001904aa091902ed001904a9184d19037903190162181e19038503190164181b1903dd041901330b1903e3041901340b1903e9041901350b1904080419011618521905850319016d171905df0319016f181c1905e703190171181b190617031901801719062b031901841719064b0418b7131906a80418ca0819076a0418dd181e1908570319018a181b190a5305182811190a7505182e13190a8005182f1843190c6601187908190c7a01187d0f190c9501187f0a190cb5011893182d1913dc0219018b182119140602190184183319140c0219017e182b1915b7021901d21419160d02190230182d19165c0219024018461916830219023d183b1916a50219023d1824191b29021902d41839191bef021902b41831191c6302190252182e192048021901c9182519216e0119015218351922090118e00d1922e606181a1319232006181c1319235a06181e1319239e061820131923e8061822131924660514131924840515131924a50516131924c90517131925ed04187613192812071901741826192873071901d0182b192874071901d0182b1928f40719021d181a19290f071901f31820192924071901f0183d192932071901f9182f1929e2071901f31841192b180818cb0e192b2f071901ad181c192be7001901c0184b192c09001901c0184d192cf00719012104192cf40719012504192d04071901420a192d050719013e181a192d2f0719013616192d36071901291822192e100019019e184b192e410019019e184d192e84001907a510192f3b001907a51847192f7d001907811019303900190781184719304a0019072c181f193095001907321419310c081901370a1931a400190657101932d3001906040c1933390019057c182e193383001904d915193384001904d9151934b9001904bd18331934bb001904c0101934dc001904c00c193661091901800c19376409190178181b19377c091901680bff",
            "variableNames": "",
            "termDescriptions": "a81906a866617373657473190c666661637475616c192cf0687365656454784964192cf4686964784279746573192e8469636861727465724163192f7d69636861727465724163193383683c7377697463683e193384683c7377697463683e"
        },
        "unoptimizedSmap": {
            "sourceNames": [
                "src/CapoHelpers.hl",
                "src/MarketSale/DynamicSaleV1.hl",
                "src/delegation/BasicDelegate.hl",
                "src/MarketSale/MarketSalePolicy.hl",
                "src/MarketSale/MarketSaleData.hl",
                "src/MarketSale/SaleProgressDetails.hl",
                "src/MarketSale/DynamicSaleV1Settings.hl",
                "src/CapoMintHelpers.hl",
                "src/StellarHeliosHelpers.hl",
                "src/delegation/CapoDelegateHelpers.hl"
            ],
            "indices": "9f1904a30019019d18321904d7001903450b1904eb001903e1081904ed001903e908190537001905fa0819053b001906130819066d01181f0419066f0118240419078f021905c004190790021905c0041907be02190581021907bf02190581021907c202190582182e1907c302190582182e1907c402190582091907c502190582041907c60219058218271907c80219058218271907c90219058218191907cb0219058218191907cc021905820a1907d9021905be0a1907dc021905be18291907dd021905be181a1908e6021905b41822190af502190128183e190c540218e8181b190c770218e3181b190d0a0219018b1821190d34021901841833190d3c0219017e182b190d4c0219017a182c190d98021901a21839190dbf021901a6184d190e4e021901d214190ec602190230182d190f1c021902401846190f29021902431835190f370219023d1824190f3f0219023d183b1911cb0219034e185319146d021902ad18481914ff021902d4183919158b021902ca18351915d6021902b4183119163302190252182e19163e02190251184319170e021903fc182819174702190404182019175602190405182519176d02190407187619182f0219042318601919230219040a182919193502190404182a191bcb02190459182a191c1c02190460182a191d1a021904701845191d1b021904701845191d3f021904801862191d4d021904671844191d81021904861842191d8b02190487182a191e8002190201183b191eb80219020a183a191f1c021901c91825191f3c021904ae183c191f5d021904af1832192028021904f7183c192049021904f8183319208b0219050018341920da0219052c184119211a02190522181c19213d02190533183019214a0219050518411921640219053b183c1921850219053c18321921f702190548181a1922100219054418421924740319014c181f19249403190158181b1924990319015a181b19249e0319015b181b1924f803190162181e19250b03190164181b19252b0319016d171925550319016718431925580319016718501925720319016f181c19258103190171181b1925af03190180171925b903190181182e1925c103190181182f1925c303190182182d1925cb03190182182e1925cd03190184171925d503190185171925e70319017c18201926150319017418431926180319017418501926380319018a181b1926f1031901da182819280d031901ac182319282c03190197184219283903190197184319283b031901981841192843031901981719284803190198184219286d0319018c1843193a86011901a91836193b48011901521835193b7c0119017410193b87011901771837193bbf011901321832193c320118ef08193c420118ee182e193c550118ed0a193c750118e31831193c8c0118e00d193c990118d608193ca90118d5182e193cb60118d20c193cc30118d31821193d480118be182d193df8011893182d193e1e01189f1836193e2b01189c13193e5d01187908193e7901187c1831193e8801187d0f193ea101187f0a193eaf01187918181941fc041901330b194201041901340b194206041901350b1942320419011618521942bb04190117121943590418fd1419435f0418fc151943a90418b7131943bd0418b9183c1943d40418ca081943e20418cc141943e70418cc0e1943e80418cc18191944660418dd181e19454f041891182419458b041876131945de041885183319490604184310194912041846181819492204183b1019492e04183e18181955610518281119558605182e1319559105182f18431955e10518381419560c0518401419563205141319564105151319565005161319565f05171319577306181913195774061819183819578206181a1319579106181b131957a006181c131957af06181d131957b006181d18371957be06181e131957cd06181f131957dc061820131957eb061821131957fa061822131958090618231319581806182413195a04071901741826195a0607190175182b195a43071901b708195a45071901b808195a68071901b81821195aa4071901cf08195aad071901d0182b195aae071901d0182b195b300719021d181a195b350719021d12195b54071901f31820195b62071901f0183d195b97071901f9182f195c15071902041841195c1a0719020a181c195c270719020c1854195c2d0719020a1827195c46071901f31841195cb5071901ad1824195cb9071901ad181c195cf20719018f182b195edd0719012104195ee10719012504195ee70719013b04195ef3071901420a195ef40719013e181a195f1b071901361828195f260719013611195f280719013616195f2d071901291822195f6a07184a0419602c071860181b196035071852183e19608307184c181819612607182b0819612707182b0819614a00190885081962f60019084b181919631d0019083618211963200019083418181963600019081f151964b9001907a51019650c001907a5184719656200190781101965ba0019078118471965c90019072b18271965cb0019072c181f196613001907321419663d00190703185819667a0019070f1419668b0019071018331966c90019071c10196707001906651719670800190665182d1967a000190655181c1967b000190657101967e10019064f18241967fa0019063f181f1968230019063f182019682e00190639182819682f00190639184119684a0019062f1119689200190612181c1968c500190601181c196907001906091818196914001906040c196921001905f9181819695d001905e109196964001905df181d19697d001905d618201969a3001905ce091969aa001905cc181b1969e9001905a4091969ed001905a21867196a0f0019059a1838196a1b0019059c1862196a44001905a6184c196a4d001905bb09196a57001905b715196b3d00190575181e196b470019057c182e196b600019057b14196b630019057e1827196b710818b21827196b7f0818b212196b820818b414196bcb001905070b196bcc001905070b196bd200190509184c196c24001904f9183f196c26001904f81821196c27001904f81821196c5a001904d7181c196c64001904d915196c65001904d915196d13001904c7181c196d14001904c71837196d31001904bb09196d4f001904bd1833196d51001904c010196d55001904c21841196d6b001904c2182d196d83001904c00c196d8f001904bc181a196e0d0019049d182d196e180019049f1834196e1e001904aa09196e3b001904a9184d196e3d001904a80d196e63001904a51845196f660019045514196f8c0019044713196fb2001903e810196fe3001903dc0f197014001903b2121970ae00190343101970b400190314181b1970b50019033f061970d40019033d18271970ea0019033e0f1970fe00190329111971250019032e184119713300190332185619715e00190338182d197188001902960a1971970019029318211971980019029318211971aa0019029818491971bd0019029918241971c80019029b181b1971cf0019029c18411971e20019029d18551971f7001902f9151972080019029f18301972090019029f1830197211001902ae11197227001902a31838197242001902a6184319724d001902a7184d19725d001902a718451972a0001902b3183b1972a7001902b518521972b9001902b518261972bb001902b7101972bc001902e818621972cf001902ec111972ea001902ed18511972fd001902f11119732f001902bc181d197347001902c2181d19735f001902ca181d19738b001902d218441973a8001902d618701973cb001902d918431973e0001902de1857197411001902f5183119742b0019025b18191974360019025c184a19743f0019028c182f197459001902681119749b0019026d18581974a20019026f184c1974b00019026f18211974b300190281185b1974c60019028218601974d90019028318501974ec0019028418681975640019028818301975c00019021f18561975c20019021e151975c30019021e151975c70019021f141975cc0019021f0f1975d80019021f18441975d900190221184f1975db0019021f184e1975dc0019021f184e1975e800190222184c1975ff00190222182b197600001902271319760e001902141719760f001902141719761000190215185619761200190214182b19761300190214182b197617001902151419761c001902150f19762800190215184419762d00190215184e19762e00190215184e1976400019020a182119765c001901f5182719765f00190207081976610019020609197677001901fb1851197682001901fb184919769e001901fe184819786d001901c41319787d001901c0184b197882001901c01830197885001901c0184d1978ce0019019e184b1978d30019019e18301978d60019019e184d198e23091901800c198e42091901871837198e56091901830c198e630919018d15198e660919018d1835198e680919018d1835198e690919018d1830198e6c0919018d1836198e99091901721834198ecb091901781829198ecc09190178181b198ee8091901680b198efa091901650a198fa80919014616198fbb0919014113198fc10919013c185a199001091901170a19a4560918310419a8ad08190144182819a8cf08190144181d19a8d008190144181d19a8db081901370a19a9020819013a1219aaa50818cb0e19aac60818c7181919aaf90818a2183519aafb0818a30a19aafe0818a30b19ab1f08188a182219ab550818810f19ab960818701419aba10818710d19abaf0818731319abb00818700419ac2008183f0419ac2108183f0419ac2a0818411119ac450818461419ac600818310e19ac650818310a19ac7308181e182219ac7408181e182219ac7f0818230dff",
            "variableNames": "",
            "termDescriptions": "b8381907be646d61696e1907bf646d61696e191747636c656e193b7c66726573756c74193e5d6661637475616c1943d466617373657473195a43666d7068537472195a456676616c537472195c1a68746e537472696e67195edd687365656454784964195ee1686964784279746573195ee7686d696e6948617368195f6a6874617267657449641964b9696368617274657241631965626963686172746572416319663d78204361706f4374783a3a6d7573744f757470757444656c6567617465644461746119667a6b61637475616c496453747219684a6473656c661968926473656c661968c56473656c661969216473656c66196b3d6473656c66196bcb683c7377697463683e196bcc683c7377697463683e196c26636b6579196c27636b6579196c5a6473656c66196c64683c7377697463683e196c65683c7377697463683e196f666473656c66196f8c6473656c66196fb26473656c66196fe36473656c661970146473656c661970ae6473656c661970b46473656c66197197683c7377697463683e197198683c7377697463683e197208683c7377697463683e197209683c7377697463683e1972bb70616374734f6e546869735265636f72641975c2636d73671975c3636d736719760e6b617373657274696f6e4f6b19760f6b617373657274696f6e4f6b197612636d7367197613636d73671976406473656c6619765c6473656c6619a8ad683c61737369676e3e19aaf9683c61737369676e3e19ab1f69636f6c6c617073656419ac206863616c6c6261636b19ac216863616c6c6261636b19ac7369636f6c6c617073656419ac7469636f6c6c6170736564"
        }
    }
};
                    export default precompiled;
                    