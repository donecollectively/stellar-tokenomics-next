import { MintSpendDelegateBundle } from '@donecollectively/stellar-contracts';
import { makeSource } from '@helios-lang/compiler-utils';
import StellarTokenomicsCapoBundle from 'stellar-tokenomics/contracts-preprod/StellarTokenomics.hlb';

const STokMintDelegate_hl = makeSource(
  "module STokMintDelegate\n\nimport {\n    tx, \n    get_current_input,\n    get_current_validator_hash,\n    get_cont_outputs\n} from ScriptContext\n\n// specialized to ...\n//   -   NOT YET SPECIALIZED (replace with your specialization notes here) - \n// original notes about (un)specialization follow:\n\n\n//  //! provides a basic version, not yet specialized,\n//  // of the \"specializedDelegate\" interface, which simply\n//  // exports a DelegateDatum enum and DelegateActivities (redeemer enum).  \n\n//  //! Your specialization MUST include the enum variants found in this\n//  //  ... unspecialized version.  It MAY include additional Datum variants.\n//  // Any additional Redeemer/Activity variants should be added underneath \n//  // the SpendingActivity / MintingActivity top-level enum variants, instead \n//  // of adding new top-level enum variants to DelegateActivity.\n\n//  // The DelegateActivity (redeemer) enum conforms to the \n//  // Delegate Redeemer protocol, in which enum 0 is reserved for\n//  // lifecycle activities, enum 1 is used for spend-related activities \n//  // (if the delegate is used as a spend delegate), and enum 2 is called\n//  // for authorizing minting.  Enum 3 and beyond are reserved for\n//  // extensions to the Delegate Redeemer protocol.\n\n//  // Within the minting and spending activities, the specialization can \n//  // indicate a nested activity enum to support various dApp-specific\n//  // activities.  \n\n//  // Activities that validate minting of UUTs should contain enum fields \n//  // to identify the seed-transaction details needed for properly validating \n//  // UUT mints fitting the use-case.\n\n//  //! Your specialization MAY include any additional functions, imports or \n//  //  methods defined on any of the types in this file.\n\nimport {\n    AnyData,\n    REQT,\n    bREQT,\n    TODO,\n    REQTgroup,\n    REQTgroupUnit,\n    logGroupUnit,\n    logGroup,\n    logGroupStart,\n    logGroupEnd\n} from StellarHeliosHelpers\n\nimport {\n    DelegationDetail,\n    mustReturnValueToScript,\n    DelegateLifecycleActivity,\n    CapoLifecycleActivity,\n    unmodifiedDelegation\n} from CapoDelegateHelpers\n\nimport {\n    validateUutMinting,\n    mkUutTnFactory\n} from CapoMintHelpers\n\nimport {\n    CapoCtx,\n    mkCapoCtx\n} from CapoHelpers\n \n// import {\n//     ProtocolSettings\n// } from ProtocolSettings\n\nenum DelegateDatum {\n    // we only have to use this if we decide Constr#0 is essential for practical CIP-68 compat\n    Cip68RefToken {  \n        // NOTE: this datum contains reference details for a user-facing token minted according to the cip-68 standard \n        //  - the asset name (in the Value of this UTXO) MUST be:  #000643b0 + tokenName\n        //     - this asset name can serve user-side tokens using the CIP-68 \"222\", \"333\" or other token types.\n        //     - the user-side asset name with its (222/333/etc) CIP-67 prefix and \n        //       ... its remaining tokenName will be matched to this asset name (#000643b0 +tokenName)\n        //       ... to locate this reference datum; this datum content will be interpreted\n        //       ... according to the semantics implied by the user-side asset-name prefix.\n        //\n        //  - The attached 'meta' field in this Datum variant contains the relevant data, depending on the token type\n        //    - for \"222\" tokens, the meta field should contain the following fields:\n        //        - \"name\" : String\n        //        - \"description\" : String \n        //        - \"files\" :   // {mediaType, src (url), name?, ... otherFields)\n        //        - \"image\": String  // image url: https://, ar://, ipfs:// or data:// (RFC2397 data)\n        //    - for \"333\" tokens, the meta field should contain the following fields:\n        //        - \"name\" : String\n        //        - \"description\" : String \n        //        - \"ticker\" : String\n        //        - \"url\": String  // project URL\n        //        - \"logo\": String  // image url: https://, ar://, ipfs:// or data:// (RFC2397 data)\n        //                    - it must have a mime type `image/png`, `image/jpeg` or `image/svg+xml`\n        //        - \"decimals\" : Int\n\n        cip68meta: AnyData\n        cip68version: Int\n        otherDetails: Data\n        // otherDetails: Data // can be Unit () or anything else\n    }\n\n    IsDelegation {\n        dd: DelegationDetail\n    }\n    // same variant-index as Capo's DelegatedData\n    capoStoredData {\n        data: AnyData\n        version: Int\n        otherDetails: Data \n    }\n\n    // func validateSettings(self, settings: ProtocolSettings) -> Bool{\n    // ... get the settings object from the contract manifest via cctx\n    //     assert(false, \"not valid (stubbed)\");\n    //     settings.serialize() != self.serialize() &&\n    //     true\n    // }\n}\n\nenum MintingActivity {\n    // application can replace the placeholder, which is only here to \n    // avoid a syntax error in the unspecialized version\n    MintingParticipantToken { \n        seed: TxOutputId\n    }\n\n    MintingFungibleTokens {\n        tokenName: ByteArray\n    }\n\n}\n\n//! The minting delegate can also be used as a general spending \n// delegate (this is the default arrangement during the Capo \n// charter mint).  These activities are required by the Capo when\n// spending utxos having DelegatedDatum type.\nenum SpendingActivity {\n    // application can replace the placeholder, which is only here to \n    // avoid a syntax error in the unspecialized version\n    _placeholder1SA  {\n        recId: ByteArray\n    }\n}\n\nenum BurningActivity {\n    // application can replace the placeholder, which is only here to \n    // avoid a syntax error in the unspecialized version\n    _placeholder1BA {\n        recId: ByteArray\n    }\n}\nenum DelegateActivity {\n    // must ALWAYS be at Enum position 0\n    CapoLifecycleActivities {\n        activity: CapoLifecycleActivity\n    }\n\n    // must ALWAYS be at Enum position 1\n    DelegateLifecycleActivities {\n        // administrative activities for the delegate lifecycle, enforced\n        //  by the basic mint delegate code.  Specializations can add more \n        //  restrictions, but in many/most cases they will not need to.\n        activity: DelegateLifecycleActivity\n    }\n\n    // application-specific spending activities, ALWAYS at Enum position 2\n    SpendingActivities {\n        activity: SpendingActivity\n    }\n\n    // application-specific minting activities, ALWAYS at Enum position 3\n    // remember:M and 3 have a similar shape.\n    MintingActivities {\n        activity: MintingActivity\n    }\n\n    BurningActivities {\n        // application-specific burning activities, ALWAYS at Enum position 4\n        activity: BurningActivity\n    }\n\n    CreatingDelegatedData {\n        seed: TxOutputId\n        dataType: String\n        // id from seed\n    }\n\n    UpdatingDelegatedData {\n        // seed not used\n        dataType: String\n        recId: ByteArray\n    }\n\n    DeletingDelegatedData {\n        // seed not used\n        dataType: String\n        recId: ByteArray\n    }\n\n    MultipleDelegateActivities {\n        activities: []Data // actually a []DelegateActivity\n        // todo: change this back when the recursive enum's `__is_valid_data not found` error is resolved\n    }\n\n    OtherActivities {\n        activity: Data // specialized activities can be added here\n    }\n\n    // this function gives a general-purpose implementation of checking for \n    // valid uut minting. \n    //\n    // A specialization might modify it to use different policies\n    // or enforce additional requirements\n    // \n    // func genericUutMinting(self, \n    //     mdd: DelegateDatum,\n    // ) -> Bool {\n    //     //!!! replace with an activity using the same seed-txn pattern:\n    //     // MintingActivities::SomethingMintingUuts{seed, purposes} = self;\n    //     DelegateDatum::IsDelegation{dd} = mdd;\n    //     returnsAuthzToken : Bool = mustReturnValueToScript(dd.tvAuthorityToken());\n\n    //     o : []TxOutput = get_cont_outputs();\n    //     if (o.length != 1) { error(\"single utxo only\") };\n\n    //     print (\"in unsp_MD\");\n    //     isOk : Bool = returnsAuthzToken && \n\n    //     unmodifiedDelegation( /* isD, same as mdd */ mdd.serialize()) &&\n\n    //     // This call can serve as a template for enforcing expected mints \n    //     // of uuts (and additional token values) in validation of application-\n    //     // specific activities, given (mph, seed, purposes)\n    //     validateUutMinting(\n    //         mph: dd.mph,\n    //         seed: seed,\n    //         purposes: purposes,\n    //         // otherMintedValue: ()\n    //         mkTokenName: mkUutTnFactory(seed)\n    //     );\n\n    //     isOk\n    // }\n\n    //! used only for validating IsDelegation datum, that is,\n    //   ... to approve minting requests or any customize spending modes \n    //   ... of that datum.  \n    \n    //  Note that the basic delegate already enforces some basic\n    //    administrative expectations for DelegateLifecycleActivities and CapoLifecycleActivities\n    //    so a specialization doesn't need to re-implement those checks.\n    func additionalDelegateValidation( self,\n        priorMddd: DelegateDatum::IsDelegation,\n        cctx: CapoCtx\n    ) -> Bool {\n        // print(\"  ----- checking additional delegate validation\");\n        mph : MintingPolicyHash = priorMddd.dd.mph;\n\n        self.switch {\n            // generic DelegateLifecycleActivities is already validated, but \n            //  ... you can add more constraints here if needed\n            DelegateLifecycleActivities => true,\n            CapoLifecycleActivities{CLA} => {\n                // CapoLifecycleActivites.queuePendingChange is only relevant for the MINT delegate.\n                // CapoLifecycleActivites.{removing, committing}PendingChange(s) are served by the SPEND delegate\n                // Capo\n                // CapoLifecycleActivites.{forcing}* are ONLY ever served by the Capo itself as an escape-hatch\n                //  assert(isMintingDelegate, \"unreachable\"); // TODO access this const defined in the main script\n\n                // They're normally rejected in this unspecialized (minting) delegate:\n                //   ... but if you have cases for creating new delegates, such as \n                //   ... named delegates for advanced constellations of contracts \n                //   ... in your Capo, you can implement checks for that here.\n                //  You can use this construct as-is, or modify it to suit your needs.\n                CLA.switch {\n                    // queuePendingChange{action, role, name} => {\n                    //     print(\"unspecialized mint delegate allowing queuePendingChange\");\n                    // },\n                    // committingPendingDgtChange{action, role, name} => {\n                    //     print(\"unspecialized mint delegate allowing committingPendingChange\");\n                    // },\n                    CreatingDelegate{seed, purpose} => {\n                        self.supportedCapoDelegatePurposes().find_safe(\n                            (p : String) -> Bool { p == purpose } \n                        ).switch {\n                            None => {\n                                if (self.supportedCapoDelegatePurposes().length == 0) {\n                                    print(\"note: unspecialized delegate has no supported purposes\")\n                                };\n                                error(\"can't mint delegate with unsupported purpose\")\n                            },\n                            Some => {\n                                validateUutMinting(\n                                    mph: mph,\n                                    seed: seed,\n                                    purposes: []String{purpose},\n                                    // otherMintedValue: ()\n                                    mkTokenName: mkUutTnFactory(seed),\n                                    // WE ARE the mint delegate.\n                                    needsMintDelegateApproval: false \n                                )\n                            }\n                        }\n                    },\n                    _ => {\n                        REQT(\"   -- to customize: mint/spend delegates have an option to validate additional lifecycle constraints here\");\n                        true\n                    }\n                 }\n            },\n            MintingActivities{ma} => {\n                assert(cctx.withCharterRef().orFail(), \"can't\");\n\n                ma.switch{\n                    MintingParticipantToken{seed} => REQTgroup[Bool](\n                    reqt: \"minting participant token\", collapsed: false, \n                    callback: () -> {\n                        purpose : String = \"member\"; // todo: get from config\n                        // mkTokenName = mkUutTnFactory(seed);\n\n                        validateUutMinting(\n                            mph: mph,\n                            seed: seed,\n                            purposes: []String{purpose}, \n                            // mkTokenName: mkTokenName,\n                            // we ARE the mint-delegate:\n                            needsMintDelegateApproval: false\n                        )\n\n                        // // print(\"minting collaborator token\");\n                        // self.checkMembershipTokenMint(\n                        //     priorMddd, \n                        //     uutPrefix, \n                        //     mkTokenName\n                        // )\n                    }),\n\n                    MintingFungibleTokens{tokenName} => {\n                        print(\"MintingFungibleTokens: \");\n                        assert(\n                            cctx.requiresGovAuthority().orFail(), \n                            \"^^^ that can fail, this won't\"\n                        );\n\n                        REQT(\"doesn't interfere with other policies that may have a good reason to mint in this txn\");\n                        print(\"    -- NOTE: no explicit logic for non-interference, but we only inspect our own-policy-mint\");\n                        ourMint : Map[ByteArray]Int = tx.minted.get_policy(mph);\n\n                        REQT(\"checks that the tokens minted in OUR policy are exactly according to expectations\")\n                        \n                        tn = tokenName.decode_utf8();\n                        ourMint.get_safe(tokenName).switch {\n                            None => error(\"expected tokens not minted: \"+ tn),\n                            Some{n} => {\n                                print(\"  -- ok, minting \"+n.show()+ \" fungibles: \"+ tn)\n                            }\n                        }\n\n                        REQT(\"doesn't allow other tokens of ours to be minted in this txn\");\n                        assert(\n                            ourMint.length == 1, \n                            \"unexpected other tokens minted\"\n                        );\n\n                        true\n                    }        \n                }\n            },\n            CreatingDelegatedData{_, dataType} => {\n                print(\" ℹ️  mint: delegates CreatingDelegatedData authority to policy: \"+dataType);\n                true\n            },\n            UpdatingDelegatedData{dataType, _recId} => {\n                print(\" ℹ️  spend: delegates UpdatingDelegatedData authority to policy: \"+dataType);\n                true\n            },\n            DeletingDelegatedData{dataType, _recId} => {\n                print(\" ℹ️  spend: delegates DeletingDelegatedData authority to policy: \"+dataType);\n                true\n            },\n            MultipleDelegateActivities => {\n                print(\" ℹ️  mint delegate: MultipleDelegateActivities: no special validation in this unspecialized delegate\");\n                true\n            },\n            OtherActivities => error(\n                \"no other activities exist in this delegate\"\n            ),\n            _ => {\n                assert(false, \"mint/spend delegate rejecting other activity\");\n                false\n            }\n        } || tx.serialize() == priorMddd.serialize()\n    }\n\n    func supportedCapoDelegatePurposes(self) -> []String {\n        assert(true || /* prevent unused variable */ self == self, \"no way, man\" );\n         []String{ \n            // \"nothingHereYet\",\n        }\n    }\n\n    //! Use this only for validating non-IsDelegation datum types and activities,\n    //  stored in the delegate's own address, for special cases where that could \n    // be important (so far, it's never been used - please open a discussion if you \n    //    think it's needed for your special case)\n    // Typically, you should look to Activity validations above in additionalDelegateValidation,\n    // ...  in which the unique isDelegation token is being spent with an application-specific\n    // ...  activity/redeemer\n    func otherDatumValidation( self,\n        _priorMdd: DelegateDatum\n    ) -> Bool {\n        neverTriggered = () -> {  error(\"never called\") };\n        self.switch{\n            // Note: this set of DelegateActivities is reserved for the IsDelegation datum.\n            //  Using it on any other Datum type will always fail and execution will never arrive here.\n            DelegateLifecycleActivities => neverTriggered(),\n            CapoLifecycleActivities => neverTriggered(),\n\n            // -- Application-specific activities can be added here \n            // -- for special & app-specific types of datum in a delegate,\n            // -- for EXCEPTIONAL cases, if you really know what you're doing.  \n            //  -- see above for normal cases\n\n            _ => false  // prevents non-exhaustive match errors, even if you remove the above neverTriggered() calls\n        }\n    }\n}\n\n\n\n    // func checkMembershipTokenMint( self,\n    //     mintDelegateData: MintDelegateDatum::IsDelegation, \n    //     purpose: String,\n    //     mkTokenName: (String) -> String\n    // ) -> Bool { \n    //     mph : MintingPolicyHash = mintDelegateData.dd.mph;\n    //     expectedUutValue : Value = mkTv(mph, mkTokenName(purpose));\n    //     newTxo : TxOutput = getOutputWithValue(expectedUutValue);\n    //     assert(\n    //         newTxo.value.get_assets().to_map().length == 1,\n    //          \"too many policies\"  \n    //         //  \"invalid token bundle with various assets: \"+newTxo.value.show()\n    //     );\n    //     assert(\n    //         newTxo.value.contains_policy(mph),\n    //         \"missing expected mph\"\n    //     );\n    //     assert(\n    //         newTxo.value.get_policy(mph).length == 1, \n    //         \"too many tokens\"\n    //         // \"invalid with multiple tokens in the utxo\"\n    //     );\n    //     true\n    // }\n\n\n", {
    project: "stellar-tokenomics",
    purpose: "module",
    name:  "src/STokMintDelegate.hl", // source filename
    moduleName:  "STokMintDelegate",
});

const stmdbBase = MintSpendDelegateBundle.usingCapoBundleClass(
  StellarTokenomicsCapoBundle
);
class STokMintDelegateBundle extends stmdbBase {
  preCompiled = {
    singleton: {
      programBundle: { "programElements": { "src/delegation/BasicDelegate.hl": "027afd9f75063ea33dddf672afda9b8e0a09cb60b8856246e2d924f1f96b0f55", "src/CapoMintHelpers.hl": "3fca50bb43a69ff20b3d1c38a2d861763b960bbec1f36a4e56d4fc09b9c93299", "src/delegation/CapoDelegateHelpers.hl": "3c7ed244361870b62c0b40ac3faece6ce8d87985937e3142939634b04f341b10", "src/StellarHeliosHelpers.hl": "3761577f61419fc37d8b8df0d3d6cbd24217db0702031af15c043b02a541cbb6", "src/CapoHelpers.hl": "fb03f3b74232c0aa160824b8a6440ce84425551cd1b0a457e7829acbde991535", "generatedSpecializedDelegateModule": "99907619b4961c8f693a4f14587e127ac66b57f8cda98975a870c9f546ece665", "src/STokMintDelegate.hl": "b34e25ec883713e1ce5d80d1a98a24c58b4981e92dbcb4ea83286b0c3d69ae46", "params": { "BasicDelegate::rev": "const rev: Int = ##01;", "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;", "BasicDelegate::delegateName": "const delegateName: String = ##5053546f6b4d696e7444656c6567617465;", "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87a80;", "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87a80;", "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87980;", "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87a80;" } }, "version": "PlutusV2", "optimized": "5936285936250100002223232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232533357346a666ae68cdc38242400824c2a666ae68cdc382424004246466ae6cc94ccd5cd0008a4c2c64666ae68cdc7800a4410101004a0944dd71aba1357446ae88004cd5cd992999ab9a001149858c8ccd5cd19b8f0014890767656e6572616c004a0944dd71aba1357446ae88004cd5cd992999ab9a001149858c8ccd5cd19b8f0014891053546f6b4d696e7444656c6567617465004a0944dd71aba1357446ae88004cd5cd9924c608664646eacd5d09aba235573c6ea8004d5d09aba235573c6ea80054100c8ccccc01001000c13c008004cc034030c8cd5d01ba90014bd70903d87980001bae357426ae88004dd61aba135573c6ea80044c8c8c88d4ccd5cd0010930992999ab9a0011261235333573400824c2a666ae68008498492802919b8700348000140cdc3800a40046aae74004dd50260268a4c2c444446466ae6d4ccd5cd0008a4c2c666054a666ae68ccc06405c009288a481396d696e744467743a206164646974696f6e616c44656c656761746556616c69646174696f6e20696e2053546f6b4d696e7444656c65676174650015333573466603002e00494452413a7370656e644467743a206164646974696f6e616c44656c656761746556616c69646174696f6e20696e2053546f6b4d696e7444656c65676174650014913053546f6b4d696e7444656c65676174653a206164646974696f6e616c44656c656761746556616c69646174696f6e2829004a026464a666ae68d4ccd5cd19b8735573a6ea80192002124a22a666ae68cdc39aab9d375400c900009191a999ab9a3370e6aae74dd5000a400024c24944004d5d09aab9e37540022a666ae68cdc39aab9d375400c9003091919ab9b32498c92898090021a999ab9a3370e6aae74dd5000a40002464666666601e00a00297ae10107466d656d626572002504992824c6ae84d55cf1baa00112323357366493192513302101d0063232335736646a666ae68cdc39aab9d37540029001093091924c6eb4d5d09aab9e37540020026602600400666ae6d4ccd5cd19b87304600248008526164a26e64008cc104c118128014dd71aba135573c6ea8004004d5d09aab9e37540022a666ae68cdc39aab9d375400c900509192513237326eb8004d5d09aba235573c6ea800454ccd5cd19b8735573a6ea8019200c12324a260160022a666ae68cdc39aab9d375400c900709192513237326eb8004d5d09aab9e37540022a666ae68cdc39aab9d375400c90080925115333573466e1cd55ce9baa00648048498498018528899b8f376608c6ecc01cc8dd71aba1357440026eb0d5d09aab9e375400c6602001e0046a666ae68cdc39aab9d375400690080919191919191919192999ab9a53335734004200229405288a505333573400429444ccc0c52418276616c696461746573206e657374656420616374697669746965733a20696e20746865207370656e642064656c65676174652c206f6e6c79207b5570646174696e672c44656c6574696e677d44656c656761746564446174612061637469766974696573206172652076616c696420696e206d756c74692d61637469766974696573004a026608600e46a666ae68cdc39aab9d375400290060919ab9b32533357340022930b1998108100042503333300f00f00e00200c00815333573466e1cd55ce9baa0014802849854ccd5cd19b8735573a6ea8005200e12615333573466e1cd55ce9baa0014800849854ccd5cd19b8735573a6ea8005200012615333573466e1cd55ce9baa001480404984980054ccd5cd0010a51133042006235333573466e1cd55ce9baa0014802848ccccc03803803400802c01c54ccd5cd19b8735573a6ea8005200e123333300e00e00d00200b00715333573466e1cd55ce9baa0014803049854ccd5cd19b8735573a6ea8005200212615333573466e1cd55ce9baa0014800049854ccd5cd19b8735573a6ea80052010126126001333573400494128999ab9a0024a09454ccd5cd2999ab9a53335734666ae680052825114a229404ccc06c068009288a5014a229414ccd5cd19980d80c800a5114a22940c03c00cdd61aba135573c6ea800454ccd5cd19b8735573a6ea800d2002123235333573466e1cd55ce9baa0014800048c8c8c8c8c8c8c94ccd5cd00088010a503333333011375c6ae84d5d100580319aba037526e600152f5c0941264a2008646a666ae68cdc39aab9d3754002900509251124a00026048002602a01064a666ae68c1340044dcc800898280009bae357426ae88d5d100419823198229bae357426ae8801cdd71aba1357446ae8801d20013237326eb8004d5d09aba235573c6ea8008d5d09aab9e37540022a666ae68cdc39aab9d375400290010919b87332232323232323330010012253335573e0022c2a666ae68cdd79aab9d3574200200826eb4d55cf1aba10011330020023574400200e444a666aae7c0045854ccd5cd19baf35573a6ae840040144cc008008dd59aab9e3574200226660060060046ae88004d5d09aba2002357420026aae78004dd50009821023198219bae357426ae88014dd71aba1357446ae880152001126001357426aae78dd50008a999ab9a3370e6aae74dd5001a4000246464646466ae6cc8c8d4ccd5cd19b870014800048c94ccd5cd19baf001008149858d5d09aab9e37540022a666ae68cdc3800a4014246a666ae68cdc39aab9d375400e90000924c24c00e24c0046aae74dd5000981080199192999ab9a35333573466e1cd55ce9baa0064800048c8c8c8d4ccd5cd19b8735573a6ea8015200012335736a666ae68ccccccc050dd71aba13574401c00866ae80dd49b980034bd702510024a0930a4c293191a999ab9a3370e6aae74dd5000a400424c246466ae6cc94ccd5cd0008a4c2c66e5cc8dcc9bae00135742002600a00c6605e0026eb8d5d09aba201137586ae84d55cf1baa00100132333304900137526e600108cdd2a400066ae800052f5c02980103d87a80003237566ae84d5d11aba235573c6ea8004cc08407c028498014c058008c8dcc9bae001357426ae88d55cf1baa002357426aae78dd50008a999ab9a3370e6aae74dd50032400424646464646464646464646464646466ae6cd4ccd5cd0028930924c00c66ae6cc94ccd5cd0008a4c2c6466ebcdd38009ba700e3574401666a666ae6801449854ccd5cd19b8735573a6ea8019200012323232322333001004003002303e0043237326eb8004d5d09aba2002357420026aae78dd5000891919191199800802001801181e001991b99375c0026ae84d5d11aab9e37540046ae84d55cf1baa0010062223232335736a666ae68cdc3982c009240002930b2999ab9a002100114a06a666ae68cdc39aab9d375402890010930a999ab9a3370e6aae74dd500a24000246466ae6d4ccd5cd0008a4c2c6464a666ae6800c40045281a999ab9a3370e6aae74dd5006a40002466ae6cd4ccd5cd19b8735573a6ea8009200012612498009288a999ab9a3370e6aae74dd5006a4008264646446466ae6cd4ccd5cd0018930a999ab9a3370e00890030930a999ab9a3370e00890070930924c020646466ae6cc94ccd5cd0008a4c2c66ebc00cd5d09aab9e3754002944d4ccd5cd19b870054800048c8cdd2a400066ae800052f5c06608a60860386eb8d5d09aba202615333573466e1c015200212323374a900019aba00014bd70198229bac357426aae78dd500e1bae357426ae8809854ccd5cd008091919ba548000cd5d0000a5eb80cc114008dd71aba13574404c2a666ae68cdc3802a401424c2a666ae68cdc3802a401824c2a666ae6801049854ccd5cd19b8700548018498498044d4ccd5cd19b8735573a6ea8019200212612323235333573466e1cd55ce9baa0014800848dd61aba135573c6ea8004498004cc1380052210374706500357426aae78dd50008031aba1357446ae88d5d11aab9e375400266e1c005200435573a0026ea802c498034cc0dcdd59aba135744609602800e660ac02446a666ae68cdc39aab9d375400290000919191a999ab9a3370e6aae74dd5000a40102464666ae68cdcb8008062504a2608a00224c0026ae84d5d10009bac357426aae78dd500089300089300a1a999ab9a3370e6aae74dd5009a40042494454ccd5cd19b8735573a6ea804d20001235333573401224c246464646466ae6d4ccd5cd19b970013004008149858c8c94ccd5cd2999ab9a00514a2294040045281a999ab9a3370e6aae74dd5008240082466ae6cc8d4ccd5cd19b8735573a6ea8005200012323235333573466e1cd55ce9baa0014800848c94ccd5cd19b9700100f149858c8dcc9bae001357426ae88d55cf1baa0011260013304e0014890374706500357426aae78dd50008930009981e1bab357426ae88c140064031288925101032335736a666ae68004526164a26607e0046eb8d5d09aba20213237326eb8004d5d08009a999ab9a3370e6aae74dd5004a400424c246eb0d5d09aab9e375400201266666660486eb8d5d09aba201e0063357406ea4dcc002a5eb81289814003250498c09c01402849804cd4ccd5cd001081d0930019aba13574400a66e1cd55ce9baa00148020d5d080199b8735573a6ea80052002357420046ae88004dd61aba135573c6ea8004cc12c0052000357420026eb0d5d09aba23574460740026603e03a0106eb0d5d09aba23574460700026608c00a90000a999ab9a3370e6aae74dd50032400824c2a666ae68cdc39aab9d375400c90030991191919191919ab9b32533357340022930b19b87304b37586ae84d5d1001240006464a666ae6800440085282999ab9a32333573400294128999813812806a5114a22646466ae6d4ccd5cd199ab9a3371266e04c13800920024800928251161498c8c8cd5cda999ab9a3370e60a000290000a4c2c944ccc17402488c8c8d4ccd5cd19b8735573a6ea8005200812323235333573466e1cd55ce9baa001480004802048c8d4ccd5cd19b8735573a6ea80052002126123232323235333573466e1cd55ce9baa001480004803c48c8c8c8d4ccd5cd19b8735573a6ea800520021261232335736a666ae68ccd5cd19b87337029000002000a504a22c29319191980080080b112999aab9f0011001132325333573466ebc014d55ce801099802002000899aba000233004004001357440046ae84004dd48041bad357426aae78dd5000800998168088029bad357426ae88d5d11aab9e3754002660be008900100099824801a441036d706800375c66090004910102746e003304700148810374706500357426aae78dd50008009981a8080018009aba1004303c001126001357426ae88004d4ccd5cd19b8735573a6ea800520001237586ae84d55cf1baa00112600100135333573466e1cd55ce9baa0014800048dd59aba135573c6ea8004492f5bded8c000264666609a0046ea40048cdd2a400066ae800052f5c0298103d87a8000375c6ae84d5d100918270292999ab9a3233357340029412899981281200625114a2266660b200a44600444646466ae6cc8d4ccd5cd19b8735573a6ea80052002123235333573466e1cd55ce9baa0014800049849260013303100500312335736a666ae68cdc39829802a40002c293191991191919191919ab9b5333573466e1c0052002149858cd5cda999ab9a3372e01600e2930b19191919ab9b5333573466ebcdd38031ba7002149858c94ccd5cd19b97001006149858c8d4ccd5cd19b8735573a6ea800520041232335736646a666ae68cdc39aab9d375400290000930924c0026607e6ae8804c044004c11800454ccd5cd19b8735573a6ea8005200010461260013574201e6466e5924010127003372c00292010127003237326eb8004d5d0800991bac357426aae78dd50009aba1357446ae88034c8cdcb2490127003372c00292010127003237326eb8004d5d08019bad357426ae88d5d11aab9e3754006646e64dd70009aba1357446aae78dd50011bac357426aae78dd50009982c000a400466086002911037470650037326eb8d55ce8009aab9e0013574200a0026ae84008c8d4ccd5cd19b8735573a6ea80052000122330010073574400c244660026603a00e0086ae88018004d5d0801191a999ab9a3370e6aae74dd5000a4010207224c0026ae84d5d10009a999ab9a3370e6aae74dd5001a4000246eb0d5d09aab9e375400224c00646600200a0044466ebcdd30009ba600237566ae84004d5d1181d8009981000f0049bab357420066eb0d5d09aba2002357440062a666ae68cdc39aab9d375400c9006091919ab9b35333573466e1cd55ce9baa0014800049854ccd5cd19b8735573a6ea8005200212615333573466e1cd55ce9baa0014801048c8c8c8c8c8c8c8c8cd5cda999ab9a3375e0020022930b19ab9b3235333573466e1cd55ce9baa0014800849848c8c8c8c8cd5cda999ab9a3371e00401a2930b19ab9b35333573466e1cd55ce9baa00148000498492600135333573466e1cd55ce9baa00348000492612600333041003489036d706800375c66080004910102746e003303f00148810374706500357426aae78dd500080099816801004192999ab9a001149858c8cdd79ba6001374c660320060126eacd5d09aba23041006323235333573466e1cd55ce9baa0014800849848d5d09aab9e375400200264660980020046eb0d5d09aba235573c6ea8154cc08c03c018dd58009aba100135744607a002660440400166609401290001bae357426ae88d55cf1baa0023237326eb8004d5d09aab9e37540022a666ae68cdc39aab9d375400290030930924c002944d5d09aab9e37540022a666ae68cdc39aab9d375400c90050930930030a5114a06a666ae68cdc39aab9d375400290070930a999ab9a3370e6aae74dd5000a40042466ae6cc94ccd5cd0008a4c2c66603c03a00a94000854ccd5cd19b8735573a6ea800520001233573664a666ae680045261633301f01d0054a00042a666ae68cdc39aab9d37540029006092999ab9a33301f01d0054a2298103d879800015333573466603c03a00a944530103d87a80001612600135333573466e1cd55ce9baa0044802049854ccd5cd19b8735573a6ea8011200a12615333573466e1cd55ce9baa0044803049300103d87a800015333573466e1cd55ce9baa004480084930103d879800015333573466e1cd55ce9baa004480104930103d87a800015333573466e1cd55ce9baa004480184930103d87f8000126004303300130190013301c0183010323357406ea40052f5c303d87980001bae357426ae88010d5d09aab9e37540022a666ae68cdc39aab9d375400690050919191919ab9b32533357340022930b19980e00d000a503232323253335734a666ae694ccd5cd19999998081bae357426ae8802801ccd5d01ba9373000497ae04a2006941261333301901800500100614a029445280992513235333573466e1cd55ce9baa0014801848c8cd5cd9a999ab9a5333333574800229445280a5014a0294048c8c94ccd5cd0008a4c2c66ebc0314ccd55cf8008b09aba100135573c6ea8004498004c0a001cd5d09aab9e37540022a666ae68cdc39aab9d37540029008091919ab9b53335734666ae68cdc49824000a4000941288a4c2c6466ae6d4ccd5cd199ab9a33712609200290002504a22930b19ab9b5333573466e1cc1240052002149858c0a4020ccc1040048d4ccd5cd19b8735573a6ea800520061232353335734a666666ae900045288a5014a0294052809192999ab9a3375e01e6ae840045288a5035573c6ea8004498004d5d09aab9e3754002249400052f5c06eb0d5d09aab9e375400224c002604c0082940dcc180100099191b99375c0026ae84d55cf1baa001357426ae88d5d10011808802199980e80d00c0008011808002191b99375c0026ae84d5d11aab9e37540046ae84d55cf1baa00115333573466e1cd55ce9baa0034803048c8c8c8cd5cd992999ab9a001149858ccc06c0680052819ab9b32498c9289919ab9b333222498c8d4ccd5cd19b8735573a6ea800520081249013c66696e64696e6720756e69717565207370656e64696e6720616374697669747920666f7220612064656c6567617465642d6461746120706f6c69637900126001357426ae880052824c646a666ae68cdc39aab9d37540029002091919ab9b353335734a666666ae900045288a5014a0294052809191919ab9b5333573466e1c008008526163253335734666ae68cdc7805000a504a22c2931bae357420026aae78dd50011aab9d375400224c002604a0086ae84d55cf1baa00115333573466e1cd55ce9baa0014804849854ccd5cd19b8735573a6ea800520101232335736a666ae68ccd5cd19b8930450014800128251149858c8cd5cda999ab9a333573466e24c11800520004a094452616335736a666ae68cdc39823000a40042930b181300299981f00091a999ab9a3370e6aae74dd5000a401424c2a666ae68cdc39aab9d375400290060930a999ab9a3370e6aae74dd5000a401c24c2a666ae68cdc39aab9d3754002900209191a999ab9a5333333574800229445280a5014a0294048c8c8cd5cda999ab9a3370e0040042930b192999ab9a333573466e3c034005282511614a26eb8d5d08009aab9e37540046aae74dd50008930009aba135573c6ea80044928000a5eb80dd61aba135573c6ea8004498004c08c004cccc07406806000400cc8cd5cda999ab9a3375e0020022930b19ab9b5333573466e5d24010873657474696e677300004132498c8dd71aba135573c6ea8004c8d4ccd5cd19b8735573a6ea800520021261232323374a900019aba0375200297ae0375c66064002910102746e00357426aae78dd500080099198109bab357426ae88c0d400524010f63757272656e7453657474696e67730033043301b0024800052653335734666602c02a004006008294452819191a999ab9a3370e6aae74dd5000a400424c246ae84d55cf1baa001001323303f00100237586ae84d55cf1baa048330160010023010004375c6ae84d5d11aab9e375400460100022a666ae68cdc39aab9d375400690070930a999ab9a3370e6aae74dd5001a40082494454ccd5cd19b8735573a6ea800d2006124a22a666ae68cdc39aab9d3754006900409251124a20064464646600200200844a666aae7c00440044c8c94ccd5cd19baf00535573a004266008008002266ae80008cc010010004d5d10011aba100137526e600048c8dcc9bae001357426aae78dd500091111111919199815248129636865636b73207468617420746865205555547320617265206d696e74656420636f72726563746c79004a2266ae6cc9263372c921112d2d2075757420707572706f7365733a2000302300732323232335736a666ae68ccd5cd1981e801806a504a22c2931919ab9b3301100122498c8c8cd5cd99ab9b3301300122498c94ccd5cd19199ab9a0014a0944c1000044c926304e33303f00123233357340029412899b8f375c6aae740052201004bd6f7b6300a4c66607c00c46644666ae68cdc7801009a504a26eb8d55ce8009bab35573c00297adef6c603232335736a666ae6800452616335736a666ae68ccd5cd19b8930470104800928251132498cdcb19b963372c920116e29c85206f6b3a206d696e74656420757574733a207b00302c010491017d00300b490100132498cdcb248114e29c85206f6b3a206d696e746564207575743a20003237326eb8004d5d0803800a999ab9a3233357340029412898200048a5113253335734608200229444ccc0cd2401262e2e2e77697468206f746865722d706f6c6963792076616c7565732065787065637465643a20004a0266ae6cc8cc004004008894ccd55cf8008a4c26466ae6ccc88c8cc06c008894ccd5cd19199ab9a0014a0944c8d4ccd5cd19b8735573a6ea80052002124a0246466e1c004010dd69aba135573c6ea8004004cc07000c008585263304900d002375c6aae74004dd59aab9e00133003003357440046ae8400528a999ab9a3304100501113232330010010072253335573e002200226464a666ae68cdd78029aab9d0021330040040011335740004660080080026ae88008d5d08009ba9011100533303149141456e737572657320746865206d696e7420666f72207468697320706f6c6963792d69642069732065786163746c79207468652065787065637465642076616c7565004a2266ae6d4ccd5cd19baf374c0026e9800c526163357366493199818a492574686520696e646963617465642073656564205554584f206d757374206265207370656e74004a0266ae6d4ccd5cd19199ab9a0014a0944cc0f0dd61aba135573c6ea812c8cdd79aba135573c6ea8004040585264a2944cc0400048888cdc800200119820002007198071981f800806911119b9000400233035330354bd6f7b630002191919800800801112999aab9f00114bd6f7b63009981c1bab35742002660040046ae88004cc0d00048dd319198170070009b99375c002660660124646ea4dcc00098029b99375c002608208a6464944c084004cc0fcc8c8c8c8cc10cc8cc1100052000303232357426ae88d5d11aab9e37540026ae84d5d11aab9e37540029000191a999ab9a3370e6aae74dd5000a4000246ae84d55cf1baa001123235333573466e1cd55ce9baa0014800048d5d09aab9e375400224c00264660800020086eb0d5d09aab9e37540920026607a006002464666ae68cdc4800a40009412899819191bab357426ae88d55cf1baa001357426ae88d55cf1baa0010023304200a488107636861727465720037586ae84d5d11aab9e375408890002999ab9a003100214bd6f7b6302999ab9a00410031300b0062232330010010032253335573e002200226464646600200200644a666aae7c0044cd5d00018008992999ab9a3333008375c6aae74010dd69aab9e004375c6aae74004dd69aab9e0011335740008004266ae80004cc00c00cd5d10011aba100135742004660040046ae8800488cccc0d0008dd4800919ba548000cd5d0000a5eb805300103d87a80002232330010010032253335573e00229309919ab9b33004375c6aae74004dd69aab9e00133003003357440046ae840048c8c8c8c8c8c88cdcb19b96001491012d0000230433337189000240186e500054ccd5cd199ab9a337126e3400920124a0944584cdc519b8a00148810140000023337189005240806ecc00cdd99ba8001375a6ae84d5d11aab9e37540046ae84d55cf1baa00123235333573466e1cd55ce9baa001480084800c54ccd5cd19b8735573a6ea80052004126123232323357406ea400ccd5d019ba548008cd5d000099aba00024bd7025eb80cc0d8c8cc0dc0052000302532357426ae88d5d11aab9e37540026ae84d5d11aab9e3754002900019191a999ab9a3370e6aae74dd5000a4000246ae84d55cf1baa0011260013233032001232333573466e2400520004a0944cc0a0c8dd59aba1357446aae78dd50009aba1357446aae78dd50008019bac357426ae88d55cf1baa03b33037001489076368617274657200375c6ae8400c004d5d09aba200123235333573466e1cd55ce9baa001480104800c54ccd5cd19b8735573a6ea8005200212612323232323357406ea4010cd5d019ba548010cd5d000099aba00024bd7025eb80cc0d8c8cc0dc0052000302532357426ae88d5d11aab9e37540026ae84d5d11aab9e37540029000191a999ab9a3370e6aae74dd5000a4000246ae84d55cf1baa0011260013233031001232333573466e2400520004a0944cc09cc8dd59aba1357446aae78dd50009aba1357446aae78dd50008019bac357426aae78dd501d1981b000a45076368617274657200375c6ae8400c004d5d09aba2001223235333573466e1cd55ce9baa001480084800c54ccd5cd19b8735573a6ea80052004120031232323235333573466e1cd55ce9baa0014800848c02001c48c8c8cd5d01ba900633574066e95200233574000266ae800092f5c097ae033038323303900148000c09cc8d5d09aba2357446aae78dd50009aba1357446aae78dd5000a40006ae84d55cf1baa0010013233031001232333573466e2400520004a0944cc09cc8dd59aba1357446aae78dd50009aba1357446aae78dd50008019bac357426ae88d55cf1baa03a33036001489076368617274657200375c6ae8400c004d5d09aba20012232323235333573466e1cd55ce9baa0014800849848d5d09aab9e3754002002646605c0024a666ae68cdc3998121bab357426ae88d55cf1baa001004480084cdd79aba135573c6ea800400c5281bac357426ae88d5d11aab9e375406e600c006660646eb8d5d0801000911119980e24930546865206e6577207265636f7264204d55535420626520736176656420696e20746865204361706f2061646472657373004a22646a666ae68cdc39aab9d3754002900209192999ab9a32333573466e3c00401928251375c6604000291103406964001615333573464666ae68cdcb800802a504a2646e64dd700099810000a44103747065001614a2603600424c0026040646ae84d5d11aba235573c6ea8004cc01000c00888c894ccd5cd19baf301e00100213235333573466e1cd55ce9baa0014801048c94ccd5cd19b8f0064890014a2266e3cdd71980f800a450340696400006301a002124a0002603e646ae84d5d11aba235573c6ea8004d5d09aba235573c6ea800452818018011180d191a999ab9a3370e6aae74dd5000a4004246ae84d5d11aab9e37540022a666ae68cdc39aab9d37540029002091aba1357446aae78dd50008930009aba1357440024444664466ae80dd380299aba000433574000666ae80008cd5d01ba90014bd70199119191a999ab9a3370e6aae74dd5000a400424c24646464646a666ae68cdc39aab9d37540029000090008930009981880412999ab9a3375e646ae84d55cf1baa0013025001003132333573466e2400520004a0944cc09cc8dd59aba1357446aae78dd50009aba1357446aae78dd50008010a5033037006373000a66e9520023357406ea40052f5c06eb8d5d09aab9e37540020026ae84d5d1003191b99375c0026ae84014dd61aba135573c6ea80ccdd71aba1004375c6ae8401088c8c8c8d4ccd5cd19b8735573a6ea80052004123302f301e32357426ae88d5d11aab9e375400264646600200200444a666aae7c004584c94ccd5cd2999ab9a3375e6ae84d55cf1baa001007132333573466e2400520004a0944cc08cdd59aba1357446aae78dd50008040a501001133003003357440046ae84004dd61aba1357446ae88d55cf1baa03448000498004d5d09aba200330030023302d375c6ae8400522107636861727465720023235333573466e1cd55ce9baa0014800848c8cc0b00052000357426aae78dd50008a999ab9a3370e6aae74dd5000a400824646605800290001aba135573c6ea8004498004d5d09aba200122232323232335736a666ae694ccd5cd0008a5113335734008941288a4c2c00264666ae68cdc4800a4000941289980e991bab357426ae88d55cf1baa001357426ae88d55cf1baa0020013300f3237586ae84d55cf1baa0013005004375c6ae8401140bd4ccd5cd0008a5014a24446464646466ae6d4ccd5cd2999ab9a00114a22666ae6801128251149858004c8ccd5cd19b8900148001282513301c3237566ae84d5d11aab9e37540026ae84d5d11aab9e37540040026601c6018600a0086eb8d5d080228172999ab9a00114a029448888c8d4ccd5cd19b8735573a6ea80052002126123233235333573466e1cd55ce9baa0014800848c8c88cc00400c008c8dcc9bae001357426ae88d55cf1baa00237586ae84d55cf1baa0011260013301800148903747065002233330080070023374a900419aba037526e600192f5c066e9520003357406ea4dcc000a5eb80d5d09aab9e37540020026600c646eacd5d09aba2301b00130040020012233573664a666ae6800452616330083237586ae84c060004c008004dd71aba100100122333302300237526e600048cdd2a400066ae800052f5c02980103d87a800023235333573466e1cd55ce9baa0014800049854ccd5cd19b8735573a6ea8005200212612323235333573466e1cd55ce9baa0014801049854ccd5cd19b8735573a6ea8005200812615333573466e1cd55ce9baa001480084800854ccd5cd19b8735573a6ea8005200a1200215333573466e1cd55ce9baa001480184800848008004c03c004d5d09aba235573c6ea8004004d5d09aba200123357366464646464646466ae6d4ccd5cd0008a4c2c64a666ae68004526163300b00700535333573466e1cd55ce9baa0024800048c8cd5cd992999ab9a001149858c8c8cc004004cc084008014894ccd55cf8008a511325333573464666ae680052825133223233001001330260030022253335573e00229444c94ccd5cd19199ab9a0014a0944cc88ccd5cd19b880020014a0944cc0a8014004cc0a80100045280998018019aba200235742002660440080026604400e00229404cc00c00cd5d10011aba10013301702f0013235333573466e1cd55ce9baa0014800049288930009919813000919b8f37666ae84d5d11aba235573c6ea8004dd999191aba1357446ae88d55cf1baa001357426ae88d55cf1baa001357426aae78dd50049bac357426ae88d5d11aab9e375405e6eb8d5d09aab9e375400224c00466022006646e64dd70009aba1005357426ae88010c8dcc9bae001357420066eb8d5d09aba2357446ae88d5d10019aba1357446ae88d5d10011bac357420020024646466ae6cd4ccd5cd2999999aba400114a229405280a5014a0246464646a666ae694cccccd5d20008a5114a029405280a501232498d55ce9baa00112498004d5d08009aab9e37540046aae74dd50008924c0020026016002646ae84d55cf1baa001357426ae88d5d11aba2001237586ae84d5d11aba2357446aae78dd5000911919191919ab9b53335734a666ae68ccd5cd000a504a229445280b0a4c0026a666ae68cdc39aab9d37540049000091919199ab9a3371200290002504a26602a660240540020066eb8d5d09aab9e375400224646a666ae68cdc39aab9d3754002900009251124a00026466040002464666ae68cdc4800a4000941289980b1bab357426ae88d55cf1baa00100437586ae84d5d11aba235573c6ea80a4008cc09000cdcc0011aba135744006646e64dd70009aba100222330210013730646e64dd70009aba100223233300100100249010022253335573e004292010013372c66e58004dcc9bae357420046660060066ae880092401022c200023237326eb8004d5d09aba2357446aae78dd50009191b99375c0026ae84d5d11aba235573c6ea80048c8dcc9bae001357426aae78dd500091a999ab9a5333333574800229445280a5014a0294048c8c8d4ccd5cd2999999aba400114a029445280a5014a0246ae8400c498004d5d08009aab9e375400224c0024646464666603200400240022c646600200200444a666aae7c004584c94ccd5cd1a999ab9a3370e6aae74dd5000a40042466ebcd5d09aab9e375400200c2494000440044cc00c00cd5d10011aab9d357420026eacd5d09aba2357446ae88d5d1180500f1aba135573c6ea800488c8cd5cda999ab9a333573466e24dc6800a4000941288a4c2c660386603600600290011b9800122232335736a666ae6800452616001500122323232330010010032253335573e0022c2646464a666ae68cdd780100308008998028029aba200435573c0046aae74004d5d08009ba90023756004446466604600244660160046eacd5d09aba235573c6ea80052f5bded8c06466601c002464a666ae68cdc39aab9d37540029001099b8f00432375c6ae84d55cf1baa0013301800148008528191aba135573c6ea8004d5d09aab9e375400297ae037586ae84d5d11aba235573c6ea80088c8d5d09aab9e37540026ae84d5d11aab9e37540024646464a666ae68cdc38012400826ae8400458d55cf0011aab9d00137540024464646466600200244a666aae7c0045200015333573466ebcd55ce9aba10010041375a6aae78d5d08008998010011aba200100522253335573e002290000a999ab9a3375e6aae74d5d08008028998010011bab35573c6ae840044ccc00c00c008d5d10009aba1357446aae78dd50011aba135573c6ea80048d5d11aba2357446ae88d5d11aab9e375400244646600200200644a666aae7c00452f5c0266ae80c00cd5d0800998010011aba2001223233001001330050030022253335573e002297adef6c60132323253335573e0022004266ae80cdd80019ba6001002332232330010013300b0030022253335573e002297adef6c6013232325333573466e1c00520001002133574066ec000cdd400080119b80330100060023301000500233003003357440046ae84004cc01c018008cc01c014008cc00c00cd5d10011aba10012232330010010032253335573e002297adef6c6015333573466ebcd55ce9aba1001003137566aae78d5d08008998010011aba2001223232323233300100100200422253335573e0022004266ae80d5d08009998018018011aba200133300100100200322253335573e002297ae0132533357346601000a466ebc0040084ccc01001000cd5d1001099aba0001333004004003357440046aae74d5d08009919800800801912999aab9f00114bd70099aba035573a6ae84004cc008008d5d100091191998008008018011112999aab9f00214a02a666ae68c004d5d08010a511333003003357440040024464666002002006004444a666aae7c0085200015333573466ebcd55ce9aba10020011375a6aae78d5d080109998018019aba20020012223233300100100400322253335573e0042008264a666ae68c0080044cd5d00009998020021aba20030021333004004357440060046ae840088c8cc004004008894ccd55cf8008a5115333573464646600200200444a666aae7c0045288a999ab9a3370e6eb4d55cf1aba1001480004cc008008d5d10008a5037566aae78d5d08008998010011aba200114a04464646600200200844a666aae7c0045280a999ab9a3375e6aae74d5d08008018a51133002002357440026ea400488c8ccc00400400c0088894ccd55cf8010a60103d87a8000132533357346004002266e95200033574000297ae01333004004357440060046ae8400888c8c8cc004004010894ccd55cf8008b0a999ab9a3375e6aae74d5d080080189bab35573c6ae840044cc008008d5d10009ba9001223233300100100300222253335573e004294454ccd5cd18009aba100213330030033574400400229408888c8ccc0040040140108894ccd55cf8010020992999ab9a3375e0046aae740044c018d55cf00089998020021aba2003002357420044646600200200444a666aae7c00452000133700660040046ae880052002225333573466e1cd55ce9baa002001100216237566ae84d5d11aba2357446ae88d55cf1baa001223374a900019aba0375200466ae80dd4800a5eb8088c8c8cd5d019bb0002374c66ae80cdd80009ba80034bd6f7b63025eb7bdb180d5d09aba235573c6ea800cd5d09aab9e375400426464660020026eb0d5d09aab9e375400644a666aae7c004584c94ccd5cd19baf357426aae78dd500080208008998018019aba2002357420026ae84d55cf1baa002357420146ae84d5d1004919980380091191919b9600433300a00223372ca666ae68cdc7800a4410014910013372c6014002921010a0053333335748004292100133300c375600444646466601e0044a666666ae900085241001491001491001325333573466e3c01d2210013372c9201096c6f76656c61636520003372c601e0029201010a0013372c92010320202e003372ca666ae68c0340084dcc8010980800119b9649010120003372c601e0029201010a00375a004292010014910035573c0046aae74004014524010014910014910014910035573c0046aae74005240100232323300100148000894ccd5cd19b8700100314a2264a666ae68cdc4800a41fc0226600600666e00009200215333573466e1ccdc1800a408090060992999ab9a3371200200a26600e66e38018cdc0001a400444a666ae680084c94ccd5cd2999ab9a33712904001000899b89001483f87c5280998038038020a503370066e08cdc3002240809040008008a5014a066e00009200415333573466e1ccdc1800a4040900e0992999ab9a3371200200a26600e66e38018cdc0001a400444a666ae680084cc024cdc700419b8000548010894ccd5cd0010992999ab9a5333573466e25208020001133712002907f7f838a5013300900900614a066e00cdc119b86006480812080403370066e0800d20800100114a0294052819b800024801854ccd5cd19b8733706002900824078264a666ae68cdc480080289980399b8e006337000069001112999ab9a0021330093371c01066e000152004225333573400426601666e38028cdc0003a400c44a666ae680084c94ccd5cd2999ab9a3371290404004000899b89001483fbfffc045280998058058040a503370066e08cdc3004240209040401019b803370400a90402019b80337040069040008008a5014a0294052819b800024802052819b8e004001371a00244a666ae68cdc399b83002482000520041330014a266e180092080011330014a0900011b99325333573466e200092000133716902d19980080099b820024800522100133300100100248900222325333573466e2000d20141001133300400433706006900a00099b8b3370066e180092014481800048c8cc00400400888c94ccd5cd19b88480000044cdcb1b9932333573466e1cdc6800a400466e2d2060001001373064646e654ccd5cd19b88002480004cdc5a40b466600200266e08009200148810013330010010024890022232325333573466e2001120201001133300500533706008901000099b8b333573466e20005201433700002903019b80001482b804008cdc30012404066e3800920003300300333371890010008010a4900371a002444a666666ae9000c0040040040044c008dd7001911191998008008020011112999aab9f00210011333003003357440046600a0026ae84008d55ce9baa00535573c0026ea8005", "unoptimized": "", "optimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __common7 = __core__unConstrData(__CONTEXT);
    __common8 = __core__sndPair(__common7);
    __common6 = __core__fstPair(__core__unConstrData(__DATUM));
    __helios__common__fold = (self_3, fn, z) -> {
        recurse_1 = (recurse, self_4, z_1) -> {
            __core__chooseList(self_4, () -> {
                z_1
            }, () -> {
                recurse(recurse, __core__tailList__safe(self_4), fn(z_1, __core__headList__safe(self_4)))
            })()
        };
        recurse_1(recurse_1, self_3, z)
    };
    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {
        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {
            callback_ok(__core__unBData__safe(data))
        })()
    };
    __helios__bytearray__show = (self_7) -> {
        recurse_5 = (recurse_4, self_8) -> {
            n = __core__lengthOfByteString(self_8);
            __core__ifThenElse(
                __core__lessThanInteger(0, n),
                () -> {
                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_5 = __core__indexByteString__safe(self_8, 0);
                    recurse_3 = (recurse_2, self_6, bytes) -> {
                        digit = __core__modInteger(self_6, 16);
                        bytes_1 = __core__consByteString(__core__ifThenElse(
                            __core__lessThanInteger(digit, 10),
                            __core__addInteger(digit, 48),
                            __core__addInteger(digit, 87)
                        ), bytes);
                        __core__ifThenElse(
                            __core__lessThanInteger(self_6, 16),
                            () -> {
                                bytes_1
                            },
                            () -> {
                                recurse_2(recurse_2, __core__divideInteger(self_6, 16), bytes_1)
                            }
                        )()
                    };
                    __core__decodeUtf8__safe(__core__ifThenElse(
                        __core__lessThanInteger(self_5, 0),
                        () -> {
                            __core__consByteString(45, recurse_3(recurse_3, __core__multiplyInteger(self_5, -1), #))
                        },
                        () -> {
                            recurse_3(recurse_3, self_5, #)
                        }
                    )()));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                        __core__consByteString(48, hex_bytes),
                        hex_bytes
                    )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_8)))
                },
                () -> {
                    ""
                }
            )()
        };
        recurse_5(recurse_5, self_7)
    };
    __helios__int__show = (self_9) -> {
        __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {
            bytes_3 = __core__consByteString(__core__addInteger(__core__modInteger(i, 10), 48), bytes_2);
            __core__ifThenElse(
                __core__lessThanInteger(i, 10),
                () -> {
                    bytes_3
                },
                () -> {
                    recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)
                }
            )()
        };
        __core__ifThenElse(
            __core__lessThanInteger(self_9, 0),
            () -> {
                __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_9, -1), #))
            },
            () -> {
                recurse_7(recurse_7, self_9, #)
            }
        )())
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes_5) -> {
        n_2 = __core__lengthOfByteString(bytes_5);
        recurse_11 = (recurse_10, i_1) -> {
            __core__ifThenElse(
                __core__equalsInteger(i_1, n_2),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes_5, i_1);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse_10(recurse_10, __core__addInteger(i_1, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i_1, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n_2),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __core__ifThenElse(
                                                                __core__lessThanEqualsInteger(128, c_2),
                                                                () -> {
                                                                    __core__lessThanEqualsInteger(c_2, 2047)
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )(),
                                                            () -> {
                                                                recurse_10(recurse_10, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i_1, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n_2),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __core__ifThenElse(
                                                                                    __core__lessThanEqualsInteger(2048, c_1),
                                                                                    () -> {
                                                                                        __core__lessThanEqualsInteger(c_1, 65535)
                                                                                    },
                                                                                    () -> {
                                                                                        false
                                                                                    }
                                                                                )(),
                                                                                () -> {
                                                                                    recurse_10(recurse_10, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i_1, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n_2),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __core__ifThenElse(
                                                                                                        __core__lessThanEqualsInteger(65536, c),
                                                                                                        () -> {
                                                                                                            __core__lessThanEqualsInteger(c, 2097151)
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )(),
                                                                                                    () -> {
                                                                                                        recurse_10(recurse_10, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_11(recurse_11, 0)
    };
    __helios__value__show = (self_15) -> {
        __helios__common__fold(self_15, (prev, pair) -> {
            mph_data = __core__fstPair(pair);
            tokens_data = __core__sndPair(pair);
            __core__appendString(prev, __helios__common__unBData__safe(mph_data, (mph) -> {
                __core__appendString(__core__ifThenElse(
                    __core__equalsByteString(mph, #),
                    () -> {
                        ""
                    },
                    () -> {
                        __core__appendString(__helios__bytearray__show(mph), "
")
                    }
                )(), __core__chooseData(tokens_data, () -> {
                    ""
                }, () -> {
                    __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_1, pair_1) -> {
                        token_name_data = __core__fstPair(pair_1);
                        qty_data = __core__sndPair(pair_1);
                        __helios__common__unBData__safe(token_name_data, (token_name) -> {
                            __core__chooseData(qty_data, () -> {
                                ""
                            }, () -> {
                                ""
                            }, () -> {
                                ""
                            }, () -> {
                                qty = __core__unIData__safe(qty_data);
                                __core__ifThenElse(
                                    __core__equalsByteString(mph, #),
                                    () -> {
                                        __core__appendString("lovelace ", __core__appendString(__helios__int__show(qty), "
"))
                                    },
                                    () -> {
                                        __core__appendString("  .", __core__appendString(__core__ifThenElse(
                                            __helios__string__is_valid_utf8(token_name),
                                            () -> {
                                                __core__decodeUtf8__safe(token_name)
                                            },
                                            () -> {
                                                __helios__bytearray__show(token_name)
                                            }
                                        )(), __core__appendString(" ", __core__appendString(__helios__int__show(qty), "
"))))
                                    }
                                )()
                            }, () -> {
                                ""
                            })()
                        }, () -> {
                            ""
                        })
                    }, prev)
                }, () -> {
                    ""
                }, () -> {
                    ""
                }, () -> {
                    ""
                })())
            }, () -> {
                ""
            }))
        }, "")
    };
    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common8));
    __helios__scriptcontext__tx = __core__headList(__common8);
    __helios__scriptcontext__get_current_input = () -> {
        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));
        recurse_13 = (recurse_12, lst) -> {
            __core__chooseList(lst, () -> {
                error()
            }, () -> {
                item = __core__headList__safe(lst);
                __core__ifThenElse(
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item))), id),
                    () -> {
                        item
                    },
                    () -> {
                        recurse_12(recurse_12, __core__tailList__safe(lst))
                    }
                )()
            })()
        };
        recurse_13(recurse_13, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))
    };
    __helios__value__new = (assetClass, i_2) -> {
        mph_1 = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));
        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));
        __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i_2)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
    };
    __helios__assetclass__new = (mph_2, token_name_1) -> {
        __core__constrData(0, __core__mkCons(__core__bData(mph_2), __core__mkCons(__core__bData(token_name_1), __core__mkNilData(()))))
    };
    __helios__tx__minted = (self_29) -> {
        __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_29))))))))
    };
    __helios__common__assert_constr_index = (data_3, i_3) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_3)), i_3),
            () -> {
                data_3
            },
            () -> {
                error()
            }
        )()
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__common__all = (self_40, fn_1) -> {
        recurse_23 = (recurse_22, self_41, fn_2) -> {
            __core__chooseList(self_41, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_41)),
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_23(recurse_23, self_40, fn_1)
    };
    __helios__value__get_policy = (self_44, mph_5) -> {
        mph_6 = __core__bData(mph_5);
        recurse_25 = (recurse_24, map_3) -> {
            __core__chooseList(map_3, () -> {
                error()
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mph_6),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_3)))
                    },
                    () -> {
                        recurse_24(recurse_24, __core__tailList__safe(map_3))
                    }
                )()
            })()
        };
        recurse_25(recurse_25, self_44)
    };
    __helios__common__find_safe = (self_46, fn_3) -> {
        recurse_27 = (recurse_26, self_47, fn_4) -> {
            __core__chooseList(self_47, () -> {
                __core__constrData(1, __core__mkNilData(()))
            }, () -> {
                head_2 = __core__headList__safe(self_47);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__constrData(0, __core__mkCons(head_2, __core__mkNilData(())))
                    },
                    () -> {
                        recurse_26(recurse_26, __core__tailList__safe(self_47), fn_4)
                    }
                )()
            })()
        };
        recurse_27(recurse_27, self_46, fn_3)
    };
    __helios__value__contains_policy = (self_48, mph_7) -> {
        mph_8 = __core__bData(mph_7);
        recurse_29 = (recurse_28, map_4) -> {
            __core__chooseList(map_4, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), mph_8),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_28(recurse_28, __core__tailList__safe(map_4))
                    }
                )()
            })()
        };
        recurse_29(recurse_29, self_48)
    };
    __helios__value__is_zero = (self_49) -> {
        recurse_33 = (recurse_32, map_5) -> {
            __core__chooseList(map_5, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_5)));
                    recurse_31 = (recurse_30, tokens_2) -> {
                        __core__chooseList(tokens_2, () -> {
                            true
                        }, () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),
                                () -> {
                                    recurse_30(recurse_30, __core__tailList__safe(tokens_2))
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    };
                    recurse_31(recurse_31, tokens_1),
                    () -> {
                        recurse_32(recurse_32, __core__tailList__safe(map_5))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_33(recurse_33, self_49)
    };
    __helios__common__filter = (self_50, fn_5, nil) -> {
        recurse_35 = (recurse_34, self_51, fn_6) -> {
            __core__chooseList(self_51, () -> {
                nil
            }, () -> {
                head_3 = __core__headList__safe(self_51);
                __core__ifThenElse(
                    fn_6(head_3),
                    () -> {
                        __core__mkCons(head_3, recurse_34(recurse_34, __core__tailList__safe(self_51), fn_6))
                    },
                    () -> {
                        recurse_34(recurse_34, __core__tailList__safe(self_51), fn_6)
                    }
                )()
            })()
        };
        recurse_35(recurse_35, self_50, fn_5)
    };
    __helios__value__get_inner_map_int = (map_6, key_3) -> {
        recurse_37 = (recurse_36, map_7, key_4) -> {
            __core__chooseList(map_7, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), key_4),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_7)))
                    },
                    () -> {
                        recurse_36(recurse_36, __core__tailList__safe(map_7), key_4)
                    }
                )()
            })()
        };
        recurse_37(recurse_37, map_6, key_3)
    };
    __helios__common__any = (self_54, fn_8) -> {
        recurse_41 = (recurse_40, self_55, fn_9) -> {
            __core__chooseList(self_55, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_9(__core__headList__safe(self_55)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_40(recurse_40, __core__tailList__safe(self_55), fn_9)
                    }
                )()
            })()
        };
        recurse_41(recurse_41, self_54, fn_8)
    };
    __helios__value__merge_map_keys = (a_5, b_5) -> {
        (aKeys) -> {
            recurse_45 = (recurse_44, keys, map_10) -> {
                __core__chooseList(map_10, () -> {
                    __core__mkNilData(())
                }, () -> {
                    key_6 = __core__fstPair(__core__headList__safe(map_10));
                    __core__ifThenElse(
                        __helios__common__any(aKeys, (item_4) -> {
                            __core__equalsData(item_4, key_6)
                        }),
                        () -> {
                            recurse_44(recurse_44, keys, __core__tailList__safe(map_10))
                        },
                        () -> {
                            __core__mkCons(key_6, recurse_44(recurse_44, keys, __core__tailList__safe(map_10)))
                        }
                    )()
                })()
            };
            b_4 = recurse_45(recurse_45, aKeys, b_5);
            recurse_43 = (recurse_42, lst_6, rem) -> {
                __core__chooseList(rem, () -> {
                    lst_6
                }, () -> {
                    __core__mkCons(__core__headList__safe(rem), recurse_42(recurse_42, lst_6, __core__tailList__safe(rem)))
                })()
            };
            recurse_43(recurse_43, b_4, aKeys)
        }(recurse_39 = (recurse_38, map_9) -> {
            __core__chooseList(map_9, () -> {
                __core__mkNilData(())
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_9)), recurse_38(recurse_38, __core__tailList__safe(map_9)))
            })()
        };
        recurse_39(recurse_39, a_5))
    };
    __helios__value__get_inner_map = (map_11, mph_9) -> {
        recurse_49 = (recurse_48, map_12) -> {
            __core__chooseList(map_12, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_12)))
                    },
                    () -> {
                        recurse_48(recurse_48, __core__tailList__safe(map_12))
                    }
                )()
            })()
        };
        recurse_49(recurse_49, map_11)
    };
    __helios__value____add = (a_8, b_8) -> {
        recurse_51 = (recurse_50, keys_2) -> {
            __core__chooseList(keys_2, () -> {
                __core__mkNilPairData(())
            }, () -> {
                key_8 = __core__headList__safe(keys_2);
                tail_1 = recurse_50(recurse_50, __core__tailList__safe(keys_2));
                item_5 = (a_6, b_6) -> {
                    recurse_47 = (recurse_46, keys_1) -> {
                        __core__chooseList(keys_1, () -> {
                            __core__mkNilPairData(())
                        }, () -> {
                            key_7 = __core__headList__safe(keys_1);
                            tail = recurse_46(recurse_46, __core__tailList__safe(keys_1));
                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_6, key_7), __helios__value__get_inner_map_int(b_6, key_7));
                            __core__ifThenElse(
                                __core__equalsInteger(sum, 0),
                                () -> {
                                    tail
                                },
                                () -> {
                                    __core__mkCons(__core__mkPairData(key_7, __core__iData(sum)), tail)
                                }
                            )()
                        })()
                    };
                    recurse_47(recurse_47, __helios__value__merge_map_keys(a_6, b_6))
                }(__helios__value__get_inner_map(a_8, key_8), __helios__value__get_inner_map(b_8, key_8));
                __core__chooseList(item_5, () -> {
                    tail_1
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_8, __core__mapData(item_5)), tail_1)
                })()
            })()
        };
        recurse_51(recurse_51, __helios__value__merge_map_keys(a_8, b_8))
    };
    __helios__common__map = (self_56, fn_10) -> {
        recurse_53 = (recurse_52, rem_1) -> {
            __core__chooseList(rem_1, () -> {
                __core__mkNilData(())
            }, () -> {
                __core__mkCons(fn_10(__core__headList__safe(rem_1)), recurse_52(recurse_52, __core__tailList__safe(rem_1)))
            })()
        };
        recurse_53(recurse_53, self_56)
    };
    __helios__common__enum_fields_after_4 = (self_61) -> {
        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_61)))))))
    };
    __helios__value__get_safe = (self_68, assetClass_2) -> {
        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));
        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));
        outer_3 = (outer_2, inner_3, map_13) -> {
            __core__chooseList(map_13, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), mintingPolicyHash),
                    () -> {
                        inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_13))))
                    },
                    () -> {
                        outer_2(outer_2, inner_3, __core__tailList__safe(map_13))
                    }
                )()
            })()
        };
        outer_3(outer_3, (inner_4, map_14) -> {
            __core__chooseList(map_14, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_14)), tokenName_2),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_14)))
                    },
                    () -> {
                        inner_4(inner_4, __core__tailList__safe(map_14))
                    }
                )()
            })()
        }, self_68)
    };
    __helios__txoutputdatum__inline = (self_71) -> {
        pair_6 = __core__unConstrData(self_71);
        index_1 = __core__fstPair(pair_6);
        fields_4 = __core__sndPair(pair_6);
        __core__ifThenElse(
            __core__equalsInteger(index_1, 2),
            () -> {
                __core__headList(fields_4)
            },
            () -> {
                error()
            }
        )()
    };
    __helios__txinput__address = (self_77) -> {
        self_21 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_77))));
        __core__headList(__core__sndPair(__core__unConstrData(self_21)))
    };
    __helios__tx__value_locked_by = (self_87, vh_1) -> {
        (outputs) -> {
            __helios__common__fold(outputs, (prev_3, txOutput) -> {
                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))
            }, __core__mkNilPairData(()))
        }(self_81 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_87))))));
        __helios__common__filter(self_81, (output) -> {
            (credential) -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),
                    () -> {
                        __core__equalsByteString(vh_1, self_84 = __helios__common__assert_constr_index(credential, 1);
                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_84)))))
                    },
                    () -> {
                        false
                    }
                )()
            }(self_21 = __core__headList(__core__sndPair(__core__unConstrData(output)));
            __core__headList(__core__sndPair(__core__unConstrData(self_21))))
        }, __core__mkNilData(())))
    };
    __helios__common__mStruct_field = (self_99, name_1) -> {
        map_15 = __core__unMapData(self_99);
        name_data = __core__bData(name_1);
        recurse_63 = (recurse_62, map_16) -> {
            __core__chooseList(map_16, () -> {
                error()
            }, () -> {
                head_6 = __core__headList__safe(map_16);
                key_11 = __core__fstPair(head_6);
                value_3 = __core__sndPair(head_6);
                __core__ifThenElse(
                    __core__equalsData(key_11, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(map_16))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, map_15)
    };
    __module__StellarHeliosHelpers__bREQTgroup = (reqt_3, __useopt__collapsed_4, callback_11) -> {
        result_3 = callback_11();
        __core__chooseUnit(__core__ifThenElse(
            result_3,
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), result_3)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, tn) -> {
        tnBytes_1 = __core__encodeUtf8(tn);
        __core__chooseUnit(__core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),
                false,
                true
            ),
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), 1))
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __core__headList(__core__sndPair(__core__unConstrData(txInput)));
        redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));
        (spendsExpectedInput) -> {
            __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {
                x_4
            }, () -> {
                error()
            })
        }(recurse_71 = (recurse_70, map_22) -> {
            __core__chooseList(map_22, () -> {
                error()
            }, () -> {
                item_7 = __core__fstPair(__core__headList__safe(map_22));
                __core__ifThenElse(
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),
                        () -> {
                            (sp) -> {
                                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)
                            }
                        },
                        () -> {
                            (__1) -> {
                                false
                            }
                        }
                    )()(item_7),
                    () -> {
                        item_7
                    },
                    () -> {
                        recurse_70(recurse_70, __core__tailList__safe(map_22))
                    }
                )()
            })()
        };
        recurse_71(recurse_71, redeemers))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {
        __core__ifThenElse(
            __core__chooseData(value_5, () -> {
                true
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            })(),
            () -> {
                (__lhs_0) -> {
                    fields_7 = __core__sndPair(__core__unConstrData(__lhs_0));
                    __cond_2 = __core__headList(fields_7);
                    __core__ifThenElse(
                        __core__chooseData(__cond_2, () -> {
                            false
                        }, () -> {
                            true
                        }, () -> {
                            false
                        }, () -> {
                            false
                        }, () -> {
                            false
                        })(),
                        () -> {
                            (__lhs_0_1) -> {
                                __core__headList(fields_7)
                            }
                        },
                        () -> {
                            (__3) -> {
                                error()
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    error()
                }
            }
        )()(value_5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_111) -> {
        d = __core__headList(__core__sndPair(__core__unConstrData(self_111)));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_117) -> {
        d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_117)))));
        __core__decodeUtf8(__core__unBData(d))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_120) -> {
        d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_120)))));
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__list[__helios__string]__join = (self_125) -> {
        recurse_73 = (recurse_72, lst_13, sep) -> {
            __core__chooseList(lst_13, () -> {
                ""
            }, () -> {
                __core__appendString(__core__appendString(sep, __core__decodeUtf8(__core__unBData(__core__headList__safe(lst_13)))), recurse_72(recurse_72, __core__tailList__safe(lst_13), ", "))
            })()
        };
        recurse_73(recurse_73, self_125, "")
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_133, mph_12) -> {
        __helios__assetclass__new(mph_12, __core__encodeUtf8(d = __core__headList(self_133);
        __core__decodeUtf8(__core__unBData(d))))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_140, mph_15) -> {
        (uut) -> {
            validatorHash = __core__headList(__core__tailList(self_140));
            ac_1 = __helios__assetclass__new(mph_15, __core__encodeUtf8(uut));
            hasDelegate = __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),
                () -> {
                    (__lhs_0_15) -> {
                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));
                        a_3 = __helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx, vh_3), ac_1);
                        __core__ifThenElse(
                            __core__lessThanEqualsInteger(a_3, 0),
                            false,
                            true
                        )
                    }
                },
                () -> {
                    (__lhs_0_12) -> {
                        (__cond_10) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10)
                        }(self_139 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                        __helios__common__find_safe(self_139, (o) -> {
                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);
                            __core__ifThenElse(
                                __core__lessThanEqualsInteger(a_3, 0),
                                false,
                                true
                            )
                        }))
                    }
                }
            )()(validatorHash);
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    __core__ifThenElse(
                        hasDelegate,
                        false,
                        true
                    ),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )(),
                () -> {
                    error()
                },
                () -> {
                    ()
                }
            )(), hasDelegate)
        }(d = __core__headList(self_140);
        __core__decodeUtf8(__core__unBData(d)))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_158) -> {
        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_158)))))))
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (self_174) -> {
        (i_8) -> {
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__core__ifThenElse(
                __core__chooseData(inputData, () -> {
                    true
                }, () -> {
                    false
                }, () -> {
                    false
                }, () -> {
                    false
                }, () -> {
                    false
                })(),
                () -> {
                    (__lhs_0_25) -> {
                        index_9 = __core__fstPair(__core__unConstrData(__lhs_0_25));
                        fields_70 = __core__sndPair(__core__unConstrData(__lhs_0_25));
                        __cond_16 = __core__headList(fields_70);
                        __core__ifThenElse(
                            __core__chooseData(__cond_16, () -> {
                                true
                            }, () -> {
                                false
                            }, () -> {
                                false
                            }, () -> {
                                false
                            }, () -> {
                                false
                            })(),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __core__fstPair(__core__unConstrData(__lhs_0_26));
                                    ()
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16)
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(inputData), inputData)
        }(self_21 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_174))));
        __core__headList(__core__sndPair(__core__unConstrData(self_21))))
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_183) -> {
        __core__chooseUnit(link_1 = __core__unListData(__core__headList(self_183));
        input_1 = __core__headList(__core__tailList(__core__tailList(__core__tailList(self_183))));
        mph_19 = __core__unBData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(self_183))))));
        (uut_1) -> {
            validatorHash_1 = __core__headList(__core__tailList(link_1));
            targetValue = __module__StellarHeliosHelpers__mkTv(mph_19, d = __core__headList(link_1);
            __core__decodeUtf8(__core__unBData(d)));
            returnedUnchanged = __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash_1)), 0),
                () -> {
                    (__lhs_0_45) -> {
                        vh_4 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_45))));
                        __core__chooseUnit((assertionOk) -> {
                            __core__ifThenElse(
                                assertionOk,
                                () -> {
                                    ()
                                },
                                () -> {
                                    error()
                                }
                            )()
                        }(a_12 = __helios__tx__value_locked_by(__helios__scriptcontext__tx, vh_4);
                        recurse_61 = (recurse_60, keys_4) -> {
                            __core__chooseList(keys_4, () -> {
                                true
                            }, () -> {
                                key_10 = __core__headList__safe(keys_4);
                                __core__ifThenElse(
                                    b = (a_10, b_10) -> {
                                        recurse_59 = (recurse_58, keys_3) -> {
                                            __core__chooseList(keys_3, () -> {
                                                true
                                            }, () -> {
                                                key_9 = __core__headList__safe(keys_3);
                                                __core__ifThenElse(
                                                    b = (a_qty, b_qty) -> {
                                                        __core__ifThenElse(
                                                            __core__lessThanInteger(a_qty, b_qty),
                                                            false,
                                                            true
                                                        )
                                                    }(__helios__value__get_inner_map_int(a_10, key_9), __helios__value__get_inner_map_int(b_10, key_9));
                                                    __core__ifThenElse(
                                                        b,
                                                        false,
                                                        true
                                                    ),
                                                    () -> {
                                                        false
                                                    },
                                                    () -> {
                                                        recurse_58(recurse_58, __core__tailList__safe(keys_3))
                                                    }
                                                )()
                                            })()
                                        };
                                        recurse_59(recurse_59, __helios__value__merge_map_keys(a_10, b_10))
                                    }(__helios__value__get_inner_map(a_12, key_10), __helios__value__get_inner_map(targetValue, key_10));
                                    __core__ifThenElse(
                                        b,
                                        false,
                                        true
                                    ),
                                    () -> {
                                        false
                                    },
                                    () -> {
                                        recurse_60(recurse_60, __core__tailList__safe(keys_4))
                                    }
                                )()
                            })()
                        };
                        recurse_61(recurse_61, __helios__value__merge_map_keys(a_12, targetValue))), (__cond_27) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_27)), 0),
                                () -> {
                                    (__lhs_0_47) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_46) -> {
                                        error()
                                    }
                                }
                            )()(__cond_27)
                        }(self_139 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                        __helios__common__find_safe(self_139, (o_1) -> {
                            __core__equalsByteString(__core__serialiseData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(o_1)))))), __core__serialiseData(self_73 = __core__headList(__core__sndPair(__core__unConstrData(input_1)));
                            self_72 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_73))));
                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_72)))))))
                        })))
                    }
                },
                () -> {
                    (__lhs_0_44) -> {
                        error()
                    }
                }
            )()(validatorHash_1);
            __core__chooseUnit(__core__ifThenElse(
                returnedUnchanged,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1, mph_19);
            __core__ifThenElse(
                cond,
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )())
        }(d = __core__headList(link_1);
        __core__decodeUtf8(__core__unBData(d))), self_183)
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_189) -> {
        __cond_28 = __core__headList(__core__tailList(self_189));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 0),
            () -> {
                (__lhs_0_57) -> {
                    error()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 1),
                    () -> {
                        (__lhs_0_56) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_49) -> {
                            utxo_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_49))));
                            activity = __module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2);
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 2),
                                () -> {
                                    (__lhs_0_55) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 4),
                                        () -> {
                                            (__lhs_0_54) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 1),
                                                () -> {
                                                    (__lhs_0_53) -> {
                                                        activity
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 5),
                                                        () -> {
                                                            (__lhs_0_52) -> {
                                                                activity
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity)), 3),
                                                                () -> {
                                                                    (__lhs_0_51) -> {
                                                                        activity
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_50) -> {
                                                                        activity
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()(activity)
                        }
                    }
                )()
            }
        )()(__cond_28)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_190, key_16) -> {
        __helios__common__map_get(self_190, __core__bData(__core__encodeUtf8(key_16)), (x_5) -> {
            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))
        }, () -> {
            __core__constrData(1, __core__mkNilData(()))
        })
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3, self_196) -> {
        __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_160 = __module__CapoHelpers__CapoCtx[]__getCharterData_3(self_196);
        __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_160))), __core__unBData(__core__headList(self_196)));
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), self_196)
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput, self_199, typeName) -> {
        __cond_31 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(self_161 = __module__CapoHelpers__CapoCtx[]__getCharterData_4(self_199);
        __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(self_161)))), typeName);
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_31)), 1),
            () -> {
                (__lhs_0_62) -> {
                    error()
                }
            },
            () -> {
                (__lhs_0_60) -> {
                    entry = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_60)));
                    __cond_32 = __helios__common__mStruct_field(entry, #747065);
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_32)), 1),
                        () -> {
                            (__lhs_0_61) -> {
                                policyLink = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_61))));
                                (idPrefix_2) -> {
                                    (callback_14) -> {
                                        callback_14(policyLink, idPrefix_2)
                                    }
                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_61))));
                                __core__decodeUtf8(__core__unBData(d)))
                            }
                        },
                        () -> {
                            (__27) -> {
                                error()
                            }
                        }
                    )()(__cond_32)((dgtLink, idPrefix_1) -> {
                        __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_199, dgtLink, __core__constrData(4, __core__mkCons(__core__bData(__core__encodeUtf8(typeName)), __core__mkNilData(()))), __core__constrData(0, __core__mkCons(__core__bData(__core__encodeUtf8(idPrefix_1)), __core__mkNilData(()))))
                    })
                }
            }
        )()(__cond_31)
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5, self_200, __useopt__required_5) -> {
        required_11 = __core__ifThenElse(
            __useopt__required_5,
            () -> {
                false
            },
            () -> {
                true
            }
        )();
        input_2 = __helios__scriptcontext__get_current_input();
        acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_200)), __core__unBData(__core__headList(self_200)));
        (isUsingMintDgt) -> {
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    isUsingMintDgt,
                    () -> {
                        true
                    },
                    () -> {
                        __core__ifThenElse(
                            required_11,
                            false,
                            true
                        )
                    }
                )(),
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), isUsingMintDgt)
        }(a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_2))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), acMintDgt);
        __core__ifThenElse(
            __core__lessThanEqualsInteger(a_3, 0),
            false,
            true
        ))
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6, self_201, __useopt__required_6) -> {
        required_13 = __core__ifThenElse(
            __useopt__required_6,
            () -> {
                false
            },
            () -> {
                true
            }
        )();
        input_3 = __helios__scriptcontext__get_current_input();
        acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(self_155 = __module__CapoHelpers__CapoCtx[]__getCharterData_6(self_201);
        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_155)))), __core__unBData(__core__headList(self_201)));
        (isUsingSpendDgt) -> {
            __core__chooseUnit(__core__ifThenElse(
                __core__ifThenElse(
                    isUsingSpendDgt,
                    () -> {
                        true
                    },
                    () -> {
                        __core__ifThenElse(
                            required_13,
                            false,
                            true
                        )
                    }
                )(),
                () -> {
                    ()
                },
                () -> {
                    error()
                }
            )(), isUsingSpendDgt)
        }(a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_3))));
        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), acSpendDgt);
        __core__ifThenElse(
            __core__lessThanEqualsInteger(a_3, 0),
            false,
            true
        ))
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_202) -> {
        __cond_34 = __core__headList(__core__tailList(self_202));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 1),
            () -> {
                (self_163) -> {
                    data_138 = __core__headList(__core__sndPair(__core__unConstrData(self_163)));
                    __helios__common__assert_constr_index(data_138, 0)
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_34)), 2),
                    () -> {
                        (self_165) -> {
                            data_138 = __core__headList(__core__sndPair(__core__unConstrData(self_165)));
                            __helios__common__assert_constr_index(data_138, 0)
                        }
                    },
                    () -> {
                        (__28) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_34)
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address, self_203) -> {
        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_203)), #63686172746572);
        capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_203);
        __cond_35 = __core__headList(__core__tailList(self_203));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_35)), 2),
            () -> {
                (__lhs_0_67) -> {
                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline((self_72) -> {
                        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_72)))))
                    }(self_101 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
                    recurse_67 = (recurse_66, lst_12) -> {
                        __core__chooseList(lst_12, () -> {
                            error()
                        }, () -> {
                            item_6 = __core__headList__safe(lst_12);
                            __core__ifThenElse(
                                __core__ifThenElse(
                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item_6))), capoAddr),
                                    () -> {
                                        a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(item_6))))), charterAc_2);
                                        __core__ifThenElse(
                                            __core__lessThanEqualsInteger(a_3, 0),
                                            false,
                                            true
                                        )
                                    },
                                    () -> {
                                        false
                                    }
                                )(),
                                () -> {
                                    item_6
                                },
                                () -> {
                                    recurse_66(recurse_66, __core__tailList__safe(lst_12))
                                }
                            )()
                        })()
                    };
                    recurse_67(recurse_67, self_101))), 0)
                }
            },
            () -> {
                (__29) -> {
                    error()
                }
            }
        )()(__cond_35)
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_205, dgtLink_1, role_1, idPrefix_3) -> {
        (input, mph_18) -> {
            __core__mkCons(__core__listData(dgtLink_1), __core__mkCons(role_1, __core__mkCons(idPrefix_3, __core__mkCons(input, __core__mkCons(__core__bData(mph_18), __core__mkNilData(()))))))
        }((inputs_1, mph_14) -> {
            (uutName) -> {
                __cond_6 = __core__headList(__core__tailList(dgtLink_1));
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_6)), 1),
                    () -> {
                        (__lhs_0_8) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_6) -> {
                            vh_2 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_6))));
                            needsAddrWithCred = __core__constrData(1, __core__mkCons(__core__bData(vh_2), __core__mkNilData(())));
                            ac = __helios__assetclass__new(mph_14, __core__encodeUtf8(uutName));
                            __cond_7 = __helios__common__find_safe(inputs_1, (i_7) -> {
                                __core__ifThenElse(
                                    __core__equalsData(self_21 = __helios__txinput__address(i_7);
                                    __core__headList(__core__sndPair(__core__unConstrData(self_21))), needsAddrWithCred),
                                    () -> {
                                        a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_7))));
                                        __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), ac);
                                        __core__ifThenElse(
                                            __core__lessThanEqualsInteger(a_3, 0),
                                            false,
                                            true
                                        )
                                    },
                                    () -> {
                                        false
                                    }
                                )()
                            });
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_7)), 0),
                                () -> {
                                    (foundGood) -> {
                                        foundGood
                                    }
                                },
                                () -> {
                                    (__lhs_0_7) -> {
                                        error()
                                    }
                                }
                            )()(__cond_7)
                        }
                    }
                )()(__cond_6)
            }(d = __core__headList(dgtLink_1);
            __core__decodeUtf8(__core__unBData(d)))
        }(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), __core__unBData(__core__headList(self_205))), __core__unBData(__core__headList(self_205)))
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_206) -> {
        __helios__txinput__address(__cond_36 = __core__headList(__core__tailList(self_206));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 1),
            () -> {
                (self_18) -> {
                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_36)), 2),
                    () -> {
                        (self_18) -> {
                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))
                        }
                    },
                    () -> {
                        (__30) -> {
                            error()
                        }
                    }
                )()
            }
        )()(__cond_36))
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_209, id_1) -> {
        capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_209);
        (txin_4) -> {
            __core__ifThenElse(
                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),
                () -> {
                    data_160 = __helios__txoutputdatum__inline(self_72 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));
                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_72))))));
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_160)), 2),
                        () -> {
                            (__lhs_0_74) -> {
                                x_7 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_160);
                                __core__ifThenElse(
                                    __core__equalsByteString(id_1, #),
                                    () -> {
                                        true
                                    },
                                    () -> {
                                        __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_7, #406964)), id_1)
                                    }
                                )()
                            }
                        },
                        () -> {
                            (__31) -> {
                                false
                            }
                        }
                    )()(data_160)
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput, self_210, newDataId, dataTypePurpose) -> {
        __module__StellarHeliosHelpers__bREQTgroup("The new record MUST be saved in the Capo address", true, () -> {
            dgData = __helios__txoutputdatum__inline(self_72 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_210, newDataId);
            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_72))))));
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(dgData)), 2),
                () -> {
                    (__lhs_0_75) -> {
                        data_161 = __module__StellarHeliosHelpers__fromCip68Wrapper(dgData);
                        __core__ifThenElse(
                            self = __core__unBData(__helios__common__mStruct_field(data_161, #406964));
                            __core__ifThenElse(
                                __core__equalsByteString(self, newDataId),
                                false,
                                true
                            ),
                            () -> {
                                error()
                            },
                            () -> {
                                __core__ifThenElse(
                                    (self_32) -> {
                                        __core__ifThenElse(
                                            __core__equalsString(self_32, dataTypePurpose),
                                            false,
                                            true
                                        )
                                    }(d = __helios__common__mStruct_field(data_161, #747065);
                                    __core__decodeUtf8(__core__unBData(d))),
                                    () -> {
                                        error()
                                    },
                                    () -> {
                                        true
                                    }
                                )()
                            }
                        )()
                    }
                },
                () -> {
                    (__32) -> {
                        error()
                    }
                }
            )()(dgData)
        })
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1 = (self_211, recId_3) -> {
        ac_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_211)), recId_3);
        capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(self_211);
        (__cond_41) -> {
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_41)), 1),
                () -> {
                    (__lhs_0_77) -> {
                        error()
                    }
                },
                () -> {
                    (__lhs_0_76) -> {
                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_76)))
                    }
                }
            )()(__cond_41)
        }(self_139 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));
        __helios__common__find_safe(self_139, (txout) -> {
            __core__ifThenElse(
                __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),
                () -> {
                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_2)
                },
                () -> {
                    false
                }
            )()
        }))
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput, self_212) -> {
        charter_1 = __core__headList(__core__tailList(self_212));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 1),
            () -> {
                (__lhs_0_83) -> {
                    self_212
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 2),
                    () -> {
                        (__lhs_0_82) -> {
                            self_212
                        }
                    },
                    () -> {
                        (__lhs_0_78) -> {
                            mph_21 = __core__unBData(__core__headList(self_212));
                            charterAc_3 = __helios__assetclass__new(mph_21, #63686172746572);
                            (__cond_43) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_43)), 1),
                                    () -> {
                                        (__lhs_0_81) -> {
                                            __module__CapoHelpers__CapoCtx[]__withCharterInput(self_212)
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_80) -> {
                                            charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_80)));
                                            datum_4 = __helios__common__assert_constr_index(data_138 = __helios__txoutputdatum__inline(self_72 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));
                                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_72))))));
                                            __helios__common__assert_constr_index(data_138, 0), 0);
                                            __core__mkCons(__core__bData(mph_21), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))
                                        }
                                    }
                                )()(__cond_43)
                            }(self_136 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                            __helios__common__find_safe(self_136, (txin_5) -> {
                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_3);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            }))
                        }
                    }
                )()
            }
        )()(charter_1)
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_213) -> {
        charter_2 = __core__headList(__core__tailList(self_213));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),
            () -> {
                (__lhs_0_89) -> {
                    self_213
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),
                    () -> {
                        (__lhs_0_88) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_84) -> {
                            mph_22 = __core__unBData(__core__headList(self_213));
                            charterAc_4 = __helios__assetclass__new(mph_22, #63686172746572);
                            (charterUtxo_3) -> {
                                datum_5 = __helios__common__assert_constr_index(data_138 = __helios__txoutputdatum__inline(self_72 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));
                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_72))))));
                                __helios__common__assert_constr_index(data_138, 0), 0);
                                __core__mkCons(__core__bData(mph_22), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))
                            }((__cond_45) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_45)), 0),
                                    () -> {
                                        (self_21) -> {
                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_86) -> {
                                            error()
                                        }
                                    }
                                )()(__cond_45)
                            }(self_136 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                            __helios__common__find_safe(self_136, (txin_6) -> {
                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_4);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            })))
                        }
                    }
                )()
            }
        )()(charter_2)
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_214) -> {
        charter_3 = __core__headList(__core__tailList(self_214));
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),
            () -> {
                (__lhs_0_93) -> {
                    self_214
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),
                    () -> {
                        (__lhs_0_92) -> {
                            error()
                        }
                    },
                    () -> {
                        (__lhs_0_90) -> {
                            mph_23 = __core__unBData(__core__headList(self_214));
                            (utxo_5) -> {
                                datum_6 = __helios__common__assert_constr_index(data_138 = __helios__txoutputdatum__inline(self_72 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_5))));
                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_72))))));
                                __helios__common__assert_constr_index(data_138, 0), 0);
                                __core__mkCons(__core__bData(mph_23), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_5, __core__mkNilData(())))), __core__mkNilData(())))
                            }(charterAc = __helios__assetclass__new(mph_23, #63686172746572);
                            (__cond_12) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),
                                    () -> {
                                        (self_21) -> {
                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_19) -> {
                                            error()
                                        }
                                    }
                                )()(__cond_12)
                            }(self_136 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                            __helios__common__find_safe(self_136, (txin) -> {
                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));
                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc);
                                __core__ifThenElse(
                                    __core__lessThanEqualsInteger(a_3, 0),
                                    false,
                                    true
                                )
                            })))
                        }
                    }
                )()
            }
        )()(charter_3)
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));
        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));
        idxBytes = __core__serialiseData(__core__iData(seedIdx));
        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));
        txoInfo = __core__ifThenElse(
            __core__ifThenElse(
                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),
                false,
                true
            ),
            () -> {
                error()
            },
            () -> {
                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)
            }
        )();
        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));
        (p) -> {
            __core__appendString(__core__appendString(p, "-"), mhs)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_224, fn_25) -> {
        recurse_91 = (recurse_90, map_29) -> {
            __core__chooseList(map_29, () -> {
                ()
            }, () -> {
                head_44 = __core__headList__safe(map_29);
                __core__chooseUnit(fn_25(__core__unBData(__core__fstPair(head_44)), __core__unIData(__core__sndPair(head_44))), recurse_90(recurse_90, __core__tailList__safe(map_29)))
            })()
        };
        recurse_91(recurse_91, self_224)
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_229, key_23) -> {
        __helios__common__map_get(self_229, __core__bData(key_23), (x_11) -> {
            __core__constrData(0, __core__mkCons(x_11, __core__mkNilData(())))
        }, () -> {
            __core__constrData(1, __core__mkNilData(()))
        })
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_233, comp_4) -> {
        recurse_57 = (recurse_56, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                tail_2 = recurse_56(recurse_56, __core__tailList__safe(lst_11));
                x_3 = __core__headList__safe(lst_11);
                recurse_55 = (recurse_54, lst_9) -> {
                    __core__chooseList(lst_9, () -> {
                        __core__mkCons(x_3, lst_9)
                    }, () -> {
                        head_4 = __core__headList__safe(lst_9);
                        __core__ifThenElse(
                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head_4)), __core__unIData(__core__sndPair(head_4))),
                            () -> {
                                __core__mkCons(x_3, lst_9)
                            },
                            () -> {
                                __core__mkCons(head_4, recurse_54(recurse_54, __core__tailList__safe(lst_9)))
                            }
                        )()
                    })()
                };
                recurse_55(recurse_55, tail_2)
            })()
        };
        recurse_57(recurse_57, self_233)
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_27, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __core__mkNilPairData(())
            }
        )();
        __module__StellarHeliosHelpers__bREQTgroup("checks that the UUTs are minted correctly", true, () -> {
            __core__chooseUnit(msg_1 = __core__appendString("-- uut purposes: ", __helios__list[__helios__string]__join(purposes));
            (), (delegateApproval) -> {
                valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
                tokenNames = __helios__common__map(purposes, (item_14) -> {
                    s = mkTokenName_1(__core__decodeUtf8(__core__unBData(item_14)));
                    __core__bData(__core__encodeUtf8(s))
                });
                expectedValue = __helios__value____add(__helios__value____add(__core__mkNilPairData(()), otherMintedValue_1), self_234 = __helios__common__map(tokenNames, (item_13) -> {
                    __core__mapData(tn_2 = __core__decodeUtf8(__core__unBData(item_13));
                    __module__StellarHeliosHelpers__mkTv(mph_27, tn_2))
                });
                recurse_97 = (recurse_96, lst_25) -> {
                    __core__chooseList(lst_25, () -> {
                        __core__mkNilPairData(())
                    }, () -> {
                        __helios__value____add(__core__unMapData(__core__headList__safe(lst_25)), recurse_96(recurse_96, __core__tailList__safe(lst_25)))
                    })()
                };
                recurse_97(recurse_97, self_234));
                __core__chooseUnit(__core__ifThenElse(
                    __core__ifThenElse(
                        __helios__value__contains_policy(valueMinted, mph_27),
                        false,
                        true
                    ),
                    () -> {
                        error()
                    },
                    () -> {
                        ()
                    }
                )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_27), (k1, _v1, k2, _v2) -> {
                    __core__lessThanByteString(k1, k2)
                });
                __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_4, i_12) -> {
                    ()
                }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_27);
                actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {
                    __core__lessThanByteString(k1, k2)
                });
                __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_3, i_11) -> {
                    ()
                }), filteredOtherMint = __helios__common__filter(valueMinted, (pair_39) -> {
                    (b_15, __37) -> {
                        __core__ifThenElse(
                            __core__equalsByteString(b_15, mph_27),
                            false,
                            true
                        )
                    }(__core__unBData(__core__fstPair(pair_39)), __core__unMapData(__core__sndPair(pair_39)))
                }, __core__mkNilPairData(()));
                __core__ifThenElse(
                    b = __helios__value__is_zero(filteredOtherMint);
                    __core__ifThenElse(
                        b,
                        false,
                        true
                    ),
                    () -> {
                        msg_1 = __helios__value__show(__helios__common__filter(filteredOtherMint, (pair_5) -> {
                            b = __core__equalsByteString(__core__unBData(__core__fstPair(pair_5)), #);
                            __core__ifThenElse(
                                b,
                                false,
                                true
                            )
                        }, __core__mkNilPairData(())));
                        ()
                    },
                    () -> {
                        ()
                    }
                )()), thisPolicyMintOK = __module__StellarHeliosHelpers__bREQTgroup("Ensures the mint for this policy-id is exactly the expected value", true, () -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted)),
                        () -> {
                            ()
                        },
                        () -> {
                            error()
                        }
                    )(), __core__chooseUnit(cond = __module__StellarHeliosHelpers__bREQTgroup("the indicated seed UTXO must be spent", false, () -> {
                        __core__chooseUnit(__core__ifThenElse(
                            b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_4) -> {
                                __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_4))), seed_2)
                            });
                            __core__ifThenElse(
                                b,
                                false,
                                true
                            ),
                            () -> {
                                error()
                            },
                            () -> {
                                ()
                            }
                        )(), true)
                    });
                    (), true))
                });
                otherPoliciesMintOk = __core__ifThenElse(
                    b = __helios__value__is_zero(otherMintedValue_1);
                    __core__ifThenElse(
                        b,
                        false,
                        true
                    ),
                    () -> {
                        true
                    },
                    () -> {
                        remainingExpectedMint = __core__ifThenElse(
                            __helios__value__contains_policy(expectedValue, mph_27),
                            () -> {
                                key_25 = __core__bData(mph_27);
                                recurse_95 = (recurse_94, self_231) -> {
                                    __core__chooseList(self_231, () -> {
                                        self_231
                                    }, () -> {
                                        head_46 = __core__headList__safe(self_231);
                                        tail_4 = __core__tailList__safe(self_231);
                                        __core__ifThenElse(
                                            __core__equalsData(key_25, __core__fstPair(head_46)),
                                            () -> {
                                                recurse_94(recurse_94, tail_4)
                                            },
                                            () -> {
                                                __core__mkCons(head_46, recurse_94(recurse_94, tail_4))
                                            }
                                        )()
                                    })()
                                };
                                recurse_95(recurse_95, expectedValue)
                            },
                            () -> {
                                expectedValue
                            }
                        )();
                        __core__ifThenElse(
                            __helios__value__is_zero(remainingExpectedMint),
                            () -> {
                                true
                            },
                            () -> {
                                __module__StellarHeliosHelpers__bREQTgroup("...with other-policy values expected: ", false, () -> {
                                    __core__chooseUnit(recurse_93 = (recurse_92, map_30) -> {
                                        __core__chooseList(map_30, () -> {
                                            ()
                                        }, () -> {
                                            head_45 = __core__headList__safe(map_30);
                                            __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {
                                                mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);
                                                __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_3, expectedCount) -> {
                                                    __core__ifThenElse(
                                                        (b) -> {
                                                            __core__ifThenElse(
                                                                b,
                                                                false,
                                                                true
                                                            )
                                                        }(__cond_55 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy, tokenName_3);
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_55)), 1),
                                                            () -> {
                                                                (__lhs_0_116) -> {
                                                                    false
                                                                }
                                                            },
                                                            () -> {
                                                                (__lhs_0_115) -> {
                                                                    actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_115))));
                                                                    __core__equalsInteger(actualCount, expectedCount)
                                                                }
                                                            }
                                                        )()(__cond_55)),
                                                        () -> {
                                                            error()
                                                        },
                                                        () -> {
                                                            ()
                                                        }
                                                    )()
                                                })
                                            }(__core__unBData(__core__fstPair(head_45)), __core__unMapData(__core__sndPair(head_45))), recurse_92(recurse_92, __core__tailList__safe(map_30)))
                                        })()
                                    };
                                    recurse_93(recurse_93, remainingExpectedMint), true)
                                })
                            }
                        )()
                    }
                )();
                __core__chooseUnit(__core__ifThenElse(
                    otherPoliciesMintOk,
                    () -> {
                        ()
                    },
                    () -> {
                        error()
                    }
                )(), __core__chooseUnit(__core__ifThenElse(
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(__helios__common__length(purposes), 1),
                        false,
                        true
                    ),
                    () -> {
                        msg_1 = __core__appendString(__core__appendString(__core__appendString("\u2705 ok: minted uuts: {", __helios__list[__helios__string]__join(purposes)), "}"), mkTokenName_1(""));
                        ()
                    },
                    () -> {
                        msg_1 = __core__appendString("\u2705 ok: minted uut: ", d = __core__headList(tokenNames);
                        __core__decodeUtf8(__core__unBData(d)));
                        ()
                    }
                )(), otherPoliciesMintOk)))))
            }(__lhs_0_114 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
            charterAc_1 = __helios__assetclass__new(mph_27, #63686172746572);
            hasCharter_1 = (txin_1) -> {
                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));
                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_1);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(a_3, 0),
                    false,
                    true
                )
            };
            (charterUtxo_1) -> {
                __helios__common__assert_constr_index(data_138 = __helios__txoutputdatum__inline(self_72 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));
                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_72))))));
                __helios__common__assert_constr_index(data_138, 0), 0)
            }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),
                () -> {
                    (self_21) -> {
                        __core__headList(__core__sndPair(__core__unConstrData(self_21)))
                    }
                },
                () -> {
                    (__lhs_0_21) -> {
                        (__cond_14) -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),
                                () -> {
                                    (self_21) -> {
                                        __core__headList(__core__sndPair(__core__unConstrData(self_21)))
                                    }
                                },
                                () -> {
                                    (__lhs_0_22) -> {
                                        error()
                                    }
                                }
                            )()(__cond_14)
                        }(self_136 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                        __helios__common__find_safe(self_136, hasCharter_1))
                    }
                }
            )()(__cond_13)), 0);
            mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_114);
            true))
        })
    };
    __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_245) -> {
        d = __core__headList(__core__sndPair(__core__unConstrData(self_245)));
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_268) -> {
        (key_29) -> {
            key_30 = __core__bData(__core__encodeUtf8(key_29));
            recurse_101 = (recurse_100, self_269) -> {
                __core__chooseList(self_269, () -> {
                    self_269
                }, () -> {
                    head_49 = __core__headList__safe(self_269);
                    tail_6 = __core__tailList__safe(self_269);
                    __core__ifThenElse(
                        __core__equalsData(key_30, __core__fstPair(head_49)),
                        () -> {
                            recurse_100(recurse_100, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_49, recurse_100(recurse_100, tail_6))
                        }
                    )()
                })()
            };
            recurse_101(recurse_101, self_268)
        }
    };
    __module__BasicDelegate__checkOneActivity_1 = (__module__BasicDelegate__checkOneActivity, dgtionDatum, activity_3, dd, baseCctx) -> {
        checkNonDelegatedActivities = __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 8),
            () -> {
                (__lhs_0_247) -> {
                    activities_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_247))));
                    cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx);
                    actingAsMintDgt = __core__ifThenElse(
                        __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_6, true),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )();
                    actingAsSpendDgt = __core__ifThenElse(
                        __core__ifThenElse(
                            __core__ifThenElse(
                                __core__ifThenElse(
                                    actingAsMintDgt,
                                    false,
                                    true
                                ),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )(),
                            () -> {
                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_6, true)
                            },
                            () -> {
                                false
                            }
                        )(),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )();
                    notMintDgt = __core__ifThenElse(
                        actingAsMintDgt,
                        false,
                        true
                    );
                    notSpendDgt = __core__ifThenElse(
                        actingAsSpendDgt,
                        false,
                        true
                    );
                    mintDgtCheck_1 = __core__ifThenElse(
                        notMintDgt,
                        () -> {
                            true
                        },
                        () -> {
                            __helios__common__all(activities_2, (rawActivity) -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 5),
                                    () -> {
                                        (__lhs_0_253) -> {
                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity, dd, cctx_6)
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 7),
                                            () -> {
                                                (__lhs_0_252) -> {
                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity, dd, cctx_6)
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 6),
                                                    () -> {
                                                        (__lhs_0_251) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 1),
                                                            () -> {
                                                                (__lhs_0_250) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 0),
                                                                    () -> {
                                                                        (__lhs_0_249) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity)), 8),
                                                                            () -> {
                                                                                (__lhs_0_248) -> {
                                                                                    error()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__74) -> {
                                                                                    error()
                                                                                }
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(rawActivity)
                            })
                        }
                    )();
                    spendDgtCheck_1 = __core__ifThenElse(
                        notSpendDgt,
                        () -> {
                            true
                        },
                        () -> {
                            __module__StellarHeliosHelpers__bREQTgroup("validates nested activities: in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities", false, () -> {
                                __helios__common__all(activities_2, (rawActivity_1) -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_1)), 6),
                                        () -> {
                                            (__lhs_0_259) -> {
                                                __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_6, false);
                                                __core__ifThenElse(
                                                    cond,
                                                    () -> {
                                                        ()
                                                    },
                                                    () -> {
                                                        error()
                                                    }
                                                )(), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_1, dd, cctx_6))
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_1)), 5),
                                                () -> {
                                                    (__lhs_0_258) -> {
                                                        error()
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_1)), 7),
                                                        () -> {
                                                            (__lhs_0_257) -> {
                                                                error()
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_1)), 1),
                                                                () -> {
                                                                    (__lhs_0_256) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_1)), 0),
                                                                        () -> {
                                                                            (__lhs_0_255) -> {
                                                                                error()
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_1)), 8),
                                                                                () -> {
                                                                                    (__lhs_0_254) -> {
                                                                                        error()
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__75) -> {
                                                                                        error()
                                                                                    }
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()(rawActivity_1)
                                })
                            })
                        }
                    )();
                    __core__ifThenElse(
                        __core__ifThenElse(
                            mintDgtCheck_1,
                            () -> {
                                spendDgtCheck_1
                            },
                            () -> {
                                false
                            }
                        )(),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),
                    () -> {
                        (__lhs_0_241) -> {
                            innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_241)));
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 0),
                                () -> {
                                    (__lhs_0_245) -> {
                                        seed_10 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_245)));
                                        (purpose_9) -> {
                                            otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(dd))), __core__unBData(__core__headList(__core__tailList(__core__tailList(dd))))), -1);
                                            (tnStr_3) -> {
                                                cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(baseCctx);
                                                (isUpdatingCharter) -> {
                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_10, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_9)), __core__mkNilData(())), false, (), true, otherMintedValue_2);
                                                    __core__ifThenElse(
                                                        isMintingOk,
                                                        () -> {
                                                            isUpdatingCharter
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }(__cond_110 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_110)), 5),
                                                    () -> {
                                                        (__lhs_0_246) -> {
                                                            true
                                                        }
                                                    },
                                                    () -> {
                                                        (__73) -> {
                                                            false
                                                        }
                                                    }
                                                )()(__cond_110))
                                            }(self_14 = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd))));
                                            __core__ifThenElse(
                                                __helios__string__is_valid_utf8(self_14),
                                                () -> {
                                                    __core__decodeUtf8__safe(self_14)
                                                },
                                                () -> {
                                                    __helios__bytearray__show(self_14)
                                                }
                                            )())
                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_245))));
                                        __core__decodeUtf8(__core__unBData(d)))
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 1),
                                        () -> {
                                            (__lhs_0_244) -> {
                                                __core__equalsInteger((self_24, assetClass_1) -> {
                                                    __common25 = __core__unConstrData(assetClass_1);
                                                    __common26 = __core__sndPair(__common25);
                                                    mph_3 = __core__headList(__common26);
                                                    tokenName_1 = __core__headList(__core__tailList(__common26));
                                                    outer_1 = (outer, inner, map) -> {
                                                        __core__chooseList(map, () -> {
                                                            error()
                                                        }, () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_3),
                                                                () -> {
                                                                    inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                                                                },
                                                                () -> {
                                                                    outer(outer, inner, __core__tailList__safe(map))
                                                                }
                                                            )()
                                                        })()
                                                    };
                                                    outer_1(outer_1, (inner_1, map_1) -> {
                                                        __core__chooseList(map_1, () -> {
                                                            error()
                                                        }, () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                                                                () -> {
                                                                    __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                                                                },
                                                                () -> {
                                                                    inner_1(inner_1, __core__tailList__safe(map_1))
                                                                }
                                                            )()
                                                        })()
                                                    }, self_24)
                                                }(__helios__tx__minted(__helios__scriptcontext__tx), __helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(dd))), __core__unBData(__core__headList(__core__tailList(__core__tailList(dd)))))), -1)
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_242) -> {
                                                error()
                                            }
                                        }
                                    )()
                                }
                            )()(innerActivity)
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),
                            () -> {
                                (__lhs_0_142) -> {
                                    dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_142)));
                                    cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__withCharterInput_1(mph_25 = __core__unBData(__core__headList(__core__tailList(dd)));
                                    __core__mkCons(__core__bData(mph_25), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())))));
                                    __common0 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4);
                                    __common13 = __helios__common__enum_fields_after_4(__common0);
                                    __core__chooseUnit(__cond_107 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);
                                    __common24 = __core__fstPair(__core__unConstrData(__cond_107));
                                    __core__ifThenElse(
                                        __core__equalsInteger(__common24, 0),
                                        () -> {
                                            (__lhs_0_240) -> {
                                                cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_240)));
                                                __core__ifThenElse(
                                                    __core__equalsData(cCLA, dCLA),
                                                    () -> {
                                                        ()
                                                    },
                                                    () -> {
                                                        error()
                                                    }
                                                )()
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__common24, 5),
                                                () -> {
                                                    (__lhs_0_238) -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),
                                                            () -> {
                                                                (__lhs_0_239) -> {
                                                                    ()
                                                                }
                                                            },
                                                            () -> {
                                                                (__72) -> {
                                                                    error()
                                                                }
                                                            }
                                                        )()(dCLA)
                                                    }
                                                },
                                                () -> {
                                                    (__71) -> {
                                                        error()
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_107), neededRole = __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 4),
                                        () -> {
                                            (__lhs_0_104) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),
                                                () -> {
                                                    (__lhs_0_103) -> {
                                                        error()
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),
                                                        () -> {
                                                            (__lhs_0_102) -> {
                                                                __core__constrData(1, __core__mkNilData(()))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),
                                                                () -> {
                                                                    (__lhs_0_101) -> {
                                                                        __core__constrData(0, __core__mkNilData(()))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),
                                                                        () -> {
                                                                            (__lhs_0_100) -> {
                                                                                __core__constrData(1, __core__mkNilData(()))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),
                                                                                () -> {
                                                                                    (__lhs_0_99) -> {
                                                                                        __core__constrData(6, __core__mkNilData(()))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__lhs_0_98) -> {
                                                                                        error()
                                                                                    }
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()(dCLA);
                                    myCurrentRole = __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 7),
                                        () -> {
                                            (__lhs_0_146) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 1),
                                                () -> {
                                                    (__lhs_0_145) -> {
                                                        __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, false);
                                                        __core__ifThenElse(
                                                            cond,
                                                            () -> {
                                                                ()
                                                            },
                                                            () -> {
                                                                error()
                                                            }
                                                        )(), neededRole)
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 0),
                                                        () -> {
                                                            (__lhs_0_144) -> {
                                                                __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, false);
                                                                __core__ifThenElse(
                                                                    cond,
                                                                    () -> {
                                                                        ()
                                                                    },
                                                                    () -> {
                                                                        error()
                                                                    }
                                                                )(), neededRole)
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 6),
                                                                () -> {
                                                                    (__lhs_0_143) -> {
                                                                        __core__ifThenElse(
                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true),
                                                                            () -> {
                                                                                __core__constrData(0, __core__mkNilData(()))
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true),
                                                                                    () -> {
                                                                                        __core__constrData(1, __core__mkNilData(()))
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__41) -> {
                                                                        error()
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()(neededRole);
                                    __core__ifThenElse(
                                        __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),
                                            () -> {
                                                (__lhs_0_234) -> {
                                                    seed_9 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_234)));
                                                    (purpose_8) -> {
                                                        mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_9);
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                            () -> {
                                                                (__lhs_0_235) -> {
                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                        __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_8)), __core__mkNilData(())), true, mkTn, false, ()),
                                                                        () -> {
                                                                            ()
                                                                        },
                                                                        () -> {
                                                                            ()
                                                                        }
                                                                    )(), (__cond_106) -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_106)), 1),
                                                                            () -> {
                                                                                (__lhs_0_237) -> {
                                                                                    error()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__lhs_0_236) -> {
                                                                                    dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_236))));
                                                                                    __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);
                                                                                    __core__decodeUtf8(__core__unBData(d)), mkTn(purpose_8));
                                                                                    __core__ifThenElse(
                                                                                        cond,
                                                                                        () -> {
                                                                                            ()
                                                                                        },
                                                                                        () -> {
                                                                                            error()
                                                                                        }
                                                                                    )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __core__unBData(__core__headList(__core__tailList(dd)))))
                                                                                }
                                                                            }
                                                                        )()(__cond_106)
                                                                    }((self_198) -> {
                                                                        __helios__common__map_get(self_198, __core__bData(__core__encodeUtf8(purpose_8)), (x_6) -> {
                                                                            __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))
                                                                        }, () -> {
                                                                            __core__constrData(1, __core__mkNilData(()))
                                                                        })
                                                                    }(self_157 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                    __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_157)))))))))
                                                                }
                                                            },
                                                            () -> {
                                                                (__70) -> {
                                                                    error()
                                                                }
                                                            }
                                                        )()(myCurrentRole)
                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_234))));
                                                    __core__decodeUtf8(__core__unBData(d)))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),
                                                    () -> {
                                                        (__lhs_0_182) -> {
                                                            charterData_4 = __helios__common__assert_constr_index(__common0, 0);
                                                            __common1 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))));
                                                            nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                            nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));
                                                            newChange = __core__headList(nextChangeList);
                                                            __lhs_0_183 = __helios__common__assert_constr_index(newChange, 0);
                                                            __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_183))));
                                                            __common19 = __core__tailList(__lhs_0_0_2);
                                                            action = __core__headList(__lhs_0_0_2);
                                                            __common4 = __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 1);
                                                            role_2 = __core__headList(__common19);
                                                            __common3 = __core__equalsInteger(__core__fstPair(__core__unConstrData(role_2)), 4);
                                                            OdgtLink = __core__headList(__core__tailList(__common19));
                                                            newDgtRoleName = __core__ifThenElse(
                                                                __common3,
                                                                () -> {
                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name
                                                                },
                                                                () -> {
                                                                    (__54) -> {
                                                                        error()
                                                                    }
                                                                }
                                                            )()(role_2);
                                                            __core__chooseUnit(__core__ifThenElse(
                                                                __common4,
                                                                () -> {
                                                                    (__lhs_0_232) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__68) -> {
                                                                        ()
                                                                    }
                                                                }
                                                            )()(action), __core__chooseUnit((cond) -> {
                                                                __core__ifThenElse(
                                                                    cond,
                                                                    () -> {
                                                                        ()
                                                                    },
                                                                    () -> {
                                                                        error()
                                                                    }
                                                                )()
                                                            }(self_255 = __core__tailList(nextChangeList);
                                                            __core__equalsData(__core__listData(self_255), __core__listData(__common1))), __core__ifThenElse(
                                                                __common4,
                                                                () -> {
                                                                    (__lhs_0_231) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),
                                                                        () -> {
                                                                            (__lhs_0_230) -> {
                                                                                __common22 = __core__sndPair(__core__unConstrData(__lhs_0_230));
                                                                                seed_8 = __core__headList(__common22);
                                                                                (purpose_7) -> {
                                                                                    idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_230);
                                                                                    (callback_21) -> {
                                                                                        callback_21(seed_8, purpose_7, idPrefix_9)
                                                                                    }
                                                                                }(d = __core__headList(__core__tailList(__common22));
                                                                                __core__decodeUtf8(__core__unBData(d)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__lhs_0_229) -> {
                                                                                seed_7 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_229)));
                                                                                (purpose_6) -> {
                                                                                    idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_229);
                                                                                    (callback_20) -> {
                                                                                        callback_20(seed_7, purpose_6, idPrefix_8)
                                                                                    }
                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_229))));
                                                                                __core__decodeUtf8(__core__unBData(d)))
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()(action)((seed_6, purpose_5, pendingActionIdPrefix) -> {
                                                                possibleMintDgtVerifications = __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),
                                                                    () -> {
                                                                        (__lhs_0_201) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                            () -> {
                                                                                (__lhs_0_185) -> {
                                                                                    __core__ifThenElse(
                                                                                        __common4,
                                                                                        () -> {
                                                                                            (__lhs_0_193) -> {
                                                                                                error()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__56) -> {
                                                                                                mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_6);
                                                                                                mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_6, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_5)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_6), false, ());
                                                                                                dgtLink_2 = __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),
                                                                                                    () -> {
                                                                                                        (__lhs_0_187) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (self_197) -> {
                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_197))))
                                                                                                        }
                                                                                                    }
                                                                                                )()(OdgtLink);
                                                                                                (__common2) -> {
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        __core__equalsString(__common2, mkTokenName_2(purpose_5)),
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    )(), (delegateTakesOwnership) -> {
                                                                                                        possibleExtraReplacementCheck = __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),
                                                                                                            () -> {
                                                                                                                (__lhs_0_188) -> {
                                                                                                                    __core__chooseUnit(__cond_88 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_88)), 0),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_190) -> {
                                                                                                                                dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_190)));
                                                                                                                                entryType_1 = __helios__common__mStruct_field(dde, #747065);
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_192) -> {
                                                                                                                                            (idPrefix_7) -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __core__equalsString(idPrefix_7, pendingActionIdPrefix),
                                                                                                                                                    () -> {
                                                                                                                                                        ()
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                )()
                                                                                                                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_192))));
                                                                                                                                            __core__decodeUtf8(__core__unBData(d)))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__58) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(entryType_1)
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_189) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_88), true)
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__57) -> {
                                                                                                                    true
                                                                                                                }
                                                                                                            }
                                                                                                        )()(action);
                                                                                                        __core__ifThenElse(
                                                                                                            __core__ifThenElse(
                                                                                                                mintedDgTkn,
                                                                                                                () -> {
                                                                                                                    true
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    false
                                                                                                                }
                                                                                                            )(),
                                                                                                            () -> {
                                                                                                                possibleExtraReplacementCheck
                                                                                                            },
                                                                                                            () -> {
                                                                                                                false
                                                                                                            }
                                                                                                        )()
                                                                                                    }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __core__unBData(__core__headList(__core__tailList(dd))));
                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                        assertion_2,
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    )(), true)))
                                                                                                }(d = __core__headList(dgtLink_2);
                                                                                                __core__decodeUtf8(__core__unBData(d)))
                                                                                            }
                                                                                        }
                                                                                    )()(action)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__55) -> {
                                                                                    error()
                                                                                }
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(myCurrentRole);
                                                                otherPossibleVerifications = __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),
                                                                    () -> {
                                                                        (__lhs_0_228) -> {
                                                                            error()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),
                                                                            () -> {
                                                                                (__lhs_0_202) -> {
                                                                                    isNotADuplicate = __helios__common__all(__common1, (pdChange_2) -> {
                                                                                        __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),
                                                                                            () -> {
                                                                                                (__lhs_0_203) -> {
                                                                                                    __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_203))));
                                                                                                    pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),
                                                                                                        () -> {
                                                                                                            (__lhs_0_204) -> {
                                                                                                                changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_204);
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsString(changingDgtName, newDgtRoleName),
                                                                                                                    false,
                                                                                                                    true
                                                                                                                )
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__62) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        }
                                                                                                    )()(pendingRole)
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__61) -> {
                                                                                                    error()
                                                                                                }
                                                                                            }
                                                                                        )()(pdChange_2)
                                                                                    });
                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                        isNotADuplicate,
                                                                                        () -> {
                                                                                            ()
                                                                                        },
                                                                                        () -> {
                                                                                            error()
                                                                                        }
                                                                                    )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);
                                                                                    possibleReplacementIsCorrect = __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),
                                                                                        () -> {
                                                                                            (__lhs_0_226) -> {
                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),
                                                                                                    () -> {
                                                                                                        (__lhs_0_227) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__67) -> {
                                                                                                            ()
                                                                                                        }
                                                                                                    }
                                                                                                )()(existingRoleEntryMaybe), true)
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),
                                                                                                () -> {
                                                                                                    __common20 = __core__unConstrData(role_2);
                                                                                                    __common21 = __core__fstPair(__common20);
                                                                                                    __common23 = __core__equalsInteger(__common21, 2);
                                                                                                    (__lhs_0_207) -> {
                                                                                                        replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_207))))));
                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                            __common23,
                                                                                                            () -> {
                                                                                                                (__lhs_0_225) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsInteger(__common21, 3),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_224) -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__common21, 7),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_223) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__66) -> {
                                                                                                                                    ()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )()(role_2), existingDgtLink_1 = __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),
                                                                                                            () -> {
                                                                                                                (__lhs_0_210) -> {
                                                                                                                    error()
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__lhs_0_208) -> {
                                                                                                                    __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_208)));
                                                                                                                    entryType_2 = __helios__common__mStruct_field(__lhs_0_0_4, #747065);
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),
                                                                                                                        () -> {
                                                                                                                            (self_149) -> {
                                                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_149))))
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__64) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(entryType_2)
                                                                                                                }
                                                                                                            }
                                                                                                        )()(existingRoleEntryMaybe);
                                                                                                        existingDgTkn = __core__ifThenElse(
                                                                                                            __core__equalsInteger(__common21, 0),
                                                                                                            () -> {
                                                                                                                (__lhs_0_218) -> {
                                                                                                                    some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __core__unBData(__core__headList(__core__tailList(dd))));
                                                                                                                    __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __core__equalsInteger(__common21, 1),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_217) -> {
                                                                                                                            some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __core__unBData(__core__headList(__core__tailList(dd))));
                                                                                                                            __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __common3,
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_216) -> {
                                                                                                                                    some_4 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __core__unBData(__core__headList(__core__tailList(dd))));
                                                                                                                                    __core__constrData(0, __core__mkCons(some_4, __core__mkNilData(())))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__common21, 5),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_215) -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__equalsInteger(__common21, 6),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_214) -> {
                                                                                                                                                    error()
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __common23,
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_213) -> {
                                                                                                                                                            error()
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __core__equalsInteger(__common21, 3),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_212) -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_211) -> {
                                                                                                                                                                    error()
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )()(role_2);
                                                                                                        __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));
                                                                                                        __core__ifThenElse(
                                                                                                            cond,
                                                                                                            () -> {
                                                                                                                ()
                                                                                                            },
                                                                                                            () -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        )(), true))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_205) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()(action);
                                                                                    __core__ifThenElse(
                                                                                        isNotADuplicate,
                                                                                        () -> {
                                                                                            possibleReplacementIsCorrect
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )())
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__60) -> {
                                                                                    error()
                                                                                }
                                                                            }
                                                                        )()
                                                                    }
                                                                )()(myCurrentRole);
                                                                __core__chooseUnit(__core__ifThenElse(
                                                                    __core__equalsInteger(__helios__common__length(__common1), 0),
                                                                    () -> {
                                                                        ()
                                                                    },
                                                                    () -> {
                                                                        error()
                                                                    }
                                                                )(), __core__ifThenElse(
                                                                    possibleMintDgtVerifications,
                                                                    () -> {
                                                                        otherPossibleVerifications
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )())
                                                            })))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),
                                                            () -> {
                                                                (__lhs_0_181) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),
                                                                    () -> {
                                                                        __common18 = __core__tailList(__common13);
                                                                        (__lhs_0_158) -> {
                                                                            pendingChangesList = __core__unListData(__core__headList(__core__tailList(__common18)));
                                                                            previousManifest = __core__unMapData(__core__headList(__common18));
                                                                            nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                            __common14 = __core__tailList(__helios__common__enum_fields_after_4(nextCharterData_1));
                                                                            nextManifest = __core__unMapData(__core__headList(__common14));
                                                                            __core__chooseUnit(cond = __core__equalsInteger(__helios__common__length(__core__unListData(__core__headList(__core__tailList(__common14)))), 0);
                                                                            __core__ifThenElse(
                                                                                cond,
                                                                                () -> {
                                                                                    ()
                                                                                },
                                                                                () -> {
                                                                                    error()
                                                                                }
                                                                            )(), spendDgtCheck = __core__ifThenElse(
                                                                                b = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true);
                                                                                __core__ifThenElse(
                                                                                    b,
                                                                                    false,
                                                                                    true
                                                                                ),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    __helios__common__fold(pendingChangesList, (prev_5, item_19) -> {
                                                                                        prev_5((a_17, b_16) -> {
                                                                                            pdChange = __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(item_19)), 0),
                                                                                                () -> {
                                                                                                    (self_144) -> {
                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_144))))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_159) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()(item_19);
                                                                                            (pendingTypeName) -> {
                                                                                                __core__chooseUnit(__cond_72 = __core__headList(pdChange);
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_72)), 1),
                                                                                                    () -> {
                                                                                                        (__lhs_0_167) -> {
                                                                                                            __cond_75 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(b_16, pendingTypeName);
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_75)), 0),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_168) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__50) -> {
                                                                                                                        ()
                                                                                                                    }
                                                                                                                }
                                                                                                            )()(__cond_75)
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__47) -> {
                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                __core__equalsInteger(__helios__common__length(b_16), 0),
                                                                                                                () -> {
                                                                                                                    error()
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    ()
                                                                                                                }
                                                                                                            )(), head_48 = __core__headList(b_16);
                                                                                                            (CME_key, __lhs_1) -> {
                                                                                                                ME_type = __helios__common__mStruct_field(__lhs_1, #747065);
                                                                                                                __lhs_0_163 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                ME_policyLink = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_163))));
                                                                                                                (ME_idPrefix) -> {
                                                                                                                    refCount = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_163))))));
                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                        __core__equalsInteger(refCount, 1),
                                                                                                                        () -> {
                                                                                                                            ()
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                        __core__equalsString(pendingTypeName, CME_key),
                                                                                                                        () -> {
                                                                                                                            ()
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            error()
                                                                                                                        }
                                                                                                                    )(), (ME_name) -> {
                                                                                                                        (pendingLink) -> {
                                                                                                                            (pendingName) -> {
                                                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                                                    __core__equalsData(__core__listData(ME_policyLink), __core__listData(pendingLink)),
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        error()
                                                                                                                                    }
                                                                                                                                )(), (nextIdPrefix) -> {
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__equalsString(nextIdPrefix, ME_idPrefix),
                                                                                                                                        () -> {
                                                                                                                                            ()
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    )()
                                                                                                                                }(__cond_73 = __core__headList(pdChange);
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_73)), 2),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_165) -> {
                                                                                                                                            idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_165);
                                                                                                                                            __core__chooseUnit(__cond_74 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__tailList(b_16), pendingTypeName);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_74)), 0),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_166) -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__49) -> {
                                                                                                                                                        ()
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_74), idPrefix_6)
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_73)), 0),
                                                                                                                                            () -> {
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                (__48) -> {
                                                                                                                                                    error()
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        )()
                                                                                                                                    }
                                                                                                                                )()(__cond_73)))
                                                                                                                            }((self_35) -> {
                                                                                                                                __core__appendString("'", __core__appendString(self_35, "'"))
                                                                                                                            }(d = __core__headList(pendingLink);
                                                                                                                            __core__decodeUtf8(__core__unBData(d))))
                                                                                                                        }(self_267 = __core__headList(__core__tailList(__core__tailList(pdChange)));
                                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_267)))))
                                                                                                                    }((self_35) -> {
                                                                                                                        __core__appendString("'", __core__appendString(self_35, "'"))
                                                                                                                    }(d = __core__headList(ME_policyLink);
                                                                                                                    __core__decodeUtf8(__core__unBData(d))))))
                                                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_163))));
                                                                                                                __core__decodeUtf8(__core__unBData(d)))
                                                                                                            }(__core__decodeUtf8(__core__unBData(__core__fstPair(head_48))), __core__sndPair(head_48)))
                                                                                                        }
                                                                                                    }
                                                                                                )()(__cond_72), __cond_71 = __core__headList(pdChange);
                                                                                                __core__ifThenElse(
                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_71)), 0),
                                                                                                    () -> {
                                                                                                        (__lhs_0_162) -> {
                                                                                                            (callback_19) -> {
                                                                                                                callback_19(a_17, __core__tailList(b_16))
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__46) -> {
                                                                                                            (callback_18) -> {
                                                                                                                callback_18(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(a_17)(pendingTypeName), __core__tailList(b_16))
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                )()(__cond_71))
                                                                                            }(__cond_70 = __core__headList(__core__tailList(pdChange));
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_70)), 4),
                                                                                                () -> {
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name
                                                                                                },
                                                                                                () -> {
                                                                                                    (__45) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_70))
                                                                                        })
                                                                                    }, (callback_16) -> {
                                                                                        callback_16(previousManifest, nextManifest)
                                                                                    })((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                        __core__equalsData(__core__mapData(nextManifestRemainder), __core__mapData(prevManifestRemainder))
                                                                                    })
                                                                                }
                                                                            )();
                                                                            mintDgtCheck = __core__ifThenElse(
                                                                                b = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_4, true);
                                                                                __core__ifThenElse(
                                                                                    b,
                                                                                    false,
                                                                                    true
                                                                                ),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    mint = __helios__tx__minted(__helios__scriptcontext__tx);
                                                                                    (mintThisPolicy) -> {
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            __core__ifThenElse(
                                                                                                __core__lessThanEqualsInteger(__core__subtractInteger(__helios__common__length(mint), 1), 1),
                                                                                                false,
                                                                                                true
                                                                                            ),
                                                                                            () -> {
                                                                                                error()
                                                                                            },
                                                                                            () -> {
                                                                                                ()
                                                                                            }
                                                                                        )(), observedTokenBurn = __core__ifThenElse(
                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(mintThisPolicy)), 0),
                                                                                            () -> {
                                                                                                (self_262) -> {
                                                                                                    __core__unMapData(__core__headList(__core__sndPair(__core__unConstrData(self_262))))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_169) -> {
                                                                                                    __core__mkNilPairData(())
                                                                                                }
                                                                                            }
                                                                                        )()(mintThisPolicy);
                                                                                        remainingMint = __helios__common__fold(pendingChangesList, (foldingBurn, pcChange_1) -> {
                                                                                            pdChange_1 = __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(pcChange_1)), 0),
                                                                                                () -> {
                                                                                                    (self_144) -> {
                                                                                                        __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_144))))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_171) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()(pcChange_1);
                                                                                            __cond_78 = __core__headList(__core__tailList(pdChange_1));
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_78)), 4),
                                                                                                () -> {
                                                                                                    (__lhs_0_173) -> {
                                                                                                        typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_173);
                                                                                                        __cond_79 = __core__headList(pdChange_1);
                                                                                                        __core__ifThenElse(
                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_79)), 0),
                                                                                                            () -> {
                                                                                                                (__lhs_0_180) -> {
                                                                                                                    foldingBurn
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                (__52) -> {
                                                                                                                    __cond_80 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest, typeName_4);
                                                                                                                    __core__ifThenElse(
                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_80)), 1),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_179) -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_174) -> {
                                                                                                                                __lhs_0_0_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_174)));
                                                                                                                                ME_type_1 = __helios__common__mStruct_field(__lhs_0_0_1, #747065);
                                                                                                                                tn_7 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0_1, #746e));
                                                                                                                                mph_30 = __helios__common__mStruct_field(__lhs_0_0_1, #6d7068);
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_30)), 0),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_178) -> {
                                                                                                                                            foldingBurn
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__53) -> {
                                                                                                                                            __lhs_0_175 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                            refCount_1 = __core__unIData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_175))))));
                                                                                                                                            __cond_82 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn, tn_7);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_82)), 1),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_177) -> {
                                                                                                                                                        error()
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_176) -> {
                                                                                                                                                        burningCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_176))));
                                                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __core__equalsInteger(__core__subtractInteger(0, refCount_1), burningCount),
                                                                                                                                                                false,
                                                                                                                                                                true
                                                                                                                                                            ),
                                                                                                                                                            () -> {
                                                                                                                                                                error()
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                ()
                                                                                                                                                            }
                                                                                                                                                        )(), key_27 = __core__bData(tn_7);
                                                                                                                                                        recurse_99 = (recurse_98, self_261) -> {
                                                                                                                                                            __core__chooseList(self_261, () -> {
                                                                                                                                                                self_261
                                                                                                                                                            }, () -> {
                                                                                                                                                                head_47 = __core__headList__safe(self_261);
                                                                                                                                                                tail_5 = __core__tailList__safe(self_261);
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __core__equalsData(key_27, __core__fstPair(head_47)),
                                                                                                                                                                    () -> {
                                                                                                                                                                        recurse_98(recurse_98, tail_5)
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__mkCons(head_47, recurse_98(recurse_98, tail_5))
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            })()
                                                                                                                                                        };
                                                                                                                                                        recurse_99(recurse_99, foldingBurn))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_82)
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(mph_30)
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_80)
                                                                                                                }
                                                                                                            }
                                                                                                        )()(__cond_79)
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__51) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                }
                                                                                            )()(__cond_78)
                                                                                        }, observedTokenBurn);
                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                            __core__equalsInteger(__helios__common__length(remainingMint), 0),
                                                                                            () -> {
                                                                                                ()
                                                                                            },
                                                                                            () -> {
                                                                                                error()
                                                                                            }
                                                                                        )(), true))
                                                                                    }(key_28 = __core__unBData(__core__headList(__core__tailList(dd)));
                                                                                    __helios__common__map_get(mint, __core__bData(key_28), (x_12) -> {
                                                                                        __core__constrData(0, __core__mkCons(x_12, __core__mkNilData(())))
                                                                                    }, () -> {
                                                                                        __core__constrData(1, __core__mkNilData(()))
                                                                                    }))
                                                                                }
                                                                            )();
                                                                            __core__ifThenElse(
                                                                                mintDgtCheck,
                                                                                () -> {
                                                                                    spendDgtCheck
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )())
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),
                                                                            () -> {
                                                                                (__lhs_0_149) -> {
                                                                                    manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_149)));
                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 0),
                                                                                        () -> {
                                                                                            (__lhs_0_157) -> {
                                                                                                error()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 1),
                                                                                                () -> {
                                                                                                    (__lhs_0_156) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 2),
                                                                                                        () -> {
                                                                                                            (__lhs_0_151) -> {
                                                                                                                (key_31) -> {
                                                                                                                    tokenName_5 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_151)))));
                                                                                                                    charterData_3 = __helios__common__assert_constr_index(__common0, 0);
                                                                                                                    nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_1, cctx_4);
                                                                                                                    __common15 = __core__tailList(__helios__common__enum_fields_after_4(nextCharterData));
                                                                                                                    __common16 = __core__headList(__common15);
                                                                                                                    __common17 = __core__unMapData(__common16);
                                                                                                                    (refInput) -> {
                                                                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                                                                            __core__equalsData(refInput, refInput),
                                                                                                                            () -> {
                                                                                                                                ()
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                error()
                                                                                                                            }
                                                                                                                        )(), __core__chooseUnit(__cond_66 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common17, key_31);
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_66)), 1),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_155) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_152) -> {
                                                                                                                                    __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_152)));
                                                                                                                                    entryType = __helios__common__mStruct_field(__lhs_0_0, #747065);
                                                                                                                                    tn_6 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0, #746e));
                                                                                                                                    mph_29 = __helios__common__mStruct_field(__lhs_0_0, #6d7068);
                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        __core__equalsByteString(tn_6, tokenName_5),
                                                                                                                                        () -> {
                                                                                                                                            ()
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    )(), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_29)), 0),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_154) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__44) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(mph_29), __core__ifThenElse(
                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_153) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__43) -> {
                                                                                                                                                error()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(entryType)))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_66), (cond) -> {
                                                                                                                            __core__ifThenElse(
                                                                                                                                cond,
                                                                                                                                () -> {
                                                                                                                                    ()
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            )()
                                                                                                                        }(self_270 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));
                                                                                                                        __core__equalsData(__core__mapData(self_270), __core__mapData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__common17)(key_31))))))
                                                                                                                    }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_4, tokenName_5);
                                                                                                                    (__cond_37) -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_37)), 1),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_71) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (self_21) -> {
                                                                                                                                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(__cond_37)
                                                                                                                    }(self_136 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));
                                                                                                                    __helios__common__find_safe(self_136, hasDD)))
                                                                                                                }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_151)));
                                                                                                                __core__decodeUtf8(__core__unBData(d)))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 3),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_150) -> {
                                                                                                                        error()
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__42) -> {
                                                                                                                        ()
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()(manifestActivity), true)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),
                                                                                    () -> {
                                                                                        (__lhs_0_148) -> {
                                                                                            error()
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__lhs_0_147) -> {
                                                                                            error()
                                                                                        }
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()(dCLA),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            false
                                        }
                                    )())
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 5),
                                    () -> {
                                        (__lhs_0_141) -> {
                                            seed_5 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_141)));
                                            (dDataTypeName_1) -> {
                                                cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx);
                                                __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_3, false);
                                                __core__ifThenElse(
                                                    cond,
                                                    () -> {
                                                        ()
                                                    },
                                                    () -> {
                                                        error()
                                                    }
                                                )(), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1, cctx_3, dDataTypeName_1);
                                                tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                (purpose_4) -> {
                                                    newDataId_1 = __core__encodeUtf8(tnFactory(purpose_4));
                                                    __core__ifThenElse(
                                                        __core__ifThenElse(
                                                            __core__ifThenElse(
                                                                __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_4)), __core__mkNilData(())), true, tnFactory, false, ()),
                                                                () -> {
                                                                    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1, cctx_3, newDataId_1, dDataTypeName_1)
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )(),
                                                            () -> {
                                                                true
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )(),
                                                        () -> {
                                                            (self_184) -> {
                                                                true
                                                            }(__cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(policyDelegateInput);
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_17)), 3),
                                                                () -> {
                                                                    (__lhs_0_30) -> {
                                                                        ma_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_30)));
                                                                        __core__chooseUnit(__core__ifThenElse(
                                                                            __core__chooseData(ma_1, () -> {
                                                                                true
                                                                            }, () -> {
                                                                                false
                                                                            }, () -> {
                                                                                false
                                                                            }, () -> {
                                                                                false
                                                                            }, () -> {
                                                                                false
                                                                            })(),
                                                                            () -> {
                                                                                (__lhs_0_31) -> {
                                                                                    fields_72 = __core__sndPair(__core__unConstrData(__lhs_0_31));
                                                                                    cond = __core__equalsData(seed_5, __core__chooseList(fields_72, () -> {
                                                                                        error()
                                                                                    }, () -> {
                                                                                        __core__headList__safe(fields_72)
                                                                                    })());
                                                                                    __core__ifThenElse(
                                                                                        cond,
                                                                                        () -> {
                                                                                            ()
                                                                                        },
                                                                                        () -> {
                                                                                            error()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__21) -> {
                                                                                    error()
                                                                                }
                                                                            }
                                                                        )()(ma_1), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(policyDelegateInput))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_17)), 8),
                                                                        () -> {
                                                                            (__lhs_0_27) -> {
                                                                                activities = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_27))));
                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__ifThenElse(
                                                                                        __core__lessThanEqualsInteger(__helios__common__length(activities), 0),
                                                                                        false,
                                                                                        true
                                                                                    ),
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), foundWithThisSeed = __helios__common__filter(activities, (a_14) -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(a_14)), 3),
                                                                                        () -> {
                                                                                            (__lhs_0_28) -> {
                                                                                                ma = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_28)));
                                                                                                __core__ifThenElse(
                                                                                                    __core__chooseData(ma, () -> {
                                                                                                        true
                                                                                                    }, () -> {
                                                                                                        false
                                                                                                    }, () -> {
                                                                                                        false
                                                                                                    }, () -> {
                                                                                                        false
                                                                                                    }, () -> {
                                                                                                        false
                                                                                                    })(),
                                                                                                    () -> {
                                                                                                        (__lhs_0_29) -> {
                                                                                                            fields_71 = __core__sndPair(__core__unConstrData(__lhs_0_29));
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsData(seed_5, __core__headList(fields_71)),
                                                                                                                () -> {
                                                                                                                    true
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    false
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__20) -> {
                                                                                                            error()
                                                                                                        }
                                                                                                    }
                                                                                                )()(ma)
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__19) -> {
                                                                                                false
                                                                                            }
                                                                                        }
                                                                                    )()(a_14)
                                                                                }, __core__mkNilData(()));
                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__ifThenElse(
                                                                                        __core__lessThanEqualsInteger(__helios__common__length(foundWithThisSeed), 0),
                                                                                        false,
                                                                                        true
                                                                                    ),
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__equalsInteger(__helios__common__length(foundWithThisSeed), 1),
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(policyDelegateInput))))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__18) -> {
                                                                                error()
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_17))
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }(self_271 = __core__headList(__core__tailList(__core__tailList(policyDelegateInput)));
                                                d = __core__headList(__core__sndPair(__core__unConstrData(self_271)));
                                                __core__decodeUtf8(__core__unBData(d))))
                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_141))));
                                            __core__decodeUtf8(__core__unBData(d)))
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 6),
                                            () -> {
                                                (__lhs_0_140) -> {
                                                    dDataTypeName = __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_140);
                                                    recId_5 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_140)))));
                                                    cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx);
                                                    __core__chooseUnit(cond = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx_2, false);
                                                    __core__ifThenElse(
                                                        cond,
                                                        () -> {
                                                            ()
                                                        },
                                                        () -> {
                                                            error()
                                                        }
                                                    )(), __core__chooseUnit((cond) -> {
                                                        ()
                                                    }((self_184) -> {
                                                        true
                                                    }(self_182 = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1, cctx_2, dDataTypeName);
                                                    __core__chooseUnit((group, __useopt__collapsed, collapsed) -> {
                                                        ()
                                                    }(__cond_25 = __core__headList(__core__tailList(self_182));
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_25)), 4),
                                                        () -> {
                                                            (__lhs_0_41) -> {
                                                                "finding unique spending activity for a delegated-data policy"
                                                            }
                                                        },
                                                        () -> {
                                                            (__26) -> {
                                                                error()
                                                            }
                                                        }
                                                    )()(__cond_25), false, ()), __cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(self_182);
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_21)), 2),
                                                        () -> {
                                                            (__lhs_0_39) -> {
                                                                sa_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_39)));
                                                                __core__chooseUnit(__core__ifThenElse(
                                                                    __core__chooseData(sa_1, () -> {
                                                                        true
                                                                    }, () -> {
                                                                        false
                                                                    }, () -> {
                                                                        false
                                                                    }, () -> {
                                                                        false
                                                                    }, () -> {
                                                                        false
                                                                    })(),
                                                                    () -> {
                                                                        (__lhs_0_40) -> {
                                                                            index_12 = __core__fstPair(__core__unConstrData(__lhs_0_40));
                                                                            fields_74 = __core__sndPair(__core__unConstrData(__lhs_0_40));
                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                __core__equalsInteger(index_12, index_12),
                                                                                () -> {
                                                                                    ()
                                                                                },
                                                                                () -> {
                                                                                    error()
                                                                                }
                                                                            )(), foundRecId_1 = __core__unBData(__core__headList(fields_74));
                                                                            __core__ifThenElse(
                                                                                __core__ifThenElse(
                                                                                    __core__equalsByteString(recId_5, foundRecId_1),
                                                                                    false,
                                                                                    true
                                                                                ),
                                                                                () -> {
                                                                                    error()
                                                                                },
                                                                                () -> {
                                                                                    ()
                                                                                }
                                                                            )())
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__25) -> {
                                                                            error()
                                                                        }
                                                                    }
                                                                )()(sa_1), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(self_182))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_21)), 9),
                                                                () -> {
                                                                    (__lhs_0_38) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_21)), 8),
                                                                        () -> {
                                                                            (__lhs_0_32) -> {
                                                                                activities_1 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_32))));
                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__ifThenElse(
                                                                                        __core__lessThanEqualsInteger(__helios__common__length(activities_1), 0),
                                                                                        false,
                                                                                        true
                                                                                    ),
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), actsOnThisRecord = __helios__common__filter(activities_1, (a_15) -> {
                                                                                    __core__ifThenElse(
                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 5),
                                                                                        () -> {
                                                                                            (__lhs_0_37) -> {
                                                                                                error()
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 6),
                                                                                                () -> {
                                                                                                    (__lhs_0_36) -> {
                                                                                                        error()
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 7),
                                                                                                        () -> {
                                                                                                            (__lhs_0_35) -> {
                                                                                                                error()
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(a_15)), 2),
                                                                                                                () -> {
                                                                                                                    (__lhs_0_33) -> {
                                                                                                                        sa = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_33)));
                                                                                                                        __core__ifThenElse(
                                                                                                                            __core__chooseData(sa, () -> {
                                                                                                                                true
                                                                                                                            }, () -> {
                                                                                                                                false
                                                                                                                            }, () -> {
                                                                                                                                false
                                                                                                                            }, () -> {
                                                                                                                                false
                                                                                                                            }, () -> {
                                                                                                                                false
                                                                                                                            })(),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_34) -> {
                                                                                                                                    index_11 = __core__fstPair(__core__unConstrData(__lhs_0_34));
                                                                                                                                    fields_73 = __core__sndPair(__core__unConstrData(__lhs_0_34));
                                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                                        __core__equalsInteger(index_11, index_11),
                                                                                                                                        () -> {
                                                                                                                                            ()
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            error()
                                                                                                                                        }
                                                                                                                                    )(), foundRecId = __core__unBData(__core__headList(fields_73));
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __core__equalsByteString(recId_5, foundRecId),
                                                                                                                                            false,
                                                                                                                                            true
                                                                                                                                        ),
                                                                                                                                        () -> {
                                                                                                                                            error()
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            true
                                                                                                                                        }
                                                                                                                                    )())
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__24) -> {
                                                                                                                                    error()
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()(sa)
                                                                                                                    }
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    (__23) -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                }
                                                                                                            )()
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()(a_15)
                                                                                }, __core__mkNilData(()));
                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__ifThenElse(
                                                                                        __core__lessThanEqualsInteger(__helios__common__length(actsOnThisRecord), 0),
                                                                                        false,
                                                                                        true
                                                                                    ),
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), __core__chooseUnit(__core__ifThenElse(
                                                                                    __core__equalsInteger(__helios__common__length(actsOnThisRecord), 1),
                                                                                    () -> {
                                                                                        ()
                                                                                    },
                                                                                    () -> {
                                                                                        error()
                                                                                    }
                                                                                )(), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2(self_182))))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__22) -> {
                                                                                error()
                                                                            }
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()(__cond_21)))), (inputDD) -> {
                                                        __core__chooseUnit(__core__ifThenElse(
                                                            __core__equalsData(inputDD, inputDD),
                                                            () -> {
                                                                ()
                                                            },
                                                            () -> {
                                                                error()
                                                            }
                                                        )(), __core__chooseUnit(__core__ifThenElse(
                                                            __core__equalsString("settings", dDataTypeName),
                                                            () -> {
                                                                (curSettingsId) -> {
                                                                    ()
                                                                }((self_272) -> {
                                                                    __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_272))))
                                                                }((oe) -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(oe)), 1),
                                                                        () -> {
                                                                            (__lhs_0_59) -> {
                                                                                error()
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            (__lhs_0_58) -> {
                                                                                e_1 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_58)));
                                                                                some_2 = __core__unBData(__helios__common__mStruct_field(e_1, #746e));
                                                                                __core__constrData(0, __core__mkCons(__core__bData(some_2), __core__mkNilData(())))
                                                                            }
                                                                        }
                                                                    )()(oe)
                                                                }(charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_2), 0);
                                                                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData)))), "currentSettings"))))
                                                            },
                                                            () -> {
                                                                ()
                                                            }
                                                        )(), __core__ifThenElse(
                                                            __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1, cctx_2, recId_5, dDataTypeName),
                                                            () -> {
                                                                true
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()))
                                                    }(hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(cctx_2, recId_5);
                                                    (__cond_38) -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_38)), 1),
                                                            () -> {
                                                                (__lhs_0_73) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                (__lhs_0_72) -> {
                                                                    __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_72)))
                                                                }
                                                            }
                                                        )()(__cond_38)
                                                    }(self_136 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));
                                                    __helios__common__find_safe(self_136, hasDD_1)))))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 7),
                                                    () -> {
                                                        (__lhs_0_138) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 2),
                                                            () -> {
                                                                (__lhs_0_137) -> {
                                                                    true
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),
                                                                    () -> {
                                                                        (__lhs_0_136) -> {
                                                                            true
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 4),
                                                                            () -> {
                                                                                (__lhs_0_135) -> {
                                                                                    true
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__lhs_0_134) -> {
                                                                                    true
                                                                                }
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()
                    }
                )()
            }
        )()(activity_3);
        __core__chooseUnit(__core__ifThenElse(
            checkNonDelegatedActivities,
            () -> {
                ()
            },
            () -> {
                error()
            }
        )(), __module__StellarHeliosHelpers__bREQTgroup(__core__ifThenElse(
            __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, baseCctx, true),
            () -> {
                "mintDgt: additionalDelegateValidation in STokMintDelegate"
            },
            () -> {
                __core__ifThenElse(
                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7, baseCctx, true),
                    () -> {
                        "spendDgt: additionalDelegateValidation in STokMintDelegate"
                    },
                    () -> {
                        "STokMintDelegate: additionalDelegateValidation()"
                    }
                )()
            }
        )(), false, () -> {
            cctx = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1, baseCctx);
            (mph_28) -> {
                __core__ifThenElse(
                    __core__ifThenElse(
                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 1),
                        () -> {
                            (__lhs_0_131) -> {
                                true
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 0),
                                () -> {
                                    (__lhs_0_127) -> {
                                        CLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_127)));
                                        __core__ifThenElse(
                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(CLA)), 0),
                                            () -> {
                                                (__lhs_0_128) -> {
                                                    error()
                                                }
                                            },
                                            () -> {
                                                (__39) -> {
                                                    true
                                                }
                                            }
                                        )()(CLA)
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 3),
                                        () -> {
                                            (__lhs_0_122) -> {
                                                ma_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_122)));
                                                __core__chooseUnit((cond) -> {
                                                    ()
                                                }(self_221 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx);
                                                true), __core__ifThenElse(
                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(ma_2)), 0),
                                                    () -> {
                                                        (__lhs_0_126) -> {
                                                            seed_3 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_126)));
                                                            __module__CapoMintHelpers__validateUutMinting(mph_28, seed_3, __core__mkCons(__core__bData(#6d656d626572), __core__mkNilData(())), false, (), false, ())
                                                        }
                                                    },
                                                    () -> {
                                                        (__lhs_0_123) -> {
                                                            tokenName_4 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_123))));
                                                            __core__chooseUnit((cond) -> {
                                                                ()
                                                            }(self_221 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7, cctx);
                                                            true), ourMint = __helios__value__get_policy(__helios__tx__minted(__helios__scriptcontext__tx), mph_28);
                                                            tn_5 = __core__decodeUtf8(tokenName_4);
                                                            __core__chooseUnit(__cond_58 = __helios__map[__helios__bytearray@__helios__int]__get_safe(ourMint, tokenName_4);
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_58)), 1),
                                                                () -> {
                                                                    (__lhs_0_125) -> {
                                                                        error()
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_124) -> {
                                                                        n_6 = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_124))));
                                                                        ()
                                                                    }
                                                                }
                                                            )()(__cond_58), __core__chooseUnit(__core__ifThenElse(
                                                                __core__equalsInteger(__helios__common__length(ourMint), 1),
                                                                () -> {
                                                                    ()
                                                                },
                                                                () -> {
                                                                    error()
                                                                }
                                                            )(), true)))
                                                        }
                                                    }
                                                )()(ma_2))
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 5),
                                                () -> {
                                                    (__lhs_0_121) -> {
                                                        (dataType_2) -> {
                                                            true
                                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_121))));
                                                        __core__decodeUtf8(__core__unBData(d)))
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 6),
                                                        () -> {
                                                            (__lhs_0_120) -> {
                                                                dataType_1 = __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_120);
                                                                true
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 7),
                                                                () -> {
                                                                    (__lhs_0_119) -> {
                                                                        (dataType) -> {
                                                                            true
                                                                        }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_119)));
                                                                        __core__decodeUtf8(__core__unBData(d)))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 8),
                                                                        () -> {
                                                                            (__lhs_0_118) -> {
                                                                                true
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_3)), 9),
                                                                                () -> {
                                                                                    (__lhs_0_117) -> {
                                                                                        error()
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__38) -> {
                                                                                        error()
                                                                                    }
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()(activity_3),
                    () -> {
                        true
                    },
                    () -> {
                        __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(dgtionDatum))
                    }
                )()
            }(self_145 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(dgtionDatum))));
            __core__unBData(__core__headList(__core__tailList(self_145))))
        }))
    };
    __core__ifThenElse(
        __core__ifThenElse(
            __core__equalsInteger(__common6, 2),
            () -> {
                (__lhs_0_272) -> {
                    error()
                }
            },
            () -> {
                __core__ifThenElse(
                    __core__equalsInteger(__common6, 1),
                    () -> {
                        (isD) -> {
                            dd_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(isD))));
                            __core__chooseUnit((cond) -> {
                                __core__ifThenElse(
                                    cond,
                                    () -> {
                                        ()
                                    },
                                    () -> {
                                        error()
                                    }
                                )()
                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));
                            __core__ifThenElse(
                                __core__equalsByteString(self, #01),
                                false,
                                true
                            )), __core__chooseUnit((cond) -> {
                                __core__ifThenElse(
                                    cond,
                                    () -> {
                                        ()
                                    },
                                    () -> {
                                        error()
                                    }
                                )()
                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));
                            __core__ifThenElse(
                                __core__equalsByteString(self, #67656e6572616c),
                                false,
                                true
                            )), __core__chooseUnit((cond) -> {
                                __core__ifThenElse(
                                    cond,
                                    () -> {
                                        ()
                                    },
                                    () -> {
                                        error()
                                    }
                                )()
                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));
                            __core__ifThenElse(
                                __core__equalsByteString(self, #53546f6b4d696e7444656c6567617465),
                                false,
                                true
                            )), __core__chooseUnit(msg_1 = __helios__value__show(self_20 = __helios__scriptcontext__get_current_input();
                            self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_20))));
                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))));
                            (), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1, mph_25 = __core__unBData(__core__headList(__core__tailList(dd_2)));
                            __core__mkCons(__core__bData(mph_25), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));
                            __module__BasicDelegate__checkOneActivity_1(__module__BasicDelegate__checkOneActivity_1, isD, __REDEEMER, dd_2, cctx_7)))))
                        }
                    },
                    () -> {
                        __common9 = __core__unConstrData(__REDEEMER);
                        __common10 = __core__fstPair(__common9);
                        __common11 = __core__equalsInteger(__common10, 1);
                        (__76) -> {
                            __core__ifThenElse(
                                __common11,
                                () -> {
                                    (__lhs_0_271) -> {
                                        error()
                                    }
                                },
                                () -> {
                                    __common12 = __core__equalsInteger(__common10, 0);
                                    __core__ifThenElse(
                                        __common12,
                                        () -> {
                                            (__lhs_0_270) -> {
                                                error()
                                            }
                                        },
                                        () -> {
                                            (__77) -> {
                                                __core__ifThenElse(
                                                    __common11,
                                                    () -> {
                                                        (__lhs_0_133) -> {
                                                            error()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __common12,
                                                            () -> {
                                                                (__lhs_0_132) -> {
                                                                    error()
                                                                }
                                                            },
                                                            () -> {
                                                                (__40) -> {
                                                                    false
                                                                }
                                                            }
                                                        )()
                                                    }
                                                )()(__REDEEMER)
                                            }
                                        }
                                    )()
                                }
                            )()(__REDEEMER)
                        }
                    }
                )()
            }
        )()(__DATUM),
        () -> {
            ()
        },
        () -> {
            error()
        }
    )()
}`, "unoptimizedIR": `(__DATUM, __REDEEMER, __CONTEXT) -> {
    __helios__error = (msg) -> {
        __core__trace(msg, () -> {
            error()
        })()
    };
    __helios__print = (msg_1) -> {
        __core__trace(msg_1, ())
    };
    __helios__string____add = __core__appendString;
    __helios__assert = (cond, msg_2) -> {
        __core__ifThenElse(
            cond,
            () -> {
                ()
            },
            () -> {
                __core__trace(msg_2, () -> {
                    error()
                })()
            }
        )()
    };
    __helios__bool____not = (b) -> {
        __core__ifThenElse(
            b,
            false,
            true
        )
    };
    __helios__bytearray____eq = __core__equalsByteString;
    __helios__bytearray____neq = (self, other) -> {
        __helios__bool____not(__helios__bytearray____eq(self, other))
    };
    __helios__int____to_data = __core__iData;
    __helios__int__serialize = (self_1) -> {
        () -> {
            __core__serialiseData(__helios__int____to_data(self_1))
        }
    };
    __helios__string__encode_utf8 = (self_2) -> {
        () -> {
            __core__encodeUtf8(self_2)
        }
    };
    __helios__common__fold = (self_3, fn, z) -> {
        recurse_1 = (recurse, self_4, z_1) -> {
            __core__chooseList(self_4, () -> {
                z_1
            }, () -> {
                recurse(recurse, __core__tailList__safe(self_4), fn(z_1, __core__headList__safe(self_4)))
            })()
        };
        recurse_1(recurse_1, self_3, z)
    };
    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {
        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {
            callback_ok(__core__unBData__safe(data))
        })()
    };
    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;
    __helios__int__to_hex = (self_5) -> {
        () -> {
            recurse_3 = (recurse_2) -> {
                (self_6, bytes) -> {
                    digit = __core__modInteger(self_6, 16);
                    bytes_1 = __core__consByteString(__core__ifThenElse(
                        __core__lessThanInteger(digit, 10),
                        __core__addInteger(digit, 48),
                        __core__addInteger(digit, 87)
                    ), bytes);
                    __core__ifThenElse(
                        __core__lessThanInteger(self_6, 16),
                        () -> {
                            bytes_1
                        },
                        () -> {
                            recurse_2(recurse_2)(__core__divideInteger(self_6, 16), bytes_1)
                        }
                    )()
                }
            };
            __core__decodeUtf8__safe(__core__ifThenElse(
                __core__lessThanInteger(self_5, 0),
                () -> {
                    __core__consByteString(45, recurse_3(recurse_3)(__core__multiplyInteger(self_5, -1), #))
                },
                () -> {
                    recurse_3(recurse_3)(self_5, #)
                }
            )())
        }
    };
    __helios__bytearray__show = (self_7) -> {
        () -> {
            recurse_5 = (recurse_4, self_8) -> {
                n = __core__lengthOfByteString(self_8);
                __core__ifThenElse(
                    __core__lessThanInteger(0, n),
                    () -> {
                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_8, 0))());
                        __core__ifThenElse(
                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),
                            __core__consByteString(48, hex_bytes),
                            hex_bytes
                        )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_8)))
                    },
                    () -> {
                        ""
                    }
                )()
            };
            recurse_5(recurse_5, self_7)
        }
    };
    __helios__mintingpolicyhash__show = __helios__bytearray__show;
    __helios__common__unMapData__safe = (data_1, callback_ok_1, callback_nok_1) -> {
        __core__chooseData(data_1, callback_nok_1, () -> {
            callback_ok_1(__core__unMapData__safe(data_1))
        }, callback_nok_1, callback_nok_1, callback_nok_1)()
    };
    __helios__common__unIData__safe = (data_2, callback_ok_2, callback_nok_2) -> {
        __core__chooseData(data_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {
            callback_ok_2(__core__unIData__safe(data_2))
        }, callback_nok_2)()
    };
    __helios__bool__and = (a, b_1) -> {
        __core__ifThenElse(
            a(),
            () -> {
                b_1()
            },
            () -> {
                false
            }
        )()
    };
    __helios__int__show_digit = (x) -> {
        __core__addInteger(__core__modInteger(x, 10), 48)
    };
    __helios__int__show = (self_9) -> {
        () -> {
            __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {
                bytes_3 = __core__consByteString(__helios__int__show_digit(i), bytes_2);
                __core__ifThenElse(
                    __core__lessThanInteger(i, 10),
                    () -> {
                        bytes_3
                    },
                    () -> {
                        recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)
                    }
                )()
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_9, 0),
                () -> {
                    __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_9, -1), #))
                },
                () -> {
                    recurse_7(recurse_7, self_9, #)
                }
            )())
        }
    };
    __helios__real__ONE = 1000000;
    __helios__real__floor = (self_10) -> {
        () -> {
            __core__divideInteger(self_10, __helios__real__ONE)
        }
    };
    __helios__int__abs = (self_11) -> {
        () -> {
            __core__ifThenElse(
                __core__lessThanInteger(self_11, 0),
                () -> {
                    __core__multiplyInteger(self_11, -1)
                },
                () -> {
                    self_11
                }
            )()
        }
    };
    __helios__real__abs = __helios__int__abs;
    __helios__int__show_padded = (self_12, n_1) -> {
        recurse_9 = (recurse_8, x_1, pos, bytes_4) -> {
            __core__ifThenElse(
                __core__equalsInteger(x_1, 0),
                () -> {
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(n_1, pos),
                        () -> {
                            bytes_4
                        },
                        () -> {
                            recurse_8(recurse_8, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_4))
                        }
                    )()
                },
                () -> {
                    recurse_8(recurse_8, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_4))
                }
            )()
        };
        recurse_9(recurse_9, self_12, 0, #)
    };
    __helios__int____mod = __core__modInteger;
    __helios__real__PRECISION = 6;
    __helios__real__show = (self_13) -> {
        () -> {
            show_positive = (x_2) -> {
                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(".", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))
            };
            __core__ifThenElse(
                __core__lessThanInteger(self_13, 0),
                () -> {
                    __helios__string____add("-", show_positive(__core__multiplyInteger(self_13, -1)))
                },
                () -> {
                    show_positive(self_13)
                }
            )()
        }
    };
    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__divideInteger(byte, 64), 2),
            () -> {
                callback(true, __core__modInteger(byte, 64))
            },
            () -> {
                callback(false, 0)
            }
        )()
    };
    __helios__string__is_valid_utf8 = (bytes_5) -> {
        n_2 = __core__lengthOfByteString(bytes_5);
        recurse_11 = (recurse_10, i_1) -> {
            __core__ifThenElse(
                __core__equalsInteger(i_1, n_2),
                () -> {
                    true
                },
                () -> {
                    b0 = __core__indexByteString__safe(bytes_5, i_1);
                    __core__ifThenElse(
                        __core__lessThanEqualsInteger(b0, 127),
                        () -> {
                            recurse_10(recurse_10, __core__addInteger(i_1, 1))
                        },
                        () -> {
                            __core__ifThenElse(
                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),
                                () -> {
                                    inext_2 = __core__addInteger(i_1, 2);
                                    __core__ifThenElse(
                                        __core__lessThanEqualsInteger(inext_2, n_2),
                                        () -> {
                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {
                                                __core__ifThenElse(
                                                    valid_5,
                                                    () -> {
                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);
                                                        __core__ifThenElse(
                                                            __helios__bool__and(() -> {
                                                                __core__lessThanEqualsInteger(128, c_2)
                                                            }, () -> {
                                                                __core__lessThanEqualsInteger(c_2, 2047)
                                                            }),
                                                            () -> {
                                                                recurse_10(recurse_10, inext_2)
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    },
                                                    () -> {
                                                        false
                                                    }
                                                )()
                                            })
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),
                                        () -> {
                                            inext_1 = __core__addInteger(i_1, 3);
                                            __core__ifThenElse(
                                                __core__lessThanEqualsInteger(inext_1, n_2),
                                                () -> {
                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {
                                                        __core__ifThenElse(
                                                            valid_3,
                                                            () -> {
                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {
                                                                    __core__ifThenElse(
                                                                        valid_4,
                                                                        () -> {
                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));
                                                                            __core__ifThenElse(
                                                                                __helios__bool__and(() -> {
                                                                                    __core__lessThanEqualsInteger(2048, c_1)
                                                                                }, () -> {
                                                                                    __core__lessThanEqualsInteger(c_1, 65535)
                                                                                }),
                                                                                () -> {
                                                                                    recurse_10(recurse_10, inext_1)
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                })
                                                            },
                                                            () -> {
                                                                false
                                                            }
                                                        )()
                                                    })
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),
                                                () -> {
                                                    inext = __core__addInteger(i_1, 4);
                                                    __core__ifThenElse(
                                                        __core__lessThanEqualsInteger(inext, n_2),
                                                        () -> {
                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {
                                                                __core__ifThenElse(
                                                                    valid,
                                                                    () -> {
                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {
                                                                            __core__ifThenElse(
                                                                                valid_1,
                                                                                () -> {
                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {
                                                                                        __core__ifThenElse(
                                                                                            valid_2,
                                                                                            () -> {
                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __core__lessThanEqualsInteger(65536, c)
                                                                                                    }, () -> {
                                                                                                        __core__lessThanEqualsInteger(c, 2097151)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        recurse_10(recurse_10, inext)
                                                                                                    },
                                                                                                    () -> {
                                                                                                        false
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        };
        recurse_11(recurse_11, 0)
    };
    __helios__bytearray__decode_utf8_safe = (self_14) -> {
        () -> {
            __core__ifThenElse(
                __helios__string__is_valid_utf8(self_14),
                () -> {
                    __core__decodeUtf8__safe(self_14)
                },
                () -> {
                    __helios__bytearray__show(self_14)()
                }
            )()
        }
    };
    __helios__value__show = (self_15) -> {
        (__useopt__ada, ada) -> {
            __helios__common__fold(self_15, (prev, pair) -> {
                mph_data = __core__fstPair(pair);
                tokens_data = __core__sndPair(pair);
                __helios__string____add(prev, __helios__common__unBData__safe(mph_data, (mph) -> {
                    __helios__string____add(__core__ifThenElse(
                        __helios__mintingpolicyhash____eq(mph, #),
                        () -> {
                            ""
                        },
                        () -> {
                            __helios__string____add(__helios__mintingpolicyhash__show(mph)(), "
")
                        }
                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {
                        __helios__common__fold(tokens, (prev_1, pair_1) -> {
                            token_name_data = __core__fstPair(pair_1);
                            qty_data = __core__sndPair(pair_1);
                            __helios__common__unBData__safe(token_name_data, (token_name) -> {
                                __helios__common__unIData__safe(qty_data, (qty) -> {
                                    __core__ifThenElse(
                                        __helios__mintingpolicyhash____eq(mph, #),
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__bool__and(() -> {
                                                    __useopt__ada
                                                }, () -> {
                                                    ada
                                                }),
                                                () -> {
                                                    __helios__string____add("ada ", __helios__string____add(__helios__real__show(qty)(), "
"))
                                                },
                                                () -> {
                                                    __helios__string____add("lovelace ", __helios__string____add(__helios__int__show(qty)(), "
"))
                                                }
                                            )()
                                        },
                                        () -> {
                                            __helios__string____add("  .", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name)(), __helios__string____add(" ", __helios__string____add(__helios__int__show(qty)(), "
"))))
                                        }
                                    )()
                                }, () -> {
                                    ""
                                })
                            }, () -> {
                                ""
                            })
                        }, prev)
                    }, () -> {
                        ""
                    }))
                }, () -> {
                    ""
                }))
            }, "")
        }
    };
    __helios__common__enum_fields = (self_16) -> {
        __core__sndPair(__core__unConstrData(self_16))
    };
    __helios__common__enum_fields_after_0 = (self_17) -> {
        __core__tailList(__helios__common__enum_fields(self_17))
    };
    __helios__common__enum_field_1 = (self_18) -> {
        __core__headList(__helios__common__enum_fields_after_0(self_18))
    };
    __helios__txoutput__value = (self_19) -> {
        __core__unMapData(__helios__common__enum_field_1(self_19))
    };
    __helios__txinput__output = __helios__common__enum_field_1;
    __helios__txinput__value = (self_20) -> {
        __helios__txoutput__value(__helios__txinput__output(self_20))
    };
    __helios__common__enum_field_0 = (self_21) -> {
        __core__headList(__helios__common__enum_fields(self_21))
    };
    __helios__scriptcontext__data = __CONTEXT;
    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);
    __helios__scriptcontext__get_spending_purpose_output_id = () -> {
        __helios__common__enum_field_0(__helios__scriptcontext__purpose)
    };
    __helios__txinput__output_id = __helios__common__enum_field_0;
    __helios__tx__inputs = (self_22) -> {
        __core__unListData(__helios__common__enum_field_0(self_22))
    };
    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);
    __helios__scriptcontext__get_current_input = () -> {
        id = __helios__scriptcontext__get_spending_purpose_output_id();
        recurse_13 = (recurse_12, lst) -> {
            __core__chooseList(lst, () -> {
                __helios__error("not found")
            }, () -> {
                item = __core__headList__safe(lst);
                __core__ifThenElse(
                    __core__equalsData(__helios__txinput__output_id(item), id),
                    () -> {
                        item
                    },
                    () -> {
                        recurse_12(recurse_12, __core__tailList__safe(lst))
                    }
                )()
            })()
        };
        recurse_13(recurse_13, __helios__tx__inputs(__helios__scriptcontext__tx))
    };
    __helios__bool__or = (a_1, b_2) -> {
        __core__ifThenElse(
            a_1(),
            () -> {
                true
            },
            () -> {
                b_2()
            }
        )()
    };
    __helios__string____to_data = (s) -> {
        __core__bData(__core__encodeUtf8(s))
    };
    __helios__value__ZERO = __core__mkNilPairData(());
    __helios__value__new = (assetClass, i_2) -> {
        __core__ifThenElse(
            __core__equalsInteger(0, i_2),
            () -> {
                __helios__value__ZERO
            },
            () -> {
                mph_1 = __helios__common__enum_field_0(assetClass);
                tokenName = __helios__common__enum_field_1(assetClass);
                __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i_2)), __core__mkNilPairData(())))), __core__mkNilPairData(()))
            }
        )()
    };
    __helios__common__list_0 = __core__mkNilData(());
    __helios__common__list_1 = (a_2) -> {
        __core__mkCons(a_2, __helios__common__list_0)
    };
    __helios__common__list_2 = (arg0, arg1) -> {
        __core__mkCons(arg0, __helios__common__list_1(arg1))
    };
    __helios__bytearray____to_data = __core__bData;
    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;
    __helios__assetclass__new = (mph_2, token_name_1) -> {
        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_2), __helios__bytearray____to_data(token_name_1)))
    };
    __helios__int____neg = (self_23) -> {
        __core__multiplyInteger(self_23, -1)
    };
    __helios__int____eq = __core__equalsInteger;
    __helios__value__get = (self_24) -> {
        (assetClass_1) -> {
            mph_3 = __helios__common__enum_field_0(assetClass_1);
            tokenName_1 = __helios__common__enum_field_1(assetClass_1);
            outer_1 = (outer, inner, map) -> {
                __core__chooseList(map, () -> {
                    __helios__error(__helios__string____add(__helios__string____add("policy ", __helios__mintingpolicyhash__show(__core__unBData(mph_3))()), " not found"))
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_3),
                        () -> {
                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))
                        },
                        () -> {
                            outer(outer, inner, __core__tailList__safe(map))
                        }
                    )()
                })()
            };
            inner_2 = (inner_1, map_1) -> {
                __core__chooseList(map_1, () -> {
                    __helios__error("tokenName not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))
                        },
                        () -> {
                            inner_1(inner_1, __core__tailList__safe(map_1))
                        }
                    )()
                })()
            };
            outer_1(outer_1, inner_2, self_24)
        }
    };
    __helios__common__enum_fields_after_1 = (self_25) -> {
        __core__tailList(__helios__common__enum_fields_after_0(self_25))
    };
    __helios__common__enum_fields_after_2 = (self_26) -> {
        __core__tailList(__helios__common__enum_fields_after_1(self_26))
    };
    __helios__common__enum_fields_after_3 = (self_27) -> {
        __core__tailList(__helios__common__enum_fields_after_2(self_27))
    };
    __helios__common__enum_field_4 = (self_28) -> {
        __core__headList(__helios__common__enum_fields_after_3(self_28))
    };
    __helios__tx__minted = (self_29) -> {
        __core__unMapData(__helios__common__enum_field_4(self_29))
    };
    __helios__common__assert_constr_index = (data_3, i_3) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_3)), i_3),
            () -> {
                data_3
            },
            () -> {
                __helios__error("unexpected constructor index")
            }
        )()
    };
    __helios__string____eq = __core__equalsString;
    __helios__common____eq = __core__equalsData;
    __helios__assetclass____eq = __helios__common____eq;
    __helios__data__show = (self_30) -> {
        () -> {
            show_data_list = (list, show_item) -> {
                __helios__common__fold(list, (prev_2, item_1) -> {
                    __core__ifThenElse(
                        __helios__string____eq(prev_2, ""),
                        () -> {
                            show_item(item_1)
                        },
                        () -> {
                            __helios__string____add(prev_2, __helios__string____add(",", show_item(item_1)))
                        }
                    )()
                }, "")
            };
            (recurse_15, data_5) -> {
                recurse_15(recurse_15, data_5)
            }((recurse_14, data_4) -> {
                __core__chooseData(data_4, () -> {
                    pair_3 = __core__unConstrData__safe(data_4);
                    tag = __core__fstPair(pair_3);
                    fields = __core__sndPair(pair_3);
                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add("{", __helios__string____add(show_data_list(fields, (item_3) -> {
                        recurse_14(recurse_14, item_3)
                    }), "}")))
                }, () -> {
                    map_2 = __core__unMapData__safe(data_4);
                    __helios__string____add("{", __helios__string____add(show_data_list(map_2, (pair_2) -> {
                        key = recurse_14(recurse_14, __core__fstPair(pair_2));
                        value_1 = recurse_14(recurse_14, __core__sndPair(pair_2));
                        __helios__string____add(key, __helios__string____add(":", value_1))
                    }), "}"))
                }, () -> {
                    lst_1 = __core__unListData__safe(data_4);
                    __helios__string____add("[", __helios__string____add(show_data_list(lst_1, (item_2) -> {
                        recurse_14(recurse_14, item_2)
                    }), "]"))
                }, () -> {
                    value = __core__unIData__safe(data_4);
                    __helios__int__show(value)()
                }, () -> {
                    bytes_6 = __core__unBData__safe(data_4);
                    __helios__bytearray__show(bytes_6)()
                })()
            }, self_30)
        }
    };
    __helios__data__show_constr_data = (callback_1) -> {
        (data_6) -> {
            callback_nok_3 = __helios__data__show(data_6);
            __core__chooseData(data_6, () -> {
                pair_4 = __core__unConstrData__safe(data_6);
                callback_1(__core__fstPair(pair_4), __core__sndPair(pair_4))
            }, callback_nok_3, callback_nok_3, callback_nok_3, callback_nok_3)()
        }
    };
    __helios__data__show_field = (index, callback_2) -> {
        (list_1) -> {
            recurse_17 = (recurse_16) -> {
                (lst_2, i_4) -> {
                    __core__chooseList(lst_2, () -> {
                        "<missing>"
                    }, () -> {
                        __core__ifThenElse(
                            __core__equalsInteger(i_4, 0),
                            () -> {
                                head = __core__headList__safe(lst_2);
                                callback_2(head)
                            },
                            () -> {
                                recurse_16(recurse_16)(__core__tailList__safe(lst_2), __core__subtractInteger(i_4, 1))
                            }
                        )()
                    })()
                }
            };
            recurse_17(recurse_17)(list_1, index)
        }
    };
    __helios__data__show_bdata = (callback_3) -> {
        (data_7) -> {
            callback_nok_4 = __helios__data__show(data_7);
            __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, callback_nok_4, () -> {
                callback_3(__core__unBData__safe(data_7))
            })()
        }
    };
    __helios__assetclass__show = (self_31) -> {
        () -> {
            __helios__data__show_constr_data((tag_1, fields_1) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_1, 0),
                    () -> {
                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_4) -> {
                            __helios__bytearray__show(mph_4)()
                        }))(fields_1);
                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_2) -> {
                            __helios__bytearray__show(token_name_2)()
                        }))(fields_1);
                        __core__appendString(mph_str, __core__appendString(".", token_name_str))
                    },
                    () -> {
                        __helios__data__show(self_31)()
                    }
                )()
            })(self_31)
        }
    };
    __helios__string____neq = (self_32, other_1) -> {
        __helios__bool____not(__helios__string____eq(self_32, other_1))
    };
    __helios__int____gt = (a_3, b_3) -> {
        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))
    };
    __helios__int____neq = (self_33, other_2) -> {
        __helios__bool____not(__helios__int____eq(self_33, other_2))
    };
    __helios__int____sub = __core__subtractInteger;
    __helios__value__to_map = (self_34) -> {
        () -> {
            self_34
        }
    };
    __helios__string__show = (self_35) -> {
        () -> {
            __core__appendString("'", __core__appendString(self_35, "'"))
        }
    };
    __helios__bool__show = (self_36) -> {
        () -> {
            __core__ifThenElse(
                self_36,
                "true",
                "false"
            )
        }
    };
    __helios__bool__trace = (self_37) -> {
        (prefix) -> {
            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_37)()), self_37)
        }
    };
    __helios__txinput____eq = __helios__common____eq;
    __helios__bytearray__from_data = __core__unBData;
    __helios__string__from_data = (d) -> {
        __core__decodeUtf8(__core__unBData(d))
    };
    __helios__common__length = (lst_3) -> {
        recurse_19 = (recurse_18, lst_4) -> {
            __core__chooseList(lst_4, () -> {
                0
            }, () -> {
                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)
            })()
        };
        recurse_19(recurse_19, lst_3)
    };
    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {
        recurse_21 = (recurse_20, self_39, key_2) -> {
            __core__chooseList(self_39, fnNotFound, () -> {
                head_1 = __core__headList__safe(self_39);
                __core__ifThenElse(
                    __core__equalsData(key_2, __core__fstPair(head_1)),
                    () -> {
                        fnFound(__core__sndPair(head_1))
                    },
                    () -> {
                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)
                    }
                )()
            })()
        };
        recurse_21(recurse_21, self_38, key_1)
    };
    __helios__common__enum_tag_equals = (data_8, i_5) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_5)
    };
    __helios__common__all = (self_40, fn_1) -> {
        recurse_23 = (recurse_22, self_41, fn_2) -> {
            __core__chooseList(self_41, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    fn_2(__core__headList__safe(self_41)),
                    () -> {
                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_23(recurse_23, self_40, fn_1)
    };
    __helios__common__identity = (self_42) -> {
        self_42
    };
    __helios__assetclass____to_data = __helios__common__identity;
    __helios__assetclass__from_data = __helios__common__identity;
    __helios__data__from_data = __helios__common__identity;
    __helios__bool__from_data = (d_1) -> {
        __core__ifThenElse(
            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),
            false,
            true
        )
    };
    __helios__int__from_data = __core__unIData;
    __helios__bytearray__decode_utf8 = (self_43) -> {
        () -> {
            __core__decodeUtf8(self_43)
        }
    };
    __helios__value__get_policy = (self_44) -> {
        (mph_5) -> {
            mph_6 = __helios__mintingpolicyhash____to_data(mph_5);
            recurse_25 = (recurse_24, map_3) -> {
                __core__chooseList(map_3, () -> {
                    __helios__error("policy not found")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mph_6),
                        () -> {
                            __core__unMapData(__core__sndPair(__core__headList__safe(map_3)))
                        },
                        () -> {
                            recurse_24(recurse_24, __core__tailList__safe(map_3))
                        }
                    )()
                })()
            };
            recurse_25(recurse_25, self_44)
        }
    };
    __helios__common__serialize = (self_45) -> {
        () -> {
            __core__serialiseData(self_45)
        }
    };
    __helios__tx__serialize = __helios__common__serialize;
    __helios__common__find_safe = (self_46, fn_3, callback_4) -> {
        recurse_27 = (recurse_26, self_47, fn_4) -> {
            __core__chooseList(self_47, () -> {
                __core__constrData(1, __helios__common__list_0)
            }, () -> {
                head_2 = __core__headList__safe(self_47);
                __core__ifThenElse(
                    fn_4(head_2),
                    () -> {
                        __core__constrData(0, __helios__common__list_1(callback_4(head_2)))
                    },
                    () -> {
                        recurse_26(recurse_26, __core__tailList__safe(self_47), fn_4)
                    }
                )()
            })()
        };
        recurse_27(recurse_27, self_46, fn_3)
    };
    __helios__data__is_valid_data = (data_9) -> {
        true
    };
    __helios__string__is_valid_data = (data_10) -> {
        __core__chooseData(data_10, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__string__is_valid_utf8(__core__unBData__safe(data_10))
        })()
    };
    __helios__bytearray__is_valid_data = (data_11) -> {
        __core__chooseData(data_11, false, false, false, false, true)
    };
    __helios__txoutputid__from_data = __helios__common__identity;
    __helios__common__test_constr_data_2 = (data_12, index_1, test_a, test_b) -> {
        __core__chooseData(data_12, () -> {
            pair_5 = __core__unConstrData__safe(data_12);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_5), index_1),
                () -> {
                    fields_2 = __core__sndPair(pair_5);
                    __core__chooseList(fields_2, () -> {
                        false
                    }, () -> {
                        __core__ifThenElse(
                            test_a(__core__headList__safe(fields_2)),
                            () -> {
                                tail = __core__tailList__safe(fields_2);
                                __core__chooseList(tail, () -> {
                                    false
                                }, () -> {
                                    __core__ifThenElse(
                                        test_b(__core__headList__safe(tail)),
                                        () -> {
                                            __core__chooseList(__core__tailList__safe(tail), () -> {
                                                true
                                            }, () -> {
                                                false
                                            })()
                                        },
                                        () -> {
                                            false
                                        }
                                    )()
                                })()
                            },
                            () -> {
                                false
                            }
                        )()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__bytearray__is_valid_data_fixed_length = (n_3) -> {
        (data_13) -> {
            __core__chooseData(data_13, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_7 = __core__unBData__safe(data_13);
                __core__ifThenElse(
                    __core__equalsInteger(__core__lengthOfByteString(bytes_7), n_3),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__txid__is_valid_data = (data_14) -> {
        __core__chooseData(data_14, () -> {
            pair_6 = __core__unConstrData__safe(data_14);
            index_2 = __core__fstPair(pair_6);
            fields_3 = __core__sndPair(pair_6);
            __core__ifThenElse(
                __core__equalsInteger(0, index_2),
                () -> {
                    __core__chooseList(fields_3, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_3), () -> {
                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_3))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__int__is_valid_data = (data_15) -> {
        __core__chooseData(data_15, false, false, false, true, false)
    };
    __helios__txoutputid__is_valid_data = (data_16) -> {
        __helios__common__test_constr_data_2(data_16, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)
    };
    __helios__value__contains_policy = (self_48) -> {
        (mph_7) -> {
            mph_8 = __helios__mintingpolicyhash____to_data(mph_7);
            recurse_29 = (recurse_28, map_4) -> {
                __core__chooseList(map_4, () -> {
                    false
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), mph_8),
                        () -> {
                            true
                        },
                        () -> {
                            recurse_28(recurse_28, __core__tailList__safe(map_4))
                        }
                    )()
                })()
            };
            recurse_29(recurse_29, self_48)
        }
    };
    __helios__value__is_zero_inner = (tokens_1) -> {
        recurse_31 = (recurse_30, tokens_2) -> {
            __core__chooseList(tokens_2, () -> {
                true
            }, () -> {
                __helios__bool__and(() -> {
                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)
                }, () -> {
                    recurse_30(recurse_30, __core__tailList__safe(tokens_2))
                })
            })()
        };
        recurse_31(recurse_31, tokens_1)
    };
    __helios__value__is_zero = (self_49) -> {
        () -> {
            recurse_33 = (recurse_32, map_5) -> {
                __core__chooseList(map_5, () -> {
                    true
                }, () -> {
                    __helios__bool__and(() -> {
                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_5))))
                    }, () -> {
                        recurse_32(recurse_32, __core__tailList__safe(map_5))
                    })
                })()
            };
            recurse_33(recurse_33, self_49)
        }
    };
    __helios__common__filter = (self_50, fn_5, nil) -> {
        recurse_35 = (recurse_34, self_51, fn_6) -> {
            __core__chooseList(self_51, () -> {
                nil
            }, () -> {
                head_3 = __core__headList__safe(self_51);
                __core__ifThenElse(
                    fn_6(head_3),
                    () -> {
                        __core__mkCons(head_3, recurse_34(recurse_34, __core__tailList__safe(self_51), fn_6))
                    },
                    () -> {
                        recurse_34(recurse_34, __core__tailList__safe(self_51), fn_6)
                    }
                )()
            })()
        };
        recurse_35(recurse_35, self_50, fn_5)
    };
    __helios__common__filter_map = (self_52, fn_7) -> {
        __helios__common__filter(self_52, fn_7, __core__mkNilPairData(()))
    };
    __helios__value__get_assets = (self_53) -> {
        () -> {
            __helios__common__filter_map(self_53, (pair_7) -> {
                __helios__bool____not(__core__equalsByteString(__core__unBData(__core__fstPair(pair_7)), #))
            })
        }
    };
    __helios__value__from_map = __helios__common__identity;
    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;
    __helios__value__get_inner_map_int = (map_6, key_3) -> {
        recurse_37 = (recurse_36, map_7, key_4) -> {
            __core__chooseList(map_7, () -> {
                0
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_7)), key_4),
                    () -> {
                        __core__unIData(__core__sndPair(__core__headList__safe(map_7)))
                    },
                    () -> {
                        recurse_36(recurse_36, __core__tailList__safe(map_7), key_4)
                    }
                )()
            })()
        };
        recurse_37(recurse_37, map_6, key_3)
    };
    __helios__value__get_map_keys = (map_8) -> {
        recurse_39 = (recurse_38, map_9) -> {
            __core__chooseList(map_9, () -> {
                __helios__common__list_0
            }, () -> {
                __core__mkCons(__core__fstPair(__core__headList__safe(map_9)), recurse_38(recurse_38, __core__tailList__safe(map_9)))
            })()
        };
        recurse_39(recurse_39, map_8)
    };
    __helios__common__any = (self_54, fn_8) -> {
        recurse_41 = (recurse_40, self_55, fn_9) -> {
            __core__chooseList(self_55, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    fn_9(__core__headList__safe(self_55)),
                    () -> {
                        true
                    },
                    () -> {
                        recurse_40(recurse_40, __core__tailList__safe(self_55), fn_9)
                    }
                )()
            })()
        };
        recurse_41(recurse_41, self_54, fn_8)
    };
    __helios__common__is_in_bytearray_list = (lst_5, key_5) -> {
        __helios__common__any(lst_5, (item_4) -> {
            __core__equalsData(item_4, key_5)
        })
    };
    __helios__common__concat = (a_4, b_4) -> {
        recurse_43 = (recurse_42, lst_6, rem) -> {
            __core__chooseList(rem, () -> {
                lst_6
            }, () -> {
                __core__mkCons(__core__headList__safe(rem), recurse_42(recurse_42, lst_6, __core__tailList__safe(rem)))
            })()
        };
        recurse_43(recurse_43, b_4, a_4)
    };
    __helios__value__merge_map_keys = (a_5, b_5) -> {
        aKeys = __helios__value__get_map_keys(a_5);
        recurse_45 = (recurse_44, keys, map_10) -> {
            __core__chooseList(map_10, () -> {
                __helios__common__list_0
            }, () -> {
                key_6 = __core__fstPair(__core__headList__safe(map_10));
                __core__ifThenElse(
                    __helios__common__is_in_bytearray_list(aKeys, key_6),
                    () -> {
                        recurse_44(recurse_44, keys, __core__tailList__safe(map_10))
                    },
                    () -> {
                        __core__mkCons(key_6, recurse_44(recurse_44, keys, __core__tailList__safe(map_10)))
                    }
                )()
            })()
        };
        uniqueBKeys = recurse_45(recurse_45, aKeys, b_5);
        __helios__common__concat(aKeys, uniqueBKeys)
    };
    __helios__value__add_or_subtract_inner = (op) -> {
        (a_6, b_6) -> {
            recurse_47 = (recurse_46, keys_1, result) -> {
                __core__chooseList(keys_1, () -> {
                    result
                }, () -> {
                    key_7 = __core__headList__safe(keys_1);
                    tail_1 = recurse_46(recurse_46, __core__tailList__safe(keys_1), result);
                    sum = op(__helios__value__get_inner_map_int(a_6, key_7), __helios__value__get_inner_map_int(b_6, key_7));
                    __core__ifThenElse(
                        __core__equalsInteger(sum, 0),
                        () -> {
                            tail_1
                        },
                        () -> {
                            __core__mkCons(__core__mkPairData(key_7, __core__iData(sum)), tail_1)
                        }
                    )()
                })()
            };
            recurse_47(recurse_47, __helios__value__merge_map_keys(a_6, b_6), __core__mkNilPairData(()))
        }
    };
    __helios__value__get_inner_map = (map_11, mph_9) -> {
        recurse_49 = (recurse_48, map_12) -> {
            __core__chooseList(map_12, () -> {
                __core__mkNilPairData(())
            }, () -> {
                __core__ifThenElse(
                    __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), mph_9),
                    () -> {
                        __core__unMapData(__core__sndPair(__core__headList__safe(map_12)))
                    },
                    () -> {
                        recurse_48(recurse_48, __core__tailList__safe(map_12))
                    }
                )()
            })()
        };
        recurse_49(recurse_49, map_11)
    };
    __helios__value__add_or_subtract = (a_7, b_7, op_1) -> {
        recurse_51 = (recurse_50, keys_2, result_1) -> {
            __core__chooseList(keys_2, () -> {
                result_1
            }, () -> {
                key_8 = __core__headList__safe(keys_2);
                tail_2 = recurse_50(recurse_50, __core__tailList__safe(keys_2), result_1);
                item_5 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_7, key_8), __helios__value__get_inner_map(b_7, key_8));
                __core__chooseList(item_5, () -> {
                    tail_2
                }, () -> {
                    __core__mkCons(__core__mkPairData(key_8, __core__mapData(item_5)), tail_2)
                })()
            })()
        };
        recurse_51(recurse_51, __helios__value__merge_map_keys(a_7, b_7), __core__mkNilPairData(()))
    };
    __helios__value____add = (a_8, b_8) -> {
        __helios__value__add_or_subtract(a_8, b_8, __core__addInteger)
    };
    __helios__common__map = (self_56, fn_10, init) -> {
        recurse_53 = (recurse_52, rem_1, lst_7) -> {
            __core__chooseList(rem_1, () -> {
                lst_7
            }, () -> {
                __core__mkCons(fn_10(__core__headList__safe(rem_1)), recurse_52(recurse_52, __core__tailList__safe(rem_1), lst_7))
            })()
        };
        recurse_53(recurse_53, self_56, init)
    };
    __helios__value____to_data = __core__mapData;
    __helios__value__value = __helios__common__identity;
    __helios__value__from_data = __core__unMapData;
    __helios__common__insert_in_sorted = (x_3, lst_8, comp) -> {
        recurse_55 = (recurse_54, lst_9) -> {
            __core__chooseList(lst_9, () -> {
                __core__mkCons(x_3, lst_9)
            }, () -> {
                head_4 = __core__headList__safe(lst_9);
                __core__ifThenElse(
                    comp(x_3, head_4),
                    () -> {
                        __core__mkCons(x_3, lst_9)
                    },
                    () -> {
                        __core__mkCons(head_4, recurse_54(recurse_54, __core__tailList__safe(lst_9)))
                    }
                )()
            })()
        };
        recurse_55(recurse_55, lst_8)
    };
    __helios__common__sort = (lst_10, comp_1) -> {
        recurse_57 = (recurse_56, lst_11) -> {
            __core__chooseList(lst_11, () -> {
                lst_11
            }, () -> {
                (head_5, tail_3) -> {
                    __helios__common__insert_in_sorted(head_5, tail_3, comp_1)
                }(__core__headList__safe(lst_11), recurse_56(recurse_56, __core__tailList__safe(lst_11)))
            })()
        };
        recurse_57(recurse_57, lst_10)
    };
    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;
    __helios__bytearray____lt = __core__lessThanByteString;
    __helios__int__max = (a_9, b_9) -> {
        __core__ifThenElse(
            __core__lessThanInteger(a_9, b_9),
            b_9,
            a_9
        )
    };
    __helios__common__slice_bytearray = (self_57, selfLengthFn) -> {
        (start, end) -> {
            normalize = (pos_1) -> {
                __core__ifThenElse(
                    __core__lessThanInteger(pos_1, 0),
                    () -> {
                        __core__addInteger(__core__addInteger(selfLengthFn(self_57), 1), pos_1)
                    },
                    () -> {
                        pos_1
                    }
                )()
            };
            fn_12 = (start_1) -> {
                fn_11 = (end_1) -> {
                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_57)
                };
                fn_11(normalize(end))
            };
            fn_12(normalize(start))
        }
    };
    __helios__bytearray__slice = (self_58) -> {
        __helios__common__slice_bytearray(self_58, __core__lengthOfByteString)
    };
    __helios__bytearray__blake2b = (self_59) -> {
        () -> {
            __core__blake2b_256(self_59)
        }
    };
    __helios__bytearray__length = __core__lengthOfByteString;
    __helios__bytearray____add = __core__appendByteString;
    __helios__txid__serialize = __helios__common__serialize;
    __helios__txoutputid__index = (self_60) -> {
        __helios__int__from_data(__helios__common__enum_field_1(self_60))
    };
    __helios__txoutputid__tx_id = __helios__common__enum_field_0;
    __helios__common__enum_fields_after_4 = (self_61) -> {
        __core__tailList(__helios__common__enum_fields_after_3(self_61))
    };
    __helios__common__enum_fields_after_5 = (self_62) -> {
        __core__tailList(__helios__common__enum_fields_after_4(self_62))
    };
    __helios__common__enum_fields_after_6 = (self_63) -> {
        __core__tailList(__helios__common__enum_fields_after_5(self_63))
    };
    __helios__common__enum_fields_after_7 = (self_64) -> {
        __core__tailList(__helios__common__enum_fields_after_6(self_64))
    };
    __helios__common__enum_fields_after_8 = (self_65) -> {
        __core__tailList(__helios__common__enum_fields_after_7(self_65))
    };
    __helios__common__enum_field_9 = (self_66) -> {
        __core__headList(__helios__common__enum_fields_after_8(self_66))
    };
    __helios__tx__redeemers = (self_67) -> {
        __core__unMapData(__helios__common__enum_field_9(self_67))
    };
    __helios__scriptpurpose__spending____is = (data_17) -> {
        __helios__common__enum_tag_equals(data_17, 1)
    };
    __helios__txoutputid____eq = __helios__common____eq;
    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;
    __helios__value__get_safe = (self_68) -> {
        (assetClass_2) -> {
            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);
            tokenName_2 = __helios__common__enum_field_1(assetClass_2);
            outer_3 = (outer_2, inner_3, map_13) -> {
                __core__chooseList(map_13, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), mintingPolicyHash),
                        () -> {
                            inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_13))))
                        },
                        () -> {
                            outer_2(outer_2, inner_3, __core__tailList__safe(map_13))
                        }
                    )()
                })()
            };
            inner_5 = (inner_4, map_14) -> {
                __core__chooseList(map_14, () -> {
                    0
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsData(__core__fstPair(__core__headList__safe(map_14)), tokenName_2),
                        () -> {
                            __core__unIData(__core__sndPair(__core__headList__safe(map_14)))
                        },
                        () -> {
                            inner_4(inner_4, __core__tailList__safe(map_14))
                        }
                    )()
                })()
            };
            outer_3(outer_3, inner_5, self_68)
        }
    };
    __helios__scriptpurpose____to_data = __helios__common__identity;
    __helios__txid__show = (self_69) -> {
        () -> {
            __helios__data__show_constr_data((tag_2, fields_4) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_2, 0),
                    () -> {
                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_8) -> {
                            __helios__bytearray__show(bytes_8)()
                        }))(fields_4)
                    },
                    () -> {
                        __helios__data__show(self_69)()
                    }
                )()
            })(self_69)
        }
    };
    __helios__data__show_idata = (callback_5) -> {
        (data_18) -> {
            callback_nok_5 = __helios__data__show(data_18);
            __core__chooseData(data_18, callback_nok_5, callback_nok_5, callback_nok_5, () -> {
                callback_5(__core__unIData__safe(data_18))
            }, callback_nok_5)()
        }
    };
    __helios__txoutputid__show = (self_70) -> {
        () -> {
            __helios__data__show_constr_data((tag_3, fields_5) -> {
                __core__ifThenElse(
                    __core__equalsInteger(tag_3, 0),
                    () -> {
                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {
                            __helios__txid__show(tx_id_data)()
                        })(fields_5);
                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_6) -> {
                            __helios__int__show(i_6)()
                        }))(fields_5);
                        __core__appendString(tx_id_str, __core__appendString("#", index_str))
                    },
                    () -> {
                        __helios__data__show(self_70)()
                    }
                )()
            })(self_70)
        }
    };
    __helios__txoutputdatum__inline = (self_71) -> {
        pair_8 = __core__unConstrData(self_71);
        index_3 = __core__fstPair(pair_8);
        fields_6 = __core__sndPair(pair_8);
        __core__ifThenElse(
            __core__equalsInteger(index_3, 2),
            () -> {
                __core__headList(fields_6)
            },
            () -> {
                __helios__error("not an inline datum")
            }
        )()
    };
    __helios__common__enum_field_2 = (self_72) -> {
        __core__headList(__helios__common__enum_fields_after_1(self_72))
    };
    __helios__txoutput__datum = __helios__common__enum_field_2;
    __helios__txinput__datum = (self_73) -> {
        __helios__txoutput__datum(__helios__txinput__output(self_73))
    };
    __helios__tx__ref_inputs = (self_74) -> {
        __core__unListData(__helios__common__enum_field_1(self_74))
    };
    __helios__tx__outputs = (self_75) -> {
        __core__unListData(__helios__common__enum_field_2(self_75))
    };
    __helios__address____eq = __helios__common____eq;
    __helios__txoutput__address = __helios__common__enum_field_0;
    __helios__string__serialize = (self_76) -> {
        () -> {
            __core__serialiseData(__helios__string____to_data(self_76))
        }
    };
    __helios__txinput__address = (self_77) -> {
        __helios__txoutput__address(__helios__txinput__output(self_77))
    };
    __helios__txoutput__from_data = __helios__common__identity;
    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);
    __helios__option__NONE_FUNC = (callback_6) -> {
        callback_6(false, ())
    };
    __helios__option__SOME_FUNC = (some) -> {
        (callback_7) -> {
            callback_7(true, some)
        }
    };
    __helios__bytearray__from_data_safe = (data_19) -> {
        __core__chooseData(data_19, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unBData__safe(data_19))
        })()
    };
    __helios__int__from_data_safe = (data_20) -> {
        __core__chooseData(data_20, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__NONE_FUNC
        }, () -> {
            __helios__option__SOME_FUNC(__core__unIData__safe(data_20))
        }, () -> {
            __helios__option__NONE_FUNC
        })()
    };
    __helios__common__struct_fields_after_0 = __core__tailList;
    __helios__common__struct_field_1 = (self_78) -> {
        __core__headList(__helios__common__struct_fields_after_0(self_78))
    };
    __helios__common__struct_field_0 = __core__headList;
    __helios__struct____to_data = __core__listData;
    __helios__struct____eq = (self_79, other_3) -> {
        __core__equalsData(__helios__struct____to_data(self_79), __helios__struct____to_data(other_3))
    };
    __helios__value__compare_inner = (comp_2, a_10, b_10) -> {
        recurse_59 = (recurse_58, keys_3) -> {
            __core__chooseList(keys_3, () -> {
                true
            }, () -> {
                key_9 = __core__headList__safe(keys_3);
                __core__ifThenElse(
                    __helios__bool____not(comp_2(__helios__value__get_inner_map_int(a_10, key_9), __helios__value__get_inner_map_int(b_10, key_9))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_58(recurse_58, __core__tailList__safe(keys_3))
                    }
                )()
            })()
        };
        recurse_59(recurse_59, __helios__value__merge_map_keys(a_10, b_10))
    };
    __helios__value__compare = (a_11, b_11, comp_3) -> {
        recurse_61 = (recurse_60, keys_4) -> {
            __core__chooseList(keys_4, () -> {
                true
            }, () -> {
                key_10 = __core__headList__safe(keys_4);
                __core__ifThenElse(
                    __helios__bool____not(__helios__value__compare_inner(comp_3, __helios__value__get_inner_map(a_11, key_10), __helios__value__get_inner_map(b_11, key_10))),
                    () -> {
                        false
                    },
                    () -> {
                        recurse_60(recurse_60, __core__tailList__safe(keys_4))
                    }
                )()
            })()
        };
        recurse_61(recurse_61, __helios__value__merge_map_keys(a_11, b_11))
    };
    __helios__value____geq = (a_12, b_12) -> {
        __helios__value__compare(a_12, b_12, (a_qty, b_qty) -> {
            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))
        })
    };
    __helios__value__contains = (self_80) -> {
        (value_2) -> {
            __helios__value____geq(self_80, value_2)
        }
    };
    __helios__txoutput__sum_values = (outputs) -> {
        __helios__common__fold(outputs, (prev_3, txOutput) -> {
            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))
        }, __helios__value__ZERO)
    };
    __helios__common__filter_list = (self_81, fn_13) -> {
        __helios__common__filter(self_81, fn_13, __helios__common__list_0)
    };
    __helios__tx__filter_outputs = (self_82, fn_14) -> {
        __helios__common__filter_list(__helios__tx__outputs(self_82), fn_14)
    };
    __helios__address__credential = __helios__common__enum_field_0;
    __helios__spendingcredential__is_validator = (self_83) -> {
        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_83)), 1)
    };
    __helios__validatorhash____eq = __helios__bytearray____eq;
    __helios__validatorhash__from_data = __helios__bytearray__from_data;
    __helios__spendingcredential__validator__hash = (self_84) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_84))
    };
    __helios__spendingcredential__validator__cast = (data_21) -> {
        __helios__common__assert_constr_index(data_21, 1)
    };
    __helios__txoutput__is_locked_by = (self_85) -> {
        (hash) -> {
            credential = __helios__address__credential(__helios__txoutput__address(self_85));
            __core__ifThenElse(
                __helios__spendingcredential__is_validator(credential),
                () -> {
                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))
                },
                () -> {
                    false
                }
            )()
        }
    };
    __helios__tx__outputs_locked_by = (self_86) -> {
        (vh) -> {
            __helios__tx__filter_outputs(self_86, (output) -> {
                __helios__txoutput__is_locked_by(output)(vh)
            })
        }
    };
    __helios__tx__value_locked_by = (self_87) -> {
        (vh_1) -> {
            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_87)(vh_1))
        }
    };
    __helios__txoutputdatum__serialize = __helios__common__serialize;
    __helios__data__constrdata____is = (data_22) -> {
        __core__chooseData(data_22, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__data__constrdata__fields = (data_23) -> {
        __core__sndPair(__core__unConstrData(data_23))
    };
    __helios__data__constrdata__tag = (data_24) -> {
        __core__fstPair(__core__unConstrData(data_24))
    };
    __helios__txinput__from_data = __helios__common__identity;
    __helios__common__struct_fields_after_1 = (self_88) -> {
        __core__tailList(__helios__common__struct_fields_after_0(self_88))
    };
    __helios__common__struct_fields_after_2 = (self_89) -> {
        __core__tailList(__helios__common__struct_fields_after_1(self_89))
    };
    __helios__common__struct_fields_after_3 = (self_90) -> {
        __core__tailList(__helios__common__struct_fields_after_2(self_90))
    };
    __helios__common__struct_field_4 = (self_91) -> {
        __core__headList(__helios__common__struct_fields_after_3(self_91))
    };
    __helios__common__struct_field_3 = (self_92) -> {
        __core__headList(__helios__common__struct_fields_after_2(self_92))
    };
    __helios__common__struct_field_2 = (self_93) -> {
        __core__headList(__helios__common__struct_fields_after_1(self_93))
    };
    __helios__struct__serialize = (self_94) -> {
        () -> {
            __core__serialiseData(__helios__struct____to_data(self_94))
        }
    };
    __helios__txoutput__is_valid_data = (data_25) -> {
        __core__chooseData(data_25, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__txinput__is_valid_data = (data_26) -> {
        __helios__common__test_constr_data_2(data_26, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)
    };
    __helios__txinput____to_data = __helios__common__identity;
    __helios__common__enum_field_7 = (self_95) -> {
        __core__headList(__helios__common__enum_fields_after_6(self_95))
    };
    __helios__common__enum_field_6 = (self_96) -> {
        __core__headList(__helios__common__enum_fields_after_5(self_96))
    };
    __helios__common__enum_field_5 = (self_97) -> {
        __core__headList(__helios__common__enum_fields_after_4(self_97))
    };
    __helios__common__enum_field_3 = (self_98) -> {
        __core__headList(__helios__common__enum_fields_after_2(self_98))
    };
    __helios__common__mStruct_field_internal = (map_15, name) -> {
        name_data = __core__bData(name);
        recurse_63 = (recurse_62, map_16) -> {
            __core__chooseList(map_16, () -> {
                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), ": field not found"))
            }, () -> {
                head_6 = __core__headList__safe(map_16);
                key_11 = __core__fstPair(head_6);
                value_3 = __core__sndPair(head_6);
                __core__ifThenElse(
                    __core__equalsData(key_11, name_data),
                    () -> {
                        value_3
                    },
                    () -> {
                        recurse_62(recurse_62, __core__tailList__safe(map_16))
                    }
                )()
            })()
        };
        recurse_63(recurse_63, map_15)
    };
    __helios__common__mStruct_field = (self_99, name_1) -> {
        __helios__common__mStruct_field_internal(__core__unMapData(self_99), name_1)
    };
    __helios__common__test_mStruct_field = (self_100, name_2, inner_test) -> {
        __core__chooseData(self_100, () -> {
            false
        }, () -> {
            map_17 = __core__unMapData__safe(self_100);
            recurse_65 = (recurse_64, map_18) -> {
                __core__chooseList(map_18, () -> {
                    __core__trace(__core__appendString("Warning: field not found: ", __core__decodeUtf8__safe(__core__unBData__safe(name_2))), () -> {
                        false
                    })()
                }, () -> {
                    head_7 = __core__headList__safe(map_18);
                    key_12 = __core__fstPair(head_7);
                    value_4 = __core__sndPair(head_7);
                    __core__ifThenElse(
                        __core__equalsData(key_12, name_2),
                        () -> {
                            inner_test(value_4)
                        },
                        () -> {
                            recurse_64(recurse_64, __core__tailList__safe(map_18))
                        }
                    )()
                })()
            };
            recurse_65(recurse_65, map_17)
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__mintingpolicyhash__is_valid_data = (data_27) -> {
        __core__chooseData(data_27, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            bytes_9 = __core__unBData__safe(data_27);
            n_4 = __core__lengthOfByteString(bytes_9);
            __core__ifThenElse(
                __core__equalsInteger(n_4, 0),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(n_4, 28),
                        true,
                        false
                    )
                }
            )()
        })()
    };
    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);
    __helios__spendingcredential__is_valid_data = (data_28) -> {
        __core__chooseData(data_28, () -> {
            pair_9 = __core__unConstrData__safe(data_28);
            index_4 = __core__fstPair(pair_9);
            fields_7 = __core__sndPair(pair_9);
            __core__ifThenElse(
                __core__equalsInteger(index_4, 0),
                () -> {
                    __core__chooseList(fields_7, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_7), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_7))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_4, 1),
                        () -> {
                            __core__chooseList(fields_7, () -> {
                                false
                            }, () -> {
                                __core__chooseList(__core__tailList__safe(fields_7), () -> {
                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_7))
                                }, () -> {
                                    false
                                })()
                            })()
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__common__test_list_head_data = (test_head, test_tail) -> {
        (list_2) -> {
            __core__chooseList(list_2, () -> {
                false
            }, () -> {
                __core__ifThenElse(
                    test_head(__core__headList(list_2)),
                    () -> {
                        test_tail(__core__tailList(list_2))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;
    __helios__common__test_list_empty = (list_3) -> {
        __core__chooseList(list_3, true, false)
    };
    __helios__stakingcredential__is_valid_data = (data_29) -> {
        __core__chooseData(data_29, () -> {
            pair_10 = __core__unConstrData__safe(data_29);
            tag_4 = __core__fstPair(pair_10);
            fields_8 = __core__sndPair(pair_10);
            __core__ifThenElse(
                __core__equalsInteger(tag_4, 0),
                () -> {
                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_8)
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(tag_4, 1),
                        () -> {
                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_8)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__stakingcredential]__is_valid_data = (data_30) -> {
        __core__chooseData(data_30, () -> {
            pair_11 = __core__unConstrData__safe(data_30);
            index_5 = __core__fstPair(pair_11);
            fields_9 = __core__sndPair(pair_11);
            __core__ifThenElse(
                __core__equalsInteger(index_5, 0),
                () -> {
                    __core__chooseList(fields_9, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_9), () -> {
                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_9))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_5, 1),
                        () -> {
                            __core__chooseList(fields_9, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__address__is_valid_data = (data_31) -> {
        __helios__common__test_constr_data_2(data_31, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)
    };
    __helios__validatorhash__show = __helios__bytearray__show;
    __helios__spendingcredential____eq = __helios__common____eq;
    __helios__validatorhash____to_data = __helios__bytearray____to_data;
    __helios__spendingcredential__new_validator = (hash_1) -> {
        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))
    };
    __helios__bool____to_data = (b_13) -> {
        __core__constrData(__core__ifThenElse(
            b_13,
            1,
            0
        ), __helios__common__list_0)
    };
    __helios__bytearray__is_valid_data_max_length = (n_5) -> {
        (data_32) -> {
            __core__chooseData(data_32, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                false
            }, () -> {
                bytes_10 = __core__unBData__safe(data_32);
                __core__ifThenElse(
                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_10), n_5),
                    () -> {
                        true
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }
    };
    __helios__assetclass__is_valid_data = (data_33) -> {
        __helios__common__test_constr_data_2(data_33, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))
    };
    __helios__data__mapdata____is = (data_34) -> {
        __core__chooseData(data_34, () -> {
            false
        }, () -> {
            true
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__scriptpurpose__from_data = __helios__common__identity;
    __module__StellarHeliosHelpers__logGroupStart = (group, __useopt__collapsed, collapsed) -> {
        collapsed_1 = __core__ifThenElse(
            __useopt__collapsed,
            () -> {
                collapsed
            },
            () -> {
                false
            }
        )();
        __core__ifThenElse(
            collapsed_1,
            () -> {
                __helios__print(__helios__string____add("\u{1F423}\u{1F5DC}\uFE0F ", group))
            },
            () -> {
                () -> {
                    __helios__print(__helios__string____add("\u{1F423}", group))
                }()
            }
        )()
    };
    __module__StellarHeliosHelpers__logGroupEnd = (__useopt__status, status) -> {
        status_1 = __core__ifThenElse(
            __useopt__status,
            () -> {
                status
            },
            () -> {
                ""
            }
        )();
        __helios__print(__helios__string____add("\u{1F95A} ", status_1))
    };
    __module__StellarHeliosHelpers__emptyUnitFunc = () -> {
        ()
    };
    __module__StellarHeliosHelpers__logGroup_1 = (__module__StellarHeliosHelpers__logGroup) -> {
        (group_1, __useopt__collapsed_1, collapsed_2, callback_8) -> {
            collapsed_3 = __core__ifThenElse(
                __useopt__collapsed_1,
                () -> {
                    collapsed_2
                },
                () -> {
                    false
                }
            )();
            __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(group_1, true, collapsed_3), result_2 = callback_8();
            __core__chooseUnit(__core__ifThenElse(
                result_2,
                () -> {
                    __module__StellarHeliosHelpers__logGroupEnd(true, "\u2705")
                },
                () -> {
                    () -> {
                        __module__StellarHeliosHelpers__logGroupEnd(true, "\u274C")
                    }()
                }
            )(), result_2))
        }
    };
    __module__StellarHeliosHelpers__logGroupUnit = (group_2, __useopt__collapsed_2, collapsed_4, __useopt__callback, callback_9) -> {
        collapsed_5 = __core__ifThenElse(
            __useopt__collapsed_2,
            () -> {
                collapsed_4
            },
            () -> {
                false
            }
        )();
        callback_10 = __core__ifThenElse(
            __useopt__callback,
            () -> {
                callback_9
            },
            () -> {
                __module__StellarHeliosHelpers__emptyUnitFunc
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(group_2, true, collapsed_5), __core__chooseUnit(callback_10(), __module__StellarHeliosHelpers__logGroupEnd(false, ())))
    };
    __module__StellarHeliosHelpers__TODO = (task) -> {
        __helios__print(__helios__string____add(__helios__string____add("  \u{1F7E5}  \u{1F633}\u{1F4A6}  TODO: ", task), "
"))
    };
    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion, __useopt__onError, onError, __useopt__showSuccess, showSuccess) -> {
        assertion_1 = __core__ifThenElse(
            __useopt__assertion,
            () -> {
                assertion
            },
            () -> {
                true
            }
        )();
        onError_1 = __core__ifThenElse(
            __useopt__onError,
            () -> {
                onError
            },
            () -> {
                __helios__string____add("  \u274C failed reqt: \u2757", reqt)
            }
        )();
        showSuccess_1 = __core__ifThenElse(
            __useopt__showSuccess,
            () -> {
                showSuccess
            },
            () -> {
                false
            }
        )();
        __core__chooseUnit(__core__ifThenElse(
            __helios__bool__and(() -> {
                showSuccess_1
            }, () -> {
                assertion_1
            }),
            () -> {
                __helios__print(__helios__string____add("\u2705 \u2757", reqt))
            },
            () -> {
                () -> {
                    __helios__print(__helios__string____add("\u2757", reqt))
                }()
            }
        )(), __helios__assert(assertion_1, onError_1))
    };
    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2, __useopt__onError_1, onError_2, __useopt__showSuccess_1, showSuccess_2) -> {
        assertion_3 = __core__ifThenElse(
            __useopt__assertion_1,
            () -> {
                assertion_2
            },
            () -> {
                true
            }
        )();
        onError_3 = __core__ifThenElse(
            __useopt__onError_1,
            () -> {
                onError_2
            },
            () -> {
                __helios__string____add("  \u274C failed reqt: \u2757", reqt_1)
            }
        )();
        showSuccess_3 = __core__ifThenElse(
            __useopt__showSuccess_1,
            () -> {
                showSuccess_2
            },
            () -> {
                false
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3, true, onError_3, true, showSuccess_3), true)
    };
    __module__StellarHeliosHelpers__REQTgroupStart = (reqt_2, __useopt__collapsed_3, collapsed_6) -> {
        collapsed_7 = __core__ifThenElse(
            __useopt__collapsed_3,
            () -> {
                collapsed_6
            },
            () -> {
                false
            }
        )();
        __module__StellarHeliosHelpers__logGroupStart(__helios__string____add("\u2757", reqt_2), true, collapsed_7)
    };
    __module__StellarHeliosHelpers__bREQTgroup = (reqt_3, __useopt__collapsed_4, collapsed_8, callback_11) -> {
        collapsed_9 = __core__ifThenElse(
            __useopt__collapsed_4,
            () -> {
                collapsed_8
            },
            () -> {
                false
            }
        )();
        result_3 = __module__StellarHeliosHelpers__logGroup_1(__module__StellarHeliosHelpers__logGroup_1)(__helios__string____add("\u2757", reqt_3), collapsed_9, true, callback_11);
        __core__chooseUnit(__helios__assert(result_3, __helios__string____add("\u274C failed reqt: \u2757", reqt_3)), result_3)
    };
    __module__StellarHeliosHelpers__REQTgroupUnit = (reqt_4, __useopt__collapsed_5, collapsed_10, callback_12) -> {
        collapsed_11 = __core__ifThenElse(
            __useopt__collapsed_5,
            () -> {
                collapsed_10
            },
            () -> {
                false
            }
        )();
        __module__StellarHeliosHelpers__logGroupUnit(__helios__string____add("\u2757", reqt_4), true, collapsed_11, true, callback_12)
    };
    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {
        tn_1 = __core__ifThenElse(
            __useopt__tn,
            () -> {
                tn
            },
            () -> {
                ""
            }
        )();
        tnBytes_1 = __core__ifThenElse(
            __useopt__tnBytes,
            () -> {
                tnBytes
            },
            () -> {
                __helios__string__encode_utf8(tn_1)()
            }
        )();
        count_1 = __core__ifThenElse(
            __useopt__count,
            () -> {
                count
            },
            () -> {
                1
            }
        )();
        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), "missing reqd tn or tnBytes"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))
    };
    __helios__list[__helios__txoutput]__find = (self_101) -> {
        (fn_15) -> {
            recurse_67 = (recurse_66, lst_12) -> {
                __core__chooseList(lst_12, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));
                    __core__ifThenElse(
                        fn_15(item_6),
                        () -> {
                            item_6
                        },
                        () -> {
                            recurse_66(recurse_66, __core__tailList__safe(lst_12))
                        }
                    )()
                })()
            };
            recurse_67(recurse_67, self_101)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_102) -> {
        __helios__common__length(self_102)
    };
    __helios__map[__helios__bytearray@__helios__int]__length = (self_103) -> {
        __helios__common__length(self_103)
    };
    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_19) -> {
        recurse_69 = (recurse_68, map_20) -> {
            __core__chooseList(map_20, () -> {
                true
            }, () -> {
                head_8 = __core__headList__safe(map_20);
                __core__ifThenElse(
                    __helios__bytearray__is_valid_data(__core__fstPair(head_8)),
                    () -> {
                        __core__ifThenElse(
                            __helios__int__is_valid_data(__core__sndPair(head_8)),
                            () -> {
                                recurse_68(recurse_68, __core__tailList__safe(map_20))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_69(recurse_69, map_19)
    };
    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_35) -> {
        map_21 = __core__unMapData(data_35);
        _ = __core__ifThenElse(
            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_21),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_21
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_104) -> {
        (key_13) -> {
            __helios__common__map_get(self_104, __helios__scriptpurpose____to_data(key_13), (x_4) -> {
                __helios__data__from_data(x_4)
            }, () -> {
                __helios__error("key not found")
            })
        }
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_105) -> {
        (fn_16) -> {
            recurse_71 = (recurse_70, map_22) -> {
                __core__chooseList(map_22, () -> {
                    __helios__error("not found")
                }, () -> {
                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_22)));
                    __core__ifThenElse(
                        fn_16(item_7),
                        () -> {
                            item_7
                        },
                        () -> {
                            recurse_70(recurse_70, __core__tailList__safe(map_22))
                        }
                    )()
                })()
            };
            recurse_71(recurse_71, self_105)
        }
    };
    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {
        targetId = __helios__txinput__output_id(txInput);
        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);
        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {
            __cond = purpose;
            __core__ifThenElse(
                __helios__scriptpurpose__spending____is(__cond),
                () -> {
                    (sp) -> {
                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)
                    }
                },
                () -> {
                    (__1) -> {
                        false
                    }
                }
            )()(__cond)
        });
        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)
    };
    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_36) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_36, __core__bData(#747065), __helios__string__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_36, __core__bData(#406964), __helios__bytearray__is_valid_data),
                    () -> {
                        true
                    },
                    () -> {
                        __core__trace("Warning: invalid data in AnyData.@id", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in AnyData.tpe", () -> {
                    false
                })()
            }
        )()
    };
    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_37) -> {
        ignore = __core__ifThenElse(
            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_37),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid AnyData data", ())
            }
        )();
        data_37
    };
    __module__StellarHeliosHelpers__AnyData[]__id = (self_106) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_106, #406964))
    };
    __module__StellarHeliosHelpers__AnyData[]__type = (self_107) -> {
        __helios__string__from_data(__helios__common__mStruct_field(self_107, #747065))
    };
    __helios__list[__helios__data]__head = (self_108) -> {
        __helios__data__from_data(__core__headList(self_108))
    };
    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {
        __cond_1 = value_5;
        __core__ifThenElse(
            __helios__data__constrdata____is(__cond_1),
            () -> {
                (__lhs_0) -> {
                    fields_10 = __helios__data__constrdata__fields(__lhs_0);
                    __cond_2 = __helios__list[__helios__data]__head(fields_10);
                    __core__ifThenElse(
                        __helios__data__mapdata____is(__cond_2),
                        () -> {
                            (__lhs_0_1) -> {
                                __helios__list[__helios__data]__head(fields_10)
                            }
                        },
                        () -> {
                            (__3) -> {
                                __helios__error("bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map")
                            }
                        }
                    )()(__cond_2)
                }
            },
            () -> {
                (__2) -> {
                    __helios__error("bad cast to mStruct from non-ConstrData")
                }
            }
        )()(__cond_1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {
        (data_38) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_38),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_38),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_38),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {
        (data_39) -> {
            ignore_1 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_39),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateLifecycleActivity data", ())
                }
            )();
            data_39
        }
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_40) -> {
        __helios__common__enum_tag_equals(data_40, 0)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_41) -> {
        __core__chooseData(data_41, () -> {
            pair_12 = __core__unConstrData__safe(data_41);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_12), 0),
                () -> {
                    data_42 = __core__listData(__core__sndPair(pair_12));
                    __core__chooseData(data_42, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_11 = __core__unListData__safe(data_42);
                        __core__chooseList(fields_11, () -> {
                            false
                        }, () -> {
                            head_9 = __core__headList__safe(fields_11);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_9),
                                () -> {
                                    fields_12 = __core__tailList__safe(fields_11);
                                    __core__chooseList(fields_12, () -> {
                                        false
                                    }, () -> {
                                        head_10 = __core__headList__safe(fields_12);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_10),
                                            () -> {
                                                fields_13 = __core__tailList__safe(fields_12);
                                                __core__chooseList(fields_13, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_109) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_109))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_110) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_110))
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_43) -> {
        __helios__common__enum_tag_equals(data_43, 1)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_44) -> {
        __core__chooseData(data_44, () -> {
            pair_13 = __core__unConstrData__safe(data_44);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_13), 1),
                () -> {
                    data_45 = __core__listData(__core__sndPair(pair_13));
                    __core__chooseData(data_45, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_14 = __core__unListData__safe(data_45);
                        __core__chooseList(fields_14, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_46) -> {
        __helios__common__enum_tag_equals(data_46, 2)
    };
    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_47) -> {
        __core__chooseData(data_47, () -> {
            pair_14 = __core__unConstrData__safe(data_47);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_14), 2),
                () -> {
                    data_48 = __core__listData(__core__sndPair(pair_14));
                    __core__chooseData(data_48, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_15 = __core__unListData__safe(data_48);
                        __core__chooseList(fields_15, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;
    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {
        (data_49) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_49),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_49),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_49),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_49),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_49),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_49),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_49),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_49),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            false
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {
        (data_50) -> {
            ignore_2 = __core__ifThenElse(
                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_50),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateRole data", ())
                }
            )();
            data_50
        }
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_51) -> {
        __helios__common__enum_tag_equals(data_51, 0)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_52) -> {
        __core__chooseData(data_52, () -> {
            pair_15 = __core__unConstrData__safe(data_52);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_15), 0),
                () -> {
                    data_53 = __core__listData(__core__sndPair(pair_15));
                    __core__chooseData(data_53, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_16 = __core__unListData__safe(data_53);
                        __core__chooseList(fields_16, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_54) -> {
        __helios__common__enum_tag_equals(data_54, 1)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_55) -> {
        __core__chooseData(data_55, () -> {
            pair_16 = __core__unConstrData__safe(data_55);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_16), 1),
                () -> {
                    data_56 = __core__listData(__core__sndPair(pair_16));
                    __core__chooseData(data_56, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_17 = __core__unListData__safe(data_56);
                        __core__chooseList(fields_17, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_57) -> {
        __helios__common__enum_tag_equals(data_57, 2)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_58) -> {
        __core__chooseData(data_58, () -> {
            pair_17 = __core__unConstrData__safe(data_58);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_17), 2),
                () -> {
                    data_59 = __core__listData(__core__sndPair(pair_17));
                    __core__chooseData(data_59, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_18 = __core__unListData__safe(data_59);
                        __core__chooseList(fields_18, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_60) -> {
        __helios__common__enum_tag_equals(data_60, 3)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_61) -> {
        __core__chooseData(data_61, () -> {
            pair_18 = __core__unConstrData__safe(data_61);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_18), 3),
                () -> {
                    data_62 = __core__listData(__core__sndPair(pair_18));
                    __core__chooseData(data_62, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_19 = __core__unListData__safe(data_62);
                        __core__chooseList(fields_19, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_63) -> {
        __helios__common__enum_tag_equals(data_63, 4)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_64) -> {
        __core__chooseData(data_64, () -> {
            pair_19 = __core__unConstrData__safe(data_64);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_19), 4),
                () -> {
                    data_65 = __core__listData(__core__sndPair(pair_19));
                    __core__chooseData(data_65, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_20 = __core__unListData__safe(data_65);
                        __core__chooseList(fields_20, () -> {
                            false
                        }, () -> {
                            head_11 = __core__headList__safe(fields_20);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_11),
                                () -> {
                                    fields_21 = __core__tailList__safe(fields_20);
                                    __core__chooseList(fields_21, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_111) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_111))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_112) -> {
        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_112)))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_66) -> {
        __helios__common__enum_tag_equals(data_66, 5)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_67) -> {
        __core__chooseData(data_67, () -> {
            pair_20 = __core__unConstrData__safe(data_67);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_20), 5),
                () -> {
                    data_68 = __core__listData(__core__sndPair(pair_20));
                    __core__chooseData(data_68, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_22 = __core__unListData__safe(data_68);
                        __core__chooseList(fields_22, () -> {
                            false
                        }, () -> {
                            head_12 = __core__headList__safe(fields_22);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_12),
                                () -> {
                                    fields_23 = __core__tailList__safe(fields_22);
                                    __core__chooseList(fields_23, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_69) -> {
        __helios__common__enum_tag_equals(data_69, 6)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_70) -> {
        __core__chooseData(data_70, () -> {
            pair_21 = __core__unConstrData__safe(data_70);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_21), 6),
                () -> {
                    data_71 = __core__listData(__core__sndPair(pair_21));
                    __core__chooseData(data_71, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_24 = __core__unListData__safe(data_71);
                        __core__chooseList(fields_24, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {
        __core__constrData(6, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_72) -> {
        __helios__common__enum_tag_equals(data_72, 7)
    };
    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_73) -> {
        __core__chooseData(data_73, () -> {
            pair_22 = __core__unConstrData__safe(data_73);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_22), 7),
                () -> {
                    data_74 = __core__listData(__core__sndPair(pair_22));
                    __core__chooseData(data_74, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_25 = __core__unListData__safe(data_74);
                        __core__chooseList(fields_25, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {
        (data_75) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_75),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_75),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_75),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_75),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_75),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {
        (data_76) -> {
            ignore_3 = __core__ifThenElse(
                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_76),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestActivity data", ())
                }
            )();
            data_76
        }
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_77) -> {
        __helios__common__enum_tag_equals(data_77, 0)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_78) -> {
        __core__chooseData(data_78, () -> {
            pair_23 = __core__unConstrData__safe(data_78);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_23), 0),
                () -> {
                    data_79 = __core__listData(__core__sndPair(pair_23));
                    __core__chooseData(data_79, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_26 = __core__unListData__safe(data_79);
                        __core__chooseList(fields_26, () -> {
                            false
                        }, () -> {
                            head_13 = __core__headList__safe(fields_26);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_13),
                                () -> {
                                    fields_27 = __core__tailList__safe(fields_26);
                                    __core__chooseList(fields_27, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_80) -> {
        __helios__common__enum_tag_equals(data_80, 1)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_81) -> {
        __core__chooseData(data_81, () -> {
            pair_24 = __core__unConstrData__safe(data_81);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_24), 1),
                () -> {
                    data_82 = __core__listData(__core__sndPair(pair_24));
                    __core__chooseData(data_82, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_28 = __core__unListData__safe(data_82);
                        __core__chooseList(fields_28, () -> {
                            false
                        }, () -> {
                            head_14 = __core__headList__safe(fields_28);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_14),
                                () -> {
                                    fields_29 = __core__tailList__safe(fields_28);
                                    __core__chooseList(fields_29, () -> {
                                        false
                                    }, () -> {
                                        head_15 = __core__headList__safe(fields_29);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_15),
                                            () -> {
                                                fields_30 = __core__tailList__safe(fields_29);
                                                __core__chooseList(fields_30, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_83) -> {
        __helios__common__enum_tag_equals(data_83, 2)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_84) -> {
        __core__chooseData(data_84, () -> {
            pair_25 = __core__unConstrData__safe(data_84);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_25), 2),
                () -> {
                    data_85 = __core__listData(__core__sndPair(pair_25));
                    __core__chooseData(data_85, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_31 = __core__unListData__safe(data_85);
                        __core__chooseList(fields_31, () -> {
                            false
                        }, () -> {
                            head_16 = __core__headList__safe(fields_31);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_16),
                                () -> {
                                    fields_32 = __core__tailList__safe(fields_31);
                                    __core__chooseList(fields_32, () -> {
                                        false
                                    }, () -> {
                                        head_17 = __core__headList__safe(fields_32);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_17),
                                            () -> {
                                                fields_33 = __core__tailList__safe(fields_32);
                                                __core__chooseList(fields_33, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_113) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_113))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_114) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_114))
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_86) -> {
        __helios__common__enum_tag_equals(data_86, 3)
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_87) -> {
        __core__chooseData(data_87, () -> {
            pair_26 = __core__unConstrData__safe(data_87);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_26), 3),
                () -> {
                    data_88 = __core__listData(__core__sndPair(pair_26));
                    __core__chooseData(data_88, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_34 = __core__unListData__safe(data_88);
                        __core__chooseList(fields_34, () -> {
                            false
                        }, () -> {
                            head_18 = __core__headList__safe(fields_34);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_18),
                                () -> {
                                    fields_35 = __core__tailList__safe(fields_34);
                                    __core__chooseList(fields_35, () -> {
                                        false
                                    }, () -> {
                                        head_19 = __core__headList__safe(fields_35);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_19),
                                            () -> {
                                                fields_36 = __core__tailList__safe(fields_35);
                                                __core__chooseList(fields_36, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_89) -> {
        __core__chooseData(data_89, () -> {
            pair_27 = __core__unConstrData__safe(data_89);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_27), 4),
                () -> {
                    data_90 = __core__listData(__core__sndPair(pair_27));
                    __core__chooseData(data_90, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_37 = __core__unListData__safe(data_90);
                        __core__chooseList(fields_37, () -> {
                            false
                        }, () -> {
                            head_20 = __core__headList__safe(fields_37);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_20),
                                () -> {
                                    fields_38 = __core__tailList__safe(fields_37);
                                    __core__chooseList(fields_38, () -> {
                                        false
                                    }, () -> {
                                        head_21 = __core__headList__safe(fields_38);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_21),
                                            () -> {
                                                fields_39 = __core__tailList__safe(fields_38);
                                                __core__chooseList(fields_39, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {
        (data_91) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_91),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_91),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_91),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {
        (data_92) -> {
            ignore_4 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_92),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingDelegateAction data", ())
                }
            )();
            data_92
        }
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_93) -> {
        __helios__common__enum_tag_equals(data_93, 0)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_94) -> {
        __core__chooseData(data_94, () -> {
            pair_28 = __core__unConstrData__safe(data_94);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_28), 0),
                () -> {
                    data_95 = __core__listData(__core__sndPair(pair_28));
                    __core__chooseData(data_95, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_40 = __core__unListData__safe(data_95);
                        __core__chooseList(fields_40, () -> {
                            false
                        }, () -> {
                            head_22 = __core__headList__safe(fields_40);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_22),
                                () -> {
                                    fields_41 = __core__tailList__safe(fields_40);
                                    __core__chooseList(fields_41, () -> {
                                        false
                                    }, () -> {
                                        head_23 = __core__headList__safe(fields_41);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_23),
                                            () -> {
                                                fields_42 = __core__tailList__safe(fields_41);
                                                __core__chooseList(fields_42, () -> {
                                                    false
                                                }, () -> {
                                                    head_24 = __core__headList__safe(fields_42);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_24),
                                                        () -> {
                                                            fields_43 = __core__tailList__safe(fields_42);
                                                            __core__chooseList(fields_43, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_115) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_115))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_116) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_116))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_117) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_117))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_96) -> {
        __helios__common__enum_tag_equals(data_96, 1)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_97) -> {
        __core__chooseData(data_97, () -> {
            pair_29 = __core__unConstrData__safe(data_97);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_29), 1),
                () -> {
                    data_98 = __core__listData(__core__sndPair(pair_29));
                    __core__chooseData(data_98, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_44 = __core__unListData__safe(data_98);
                        __core__chooseList(fields_44, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_99) -> {
        __helios__common__enum_tag_equals(data_99, 2)
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_100) -> {
        __core__chooseData(data_100, () -> {
            pair_30 = __core__unConstrData__safe(data_100);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_30), 2),
                () -> {
                    data_101 = __core__listData(__core__sndPair(pair_30));
                    __core__chooseData(data_101, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_45 = __core__unListData__safe(data_101);
                        __core__chooseList(fields_45, () -> {
                            false
                        }, () -> {
                            head_25 = __core__headList__safe(fields_45);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_25),
                                () -> {
                                    fields_46 = __core__tailList__safe(fields_45);
                                    __core__chooseList(fields_46, () -> {
                                        false
                                    }, () -> {
                                        head_26 = __core__headList__safe(fields_46);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_26),
                                            () -> {
                                                fields_47 = __core__tailList__safe(fields_46);
                                                __core__chooseList(fields_47, () -> {
                                                    false
                                                }, () -> {
                                                    head_27 = __core__headList__safe(fields_47);
                                                    __core__ifThenElse(
                                                        __helios__string__is_valid_data(head_27),
                                                        () -> {
                                                            fields_48 = __core__tailList__safe(fields_47);
                                                            __core__chooseList(fields_48, () -> {
                                                                false
                                                            }, () -> {
                                                                head_28 = __core__headList__safe(fields_48);
                                                                __core__ifThenElse(
                                                                    __helios__assetclass__is_valid_data(head_28),
                                                                    () -> {
                                                                        fields_49 = __core__tailList__safe(fields_48);
                                                                        __core__chooseList(fields_49, true, false)
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_118) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_118))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_119) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_119))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_120) -> {
        __helios__string__from_data(__helios__common__enum_field_2(self_120))
    };
    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_121) -> {
        __helios__assetclass__from_data(__helios__common__enum_field_3(self_121))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {
        (data_102) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_102),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_102),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_102),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_102),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_102),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_102),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_102),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    false
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {
        (data_103) -> {
            ignore_5 = __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_103),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoLifecycleActivity data", ())
                }
            )();
            data_103
        }
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_104) -> {
        __helios__common__enum_tag_equals(data_104, 0)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_105) -> {
        __core__chooseData(data_105, () -> {
            pair_31 = __core__unConstrData__safe(data_105);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_31), 0),
                () -> {
                    data_106 = __core__listData(__core__sndPair(pair_31));
                    __core__chooseData(data_106, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_50 = __core__unListData__safe(data_106);
                        __core__chooseList(fields_50, () -> {
                            false
                        }, () -> {
                            head_29 = __core__headList__safe(fields_50);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_29),
                                () -> {
                                    fields_51 = __core__tailList__safe(fields_50);
                                    __core__chooseList(fields_51, () -> {
                                        false
                                    }, () -> {
                                        head_30 = __core__headList__safe(fields_51);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_30),
                                            () -> {
                                                fields_52 = __core__tailList__safe(fields_51);
                                                __core__chooseList(fields_52, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_122) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_122))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_123) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_123))
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_107) -> {
        __helios__common__enum_tag_equals(data_107, 1)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_108) -> {
        __core__chooseData(data_108, () -> {
            pair_32 = __core__unConstrData__safe(data_108);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_32), 1),
                () -> {
                    data_109 = __core__listData(__core__sndPair(pair_32));
                    __core__chooseData(data_109, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_53 = __core__unListData__safe(data_109);
                        __core__chooseList(fields_53, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_110) -> {
        __helios__common__enum_tag_equals(data_110, 2)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_111) -> {
        __core__chooseData(data_111, () -> {
            pair_33 = __core__unConstrData__safe(data_111);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_33), 2),
                () -> {
                    data_112 = __core__listData(__core__sndPair(pair_33));
                    __core__chooseData(data_112, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_54 = __core__unListData__safe(data_112);
                        __core__chooseList(fields_54, () -> {
                            false
                        }, () -> {
                            head_31 = __core__headList__safe(fields_54);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_31),
                                () -> {
                                    fields_55 = __core__tailList__safe(fields_54);
                                    __core__chooseList(fields_55, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_113) -> {
        __helios__common__enum_tag_equals(data_113, 3)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_114) -> {
        __core__chooseData(data_114, () -> {
            pair_34 = __core__unConstrData__safe(data_114);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_34), 3),
                () -> {
                    data_115 = __core__listData(__core__sndPair(pair_34));
                    __core__chooseData(data_115, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_56 = __core__unListData__safe(data_115);
                        __core__chooseList(fields_56, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_116) -> {
        __helios__common__enum_tag_equals(data_116, 4)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_117) -> {
        __core__chooseData(data_117, () -> {
            pair_35 = __core__unConstrData__safe(data_117);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_35), 4),
                () -> {
                    data_118 = __core__listData(__core__sndPair(pair_35));
                    __core__chooseData(data_118, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_57 = __core__unListData__safe(data_118);
                        __core__chooseList(fields_57, () -> {
                            false
                        }, () -> {
                            head_32 = __core__headList__safe(fields_57);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_32),
                                () -> {
                                    fields_58 = __core__tailList__safe(fields_57);
                                    __core__chooseList(fields_58, () -> {
                                        false
                                    }, () -> {
                                        head_33 = __core__headList__safe(fields_58);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_33),
                                            () -> {
                                                fields_59 = __core__tailList__safe(fields_58);
                                                __core__chooseList(fields_59, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_119) -> {
        __helios__common__enum_tag_equals(data_119, 5)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_120) -> {
        __core__chooseData(data_120, () -> {
            pair_36 = __core__unConstrData__safe(data_120);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_36), 5),
                () -> {
                    data_121 = __core__listData(__core__sndPair(pair_36));
                    __core__chooseData(data_121, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_60 = __core__unListData__safe(data_121);
                        __core__chooseList(fields_60, () -> {
                            false
                        }, () -> {
                            head_34 = __core__headList__safe(fields_60);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_34),
                                () -> {
                                    fields_61 = __core__tailList__safe(fields_60);
                                    __core__chooseList(fields_61, () -> {
                                        false
                                    }, () -> {
                                        head_35 = __core__headList__safe(fields_61);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_35),
                                            () -> {
                                                fields_62 = __core__tailList__safe(fields_61);
                                                __core__chooseList(fields_62, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_122) -> {
        __helios__common__enum_tag_equals(data_122, 6)
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_123) -> {
        __core__chooseData(data_123, () -> {
            pair_37 = __core__unConstrData__safe(data_123);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_37), 6),
                () -> {
                    data_124 = __core__listData(__core__sndPair(pair_37));
                    __core__chooseData(data_124, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_63 = __core__unListData__safe(data_124);
                        __core__chooseList(fields_63, () -> {
                            false
                        }, () -> {
                            head_36 = __core__headList__safe(fields_63);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_36),
                                () -> {
                                    fields_64 = __core__tailList__safe(fields_63);
                                    __core__chooseList(fields_64, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_124) -> {
        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_124))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data) -> {
        (data_125) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data(data_125),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_125),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_125),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_125),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_125),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_125),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_125),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_125),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_125),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_125),
                                                                                        () -> {
                                                                                            true
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __helios__list[__helios__string]__join = (self_125) -> {
        (__useopt__separator, separator) -> {
            separator_1 = __core__ifThenElse(
                __useopt__separator,
                separator,
                ""
            );
            recurse_73 = (recurse_72, lst_13, sep) -> {
                __core__chooseList(lst_13, () -> {
                    ""
                }, () -> {
                    __helios__string____add(__helios__string____add(sep, __helios__string__from_data(__core__headList__safe(lst_13))), recurse_72(recurse_72, __core__tailList__safe(lst_13), separator_1))
                })()
            };
            recurse_73(recurse_73, self_125, "")
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_1) -> {
        (data_126) -> {
            ignore_6 = __core__ifThenElse(
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_1)(data_126),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid AbstractDelegateActivitiesEnum data", ())
                }
            )();
            data_126
        }
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_127) -> {
        __core__chooseData(data_127, () -> {
            pair_38 = __core__unConstrData__safe(data_127);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_38), 0),
                () -> {
                    data_128 = __core__listData(__core__sndPair(pair_38));
                    __core__chooseData(data_128, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_65 = __core__unListData__safe(data_128);
                        __core__chooseList(fields_65, () -> {
                            false
                        }, () -> {
                            head_37 = __core__headList__safe(fields_65);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_37),
                                () -> {
                                    fields_66 = __core__tailList__safe(fields_65);
                                    __core__chooseList(fields_66, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_129) -> {
        __helios__common__enum_tag_equals(data_129, 1)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_130) -> {
        __core__chooseData(data_130, () -> {
            pair_39 = __core__unConstrData__safe(data_130);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_39), 1),
                () -> {
                    data_131 = __core__listData(__core__sndPair(pair_39));
                    __core__chooseData(data_131, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_67 = __core__unListData__safe(data_131);
                        __core__chooseList(fields_67, () -> {
                            false
                        }, () -> {
                            head_38 = __core__headList__safe(fields_67);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_38),
                                () -> {
                                    fields_68 = __core__tailList__safe(fields_67);
                                    __core__chooseList(fields_68, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_126) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_126))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_132) -> {
        __helios__common__enum_tag_equals(data_132, 2)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_133) -> {
        __core__chooseData(data_133, () -> {
            pair_40 = __core__unConstrData__safe(data_133);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_40), 2),
                () -> {
                    data_134 = __core__listData(__core__sndPair(pair_40));
                    __core__chooseData(data_134, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_69 = __core__unListData__safe(data_134);
                        __core__chooseList(fields_69, () -> {
                            false
                        }, () -> {
                            head_39 = __core__headList__safe(fields_69);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_39),
                                () -> {
                                    fields_70 = __core__tailList__safe(fields_69);
                                    __core__chooseList(fields_70, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_127) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_127))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_135) -> {
        __helios__common__enum_tag_equals(data_135, 3)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_136) -> {
        __core__chooseData(data_136, () -> {
            pair_41 = __core__unConstrData__safe(data_136);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_41), 3),
                () -> {
                    data_137 = __core__listData(__core__sndPair(pair_41));
                    __core__chooseData(data_137, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_71 = __core__unListData__safe(data_137);
                        __core__chooseList(fields_71, () -> {
                            false
                        }, () -> {
                            head_40 = __core__headList__safe(fields_71);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_40),
                                () -> {
                                    fields_72 = __core__tailList__safe(fields_71);
                                    __core__chooseList(fields_72, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_128) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_128))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_138) -> {
        __core__chooseData(data_138, () -> {
            pair_42 = __core__unConstrData__safe(data_138);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_42), 4),
                () -> {
                    data_139 = __core__listData(__core__sndPair(pair_42));
                    __core__chooseData(data_139, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_73 = __core__unListData__safe(data_139);
                        __core__chooseList(fields_73, () -> {
                            false
                        }, () -> {
                            head_41 = __core__headList__safe(fields_73);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_41),
                                () -> {
                                    fields_74 = __core__tailList__safe(fields_73);
                                    __core__chooseList(fields_74, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_140) -> {
        __helios__common__enum_tag_equals(data_140, 5)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_141) -> {
        __core__chooseData(data_141, () -> {
            pair_43 = __core__unConstrData__safe(data_141);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_43), 5),
                () -> {
                    data_142 = __core__listData(__core__sndPair(pair_43));
                    __core__chooseData(data_142, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_75 = __core__unListData__safe(data_142);
                        __core__chooseList(fields_75, () -> {
                            false
                        }, () -> {
                            head_42 = __core__headList__safe(fields_75);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_42),
                                () -> {
                                    fields_76 = __core__tailList__safe(fields_75);
                                    __core__chooseList(fields_76, () -> {
                                        false
                                    }, () -> {
                                        head_43 = __core__headList__safe(fields_76);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_43),
                                            () -> {
                                                fields_77 = __core__tailList__safe(fields_76);
                                                __core__chooseList(fields_77, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_143) -> {
        __helios__common__enum_tag_equals(data_143, 6)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_144) -> {
        __core__chooseData(data_144, () -> {
            pair_44 = __core__unConstrData__safe(data_144);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_44), 6),
                () -> {
                    data_145 = __core__listData(__core__sndPair(pair_44));
                    __core__chooseData(data_145, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_78 = __core__unListData__safe(data_145);
                        __core__chooseList(fields_78, () -> {
                            false
                        }, () -> {
                            head_44 = __core__headList__safe(fields_78);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_44),
                                () -> {
                                    fields_79 = __core__tailList__safe(fields_78);
                                    __core__chooseList(fields_79, () -> {
                                        false
                                    }, () -> {
                                        head_45 = __core__headList__safe(fields_79);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_45),
                                            () -> {
                                                fields_80 = __core__tailList__safe(fields_79);
                                                __core__chooseList(fields_80, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_146) -> {
        __helios__common__enum_tag_equals(data_146, 7)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_147) -> {
        __core__chooseData(data_147, () -> {
            pair_45 = __core__unConstrData__safe(data_147);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_45), 7),
                () -> {
                    data_148 = __core__listData(__core__sndPair(pair_45));
                    __core__chooseData(data_148, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_81 = __core__unListData__safe(data_148);
                        __core__chooseList(fields_81, () -> {
                            false
                        }, () -> {
                            head_46 = __core__headList__safe(fields_81);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_46),
                                () -> {
                                    fields_82 = __core__tailList__safe(fields_81);
                                    __core__chooseList(fields_82, () -> {
                                        false
                                    }, () -> {
                                        head_47 = __core__headList__safe(fields_82);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_47),
                                            () -> {
                                                fields_83 = __core__tailList__safe(fields_82);
                                                __core__chooseList(fields_83, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_149) -> {
        __helios__common__enum_tag_equals(data_149, 8)
    };
    __helios__list[__helios__data]__is_valid_data_internal = (lst_14) -> {
        recurse_75 = (recurse_74, lst_15) -> {
            __core__chooseList(lst_15, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __helios__data__is_valid_data(__core__headList__safe(lst_15)),
                    () -> {
                        recurse_74(recurse_74, __core__tailList__safe(lst_15))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_75(recurse_75, lst_14)
    };
    __helios__list[__helios__data]__is_valid_data = (data_150) -> {
        __core__chooseData(data_150, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_150))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_151) -> {
        __core__chooseData(data_151, () -> {
            pair_46 = __core__unConstrData__safe(data_151);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_46), 8),
                () -> {
                    data_152 = __core__listData(__core__sndPair(pair_46));
                    __core__chooseData(data_152, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_84 = __core__unListData__safe(data_152);
                        __core__chooseList(fields_84, () -> {
                            false
                        }, () -> {
                            head_48 = __core__headList__safe(fields_84);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_48),
                                () -> {
                                    fields_85 = __core__tailList__safe(fields_84);
                                    __core__chooseList(fields_85, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__helios__data]__from_data = (data_153) -> {
        lst_16 = __core__unListData(data_153);
        __4 = __core__ifThenElse(
            __helios__list[__helios__data]__is_valid_data_internal(lst_16),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_16
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_129) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_129))
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities____is = (data_154) -> {
        __helios__common__enum_tag_equals(data_154, 9)
    };
    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2 = (data_155) -> {
        __core__chooseData(data_155, () -> {
            pair_47 = __core__unConstrData__safe(data_155);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_47), 9),
                () -> {
                    data_156 = __core__listData(__core__sndPair(pair_47));
                    __core__chooseData(data_156, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_86 = __core__unListData__safe(data_156);
                        __core__chooseList(fields_86, () -> {
                            false
                        }, () -> {
                            head_49 = __core__headList__safe(fields_86);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_49),
                                () -> {
                                    fields_87 = __core__tailList__safe(fields_86);
                                    __core__chooseList(fields_87, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_157) -> {
        __helios__common__enum_tag_equals(data_157, 0)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_158) -> {
        __helios__common__enum_tag_equals(data_158, 1)
    };
    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __helios__option[__helios__validatorhash]__is_valid_data = (data_159) -> {
        __core__chooseData(data_159, () -> {
            pair_48 = __core__unConstrData__safe(data_159);
            index_6 = __core__fstPair(pair_48);
            fields_88 = __core__sndPair(pair_48);
            __core__ifThenElse(
                __core__equalsInteger(index_6, 0),
                () -> {
                    __core__chooseList(fields_88, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_88), () -> {
                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_88))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_6, 1),
                        () -> {
                            __core__chooseList(fields_88, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_160) -> {
        __core__chooseData(data_160, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_89 = __core__unListData__safe(data_160);
            __core__chooseList(fields_89, () -> {
                false
            }, () -> {
                head_50 = __core__headList__safe(fields_89);
                __core__ifThenElse(
                    __helios__string__is_valid_data(head_50),
                    () -> {
                        fields_90 = __core__tailList__safe(fields_89);
                        __core__chooseList(fields_90, () -> {
                            false
                        }, () -> {
                            head_51 = __core__headList__safe(fields_90);
                            __core__ifThenElse(
                                __helios__option[__helios__validatorhash]__is_valid_data(head_51),
                                () -> {
                                    fields_91 = __core__tailList__safe(fields_90);
                                    __core__chooseList(fields_91, () -> {
                                        false
                                    }, () -> {
                                        head_52 = __core__headList__safe(fields_91);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_52),
                                            () -> {
                                                fields_92 = __core__tailList__safe(fields_91);
                                                __core__chooseList(fields_92, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_161) -> {
        ignore_7 = __core__ifThenElse(
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_161),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid RelativeDelegateLink data", ())
            }
        )();
        __core__unListData(data_161)
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_130) -> {
        __helios__string__from_data(__helios__common__struct_field_0(self_130))
    };
    __helios__option[__helios__validatorhash]__from_data = (data_162) -> {
        __5 = __core__ifThenElse(
            __helios__option[__helios__validatorhash]__is_valid_data(data_162),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_162
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_131) -> {
        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_131))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken = (self_132) -> {
        (mph_11) -> {
            __module__StellarHeliosHelpers__mkTv(mph_11, true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_132), false, (), false, ())
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_133) -> {
        (mph_12) -> {
            __helios__assetclass__new(mph_12, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_133))())
        }
    };
    __helios__option[__helios__txinput]__none____is = (data_163) -> {
        __helios__common__enum_tag_equals(data_163, 1)
    };
    __helios__option[__helios__bool]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bool]__some____new = (some_1) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_1)))
    };
    __helios__option[__helios__txinput]__some__some = (self_134) -> {
        __helios__txinput__from_data(__helios__common__enum_field_0(self_134))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {
        (self_135) -> {
            (inputs, mph_13, inputRequired) -> {
                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_135)(inputs, mph_13, true, inputRequired);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_3),
                    () -> {
                        (__lhs_0_5) -> {
                            __helios__option[__helios__bool]__none____new()
                        }
                    },
                    () -> {
                        (__lhs_0_2) -> {
                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);
                            (spendDelegateIsValid) -> {
                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, "no way o"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))
                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),
                                () -> {
                                    (__lhs_0_3) -> {
                                        a_13 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);
                                        __cond_5 = a_13;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),
                                            () -> {
                                                (__lhs_0_4) -> {
                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_135)(mph_13, false, (), false, ())
                                                }
                                            },
                                            () -> {
                                                (__7) -> {
                                                    __helios__error(__helios__string____add("delegate not ValidatingSettings: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_135)))
                                                }
                                            }
                                        )()(__cond_5)
                                    }
                                },
                                () -> {
                                    (__6) -> {
                                        __helios__error("no way n")
                                    }
                                }
                            )()(__cond_4))
                        }
                    }
                )()(__cond_3)
            }
        }
    };
    __helios__option[__helios__validatorhash]__none____is = (data_164) -> {
        __helios__common__enum_tag_equals(data_164, 1)
    };
    __helios__option[__helios__txinput]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__txinput]__some____is = (data_165) -> {
        __helios__common__enum_tag_equals(data_165, 0)
    };
    __helios__list[__helios__txinput]__find_safe = (self_136) -> {
        (fn_17) -> {
            __helios__common__find_safe(self_136, (item_8) -> {
                fn_17(__helios__txinput__from_data(item_8))
            }, __helios__common__identity)
        }
    };
    __helios__option[__helios__validatorhash]__some__some = (self_137) -> {
        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_137))
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_138) -> {
        (inputs_1, mph_14, __useopt__required, required) -> {
            required_1 = __core__ifThenElse(
                __useopt__required,
                () -> {
                    required
                },
                () -> {
                    true
                }
            )();
            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_138);
            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_138);
            __core__ifThenElse(
                __helios__option[__helios__validatorhash]__none____is(__cond_6),
                () -> {
                    (__lhs_0_8) -> {
                        __core__ifThenElse(
                            required_1,
                            () -> {
                                __helios__error(__helios__string____add("\u274C\u274C \u27A1\uFE0F \u{1F481} missing required input with dgTkn ", uutName))
                            },
                            () -> {
                                () -> {
                                    __helios__option[__helios__txinput]__none____new()
                                }()
                            }
                        )()
                    }
                },
                () -> {
                    (__lhs_0_6) -> {
                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);
                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);
                        ac = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uutName)());
                        __core__chooseUnit(__helios__print(__helios__string____add("  -- seeking input dgTkn: ", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_7) -> {
                            __helios__bool__and(() -> {
                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_7)), needsAddrWithCred)
                            }, () -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_7))(ac), 0)
                            })
                        });
                        __core__ifThenElse(
                            __helios__option[__helios__txinput]__some____is(__cond_7),
                            () -> {
                                (foundGood) -> {
                                    __core__chooseUnit(__helios__print("     \u2705 \u27A1\uFE0F  \u{1F481} found ^ input dgTkn"), foundGood)
                                }
                            },
                            () -> {
                                (__lhs_0_7) -> {
                                    __core__ifThenElse(
                                        required_1,
                                        () -> {
                                            __helios__error(__helios__string____add("_\u274C \u27A1\uFE0F  \u{1F481} missing req'd input dgTkn (at script addr) ", uutName))
                                        },
                                        () -> {
                                            () -> {
                                                __core__chooseUnit(__helios__print(" <- \u{1F6AB} \u27A1\uFE0F \u{1F481} no input with ^ dgTkn; not req'd; returning false
"), __helios__option[__helios__txinput]__none____new())
                                            }()
                                        }
                                    )()
                                }
                            }
                        )()(__cond_7))
                    }
                }
            )()(__cond_6)
        }
    };
    __helios__option[__helios__validatorhash]__some____is = (data_166) -> {
        __helios__common__enum_tag_equals(data_166, 0)
    };
    __helios__option[__helios__txoutput]__some____is = (data_167) -> {
        __helios__common__enum_tag_equals(data_167, 0)
    };
    __helios__list[__helios__txoutput]__find_safe = (self_139) -> {
        (fn_18) -> {
            __helios__common__find_safe(self_139, (item_9) -> {
                fn_18(__helios__txoutput__from_data(item_9))
            }, __helios__common__identity)
        }
    };
    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_140) -> {
        (mph_15, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {
            required_3 = __core__ifThenElse(
                __useopt__required_1,
                () -> {
                    required_2
                },
                () -> {
                    true
                }
            )();
            createdOrReturned_1 = __core__ifThenElse(
                __useopt__createdOrReturned,
                () -> {
                    createdOrReturned
                },
                () -> {
                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()
                }
            )();
            __lhs_0_9 = self_140;
            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);
            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);
            ac_1 = __helios__assetclass__new(mph_15, __helios__string__encode_utf8(uut)());
            (cOrR) -> {
                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(" \u2B05\uFE0F \u{1F50E} \u{1F481} expect dgTkn ", cOrR), ": "), uut)), (hasDelegate) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__and(() -> {
                            __helios__bool____not(hasDelegate)
                        }, () -> {
                            required_3
                        }),
                        () -> {
                            __cond_11 = createdOrReturned_1;
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),
                                () -> {
                                    (__lhs_0_18) -> {
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not created: ", uut))
                                    }
                                },
                                () -> {
                                    (__lhs_0_16) -> {
                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_140)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_15, true, true);
                                        __helios__error(__helios__string____add("\u2B05\uFE0F \u274C \u{1F481} dgTkn not returned: ", uut))
                                    }
                                }
                            )()(__cond_11)
                        },
                        () -> {
                            () -> {
                                __core__ifThenElse(
                                    hasDelegate,
                                    () -> {
                                        __helios__print(__helios__string____add(__helios__string____add("\u2705 \u2B05\uFE0F \u{1F481} ok:  ^ dgTkn has ", cOrR), " a valid output"))
                                    },
                                    () -> {
                                        () -> {
                                            __helios__print(" \u2B05\uFE0F  ok \u{1F6AB}\u{1F481} no delegate but not req'd; false")
                                        }()
                                    }
                                )()
                            }()
                        }
                    )(), hasDelegate)
                }(__cond_9 = validatorHash;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_9),
                    () -> {
                        (__lhs_0_15) -> {
                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);
                            __core__chooseUnit(__helios__print(__helios__string____add("  ... ^ sent to validator: ", __helios__validatorhash__show(vh_3)())), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))
                        }
                    },
                    () -> {
                        (__lhs_0_12) -> {
                            __core__chooseUnit(__helios__print("   (to anywhere)"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {
                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_10),
                                () -> {
                                    (__lhs_0_14) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_13) -> {
                                        false
                                    }
                                }
                            )()(__cond_10))
                        }
                    }
                )()(__cond_9)))
            }(__cond_8 = createdOrReturned_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),
                () -> {
                    (__lhs_0_11) -> {
                        "returned"
                    }
                },
                () -> {
                    (__lhs_0_10) -> {
                        "created"
                    }
                }
            )()(__cond_8))
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_168) -> {
        __core__chooseData(data_168, () -> {
            pair_49 = __core__unConstrData__safe(data_168);
            index_7 = __core__fstPair(pair_49);
            fields_93 = __core__sndPair(pair_49);
            __core__ifThenElse(
                __core__equalsInteger(index_7, 0),
                () -> {
                    __core__chooseList(fields_93, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_93), () -> {
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_93))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_7, 1),
                        () -> {
                            __core__chooseList(fields_93, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_169) -> {
        __core__chooseData(data_169, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_94 = __core__unListData__safe(data_169);
            __core__chooseList(fields_94, () -> {
                false
            }, () -> {
                head_53 = __core__headList__safe(fields_94);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_53),
                    () -> {
                        fields_95 = __core__tailList__safe(fields_94);
                        __core__chooseList(fields_95, () -> {
                            false
                        }, () -> {
                            head_54 = __core__headList__safe(fields_95);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_54),
                                () -> {
                                    fields_96 = __core__tailList__safe(fields_95);
                                    __core__chooseList(fields_96, () -> {
                                        false
                                    }, () -> {
                                        head_55 = __core__headList__safe(fields_96);
                                        __core__ifThenElse(
                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_55),
                                            () -> {
                                                fields_97 = __core__tailList__safe(fields_96);
                                                __core__chooseList(fields_97, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_170) -> {
        ignore_8 = __core__ifThenElse(
            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_170),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid PendingDelegateChange data", ())
            }
        )();
        __core__unListData(data_170)
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_141) -> {
        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_141))
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_142) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_142))
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_171) -> {
        __8 = __core__ifThenElse(
            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_171),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_171
    };
    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_143) -> {
        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_143))
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {
        (data_172) -> {
            __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_172),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_172),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {
        (data_173) -> {
            ignore_9 = __core__ifThenElse(
                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_173),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid PendingCharterChange data", ())
                }
            )();
            data_173
        }
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_174) -> {
        __helios__common__enum_tag_equals(data_174, 0)
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_175) -> {
        __core__chooseData(data_175, () -> {
            pair_50 = __core__unConstrData__safe(data_175);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_50), 0),
                () -> {
                    data_176 = __core__listData(__core__sndPair(pair_50));
                    __core__chooseData(data_176, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_98 = __core__unListData__safe(data_176);
                        __core__chooseList(fields_98, () -> {
                            false
                        }, () -> {
                            head_56 = __core__headList__safe(fields_98);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_56),
                                () -> {
                                    fields_99 = __core__tailList__safe(fields_98);
                                    __core__chooseList(fields_99, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_144) -> {
        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_144))
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_17) -> {
        recurse_77 = (recurse_76, lst_18) -> {
            __core__chooseList(lst_18, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_18)),
                    () -> {
                        recurse_76(recurse_76, __core__tailList__safe(lst_18))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_77(recurse_77, lst_17)
    };
    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_177) -> {
        __core__chooseData(data_177, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_177))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_178) -> {
        __core__chooseData(data_178, () -> {
            pair_51 = __core__unConstrData__safe(data_178);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_51), 1),
                () -> {
                    data_179 = __core__listData(__core__sndPair(pair_51));
                    __core__chooseData(data_179, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_100 = __core__unListData__safe(data_179);
                        __core__chooseList(fields_100, () -> {
                            false
                        }, () -> {
                            head_57 = __core__headList__safe(fields_100);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_57),
                                () -> {
                                    fields_101 = __core__tailList__safe(fields_100);
                                    __core__chooseList(fields_101, () -> {
                                        false
                                    }, () -> {
                                        head_58 = __core__headList__safe(fields_101);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_58),
                                            () -> {
                                                fields_102 = __core__tailList__safe(fields_101);
                                                __core__chooseList(fields_102, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_180) -> {
        __core__chooseData(data_180, () -> {
            false
        }, () -> {
            false
        }, () -> {
            fields_103 = __core__unListData__safe(data_180);
            __core__chooseList(fields_103, () -> {
                false
            }, () -> {
                head_59 = __core__headList__safe(fields_103);
                __core__ifThenElse(
                    __helios__address__is_valid_data(head_59),
                    () -> {
                        fields_104 = __core__tailList__safe(fields_103);
                        __core__chooseList(fields_104, () -> {
                            false
                        }, () -> {
                            head_60 = __core__headList__safe(fields_104);
                            __core__ifThenElse(
                                __helios__mintingpolicyhash__is_valid_data(head_60),
                                () -> {
                                    fields_105 = __core__tailList__safe(fields_104);
                                    __core__chooseList(fields_105, () -> {
                                        false
                                    }, () -> {
                                        head_61 = __core__headList__safe(fields_105);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_61),
                                            () -> {
                                                fields_106 = __core__tailList__safe(fields_105);
                                                __core__chooseList(fields_106, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_181) -> {
        ignore_10 = __core__ifThenElse(
            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_181),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid DelegationDetail data", ())
            }
        )();
        __core__unListData(data_181)
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_145) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_145))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_146) -> {
        __helios__bytearray__from_data(__helios__common__struct_field_2(self_146))
    };
    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_147) -> {
        () -> {
            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_147), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_147))
        }
    };
    __helios__list[__helios__txinput]__any = (self_148) -> {
        (fn_19) -> {
            __helios__common__any(self_148, (item_10) -> {
                fn_19(__helios__txinput__from_data(item_10))
            })
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {
        (data_182) -> {
            __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_182),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_182),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_182),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_182),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_182),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    false
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {
        (data_183) -> {
            ignore_11 = __core__ifThenElse(
                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_183),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid ManifestEntryType data", ())
                }
            )();
            data_183
        }
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_184) -> {
        __helios__common__enum_tag_equals(data_184, 0)
    };
    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_185) -> {
        __core__chooseData(data_185, () -> {
            pair_52 = __core__unConstrData__safe(data_185);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_52), 0),
                () -> {
                    data_186 = __core__listData(__core__sndPair(pair_52));
                    __core__chooseData(data_186, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_107 = __core__unListData__safe(data_186);
                        __core__chooseList(fields_107, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_187) -> {
        __helios__common__enum_tag_equals(data_187, 1)
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_188) -> {
        __core__chooseData(data_188, () -> {
            pair_53 = __core__unConstrData__safe(data_188);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_53), 1),
                () -> {
                    data_189 = __core__listData(__core__sndPair(pair_53));
                    __core__chooseData(data_189, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_108 = __core__unListData__safe(data_189);
                        __core__chooseList(fields_108, () -> {
                            false
                        }, () -> {
                            head_62 = __core__headList__safe(fields_108);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_62),
                                () -> {
                                    fields_109 = __core__tailList__safe(fields_108);
                                    __core__chooseList(fields_109, () -> {
                                        false
                                    }, () -> {
                                        head_63 = __core__headList__safe(fields_109);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_63),
                                            () -> {
                                                fields_110 = __core__tailList__safe(fields_109);
                                                __core__chooseList(fields_110, () -> {
                                                    false
                                                }, () -> {
                                                    head_64 = __core__headList__safe(fields_110);
                                                    __core__ifThenElse(
                                                        __helios__int__is_valid_data(head_64),
                                                        () -> {
                                                            fields_111 = __core__tailList__safe(fields_110);
                                                            __core__chooseList(fields_111, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_149) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_149))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_150) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_150))
    };
    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_151) -> {
        __helios__int__from_data(__helios__common__enum_field_2(self_151))
    };
    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_190) -> {
        __core__chooseData(data_190, () -> {
            pair_54 = __core__unConstrData__safe(data_190);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_54), 2),
                () -> {
                    data_191 = __core__listData(__core__sndPair(pair_54));
                    __core__chooseData(data_191, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_112 = __core__unListData__safe(data_191);
                        __core__chooseList(fields_112, () -> {
                            false
                        }, () -> {
                            head_65 = __core__headList__safe(fields_112);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_65),
                                () -> {
                                    fields_113 = __core__tailList__safe(fields_112);
                                    __core__chooseList(fields_113, () -> {
                                        false
                                    }, () -> {
                                        head_66 = __core__headList__safe(fields_113);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_66),
                                            () -> {
                                                fields_114 = __core__tailList__safe(fields_113);
                                                __core__chooseList(fields_114, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_192) -> {
        __core__chooseData(data_192, () -> {
            pair_55 = __core__unConstrData__safe(data_192);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_55), 3),
                () -> {
                    data_193 = __core__listData(__core__sndPair(pair_55));
                    __core__chooseData(data_193, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_115 = __core__unListData__safe(data_193);
                        __core__chooseList(fields_115, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_194) -> {
        __core__chooseData(data_194, () -> {
            pair_56 = __core__unConstrData__safe(data_194);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_56), 4),
                () -> {
                    data_195 = __core__listData(__core__sndPair(pair_56));
                    __core__chooseData(data_195, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_116 = __core__unListData__safe(data_195);
                        __core__chooseList(fields_116, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_196) -> {
        __core__chooseData(data_196, () -> {
            pair_57 = __core__unConstrData__safe(data_196);
            index_8 = __core__fstPair(pair_57);
            fields_117 = __core__sndPair(pair_57);
            __core__ifThenElse(
                __core__equalsInteger(index_8, 0),
                () -> {
                    __core__chooseList(fields_117, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_117), () -> {
                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_117))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_8, 1),
                        () -> {
                            __core__chooseList(fields_117, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_197) -> {
        __core__ifThenElse(
            __helios__common__test_mStruct_field(data_197, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),
            () -> {
                __core__ifThenElse(
                    __helios__common__test_mStruct_field(data_197, __core__bData(#746e), __helios__bytearray__is_valid_data),
                    () -> {
                        __core__ifThenElse(
                            __helios__common__test_mStruct_field(data_197, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),
                            () -> {
                                true
                            },
                            () -> {
                                __core__trace("Warning: invalid data in CapoManifestEntry.tpe", () -> {
                                    false
                                })()
                            }
                        )()
                    },
                    () -> {
                        __core__trace("Warning: invalid data in CapoManifestEntry.tn", () -> {
                            false
                        })()
                    }
                )()
            },
            () -> {
                __core__trace("Warning: invalid data in CapoManifestEntry.mph", () -> {
                    false
                })()
            }
        )()
    };
    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_198) -> {
        ignore_12 = __core__ifThenElse(
            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_198),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CapoManifestEntry data", ())
            }
        )();
        data_198
    };
    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_152) -> {
        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_152, #747065))
    };
    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_153) -> {
        __helios__bytearray__from_data(__helios__common__mStruct_field(self_153, #746e))
    };
    __helios__option[__helios__mintingpolicyhash]__from_data = (data_199) -> {
        __9 = __core__ifThenElse(
            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_199),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_199
    };
    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_154) -> {
        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_154, #6d7068))
    };
    __helios__option[__helios__mintingpolicyhash]__some____is = (data_200) -> {
        __helios__common__enum_tag_equals(data_200, 0)
    };
    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {
        (data_201) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_201),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_201),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_201),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {
        (data_202) -> {
            ignore_13 = __core__ifThenElse(
                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_202),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoDatum data", ())
                }
            )();
            data_202
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_19) -> {
        recurse_79 = (recurse_78, lst_20) -> {
            __core__chooseList(lst_20, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_20)),
                    () -> {
                        recurse_78(recurse_78, __core__tailList__safe(lst_20))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_79(recurse_79, lst_19)
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_203) -> {
        __core__chooseData(data_203, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_203))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_23) -> {
        recurse_81 = (recurse_80, map_24) -> {
            __core__chooseList(map_24, () -> {
                true
            }, () -> {
                head_67 = __core__headList__safe(map_24);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_67)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_67)),
                            () -> {
                                recurse_80(recurse_80, __core__tailList__safe(map_24))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_81(recurse_81, map_23)
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_204) -> {
        __core__chooseData(data_204, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_204))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_25) -> {
        recurse_83 = (recurse_82, map_26) -> {
            __core__chooseList(map_26, () -> {
                true
            }, () -> {
                head_68 = __core__headList__safe(map_26);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_68)),
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_68)),
                            () -> {
                                recurse_82(recurse_82, __core__tailList__safe(map_26))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_83(recurse_83, map_25)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_205) -> {
        __core__chooseData(data_205, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_205))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_21) -> {
        recurse_85 = (recurse_84, lst_22) -> {
            __core__chooseList(lst_22, () -> {
                true
            }, () -> {
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_22)),
                    () -> {
                        recurse_84(recurse_84, __core__tailList__safe(lst_22))
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_85(recurse_85, lst_21)
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_206) -> {
        __core__chooseData(data_206, () -> {
            false
        }, () -> {
            false
        }, () -> {
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_206))
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_207) -> {
        __core__chooseData(data_207, () -> {
            pair_58 = __core__unConstrData__safe(data_207);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_58), 0),
                () -> {
                    data_208 = __core__listData(__core__sndPair(pair_58));
                    __core__chooseData(data_208, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_118 = __core__unListData__safe(data_208);
                        __core__chooseList(fields_118, () -> {
                            false
                        }, () -> {
                            head_69 = __core__headList__safe(fields_118);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_69),
                                () -> {
                                    fields_119 = __core__tailList__safe(fields_118);
                                    __core__chooseList(fields_119, () -> {
                                        false
                                    }, () -> {
                                        head_70 = __core__headList__safe(fields_119);
                                        __core__ifThenElse(
                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_70),
                                            () -> {
                                                fields_120 = __core__tailList__safe(fields_119);
                                                __core__chooseList(fields_120, () -> {
                                                    false
                                                }, () -> {
                                                    head_71 = __core__headList__safe(fields_120);
                                                    __core__ifThenElse(
                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_71),
                                                        () -> {
                                                            fields_121 = __core__tailList__safe(fields_120);
                                                            __core__chooseList(fields_121, () -> {
                                                                false
                                                            }, () -> {
                                                                head_72 = __core__headList__safe(fields_121);
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_72),
                                                                    () -> {
                                                                        fields_122 = __core__tailList__safe(fields_121);
                                                                        __core__chooseList(fields_122, () -> {
                                                                            false
                                                                        }, () -> {
                                                                            head_73 = __core__headList__safe(fields_122);
                                                                            __core__ifThenElse(
                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_73),
                                                                                () -> {
                                                                                    fields_123 = __core__tailList__safe(fields_122);
                                                                                    __core__chooseList(fields_123, () -> {
                                                                                        false
                                                                                    }, () -> {
                                                                                        head_74 = __core__headList__safe(fields_123);
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_74),
                                                                                            () -> {
                                                                                                fields_124 = __core__tailList__safe(fields_123);
                                                                                                __core__chooseList(fields_124, () -> {
                                                                                                    false
                                                                                                }, () -> {
                                                                                                    head_75 = __core__headList__safe(fields_124);
                                                                                                    __core__ifThenElse(
                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_75),
                                                                                                        () -> {
                                                                                                            fields_125 = __core__tailList__safe(fields_124);
                                                                                                            __core__chooseList(fields_125, () -> {
                                                                                                                false
                                                                                                            }, () -> {
                                                                                                                head_76 = __core__headList__safe(fields_125);
                                                                                                                __core__ifThenElse(
                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_76),
                                                                                                                    () -> {
                                                                                                                        fields_126 = __core__tailList__safe(fields_125);
                                                                                                                        __core__chooseList(fields_126, true, false)
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        false
                                                                                                                    }
                                                                                                                )()
                                                                                                            })()
                                                                                                        },
                                                                                                        () -> {
                                                                                                            false
                                                                                                        }
                                                                                                    )()
                                                                                                })()
                                                                                            },
                                                                                            () -> {
                                                                                                false
                                                                                            }
                                                                                        )()
                                                                                    })()
                                                                                },
                                                                                () -> {
                                                                                    false
                                                                                }
                                                                            )()
                                                                        })()
                                                                    },
                                                                    () -> {
                                                                        false
                                                                    }
                                                                )()
                                                            })()
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_209) -> {
        ignore_14 = __core__ifThenElse(
            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_209),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid CharterData data", ())
            }
        )();
        data_209
    };
    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;
    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_155) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_155))
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_210) -> {
        lst_23 = __core__unListData(data_210);
        __10 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_23),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_23
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_156) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_156))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_211) -> {
        map_27 = __core__unMapData(data_211);
        __11 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_27),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_27
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_157) -> {
        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_157))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_158) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_158))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_159) -> {
        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_159))
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_160) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_160))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_212) -> {
        map_28 = __core__unMapData(data_212);
        __12 = __core__ifThenElse(
            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_28),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid map data", ())
            }
        )();
        map_28
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_161) -> {
        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_161))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_213) -> {
        lst_24 = __core__unListData(data_213);
        __13 = __core__ifThenElse(
            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_24),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid list data", ())
            }
        )();
        lst_24
    };
    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_162) -> {
        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_162))
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;
    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_214) -> {
        __core__chooseData(data_214, () -> {
            pair_59 = __core__unConstrData__safe(data_214);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_59), 1),
                () -> {
                    data_215 = __core__listData(__core__sndPair(pair_59));
                    __core__chooseData(data_215, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_127 = __core__unListData__safe(data_215);
                        __core__chooseList(fields_127, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_216) -> {
        __helios__common__enum_tag_equals(data_216, 2)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_29) -> {
        recurse_87 = (recurse_86, map_30) -> {
            __core__chooseList(map_30, () -> {
                true
            }, () -> {
                head_77 = __core__headList__safe(map_30);
                __core__ifThenElse(
                    __helios__string__is_valid_data(__core__fstPair(head_77)),
                    () -> {
                        __core__ifThenElse(
                            __helios__data__is_valid_data(__core__sndPair(head_77)),
                            () -> {
                                recurse_86(recurse_86, __core__tailList__safe(map_30))
                            },
                            () -> {
                                false
                            }
                        )()
                    },
                    () -> {
                        false
                    }
                )()
            })()
        };
        recurse_87(recurse_87, map_29)
    };
    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_217) -> {
        __core__chooseData(data_217, () -> {
            false
        }, () -> {
            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_217))
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_218) -> {
        __core__chooseData(data_218, () -> {
            pair_60 = __core__unConstrData__safe(data_218);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_60), 2),
                () -> {
                    data_219 = __core__listData(__core__sndPair(pair_60));
                    __core__chooseData(data_219, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_128 = __core__unListData__safe(data_219);
                        __core__chooseList(fields_128, () -> {
                            false
                        }, () -> {
                            head_78 = __core__headList__safe(fields_128);
                            __core__ifThenElse(
                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_78),
                                () -> {
                                    fields_129 = __core__tailList__safe(fields_128);
                                    __core__chooseList(fields_129, () -> {
                                        false
                                    }, () -> {
                                        head_79 = __core__headList__safe(fields_129);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_79),
                                            () -> {
                                                fields_130 = __core__tailList__safe(fields_129);
                                                __core__chooseList(fields_130, () -> {
                                                    false
                                                }, () -> {
                                                    head_80 = __core__headList__safe(fields_130);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_80),
                                                        () -> {
                                                            fields_131 = __core__tailList__safe(fields_130);
                                                            __core__chooseList(fields_131, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;
    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {
        (data_220) -> {
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_220),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_220),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_220),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {
        (data_221) -> {
            ignore_15 = __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_221),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid cctx_CharterInputType data", ())
                }
            )();
            data_221
        }
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_222) -> {
        __helios__common__enum_tag_equals(data_222, 0)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_223) -> {
        __core__chooseData(data_223, () -> {
            pair_61 = __core__unConstrData__safe(data_223);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_61), 0),
                () -> {
                    data_224 = __core__listData(__core__sndPair(pair_61));
                    __core__chooseData(data_224, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_132 = __core__unListData__safe(data_224);
                        __core__chooseList(fields_132, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {
        __core__constrData(0, __core__mkNilData(()))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_225) -> {
        __helios__common__enum_tag_equals(data_225, 1)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_226) -> {
        __core__chooseData(data_226, () -> {
            pair_62 = __core__unConstrData__safe(data_226);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_62), 1),
                () -> {
                    data_227 = __core__listData(__core__sndPair(pair_62));
                    __core__chooseData(data_227, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_133 = __core__unListData__safe(data_227);
                        __core__chooseList(fields_133, () -> {
                            false
                        }, () -> {
                            head_81 = __core__headList__safe(fields_133);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_81),
                                () -> {
                                    fields_134 = __core__tailList__safe(fields_133);
                                    __core__chooseList(fields_134, () -> {
                                        false
                                    }, () -> {
                                        head_82 = __core__headList__safe(fields_134);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_82),
                                            () -> {
                                                fields_135 = __core__tailList__safe(fields_134);
                                                __core__chooseList(fields_135, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_163) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_163))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_164) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_164))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo) -> {
        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo), __core__mkNilData(()))))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_228) -> {
        __helios__common__enum_tag_equals(data_228, 2)
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_229) -> {
        __core__chooseData(data_229, () -> {
            pair_63 = __core__unConstrData__safe(data_229);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_63), 2),
                () -> {
                    data_230 = __core__listData(__core__sndPair(pair_63));
                    __core__chooseData(data_230, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_136 = __core__unListData__safe(data_230);
                        __core__chooseList(fields_136, () -> {
                            false
                        }, () -> {
                            head_83 = __core__headList__safe(fields_136);
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_83),
                                () -> {
                                    fields_137 = __core__tailList__safe(fields_136);
                                    __core__chooseList(fields_137, () -> {
                                        false
                                    }, () -> {
                                        head_84 = __core__headList__safe(fields_137);
                                        __core__ifThenElse(
                                            __helios__txinput__is_valid_data(head_84),
                                            () -> {
                                                fields_138 = __core__tailList__safe(fields_137);
                                                __core__chooseList(fields_138, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_165) -> {
        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_165))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_166) -> {
        __helios__txinput__from_data(__helios__common__enum_field_1(self_166))
    };
    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_1) -> {
        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))
    };
    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {
        (data_231) -> {
            __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_231),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_231),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_231),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_231),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_231),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_231),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {
        (data_232) -> {
            ignore_16 = __core__ifThenElse(
                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_232),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid CapoActivity data", ())
                }
            )();
            data_232
        }
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_233) -> {
        __helios__common__enum_tag_equals(data_233, 0)
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_234) -> {
        __core__chooseData(data_234, () -> {
            pair_64 = __core__unConstrData__safe(data_234);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_64), 0),
                () -> {
                    data_235 = __core__listData(__core__sndPair(pair_64));
                    __core__chooseData(data_235, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_139 = __core__unListData__safe(data_235);
                        __core__chooseList(fields_139, () -> {
                            false
                        }, () -> {
                            head_85 = __core__headList__safe(fields_139);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_85),
                                () -> {
                                    fields_140 = __core__tailList__safe(fields_139);
                                    __core__chooseList(fields_140, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_167) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_167))
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_236) -> {
        __helios__common__enum_tag_equals(data_236, 1)
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_237) -> {
        __core__chooseData(data_237, () -> {
            pair_65 = __core__unConstrData__safe(data_237);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_65), 1),
                () -> {
                    data_238 = __core__listData(__core__sndPair(pair_65));
                    __core__chooseData(data_238, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_141 = __core__unListData__safe(data_238);
                        __core__chooseList(fields_141, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {
        __core__constrData(1, __core__mkNilData(()))
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_239) -> {
        __helios__common__enum_tag_equals(data_239, 2)
    };
    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_240) -> {
        __core__chooseData(data_240, () -> {
            pair_66 = __core__unConstrData__safe(data_240);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_66), 2),
                () -> {
                    data_241 = __core__listData(__core__sndPair(pair_66));
                    __core__chooseData(data_241, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_142 = __core__unListData__safe(data_241);
                        __core__chooseList(fields_142, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_242) -> {
        __helios__common__enum_tag_equals(data_242, 3)
    };
    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_243) -> {
        __core__chooseData(data_243, () -> {
            pair_67 = __core__unConstrData__safe(data_243);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_67), 3),
                () -> {
                    data_244 = __core__listData(__core__sndPair(pair_67));
                    __core__chooseData(data_244, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_143 = __core__unListData__safe(data_244);
                        __core__chooseList(fields_143, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_245) -> {
        __helios__common__enum_tag_equals(data_245, 4)
    };
    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_246) -> {
        __core__chooseData(data_246, () -> {
            pair_68 = __core__unConstrData__safe(data_246);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_68), 4),
                () -> {
                    data_247 = __core__listData(__core__sndPair(pair_68));
                    __core__chooseData(data_247, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_144 = __core__unListData__safe(data_247);
                        __core__chooseList(fields_144, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_248) -> {
        __helios__common__enum_tag_equals(data_248, 5)
    };
    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_249) -> {
        __core__chooseData(data_249, () -> {
            pair_69 = __core__unConstrData__safe(data_249);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_69), 5),
                () -> {
                    data_250 = __core__listData(__core__sndPair(pair_69));
                    __core__chooseData(data_250, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_145 = __core__unListData__safe(data_250);
                        __core__chooseList(fields_145, true, false)
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__getRefCharterUtxo = (mph_16) -> {
        charterAc = __helios__assetclass__new(mph_16, __helios__string__encode_utf8("charter")());
        hasCharter = (txin) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)
        };
        __core__chooseUnit(__helios__print("  -- getting ref_input for charter"), (charterUtxo) -> {
            charterUtxo
        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_12),
            () -> {
                (__lhs_0_20) -> {
                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);
                    ch
                }
            },
            () -> {
                (__lhs_0_19) -> {
                    __helios__error("Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)")
                }
            }
        )()(__cond_12)))
    };
    __module__CapoHelpers__getTxCharterData = (mph_17, __useopt__refInputs, refInputs) -> {
        refInputs_1 = __core__ifThenElse(
            __useopt__refInputs,
            () -> {
                refInputs
            },
            () -> {
                __helios__tx__ref_inputs(__helios__scriptcontext__tx)
            }
        )();
        charterAc_1 = __helios__assetclass__new(mph_17, __helios__string__encode_utf8("charter")());
        hasCharter_1 = (txin_1) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)
        };
        (charterUtxo_1) -> {
            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);
            ctd
        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_13),
            () -> {
                (__lhs_0_24) -> {
                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);
                    ch_2
                }
            },
            () -> {
                (__lhs_0_21) -> {
                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);
                    __core__ifThenElse(
                        __helios__option[__helios__txinput]__some____is(__cond_14),
                        () -> {
                            (__lhs_0_23) -> {
                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);
                                ch_1
                            }
                        },
                        () -> {
                            (__lhs_0_22) -> {
                                __helios__error("Missing charter inputs / ref_inputs")
                            }
                        }
                    )()(__cond_14)
                }
            }
        )()(__cond_13))
    };
    __helios__option[__helios__string]__is_valid_data = (data_251) -> {
        __core__chooseData(data_251, () -> {
            pair_70 = __core__unConstrData__safe(data_251);
            index_9 = __core__fstPair(pair_70);
            fields_146 = __core__sndPair(pair_70);
            __core__ifThenElse(
                __core__equalsInteger(index_9, 0),
                () -> {
                    __core__chooseList(fields_146, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_146), () -> {
                            __helios__string__is_valid_data(__core__headList__safe(fields_146))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_9, 1),
                        () -> {
                            __core__chooseList(fields_146, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__txinput]__is_valid_data = (data_252) -> {
        __core__chooseData(data_252, () -> {
            pair_71 = __core__unConstrData__safe(data_252);
            index_10 = __core__fstPair(pair_71);
            fields_147 = __core__sndPair(pair_71);
            __core__ifThenElse(
                __core__equalsInteger(index_10, 0),
                () -> {
                    __core__chooseList(fields_147, () -> {
                        false
                    }, () -> {
                        __core__chooseList(__core__tailList__safe(fields_147), () -> {
                            __helios__txinput__is_valid_data(__core__headList__safe(fields_147))
                        }, () -> {
                            false
                        })()
                    })()
                },
                () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_10, 1),
                        () -> {
                            __core__chooseList(fields_147, true, false)
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;
    __module__CapoHelpers__DelegateInput[]__link = (self_168) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_168))
    };
    __module__CapoHelpers__DelegateInput[]__role = (self_169) -> {
        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_169))
    };
    __helios__option[__helios__string]__from_data = (data_253) -> {
        __14 = __core__ifThenElse(
            __helios__option[__helios__string]__is_valid_data(data_253),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_253
    };
    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_170) -> {
        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_170))
    };
    __helios__option[__helios__txinput]__from_data = (data_254) -> {
        __15 = __core__ifThenElse(
            __helios__option[__helios__txinput]__is_valid_data(data_254),
            () -> {
                ()
            },
            () -> {
                __core__trace("Warning: invalid option data", ())
            }
        )();
        data_254
    };
    __module__CapoHelpers__DelegateInput[]__input = (self_171) -> {
        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_171))
    };
    __module__CapoHelpers__DelegateInput[]__mph = (self_172) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_172))
    };
    __helios__option[__helios__string]____to_data = __helios__common__identity;
    __helios__option[__helios__txinput]____to_data = __helios__common__identity;
    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_18) -> {
        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_18), __core__mkNilData(()))))))
    };
    __helios__option[__helios__txinput]__unwrap = (self_173) -> {
        () -> {
            __helios__txinput__from_data(__helios__common__enum_field_0(self_173))
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_174) -> {
        () -> {
            i_8 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_174))();
            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);
            __core__chooseUnit(__cond_15 = inputData;
            __core__ifThenElse(
                __helios__data__constrdata____is(__cond_15),
                () -> {
                    (__lhs_0_25) -> {
                        index_11 = __helios__data__constrdata__tag(__lhs_0_25);
                        fields_148 = __helios__data__constrdata__fields(__lhs_0_25);
                        __core__chooseUnit(__helios__print(__helios__string____add("  --\u{1F41E} generic delegate activity at index ", __helios__int__show(index_11)())), __cond_16 = __helios__list[__helios__data]__head(fields_148);
                        __core__ifThenElse(
                            __helios__data__constrdata____is(__cond_16),
                            () -> {
                                (__lhs_0_26) -> {
                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);
                                    __helios__print(__helios__string____add("  --\u{1F41E} nested activity at index ", __helios__int__show(index2)()))
                                }
                            },
                            () -> {
                                (__17) -> {
                                    ()
                                }
                            }
                        )()(__cond_16))
                    }
                },
                () -> {
                    (__16) -> {
                        ()
                    }
                }
            )()(__cond_15), inputData)
        }
    };
    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {
        (self_175) -> {
            () -> {
                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_175)())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {
        (self_176) -> {
            (assertionOk, msg_3) -> {
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    true
                }, () -> {
                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_176)(), __module__CapoHelpers__DelegateInput[]__serialize(self_176)())
                }), msg_3), __core__ifThenElse(
                    assertionOk,
                    () -> {
                        __helios__assert(true, "")
                    },
                    () -> {
                        () -> {
                            __module__CapoHelpers__DelegateInput[]__error(self_176)(msg_3)
                        }()
                    }
                )())
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__error_1 = (self_177) -> {
        (msg_4) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_177)(), __module__CapoHelpers__DelegateInput[]__serialize(self_177)())
            }), msg_4), __core__chooseUnit(__helios__print(__helios__string____add("\u26A0\uFE0F \u26A0\uFE0F \u26A0\uFE0F error executing policy for dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__DelegateInput[]__link(self_177)))), __core__chooseUnit(__helios__print(__helios__string____add("  ---- with input value: ", __helios__value__show(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_177))()))(false, ()))), __core__chooseUnit(__helios__print("
"), __helios__assert(false, msg_4)))))
        }
    };
    __helios__list[__helios__data]__get = (self_178) -> {
        (index_12) -> {
            recurse_89 = (recurse_88, self_179, i_9) -> {
                __core__chooseList(self_179, () -> {
                    __helios__error("index out of range")
                }, () -> {
                    __core__ifThenElse(
                        __core__equalsInteger(index_12, i_9),
                        () -> {
                            __core__headList__safe(self_179)
                        },
                        () -> {
                            recurse_88(recurse_88, __core__tailList__safe(self_179), __core__addInteger(i_9, 1))
                        }
                    )()
                })()
            };
            recurse_89(recurse_89, self_178, 0)
        }
    };
    __helios__list[__helios__data]__length = __helios__common__length;
    __helios__list[__helios__data]__filter = (self_180) -> {
        (fn_20) -> {
            __helios__common__filter_list(self_180, (item_11) -> {
                fn_20(__helios__data__from_data(item_11))
            })
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {
        (self_181) -> {
            (seed) -> {
                __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart("", false, ()), __core__chooseUnit(__helios__print("-- ensures the delegate is unchanged, so callers needn't."), (result_4) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, "\u2705 unique seeded mint ok!"), result_4)
                }(__cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_181)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),
                    () -> {
                        (__lhs_0_30) -> {
                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);
                            __core__chooseUnit(__cond_20 = ma_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_20),
                                () -> {
                                    (__lhs_0_31) -> {
                                        fields_150 = __helios__data__constrdata__fields(__lhs_0_31);
                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_150)(0))), "seed mismatch")
                                    }
                                },
                                () -> {
                                    (__21) -> {
                                        __helios__error("no way")
                                    }
                                }
                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_181)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),
                            () -> {
                                (__lhs_0_27) -> {
                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);
                                    __core__chooseUnit(__helios__print("-- the delegated-data policy is triggered with a multi-activity"), __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), "no minting activities found"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_14) -> {
                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(a_14);
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),
                                            () -> {
                                                (__lhs_0_28) -> {
                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);
                                                    __cond_19 = ma;
                                                    __core__ifThenElse(
                                                        __helios__data__constrdata____is(__cond_19),
                                                        () -> {
                                                            (__lhs_0_29) -> {
                                                                fields_149 = __helios__data__constrdata__fields(__lhs_0_29);
                                                                __helios__bool__and(() -> {
                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_149)))
                                                                }, () -> {
                                                                    true
                                                                })
                                                            }
                                                        },
                                                        () -> {
                                                            (__20) -> {
                                                                __helios__error("no way d")
                                                            }
                                                        }
                                                    )()(__cond_19)
                                                }
                                            },
                                            () -> {
                                                (__19) -> {
                                                    false
                                                }
                                            }
                                        )()(__cond_18)
                                    });
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate multi-activities must be minting with this seed", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_181)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), "no minting activity found for seed!"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given seed is allowed", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_181)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), "multiple minting activities found for seed"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_181)()))))))
                                }
                            },
                            () -> {
                                (__18) -> {
                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_181)("non-mint activity!"), __helios__error(""))
                                }
                            }
                        )()
                    }
                )()(__cond_17))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {
        (self_182) -> {
            (recId) -> {
                strId = __helios__bytearray__decode_utf8_safe(recId)();
                __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_182);
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),
                    () -> {
                        (__lhs_0_41) -> {
                            "finding unique spending activity for a delegated-data policy"
                        }
                    },
                    () -> {
                        (__26) -> {
                            __helios__error("withUniqueDDSpendingActivity: only valid for DgDataPolicy")
                        }
                    }
                )()(__cond_25), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegated-data controller's is spending recId", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("TEST THIS v"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spendDgt must be acting on the matching record-id", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the delegate is unchanged, so callers needn't also check that", false, (), false, (), false, ()), (result_5) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(false, ()), result_5)
                }(__cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_182)();
                __core__ifThenElse(
                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),
                    () -> {
                        (__lhs_0_39) -> {
                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_39);
                            __core__chooseUnit(__cond_24 = sa_1;
                            __core__ifThenElse(
                                __helios__data__constrdata____is(__cond_24),
                                () -> {
                                    (__lhs_0_40) -> {
                                        index_14 = __helios__data__constrdata__tag(__lhs_0_40);
                                        fields_152 = __helios__data__constrdata__fields(__lhs_0_40);
                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_14, index_14), "no way e"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_152));
                                        __core__ifThenElse(
                                            __helios__bytearray____neq(recId, foundRecId_1),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add("  -- expected: Spending:", strId)), __core__chooseUnit(__helios__print(__helios__string____add("  -- actual: Spending:", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_182)("recId mismatch")))
                                            },
                                            () -> {
                                                () -> {
                                                    __helios__print(__helios__string____add("  -- ok: DD controller spending activity for ", strId))
                                                }()
                                            }
                                        )())
                                    }
                                },
                                () -> {
                                    (__25) -> {
                                        __helios__error("no way f")
                                    }
                                }
                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_182)())
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities____is(__cond_21),
                            () -> {
                                (__lhs_0_38) -> {
                                    __helios__error("expected spending activity for the recId, got OtherActivities")
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),
                                    () -> {
                                        (__lhs_0_32) -> {
                                            activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);
                                            __core__chooseUnit(__helios__print("    -- multiple activities found"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_182)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), "no spending activities found"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_15) -> {
                                                __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(a_15);
                                                __core__ifThenElse(
                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),
                                                    () -> {
                                                        (__lhs_0_37) -> {
                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_182)("dgInput: withSpendingActivity: CreatingDelegatedData invalid"), __helios__error(""))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),
                                                            () -> {
                                                                (__lhs_0_36) -> {
                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_182)("dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy"), __helios__error(""))
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),
                                                                    () -> {
                                                                        (__lhs_0_35) -> {
                                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_182)("dgInput: withSpendingActivity: DeletingDelegatedData invalid"), __helios__error(""))
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),
                                                                            () -> {
                                                                                (__lhs_0_33) -> {
                                                                                    sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);
                                                                                    __cond_23 = sa;
                                                                                    __core__ifThenElse(
                                                                                        __helios__data__constrdata____is(__cond_23),
                                                                                        () -> {
                                                                                            (__lhs_0_34) -> {
                                                                                                index_13 = __helios__data__constrdata__tag(__lhs_0_34);
                                                                                                fields_151 = __helios__data__constrdata__fields(__lhs_0_34);
                                                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_13, index_13), "no way h"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_151));
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bytearray____neq(recId, foundRecId),
                                                                                                    () -> {
                                                                                                        actualIdStr = __helios__bytearray__decode_utf8_safe(foundRecId)();
                                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_182)(__helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add("recId mismatch: found ", actualIdStr), " (expected "), strId), ")")), __helios__error(""))
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            __core__chooseUnit(__helios__print("  -- matched recId"), true)
                                                                                                        }()
                                                                                                    }
                                                                                                )())
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__24) -> {
                                                                                                __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_182)("wrong structure for spending activity"), __helios__error(""))
                                                                                            }
                                                                                        }
                                                                                    )()(__cond_23)
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__23) -> {
                                                                                    false
                                                                                }
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()(__cond_22)
                                            });
                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("one of the delegate data-controller multi-activities must treat this recId", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_182)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))("dgt acting on this recId? "), __helios__string____add("no spending activity found for recId: ", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("only one of a multi-activity for a given recId is allowed", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_182)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))("exactly one activity? "), __helios__string____add("multiple spending activities found for recId: ", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_182)()))))))
                                        }
                                    },
                                    () -> {
                                        (__22) -> {
                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_182)("non-spend activity!"), __helios__error(""))
                                        }
                                    }
                                )()
                            }
                        )()
                    }
                )()(__cond_21))))))))
            }
        }
    };
    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_183) -> {
        () -> {
            __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupUnit("the delegate must be unchanged", true, true, () -> {
                __lhs_0_42 = self_183;
                link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_42);
                input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_42);
                mph_19 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_42);
                __lhs_0_43 = link_1;
                uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_43);
                validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_43);
                targetValue = __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken(link_1)(mph_19);
                (returnedUnchanged) -> {
                    __core__chooseUnit(__helios__assert(returnedUnchanged, "no"), __helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_19, false, (), false, ()), "no"))
                }(__cond_26 = validatorHash_1;
                __core__ifThenElse(
                    __helios__option[__helios__validatorhash]__some____is(__cond_26),
                    () -> {
                        (__lhs_0_45) -> {
                            vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_45);
                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_183)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add("dgTkn not returned: ", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {
                                __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())
                            });
                            __core__ifThenElse(
                                __helios__option[__helios__txoutput]__some____is(__cond_27),
                                () -> {
                                    (__lhs_0_47) -> {
                                        __core__chooseUnit(__helios__print(__helios__string____add("ok: the dgTkn is unchanged: ", uut_1)), true)
                                    }
                                },
                                () -> {
                                    (__lhs_0_46) -> {
                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_183)("The delegate's dgTkn datum MUST NOT be modified!"), __helios__error(""))
                                    }
                                }
                            )()(__cond_27))
                        }
                    },
                    () -> {
                        (__lhs_0_44) -> {
                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_183)("unchOut - no vh"), __helios__error(""))
                        }
                    }
                )()(__cond_26))
            }), self_183)
        }
    };
    __module__CapoHelpers__DelegateInput[]__orFail = (self_184) -> {
        () -> {
            __lhs_0_48 = self_184;
            true
        }
    };
    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;
    __module__CapoHelpers__CapoCtx[]__mph = (self_185) -> {
        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_185))
    };
    __module__CapoHelpers__CapoCtx[]__charter = (self_186) -> {
        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_186))
    };
    __module__CapoHelpers__CapoCtx[]____new = (mph_20, charter) -> {
        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_20), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))
    };
    __helios__map[__helios__bytearray@__helios__int]__show = (self_187) -> {
        () -> {
            recurse_91 = (recurse_90, self_188, first) -> {
                __core__chooseList(self_188, () -> {
                    ""
                }, () -> {
                    __core__appendString(__core__ifThenElse(
                        first,
                        "",
                        ","
                    ), head_86 = __core__headList__safe(self_188);
                    key_data = __core__fstPair(head_86);
                    key_14 = __helios__bytearray__from_data_safe(key_data);
                    value_data = __core__sndPair(head_86);
                    value_6 = __helios__int__from_data_safe(value_data);
                    __core__appendString(__core__appendString(__core__appendString(key_14((valid_7, key_15) -> {
                        __core__ifThenElse(
                            valid_7,
                            () -> {
                                __helios__bytearray__show(key_15)()
                            },
                            () -> {
                                __helios__data__show(key_data)()
                            }
                        )()
                    }), ":"), value_6((valid_6, value_7) -> {
                        __core__ifThenElse(
                            valid_6,
                            () -> {
                                __helios__int__show(value_7)()
                            },
                            () -> {
                                __helios__data__show(value_data)()
                            }
                        )()
                    })), recurse_90(recurse_90, __core__tailList__safe(self_188), false)))
                })()
            };
            __core__appendString("{", __core__appendString(recurse_91(recurse_91, self_187, true), "}"))
        }
    };
    __helios__option[__helios__string]__none____new = () -> {
        __helios__option__NONE
    };
    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_189) -> {
        () -> {
            e = "requires charter as input";
            __cond_28 = __module__CapoHelpers__CapoCtx[]__charter(self_189);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_28),
                () -> {
                    (__lhs_0_57) -> {
                        __helios__error(e)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_28),
                        () -> {
                            (__lhs_0_56) -> {
                                __helios__error(e)
                            }
                        },
                        () -> {
                            (__lhs_0_49) -> {
                                utxo_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_49);
                                activity = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_2));
                                wrongActivity = () -> {
                                    __core__ifThenElse(
                                        true,
                                        () -> {
                                            __helios__error("non-CharterData activity")
                                        },
                                        () -> {
                                            () -> {
                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()
                                            }()
                                        }
                                    )()
                                };
                                __cond_29 = activity;
                                __core__ifThenElse(
                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_29),
                                    () -> {
                                        (__lhs_0_55) -> {
                                            wrongActivity()
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_29),
                                            () -> {
                                                (__lhs_0_54) -> {
                                                    wrongActivity()
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_29),
                                                    () -> {
                                                        (__lhs_0_53) -> {
                                                            activity
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_29),
                                                            () -> {
                                                                (__lhs_0_52) -> {
                                                                    activity
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_29),
                                                                    () -> {
                                                                        (__lhs_0_51) -> {
                                                                            activity
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        (__lhs_0_50) -> {
                                                                            activity
                                                                        }
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()(__cond_29)
                            }
                        }
                    )()
                }
            )()(__cond_28)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_190) -> {
        (key_16) -> {
            __helios__common__map_get(self_190, __helios__string____to_data(key_16), (x_5) -> {
                __core__constrData(0, __helios__common__list_1(x_5))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData) -> {
        (self_191) -> {
            (key_17) -> {
                __core__chooseUnit(__helios__print(__helios__string____add("    -- looking for capo's manifest entry: ", key_17)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData(self_191)(), 0);
                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_17))
            }
        }
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_255) -> {
        __helios__common__enum_tag_equals(data_255, 0)
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_192) -> {
        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_192))
    };
    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_256) -> {
        __helios__common__enum_tag_equals(data_256, 1)
    };
    __helios__option[__helios__bytearray]__none____new = () -> {
        __helios__option__NONE
    };
    __helios__option[__helios__bytearray]__some____new = (some_2) -> {
        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_2)))
    };
    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_1) -> {
        (self_193) -> {
            (key_18, __useopt__required_2, required_4) -> {
                required_5 = __core__ifThenElse(
                    __useopt__required_2,
                    () -> {
                        required_4
                    },
                    () -> {
                        true
                    }
                )();
                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_1)(self_193)(key_18);
                __cond_30 = oe;
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_30),
                    () -> {
                        (__lhs_0_59) -> {
                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add("missing required manifest entry: ", key_18)), __helios__option[__helios__bytearray]__none____new())
                        }
                    },
                    () -> {
                        (__lhs_0_58) -> {
                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_58);
                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))
                        }
                    }
                )()(__cond_30)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {
        (self_194) -> {
            (__useopt__required_3, required_6) -> {
                required_7 = __core__ifThenElse(
                    __useopt__required_3,
                    () -> {
                        required_6
                    },
                    () -> {
                        true
                    }
                )();
                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_2)(self_194)("currentSettings", true, required_7)
            }
        }
    };
    __helios__option[__helios__txoutput]__some__some = (self_195) -> {
        __helios__txoutput__from_data(__helios__common__enum_field_0(self_195))
    };
    __module__StellarHeliosHelpers__REQTgroup[__module__CapoHelpers__CapoCtx[]] = (reqt_5, __useopt__collapsed_6, collapsed_12, callback_13) -> {
        collapsed_13 = __core__ifThenElse(
            __useopt__collapsed_6,
            () -> {
                collapsed_12
            },
            () -> {
                false
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(__helios__string____add("\u2757", reqt_5), true, collapsed_13), result_6 = callback_13();
        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, "\u2705"), result_6))
    };
    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {
        (self_196) -> {
            () -> {
                __module__StellarHeliosHelpers__REQTgroup[__module__CapoHelpers__CapoCtx[]]("MUST have the Capo's govAuthority approval", true, true, () -> {
                    __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_3(self_196)()))(__module__CapoHelpers__CapoCtx[]__mph(self_196), false, (), false, ()), "^ that fails, this can't"), __core__chooseUnit(__helios__print("\u2705 govAuthority ok!"), self_196))
                })
            }
        }
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_257) -> {
        __helios__common__enum_tag_equals(data_257, 1)
    };
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_197) -> {
        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_197))
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_198) -> {
        (key_19) -> {
            __helios__common__map_get(self_198, __helios__string____to_data(key_19), (x_6) -> {
                __core__constrData(0, __helios__common__list_1(x_6))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__option[__helios__string]__some____new = (some_3) -> {
        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_3)))
    };
    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput = (__module__CapoHelpers__CapoCtx[]__getCharterData_4, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput) -> {
        (self_199) -> {
            (typeName, __useopt__required_4, required_8, __useopt__message, message) -> {
                required_9 = __core__ifThenElse(
                    __useopt__required_4,
                    () -> {
                        required_8
                    },
                    () -> {
                        true
                    }
                )();
                message_1 = __core__ifThenElse(
                    __useopt__message,
                    () -> {
                        message
                    },
                    () -> {
                        ""
                    }
                )();
                __core__chooseUnit(__core__ifThenElse(
                    required_9,
                    () -> {
                        __core__ifThenElse(
                            __helios__int____gt(__helios__bytearray__length(__helios__string__encode_utf8(message_1)()), 0),
                            () -> {
                                __module__StellarHeliosHelpers__REQTgroupStart(message_1, true, true)
                            },
                            () -> {
                                () -> {
                                    __module__StellarHeliosHelpers__REQTgroupStart(__helios__string____add("MUST find the policy for record-type ", typeName), true, true)
                                }()
                            }
                        )()
                    },
                    () -> {
                        () -> {
                            __core__ifThenElse(
                                __helios__int____gt(__helios__bytearray__length(__helios__string__encode_utf8(message_1)()), 0),
                                () -> {
                                    __module__StellarHeliosHelpers__logGroupStart(message_1, true, false)
                                },
                                () -> {
                                    () -> {
                                        __module__StellarHeliosHelpers__logGroupStart(__helios__string____add("trying to find the policy for record-type ", typeName), true, false)
                                    }()
                                }
                            )()
                        }()
                    }
                )(), __core__chooseUnit(__helios__print("     -- locates the needed policy through the Capo manifest"), (result_7) -> {
                    __core__chooseUnit(__core__ifThenElse(
                        __helios__bool__or(() -> {
                            required_9
                        }, () -> {
                            __cond_33 = __module__CapoHelpers__DelegateInput[]__input(result_7);
                            __core__ifThenElse(
                                __helios__option[__helios__txinput]__some____is(__cond_33),
                                () -> {
                                    (__lhs_0_64) -> {
                                        true
                                    }
                                },
                                () -> {
                                    (__lhs_0_63) -> {
                                        false
                                    }
                                }
                            )()(__cond_33)
                        }),
                        () -> {
                            __module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add("\u2705 dgData policy found: ", typeName))
                        },
                        () -> {
                            () -> {
                                __module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add("\u2705 dgData policy found: ", typeName))
                            }()
                        }
                    )(), result_7)
                }(__cond_31 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_4(self_199)()))(typeName);
                __core__ifThenElse(
                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_31),
                    () -> {
                        (__lhs_0_62) -> {
                            __helios__error(__helios__string____add(__helios__string____add("missing data-policy manifest for record-type '", typeName), "'"))
                        }
                    },
                    () -> {
                        (__lhs_0_60) -> {
                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_60);
                            __cond_32 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);
                            __core__ifThenElse(
                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_32),
                                () -> {
                                    (__lhs_0_61) -> {
                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_61);
                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_61);
                                        (callback_14) -> {
                                            callback_14(policyLink, idPrefix_2)
                                        }
                                    }
                                },
                                () -> {
                                    (__27) -> {
                                        __helios__error(__helios__string____add("manifest entry is not a data policy: ", typeName))
                                    }
                                }
                            )()(__cond_32)((dgtLink, idPrefix_1) -> {
                                __module__CapoHelpers__CapoCtx[]__requiresDelegateInput(self_199)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1))
                            })
                        }
                    }
                )()(__cond_31))))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {
        (self_200) -> {
            (__useopt__required_5, required_10) -> {
                required_11 = __core__ifThenElse(
                    __useopt__required_5,
                    () -> {
                        required_10
                    },
                    () -> {
                        true
                    }
                )();
                input_2 = __helios__scriptcontext__get_current_input();
                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_200)()))(__module__CapoHelpers__CapoCtx[]__mph(self_200));
                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_2))(acMintDgt), 0))("    -- acting on mintDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingMintDgt
                }, () -> {
                    __helios__bool____not(required_11)
                }), "not acting as mint delegate!"), isUsingMintDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_6) -> {
        (self_201) -> {
            (__useopt__required_6, required_12) -> {
                required_13 = __core__ifThenElse(
                    __useopt__required_6,
                    () -> {
                        required_12
                    },
                    () -> {
                        true
                    }
                )();
                input_3 = __helios__scriptcontext__get_current_input();
                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_201)()))(__module__CapoHelpers__CapoCtx[]__mph(self_201));
                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_3))(acSpendDgt), 0))("    -- acting on spendDgt-* token right now? ");
                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                    isUsingSpendDgt
                }, () -> {
                    __helios__bool____not(required_13)
                }), "not acting as spend delegate!"), isUsingSpendDgt)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__getCharterData_7 = (self_202) -> {
        () -> {
            __cond_34 = __module__CapoHelpers__CapoCtx[]__charter(self_202);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_34),
                () -> {
                    (__lhs_0_66) -> {
                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_66);
                        datum_3
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_34),
                        () -> {
                            (__lhs_0_65) -> {
                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_65);
                                datum_2
                            }
                        },
                        () -> {
                            (__28) -> {
                                __helios__error("CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first")
                            }
                        }
                    )()
                }
            )()(__cond_34)
        }
    };
    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address) -> {
        (self_203) -> {
            () -> {
                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_203), __helios__string__encode_utf8("charter")());
                capoAddr = __module__CapoHelpers__CapoCtx[]__address(self_203)();
                __cond_35 = __module__CapoHelpers__CapoCtx[]__charter(self_203);
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_35),
                    () -> {
                        (__lhs_0_67) -> {
                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo) -> {
                                __helios__bool__and(() -> {
                                    __helios__address____eq(__helios__txoutput__address(txo), capoAddr)
                                }, () -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo))(charterAc_2), 0)
                                })
                            })))), 0);
                            charterData_1
                        }
                    },
                    () -> {
                        (__29) -> {
                            __helios__error("CapoCtx.getNextCharterData(): invalid except with charter strategy Input")
                        }
                    }
                )()(__cond_35)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1 = (self_204) -> {
        () -> {
            __cond_36 = __module__CapoHelpers__CapoCtx[]__charter(self_204);
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_36),
                () -> {
                    (__lhs_0_69) -> {
                        utxo_4 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_69);
                        utxo_4
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_36),
                        () -> {
                            (__lhs_0_68) -> {
                                utxo_3 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_68);
                                utxo_3
                            }
                        },
                        () -> {
                            (__30) -> {
                                __helios__error("CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first")
                            }
                        }
                    )()
                }
            )()(__cond_36)
        }
    };
    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1 = (self_205) -> {
        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {
            required_15 = __core__ifThenElse(
                __useopt__required_7,
                () -> {
                    required_14
                },
                () -> {
                    true
                }
            )();
            idPrefix_4 = __core__ifThenElse(
                __useopt__idPrefix,
                () -> {
                    idPrefix_3
                },
                () -> {
                    __helios__option[__helios__string]__none____new()
                }
            )();
            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_205), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_205))
        }
    };
    __module__CapoHelpers__CapoCtx[]__address_1 = (self_206) -> {
        () -> {
            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1(self_206)());
            addr
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate) -> {
        (self_207) -> {
            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes) -> {
                recId_2 = __core__ifThenElse(
                    __useopt__recId,
                    () -> {
                        recId_1
                    },
                    () -> {
                        ""
                    }
                )();
                recIdBytes_1 = __core__ifThenElse(
                    __useopt__recIdBytes,
                    () -> {
                        recIdBytes
                    },
                    () -> {
                        __helios__string__encode_utf8(recId_2)()
                    }
                )();
                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate(self_207)(false, (), true, recIdBytes_1);
                recIdStr = __helios__bytearray__decode_utf8_safe(recIdBytes_1)();
                __cond_37 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_37),
                    () -> {
                        (__lhs_0_71) -> {
                            __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} input: delegated-data ref not found: ", recIdStr))
                        }
                    },
                    () -> {
                        (__lhs_0_70) -> {
                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_70);
                            txin_2
                        }
                    }
                )()(__cond_37)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {
        (self_208) -> {
            (recIdBytes_2, __useopt__reqt, reqt_6) -> {
                reqt_7 = __core__ifThenElse(
                    __useopt__reqt,
                    () -> {
                        reqt_6
                    },
                    () -> {
                        "MUST have the input data record"
                    }
                )();
                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_208)(false, (), true, recIdBytes_2);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupStart(reqt_7, true, true), recIdStr_1 = __helios__bytearray__decode_utf8_safe(recIdBytes_2)();
                __cond_38 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);
                __core__ifThenElse(
                    __helios__option[__helios__txinput]__none____is(__cond_38),
                    () -> {
                        (__lhs_0_73) -> {
                            __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} input: delegated-data record: not found: ", recIdStr_1))
                        }
                    },
                    () -> {
                        (__lhs_0_72) -> {
                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_72);
                            __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add("\u2705 \u{1F4CE} input: delegated-data record: ok: ", recIdStr_1)), txin_3)
                        }
                    }
                )()(__cond_38))
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2 = (self_209) -> {
        (__useopt__typeName, typeName_1, __useopt__id, id_1) -> {
            typeName_2 = __core__ifThenElse(
                __useopt__typeName,
                () -> {
                    typeName_1
                },
                () -> {
                    ""
                }
            )();
            id_2 = __core__ifThenElse(
                __useopt__id,
                () -> {
                    id_1
                },
                () -> {
                    #
                }
            )();
            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_1(self_209)();
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                __helios__int____gt(__helios__bytearray__length(id_2), 0)
            }, () -> {
                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)
            }), "data predicate must have id or typeName"), (txin_4) -> {
                __core__ifThenElse(
                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),
                    () -> {
                        data_258 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));
                        __cond_39 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_258);
                        __core__ifThenElse(
                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_39),
                            () -> {
                                (__lhs_0_74) -> {
                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_258));
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            true
                                        }, () -> {
                                            __helios__bool__or(() -> {
                                                __helios__string____eq(typeName_2, "")
                                            }, () -> {
                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)
                                            })
                                        })
                                    }, () -> {
                                        __helios__bool__or(() -> {
                                            __helios__bytearray____eq(id_2, #)
                                        }, () -> {
                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_2)
                                        })
                                    })
                                }
                            },
                            () -> {
                                (__31) -> {
                                    false
                                }
                            }
                        )()(__cond_39)
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )()
            })
        }
    };
    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {
        (self_210) -> {
            (newDataId, dataTypePurpose) -> {
                __module__StellarHeliosHelpers__bREQTgroup("The new record MUST be saved in the Capo address", true, true, () -> {
                    dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_210)(newDataId)));
                    dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new record must match type-name in dgDataPolicy manifest", false, (), false, (), false, ()), __cond_40 = dgDatum;
                    __core__ifThenElse(
                        __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_40),
                        () -> {
                            (__lhs_0_75) -> {
                                data_259 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));
                                recIdStr_2 = __helios__bytearray__decode_utf8_safe(newDataId)();
                                __core__ifThenElse(
                                    __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_259), newDataId),
                                    () -> {
                                        actualIdStr_1 = __helios__bytearray__decode_utf8_safe(__module__StellarHeliosHelpers__AnyData[]__id(data_259))();
                                        __helios__error(__helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: wrong id: ", actualIdStr_1), " (expected "), recIdStr_2), ")"))
                                    },
                                    () -> {
                                        () -> {
                                            __core__ifThenElse(
                                                __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_259), dataTypePurpose),
                                                () -> {
                                                    __helios__error(__helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C \u{1F4CE} outDD: bad type: ", __module__StellarHeliosHelpers__AnyData[]__type(data_259)), " (expected "), dataTypePurpose), ")"))
                                                },
                                                () -> {
                                                    () -> {
                                                        true
                                                    }()
                                                }
                                            )()
                                        }()
                                    }
                                )()
                            }
                        },
                        () -> {
                            (__32) -> {
                                __helios__error("output not delegated data")
                            }
                        }
                    )()(__cond_40))
                })
            }
        }
    };
    __helios__option[__helios__txoutput]__none____is = (data_260) -> {
        __helios__common__enum_tag_equals(data_260, 1)
    };
    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1 = (self_211) -> {
        (recId_3) -> {
            recIdStr_3 = __helios__bytearray__decode_utf8_safe(recId_3)();
            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_211), recId_3);
            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_1(self_211)();
            __cond_41 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        true
                    }, () -> {
                        __helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1)
                    })
                }, () -> {
                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_2))("output found!  ... at the right capoAddr? ")
                })
            });
            __core__ifThenElse(
                __helios__option[__helios__txoutput]__none____is(__cond_41),
                () -> {
                    (__lhs_0_77) -> {
                        __helios__error(__helios__string____add("\u274C\u274C \u{1F4CE} delegated-data output: not found: ", recIdStr_3))
                    }
                },
                () -> {
                    (__lhs_0_76) -> {
                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_76);
                        __core__chooseUnit(__helios__print(__helios__string____add("\u2705 \u{1F4CE} delegated-data output: found ", recIdStr_3)), txout_1)
                    }
                }
            )()(__cond_41)
        }
    };
    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {
        (self_212) -> {
            () -> {
                charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_212);
                __cond_42 = charter_1;
                __core__ifThenElse(
                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_42),
                    () -> {
                        (__lhs_0_83) -> {
                            __core__chooseUnit(__helios__print("      -- needs charter, anywhere in the tx (already found as ref : )"), self_212)
                        }
                    },
                    () -> {
                        __core__ifThenElse(
                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_42),
                            () -> {
                                (__lhs_0_82) -> {
                                    __core__chooseUnit(__helios__print("      -- needs charter, anywhere in the tx (already found as input : )"), self_212)
                                }
                            },
                            () -> {
                                (__lhs_0_78) -> {
                                    __lhs_0_79 = self_212;
                                    mph_21 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_79);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be available in the transaction (input or ref)", false, (), false, (), false, ()), charterAc_3 = __helios__assetclass__new(mph_21, __helios__string__encode_utf8("charter")());
                                    hasCharter_2 = (txin_5) -> {
                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)
                                    };
                                    __cond_43 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);
                                    __core__ifThenElse(
                                        __helios__option[__helios__txinput]__none____is(__cond_43),
                                        () -> {
                                            (__lhs_0_81) -> {
                                                __core__chooseUnit(__helios__print("CapoCtx needsCharter(): no charter ref; must be in inputs..."), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_212)())
                                            }
                                        },
                                        () -> {
                                            (__lhs_0_80) -> {
                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_80);
                                                __core__chooseUnit(__helios__print("    -- CapoCtx needsCharter(): found charter ref"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);
                                                __module__CapoHelpers__CapoCtx[]____new(mph_21, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))
                                            }
                                        }
                                    )()(__cond_43))
                                }
                            }
                        )()
                    }
                )()(__cond_42)
            }
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_213) -> {
        () -> {
            charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_213);
            __cond_44 = charter_2;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_44),
                () -> {
                    (__lhs_0_89) -> {
                        __core__chooseUnit(__helios__print("      -- needs charter spent in inputs (already checked : )"), self_213)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_44),
                        () -> {
                            (__lhs_0_88) -> {
                                __helios__error("CapoCtx.withCharterInput(): charter is from ref!")
                            }
                        },
                        () -> {
                            (__lhs_0_84) -> {
                                __lhs_0_85 = self_213;
                                mph_22 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_85);
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be spent in the inputs", false, (), false, (), false, ()), charterAc_4 = __helios__assetclass__new(mph_22, __helios__string__encode_utf8("charter")());
                                hasCharter_3 = (txin_6) -> {
                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)
                                };
                                __core__chooseUnit(__helios__print("    -- CapoCtx finding charter in inputs"), (charterUtxo_3) -> {
                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);
                                    __module__CapoHelpers__CapoCtx[]____new(mph_22, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))
                                }(__cond_45 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);
                                __core__ifThenElse(
                                    __helios__option[__helios__txinput]__some____is(__cond_45),
                                    () -> {
                                        (__lhs_0_87) -> {
                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_87);
                                            ch_3
                                        }
                                    },
                                    () -> {
                                        (__lhs_0_86) -> {
                                            __helios__error("Missing required charter input")
                                        }
                                    }
                                )()(__cond_45))))
                            }
                        }
                    )()
                }
            )()(__cond_44)
        }
    };
    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_214) -> {
        () -> {
            charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_214);
            __cond_46 = charter_3;
            __core__ifThenElse(
                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_46),
                () -> {
                    (__lhs_0_93) -> {
                        __core__chooseUnit(__helios__print("      -- needs charter ref (already checked : )"), self_214)
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_46),
                        () -> {
                            (__lhs_0_92) -> {
                                __helios__error("CapoCtx.withCharterRef(): charter is from inputs!")
                            }
                        },
                        () -> {
                            (__lhs_0_90) -> {
                                __lhs_0_91 = self_214;
                                mph_23 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_91);
                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter to be referenced in the txn, but unspent", false, (), false, (), false, ()), utxo_5 = __module__CapoHelpers__getRefCharterUtxo(mph_23);
                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_5))), 0);
                                __module__CapoHelpers__CapoCtx[]____new(mph_23, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_5)))
                            }
                        }
                    )()
                }
            )()(__cond_46)
        }
    };
    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_215) -> {
        (fn_21, z_2) -> {
            __helios__common__fold(self_215, (z_3, pair_72) -> {
                fn_21(z_3, __helios__string__from_data(__core__fstPair(pair_72)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_72)))
            }, z_2)
        }
    };
    __helios__option[__helios__bool]__unwrap = (self_216) -> {
        () -> {
            __helios__bool__from_data(__helios__common__enum_field_0(self_216))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_217) -> {
        (fn_22) -> {
            fn_23 = (pair_73) -> {
                fn_22(__helios__string__from_data(__core__fstPair(pair_73)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_73)))
            };
            __helios__common__all(self_217, fn_23)
        }
    };
    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_218) -> {
        (fn_24) -> {
            __helios__common__all(self_218, (item_12) -> {
                fn_24(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))
            })
        }
    };
    __helios__option[__helios__bool]__some____is = (data_261) -> {
        __helios__common__enum_tag_equals(data_261, 0)
    };
    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_219) -> {
        () -> {
            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_7(self_219)();
            mph_24 = __module__CapoHelpers__CapoCtx[]__mph(self_219);
            __lhs_0_94 = __helios__common__assert_constr_index(charterData_2, 0);
            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_94);
            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_94);
            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_94);
            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_94);
            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_94);
            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- only the spend delegate calls this function", false, (), false, (), false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(self_219)(false, ());
            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("govDelegate MAY contribute to settings validation", false, (), false, (), false, ()), (govDelegateMaybeValidating) -> {
                checkOneInvariant = (oneDgt) -> {
                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariant must validate settings", false, (), false, (), false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_24, true))())
                };
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("spend invariants must validate settings", false, (), false, (), false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("mint invariants must validate settings", false, (), false, (), false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("dgDataControllers must validate settings", false, (), false, (), false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_20, entry_1) -> {
                    __cond_48 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);
                    __core__ifThenElse(
                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_48),
                        () -> {
                            (__lhs_0_97) -> {
                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_97);
                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_24, true))()
                            }
                        },
                        () -> {
                            (__33) -> {
                                __core__chooseUnit(__helios__print(__helios__string____add("  -- ignoring manifest entry (not a data policy): ", key_20)), true)
                            }
                        }
                    )()(__cond_48)
                });
                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("named delegates must validate settings", false, (), false, (), false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT("  - each other-named-delegate must validate settings", false, (), false, (), false, ()), (ok, key_21, dgt) -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  - other-named-delegate: ", key_21)), __core__chooseUnit(__helios__print("
"), __helios__bool__and(() -> {
                        ok
                    }, () -> {
                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_24, true))()
                    })))
                }), true);
                __helios__bool__and(() -> {
                    __helios__bool__and(() -> {
                        __helios__bool__and(() -> {
                            __helios__bool__and(() -> {
                                __helios__bool__and(() -> {
                                    dgDataPoliciesAreValidating
                                }, () -> {
                                    spendDelegateIsValidating
                                })
                            }, () -> {
                                govDelegateMaybeValidating
                            })
                        }, () -> {
                            spendInvariantsAreValidating
                        })
                    }, () -> {
                        mintInvariantsAreValidating
                    })
                }, () -> {
                    namedDelegatesAreValidating
                })))))
            }(__cond_47 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_24, false);
            __core__ifThenElse(
                __helios__option[__helios__bool]__some____is(__cond_47),
                () -> {
                    (__lhs_0_96) -> {
                        true
                    }
                },
                () -> {
                    (__lhs_0_95) -> {
                        __core__chooseUnit(__helios__print("  -- govAuthority isn't a script-based validator; doesn't validate new settings"), true)
                    }
                }
            )()(__cond_47)))))
        }
    };
    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_220) -> {
        (activity_1) -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__CapoHelpers__CapoCtx[]____eq(self_220, self_220)
            }), "prevent unused var"), __cond_49 = activity_1;
            __core__ifThenElse(
                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_49),
                () -> {
                    (__lhs_0_104) -> {
                        __helios__error("the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo")
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_49),
                        () -> {
                            (__lhs_0_103) -> {
                                __helios__error("the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo")
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_49),
                                () -> {
                                    (__lhs_0_102) -> {
                                        __core__chooseUnit(__helios__print("-- Updating the Capo manifest uses the spend delegate"), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_49),
                                        () -> {
                                            (__lhs_0_101) -> {
                                                __core__chooseUnit(__helios__print("-- Queuing a pending dgt-change uses the mint delegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_49),
                                                () -> {
                                                    (__lhs_0_100) -> {
                                                        __core__chooseUnit(__helios__print("-- Removing a pending dgt-change entry uses the spend delegate"), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_49),
                                                        () -> {
                                                            (__lhs_0_99) -> {
                                                                __core__chooseUnit(__helios__print("-- Committing pending dgt-changes uses both the mint and spend delegates"), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_98) -> {
                                                                __core__chooseUnit(__helios__assert(false, "Obsolete code path"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Creating a new delegate (deprecated path)...", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("deprecate use of CLA::CreatingDelegate"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()(__cond_49))
        }
    };
    __module__CapoHelpers__CapoCtx[]__orFail = (self_221) -> {
        () -> {
            __lhs_0_105 = self_221;
            true
        }
    };
    __module__CapoHelpers__mkCapoCtx = (mph_25) -> {
        __module__CapoHelpers__CapoCtx[]____new(mph_25, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())
    };
    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo, __useopt__reqt_1, reqt_8) -> {
        reqt_9 = __core__ifThenElse(
            __useopt__reqt_1,
            () -> {
                reqt_8
            },
            () -> {
                "the indicated seed UTXO must be spent"
            }
        )();
        __module__StellarHeliosHelpers__bREQTgroup(reqt_9, false, true, () -> {
            __core__chooseUnit(__core__ifThenElse(
                __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_4) -> {
                    __helios__txoutputid____eq(__helios__txinput__output_id(input_4), seedUtxo)
                })),
                () -> {
                    __core__chooseUnit(__helios__print(__helios__string____add("  -- seedUtxo: ", __helios__txoutputid__show(seedUtxo)())), __helios__error("missing expected seed input for minting"))
                },
                () -> {
                    () -> {
                        ()
                    }()
                }
            )(), __core__chooseUnit(__helios__print(__helios__string____add("\u2705 ok: seedUtxo: ", __helios__txoutputid__show(seedUtxo)())), true))
        })
    };
    __module__CapoMintHelpers__noOtherActivitiesSupported = (__34) -> {
        __core__chooseUnit(__helios__print("yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...
"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("   -- note: for other cases, a context-specific check via validateUutMinting's (
", "  ...
  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)
"), ") option can be used to steer around this failure.
")), __core__chooseUnit(__helios__assert(false, "unexpected delegate activity"), false)))
    };
    __helios__option[__helios__data]__none____is = (data_262) -> {
        __helios__common__enum_tag_equals(data_262, 1)
    };
    __helios__option[__helios__data]__some__some = (self_222) -> {
        __helios__data__from_data(__helios__common__enum_field_0(self_222))
    };
    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_223) -> {
        (key_22) -> {
            __helios__common__map_get(self_223, __helios__scriptpurpose____to_data(key_22), (x_8) -> {
                __core__constrData(0, __helios__common__list_1(x_8))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_26, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {
        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck,
            () -> {
                extraMintDelegateRedeemerCheck
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_1 = __core__ifThenElse(
            __useopt__checkMintDgtActivity,
            () -> {
                checkMintDgtActivity
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_26);
        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the charter's mint-delegate to authorize this mint activity", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- finding input dgTkn: ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {
            __core__chooseUnit(__helios__print("     \u2705 \u27A1\uFE0F  \u{1F481}found dgTkn ^"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {
                __cond_51 = purpose_1;
                __core__ifThenElse(
                    __helios__scriptpurpose__spending____is(__cond_51),
                    () -> {
                        (sp_1) -> {
                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)
                        }
                    },
                    () -> {
                        (__35) -> {
                            false
                        }
                    }
                )()(__cond_51)
            });
            err = __helios__string____add(__helios__string____add("dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), " not being spent as expected");
            (maybeCheckedMintDelegateAuthority) -> {
                delegateDidAuthorize = true;
                __helios__bool__and(() -> {
                    delegateDidAuthorize
                }, () -> {
                    maybeCheckedMintDelegateAuthority
                })
            }(__cond_52 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);
            __core__ifThenElse(
                __helios__option[__helios__data]__none____is(__cond_52),
                () -> {
                    (__lhs_0_113) -> {
                        __helios__error(err)
                    }
                },
                () -> {
                    (__lhs_0_108) -> {
                        x_10 = __helios__option[__helios__data]__some__some(__lhs_0_108);
                        activity_2 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(x_10);
                        __cond_53 = activity_2;
                        __core__ifThenElse(
                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_53),
                            () -> {
                                (__lhs_0_109) -> {
                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_109);
                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VERIFY we ---------------- don't need the funny redeemer-check skipping"), __core__chooseUnit(__core__ifThenElse(
                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),
                                        () -> {
                                            __core__chooseUnit(__helios__print(" vvv wherever it is, probably best it uses the checkMintDgtActivity option"), __helios__error("where is extraMintDelegateRedeemerCheck=false really needed?"))
                                        },
                                        () -> {
                                            () -> {
                                                ()
                                            }()
                                        }
                                    )(), __cond_54 = DLA;
                                    __core__ifThenElse(
                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_54),
                                        () -> {
                                            (__lhs_0_112) -> {
                                                __core__chooseUnit(__helios__print("  -- ok, dgTkn spent
"), true)
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_54),
                                                () -> {
                                                    (__lhs_0_111) -> {
                                                        __helios__error("DLA::Retiring can't mint!")
                                                    }
                                                },
                                                () -> {
                                                    (__lhs_0_110) -> {
                                                        __helios__error("DLA::ValidatingSettings can't mint!")
                                                    }
                                                }
                                            )()
                                        }
                                    )()(__cond_54)))
                                }
                            },
                            () -> {
                                (__36) -> {
                                    checkMintDgtActivity_1(activity_2)
                                }
                            }
                        )()(__cond_53)
                    }
                }
            )()(__cond_52)))
        }(__cond_50 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_10) -> {
            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(authzAc), 0)
        });
        __core__ifThenElse(
            __helios__option[__helios__txinput]__some____is(__cond_50),
            () -> {
                (__lhs_0_107) -> {
                    x_9 = __helios__option[__helios__txinput]__some__some(__lhs_0_107);
                    __helios__txinput__output_id(x_9)
                }
            },
            () -> {
                (__lhs_0_106) -> {
                    __helios__error(__helios__string____add("  \u274C\u274C missing dgTkn ", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))
                }
            }
        )()(__cond_50))))
    };
    __module__StellarHeliosHelpers__REQTgroup[__helios__bool] = (reqt_10, __useopt__collapsed_7, collapsed_14, callback_15) -> {
        collapsed_15 = __core__ifThenElse(
            __useopt__collapsed_7,
            () -> {
                collapsed_14
            },
            () -> {
                false
            }
        )();
        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(__helios__string____add("\u2757", reqt_10), true, collapsed_15), result_8 = callback_15();
        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, "\u2705"), result_8))
    };
    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {
        seedTxId = __helios__txoutputid__tx_id(seed_1);
        seedIdx = __helios__txoutputid__index(seed_1);
        idxBytes = __helios__int__serialize(seedIdx)();
        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);
        txoInfo = __core__ifThenElse(
            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),
            () -> {
                __core__chooseUnit(__helios__assert(false, "cbor(txoId) len > 9 !!"), idxBytes)
            },
            () -> {
                () -> {
                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8("@")()), idxBytes)
                }()
            }
        )();
        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);
        mhs = __helios__bytearray__show(miniHash)();
        (p) -> {
            __helios__string____add(__helios__string____add(p, "-"), mhs)
        }
    };
    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {
        __helios__bytearray____lt(k1, k2)
    };
    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_224) -> {
        (fn_25) -> {
            recurse_93 = (recurse_92, map_31) -> {
                __core__chooseList(map_31, () -> {
                    ()
                }, () -> {
                    head_87 = __core__headList__safe(map_31);
                    __core__chooseUnit(fn_25(__helios__bytearray__from_data(__core__fstPair(head_87)), __helios__int__from_data(__core__sndPair(head_87))), recurse_92(recurse_92, __core__tailList__safe(map_31)))
                })()
            };
            recurse_93(recurse_93, self_224)
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_225) -> {
        (fn_26) -> {
            __helios__common__filter_map(self_225, (pair_74) -> {
                fn_26(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_74)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_74)))
            })
        }
    };
    __helios__list[__helios__string]__length = __helios__common__length;
    __helios__list[__helios__string]__head = (self_226) -> {
        __helios__string__from_data(__core__headList(self_226))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_227) -> {
        (fn_27) -> {
            recurse_95 = (recurse_94, map_32) -> {
                __core__chooseList(map_32, () -> {
                    ()
                }, () -> {
                    head_88 = __core__headList__safe(map_32);
                    __core__chooseUnit(fn_27(__helios__mintingpolicyhash__from_data(__core__fstPair(head_88)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_88))), recurse_94(recurse_94, __core__tailList__safe(map_32)))
                })()
            };
            recurse_95(recurse_95, self_227)
        }
    };
    __helios__option[__helios__int]__none____is = (data_263) -> {
        __helios__common__enum_tag_equals(data_263, 1)
    };
    __helios__option[__helios__int]__some__some = (self_228) -> {
        __helios__int__from_data(__helios__common__enum_field_0(self_228))
    };
    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_229) -> {
        (key_23) -> {
            __helios__common__map_get(self_229, __helios__bytearray____to_data(key_23), (x_11) -> {
                __core__constrData(0, __helios__common__list_1(x_11))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_230) -> {
        (key_24) -> {
            key_25 = __helios__mintingpolicyhash____to_data(key_24);
            recurse_97 = (recurse_96, self_231) -> {
                __core__chooseList(self_231, () -> {
                    self_231
                }, () -> {
                    head_89 = __core__headList__safe(self_231);
                    tail_4 = __core__tailList__safe(self_231);
                    __core__ifThenElse(
                        __core__equalsData(key_25, __core__fstPair(head_89)),
                        () -> {
                            recurse_96(recurse_96, tail_4)
                        },
                        () -> {
                            __core__mkCons(head_89, recurse_96(recurse_96, tail_4))
                        }
                    )()
                })()
            };
            recurse_97(recurse_97, self_230)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;
    __helios__map[__helios__bytearray@__helios__int]____eq = (self_232, other_4) -> {
        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_232), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))
    };
    __helios__map[__helios__bytearray@__helios__int]__sort = (self_233) -> {
        (comp_4) -> {
            __helios__common__sort(self_233, (a_16, b_14) -> {
                comp_4(__helios__bytearray__from_data(__core__fstPair(a_16)), __helios__int__from_data(__core__sndPair(a_16)), __helios__bytearray__from_data(__core__fstPair(b_14)), __helios__int__from_data(__core__sndPair(b_14)))
            })
        }
    };
    __helios__value__sum[__helios__value] = (self_234) -> {
        recurse_99 = (recurse_98, lst_25) -> {
            __core__chooseList(lst_25, () -> {
                __helios__value__ZERO
            }, () -> {
                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_25))), recurse_98(recurse_98, __core__tailList__safe(lst_25)))
            })()
        };
        recurse_99(recurse_99, self_234)
    };
    __helios__list[__helios__string]__map[__helios__value] = (self_235) -> {
        (fn_28) -> {
            __helios__common__map(self_235, (item_13) -> {
                __helios__value____to_data(fn_28(__helios__string__from_data(item_13)))
            }, __core__mkNilData(()))
        }
    };
    __helios__list[__helios__string]__map[__helios__string] = (self_236) -> {
        (fn_29) -> {
            __helios__common__map(self_236, (item_14) -> {
                __helios__string____to_data(fn_29(__helios__string__from_data(item_14)))
            }, __core__mkNilData(()))
        }
    };
    __module__CapoMintHelpers__validateUutMinting = (mph_27, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {
        mkTokenName_1 = __core__ifThenElse(
            __useopt__mkTokenName,
            () -> {
                mkTokenName
            },
            () -> {
                __module__CapoMintHelpers__mkUutTnFactory(seed_2)
            }
        )();
        bootstrapCharter_1 = __core__ifThenElse(
            __useopt__bootstrapCharter,
            () -> {
                bootstrapCharter
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        otherMintedValue_1 = __core__ifThenElse(
            __useopt__otherMintedValue,
            () -> {
                otherMintedValue
            },
            () -> {
                __helios__value__ZERO
            }
        )();
        needsMintDelegateApproval_1 = __core__ifThenElse(
            __useopt__needsMintDelegateApproval,
            () -> {
                needsMintDelegateApproval
            },
            () -> {
                true
            }
        )();
        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(
            __useopt__extraMintDelegateRedeemerCheck_1,
            () -> {
                extraMintDelegateRedeemerCheck_2
            },
            () -> {
                true
            }
        )();
        checkMintDgtActivity_3 = __core__ifThenElse(
            __useopt__checkMintDgtActivity_1,
            () -> {
                checkMintDgtActivity_2
            },
            () -> {
                __module__CapoMintHelpers__noOtherActivitiesSupported
            }
        )();
        __module__StellarHeliosHelpers__bREQTgroup("checks that the UUTs are minted correctly", true, true, () -> {
            __core__chooseUnit(__helios__print(__helios__string____add("-- uut purposes: ", __helios__list[__helios__string]__join(purposes)(true, ", "))), isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());
            delegateApproval = __core__ifThenElse(
                isBootstrapping,
                () -> {
                    __core__chooseUnit(__helios__print("  -- bootstrapping; no delegate approval required"), true)
                },
                () -> {
                    () -> {
                        __core__chooseUnit(__helios__print("  -- not bootstrapping; must honor the mintDelegate's authority"), __lhs_0_114 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_27, false, ()), 0);
                        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_114);
                        __core__ifThenElse(
                            needsMintDelegateApproval_1,
                            () -> {
                                __core__chooseUnit(__helios__print("  -- checking mintDelegate's authority"), __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_27, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3))
                            },
                            () -> {
                                () -> {
                                    true
                                }()
                            }
                        )())
                    }()
                }
            )();
            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);
            tokenNames = __helios__list[__helios__string]__map[__helios__string](purposes)(mkTokenName_1);
            expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](tokenNames)((tn_2) -> {
                __module__StellarHeliosHelpers__mkTv(mph_27, true, tn_2, false, (), false, ())
            })));
            __core__chooseUnit(__core__ifThenElse(
                __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_27)),
                () -> {
                    mphStr = __helios__mintingpolicyhash__show(mph_27)();
                    valStr = __helios__value__show(valueMinted)(false, ());
                    __core__chooseUnit(__helios__print(__helios__string____add("  -- no mint from our policy ", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print("^^  value minted"), __helios__error("\u274C\u274C validateUutMinting(): no mint from our policy"))))
                },
                () -> {
                    () -> {
                        ()
                    }()
                }
            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_27))(__module__CapoMintHelpers__sortPolicyValuesPredictably);
            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_4, i_12) -> {
                tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_4)();
                __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E} expected: ", __helios__int__show(i_12)()), "x "), tnStr_1))
            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_27);
            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);
            __core__chooseUnit(__core__ifThenElse(
                true,
                () -> {
                    __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_3, i_11) -> {
                        tnStr = __helios__bytearray__decode_utf8_safe(tn_3)();
                        __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    \u2139\uFE0F \u{1F41E}   actual: ", __helios__int__show(i_11)()), "x "), tnStr))
                    }), filteredOtherMint = __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_15, __37) -> {
                        __helios__mintingpolicyhash____neq(b_15, mph_27)
                    }));
                    __core__ifThenElse(
                        __helios__bool____not(__helios__value__is_zero(filteredOtherMint)()),
                        () -> {
                            __core__chooseUnit(__helios__print("other policy values minted: 
"), __helios__print(__helios__value__show(__helios__value__get_assets(filteredOtherMint)())(false, ())))
                        },
                        () -> {
                            () -> {
                                ()
                            }()
                        }
                    )())
                },
                () -> {
                    () -> {
                        ()
                    }()
                }
            )(), thisPolicyMintOK = __module__StellarHeliosHelpers__bREQTgroup("Ensures the mint for this policy-id is exactly the expected value", true, true, () -> {
                __core__chooseUnit(__helios__assert(__helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted), "\u274C\u274C validateUutMinting(): mismatch in UUT mint"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2, false, ()), "\u274C\u274C validateUutMinting(): no seed"), __core__chooseUnit(__helios__print("\u2705 ok: this-policy mint value matches"), true)))
            });
            otherPoliciesMintOk = __core__ifThenElse(
                __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),
                () -> {
                    true
                },
                () -> {
                    () -> {
                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with an additional mint-value indicated", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add("  -- other-minted-value: ", __helios__value__show(otherMintedValue_1)(false, ()))), remainingExpectedMint = __core__ifThenElse(
                            __helios__value__contains_policy(expectedValue)(mph_27),
                            () -> {
                                __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_27))
                            },
                            () -> {
                                () -> {
                                    expectedValue
                                }()
                            }
                        )();
                        __core__ifThenElse(
                            __helios__value__is_zero(remainingExpectedMint)(),
                            () -> {
                                true
                            },
                            () -> {
                                () -> {
                                    __module__StellarHeliosHelpers__bREQTgroup("...with other-policy values expected: ", false, true, () -> {
                                        __core__chooseUnit(__helios__print(__helios__string____add("  -- expecting other-mint value: ", __helios__value__show(remainingExpectedMint)(false, ()))), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It should mint exactly the indicated token names", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Doesn't constrain any mentioned policy's minting of any other tokens", false, (), false, (), false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {
                                            mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);
                                            __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_3, expectedCount) -> {
                                                __core__ifThenElse(
                                                    __helios__bool____not(__cond_55 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_3);
                                                    __core__ifThenElse(
                                                        __helios__option[__helios__int]__none____is(__cond_55),
                                                        () -> {
                                                            (__lhs_0_116) -> {
                                                                false
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_115) -> {
                                                                actualCount = __helios__option[__helios__int]__some__some(__lhs_0_115);
                                                                __helios__int____eq(actualCount, expectedCount)
                                                            }
                                                        }
                                                    )()(__cond_55)),
                                                    () -> {
                                                        tnString = __helios__bytearray__decode_utf8_safe(tokenName_3)();
                                                        __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("\u274C\u274C validateUutMinting(): wrong mint for ", __helios__mintingpolicyhash__show(otherMph)()), ":"), tnString))
                                                    },
                                                    () -> {
                                                        () -> {
                                                            ()
                                                        }()
                                                    }
                                                )()
                                            })
                                        }), true))))
                                    })
                                }()
                            }
                        )()))
                    }()
                }
            )();
            __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)("  -- other-expected-mints ok? "), "unreachable exception: otherPoliciesMintOk"), __core__chooseUnit(__core__ifThenElse(
                __helios__int____gt(__helios__list[__helios__string]__length(purposes), 1),
                () -> {
                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("\u2705 ok: minted uuts: {", __helios__list[__helios__string]__join(purposes)(true, ", ")), "}"), mkTokenName_1("")))
                },
                () -> {
                    () -> {
                        __helios__print(__helios__string____add("\u2705 ok: minted uut: ", __helios__list[__helios__string]__head(tokenNames)))
                    }()
                }
            )(), __helios__bool__and(() -> {
                __helios__bool__and(() -> {
                    delegateApproval
                }, () -> {
                    thisPolicyMintOK
                })
            }, () -> {
                otherPoliciesMintOk
            })))))))
        })
    };
    __module__STokMintDelegate__DelegateDatum[]__is_valid_data = (__module__STokMintDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__STokMintDelegate__DelegateDatum[]__IsDelegation__is_valid_data, __module__STokMintDelegate__DelegateDatum[]__capoStoredData__is_valid_data) -> {
        (data_264) -> {
            __core__ifThenElse(
                __module__STokMintDelegate__DelegateDatum[]__capoStoredData__is_valid_data(data_264),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__STokMintDelegate__DelegateDatum[]__IsDelegation__is_valid_data(data_264),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__STokMintDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data(data_264),
                                () -> {
                                    true
                                },
                                () -> {
                                    false
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__STokMintDelegate__DelegateDatum[]__from_data = (__module__STokMintDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__STokMintDelegate__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__STokMintDelegate__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {
        (data_265) -> {
            ignore_17 = __core__ifThenElse(
                __module__STokMintDelegate__DelegateDatum[]__is_valid_data(__module__STokMintDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__STokMintDelegate__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__STokMintDelegate__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_265),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateDatum data", ())
                }
            )();
            data_265
        }
    };
    __module__STokMintDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_266) -> {
        __core__chooseData(data_266, () -> {
            pair_75 = __core__unConstrData__safe(data_266);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_75), 0),
                () -> {
                    data_267 = __core__listData(__core__sndPair(pair_75));
                    __core__chooseData(data_267, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_153 = __core__unListData__safe(data_267);
                        __core__chooseList(fields_153, () -> {
                            false
                        }, () -> {
                            head_90 = __core__headList__safe(fields_153);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_90),
                                () -> {
                                    fields_154 = __core__tailList__safe(fields_153);
                                    __core__chooseList(fields_154, () -> {
                                        false
                                    }, () -> {
                                        head_91 = __core__headList__safe(fields_154);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_91),
                                            () -> {
                                                fields_155 = __core__tailList__safe(fields_154);
                                                __core__chooseList(fields_155, () -> {
                                                    false
                                                }, () -> {
                                                    head_92 = __core__headList__safe(fields_155);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_92),
                                                        () -> {
                                                            fields_156 = __core__tailList__safe(fields_155);
                                                            __core__chooseList(fields_156, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;
    __module__STokMintDelegate__DelegateDatum[]__IsDelegation____is = (data_268) -> {
        __helios__common__enum_tag_equals(data_268, 1)
    };
    __module__STokMintDelegate__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_269) -> {
        __core__chooseData(data_269, () -> {
            pair_76 = __core__unConstrData__safe(data_269);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_76), 1),
                () -> {
                    data_270 = __core__listData(__core__sndPair(pair_76));
                    __core__chooseData(data_270, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_157 = __core__unListData__safe(data_270);
                        __core__chooseList(fields_157, () -> {
                            false
                        }, () -> {
                            head_93 = __core__headList__safe(fields_157);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_93),
                                () -> {
                                    fields_158 = __core__tailList__safe(fields_157);
                                    __core__chooseList(fields_158, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__DelegateDatum[]__IsDelegation__dd = (self_237) -> {
        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_237))
    };
    __module__STokMintDelegate__DelegateDatum[]__capoStoredData____is = (data_271) -> {
        __helios__common__enum_tag_equals(data_271, 2)
    };
    __module__STokMintDelegate__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_272) -> {
        __core__chooseData(data_272, () -> {
            pair_77 = __core__unConstrData__safe(data_272);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_77), 2),
                () -> {
                    data_273 = __core__listData(__core__sndPair(pair_77));
                    __core__chooseData(data_273, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_159 = __core__unListData__safe(data_273);
                        __core__chooseList(fields_159, () -> {
                            false
                        }, () -> {
                            head_94 = __core__headList__safe(fields_159);
                            __core__ifThenElse(
                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_94),
                                () -> {
                                    fields_160 = __core__tailList__safe(fields_159);
                                    __core__chooseList(fields_160, () -> {
                                        false
                                    }, () -> {
                                        head_95 = __core__headList__safe(fields_160);
                                        __core__ifThenElse(
                                            __helios__int__is_valid_data(head_95),
                                            () -> {
                                                fields_161 = __core__tailList__safe(fields_160);
                                                __core__chooseList(fields_161, () -> {
                                                    false
                                                }, () -> {
                                                    head_96 = __core__headList__safe(fields_161);
                                                    __core__ifThenElse(
                                                        __helios__data__is_valid_data(head_96),
                                                        () -> {
                                                            fields_162 = __core__tailList__safe(fields_161);
                                                            __core__chooseList(fields_162, true, false)
                                                        },
                                                        () -> {
                                                            false
                                                        }
                                                    )()
                                                })()
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__MintingActivity[]__is_valid_data = (__module__STokMintDelegate__MintingActivity[]__MintingParticipantToken__is_valid_data, __module__STokMintDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data) -> {
        (data_274) -> {
            __core__ifThenElse(
                __module__STokMintDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data(data_274),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__STokMintDelegate__MintingActivity[]__MintingParticipantToken__is_valid_data(data_274),
                        () -> {
                            true
                        },
                        () -> {
                            false
                        }
                    )()
                }
            )()
        }
    };
    __module__STokMintDelegate__MintingActivity[]__from_data = (__module__STokMintDelegate__MintingActivity[]__MintingParticipantToken__is_valid_data_1, __module__STokMintDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data_1) -> {
        (data_275) -> {
            ignore_18 = __core__ifThenElse(
                __module__STokMintDelegate__MintingActivity[]__is_valid_data(__module__STokMintDelegate__MintingActivity[]__MintingParticipantToken__is_valid_data_1, __module__STokMintDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data_1)(data_275),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid MintingActivity data", ())
                }
            )();
            data_275
        }
    };
    __module__STokMintDelegate__MintingActivity[]__MintingParticipantToken____is = (data_276) -> {
        __helios__common__enum_tag_equals(data_276, 0)
    };
    __module__STokMintDelegate__MintingActivity[]__MintingParticipantToken__is_valid_data_2 = (data_277) -> {
        __core__chooseData(data_277, () -> {
            pair_78 = __core__unConstrData__safe(data_277);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_78), 0),
                () -> {
                    data_278 = __core__listData(__core__sndPair(pair_78));
                    __core__chooseData(data_278, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_163 = __core__unListData__safe(data_278);
                        __core__chooseList(fields_163, () -> {
                            false
                        }, () -> {
                            head_97 = __core__headList__safe(fields_163);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_97),
                                () -> {
                                    fields_164 = __core__tailList__safe(fields_163);
                                    __core__chooseList(fields_164, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__MintingActivity[]__MintingParticipantToken__seed = (self_238) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_238))
    };
    __module__STokMintDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data_2 = (data_279) -> {
        __core__chooseData(data_279, () -> {
            pair_79 = __core__unConstrData__safe(data_279);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_79), 1),
                () -> {
                    data_280 = __core__listData(__core__sndPair(pair_79));
                    __core__chooseData(data_280, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_165 = __core__unListData__safe(data_280);
                        __core__chooseList(fields_165, () -> {
                            false
                        }, () -> {
                            head_98 = __core__headList__safe(fields_165);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_98),
                                () -> {
                                    fields_166 = __core__tailList__safe(fields_165);
                                    __core__chooseList(fields_166, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__MintingActivity[]__MintingFungibleTokens__tokenName = (self_239) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_0(self_239))
    };
    __module__STokMintDelegate__SpendingActivity[]__is_valid_data = (__module__STokMintDelegate__SpendingActivity[]___placeholder1SA__is_valid_data) -> {
        (data_281) -> {
            __core__ifThenElse(
                __module__STokMintDelegate__SpendingActivity[]___placeholder1SA__is_valid_data(data_281),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__STokMintDelegate__SpendingActivity[]___placeholder1SA__is_valid_data_1 = (data_282) -> {
        __core__chooseData(data_282, () -> {
            pair_80 = __core__unConstrData__safe(data_282);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_80), 0),
                () -> {
                    data_283 = __core__listData(__core__sndPair(pair_80));
                    __core__chooseData(data_283, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_167 = __core__unListData__safe(data_283);
                        __core__chooseList(fields_167, () -> {
                            false
                        }, () -> {
                            head_99 = __core__headList__safe(fields_167);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_99),
                                () -> {
                                    fields_168 = __core__tailList__safe(fields_167);
                                    __core__chooseList(fields_168, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__BurningActivity[]__is_valid_data = (__module__STokMintDelegate__BurningActivity[]___placeholder1BA__is_valid_data) -> {
        (data_284) -> {
            __core__ifThenElse(
                __module__STokMintDelegate__BurningActivity[]___placeholder1BA__is_valid_data(data_284),
                () -> {
                    true
                },
                () -> {
                    false
                }
            )()
        }
    };
    __module__STokMintDelegate__BurningActivity[]___placeholder1BA__is_valid_data_1 = (data_285) -> {
        __core__chooseData(data_285, () -> {
            pair_81 = __core__unConstrData__safe(data_285);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_81), 0),
                () -> {
                    data_286 = __core__listData(__core__sndPair(pair_81));
                    __core__chooseData(data_286, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_169 = __core__unListData__safe(data_286);
                        __core__chooseList(fields_169, () -> {
                            false
                        }, () -> {
                            head_100 = __core__headList__safe(fields_169);
                            __core__ifThenElse(
                                __helios__bytearray__is_valid_data(head_100),
                                () -> {
                                    fields_170 = __core__tailList__safe(fields_169);
                                    __core__chooseList(fields_170, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__DelegateActivity[]____eq = __helios__common____eq;
    __module__STokMintDelegate__DelegateActivity[]__is_valid_data = (__module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__STokMintDelegate__DelegateActivity[]__SpendingActivities__is_valid_data, __module__STokMintDelegate__DelegateActivity[]__MintingActivities__is_valid_data, __module__STokMintDelegate__DelegateActivity[]__BurningActivities__is_valid_data, __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data, __module__STokMintDelegate__DelegateActivity[]__OtherActivities__is_valid_data) -> {
        (data_287) -> {
            __core__ifThenElse(
                __module__STokMintDelegate__DelegateActivity[]__OtherActivities__is_valid_data(data_287),
                () -> {
                    true
                },
                () -> {
                    __core__ifThenElse(
                        __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_287),
                        () -> {
                            true
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_287),
                                () -> {
                                    true
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_287),
                                        () -> {
                                            true
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_287),
                                                () -> {
                                                    true
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__STokMintDelegate__DelegateActivity[]__BurningActivities__is_valid_data(data_287),
                                                        () -> {
                                                            true
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__STokMintDelegate__DelegateActivity[]__MintingActivities__is_valid_data(data_287),
                                                                () -> {
                                                                    true
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__STokMintDelegate__DelegateActivity[]__SpendingActivities__is_valid_data(data_287),
                                                                        () -> {
                                                                            true
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_287),
                                                                                () -> {
                                                                                    true
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_287),
                                                                                        () -> {
                                                                                            true
                                                                                        },
                                                                                        () -> {
                                                                                            false
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()
                }
            )()
        }
    };
    __module__STokMintDelegate__DelegateActivity[]__from_data = (__module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__OtherActivities__is_valid_data_1) -> {
        (data_288) -> {
            ignore_19 = __core__ifThenElse(
                __module__STokMintDelegate__DelegateActivity[]__is_valid_data(__module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1, __module__STokMintDelegate__DelegateActivity[]__OtherActivities__is_valid_data_1)(data_288),
                () -> {
                    ()
                },
                () -> {
                    __core__trace("Warning: invalid DelegateActivity data", ())
                }
            )();
            data_288
        }
    };
    __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities____is = (data_289) -> {
        __helios__common__enum_tag_equals(data_289, 0)
    };
    __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_290) -> {
        __core__chooseData(data_290, () -> {
            pair_82 = __core__unConstrData__safe(data_290);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_82), 0),
                () -> {
                    data_291 = __core__listData(__core__sndPair(pair_82));
                    __core__chooseData(data_291, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_171 = __core__unListData__safe(data_291);
                        __core__chooseList(fields_171, () -> {
                            false
                        }, () -> {
                            head_101 = __core__headList__safe(fields_171);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_101),
                                () -> {
                                    fields_172 = __core__tailList__safe(fields_171);
                                    __core__chooseList(fields_172, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities__activity = (self_240) -> {
        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_240))
    };
    __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities____is = (data_292) -> {
        __helios__common__enum_tag_equals(data_292, 1)
    };
    __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_293) -> {
        __core__chooseData(data_293, () -> {
            pair_83 = __core__unConstrData__safe(data_293);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_83), 1),
                () -> {
                    data_294 = __core__listData(__core__sndPair(pair_83));
                    __core__chooseData(data_294, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_173 = __core__unListData__safe(data_294);
                        __core__chooseList(fields_173, () -> {
                            false
                        }, () -> {
                            head_102 = __core__headList__safe(fields_173);
                            __core__ifThenElse(
                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_102),
                                () -> {
                                    fields_174 = __core__tailList__safe(fields_173);
                                    __core__chooseList(fields_174, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_241) -> {
        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_241))
    };
    __module__STokMintDelegate__DelegateActivity[]__SpendingActivities____is = (data_295) -> {
        __helios__common__enum_tag_equals(data_295, 2)
    };
    __module__STokMintDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_296) -> {
        __core__chooseData(data_296, () -> {
            pair_84 = __core__unConstrData__safe(data_296);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_84), 2),
                () -> {
                    data_297 = __core__listData(__core__sndPair(pair_84));
                    __core__chooseData(data_297, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_175 = __core__unListData__safe(data_297);
                        __core__chooseList(fields_175, () -> {
                            false
                        }, () -> {
                            head_103 = __core__headList__safe(fields_175);
                            __core__ifThenElse(
                                __module__STokMintDelegate__SpendingActivity[]__is_valid_data(__module__STokMintDelegate__SpendingActivity[]___placeholder1SA__is_valid_data_1)(head_103),
                                () -> {
                                    fields_176 = __core__tailList__safe(fields_175);
                                    __core__chooseList(fields_176, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__DelegateActivity[]__MintingActivities____is = (data_298) -> {
        __helios__common__enum_tag_equals(data_298, 3)
    };
    __module__STokMintDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_299) -> {
        __core__chooseData(data_299, () -> {
            pair_85 = __core__unConstrData__safe(data_299);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_85), 3),
                () -> {
                    data_300 = __core__listData(__core__sndPair(pair_85));
                    __core__chooseData(data_300, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_177 = __core__unListData__safe(data_300);
                        __core__chooseList(fields_177, () -> {
                            false
                        }, () -> {
                            head_104 = __core__headList__safe(fields_177);
                            __core__ifThenElse(
                                __module__STokMintDelegate__MintingActivity[]__is_valid_data(__module__STokMintDelegate__MintingActivity[]__MintingParticipantToken__is_valid_data_2, __module__STokMintDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data_2)(head_104),
                                () -> {
                                    fields_178 = __core__tailList__safe(fields_177);
                                    __core__chooseList(fields_178, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__DelegateActivity[]__MintingActivities__activity = (self_242) -> {
        __module__STokMintDelegate__MintingActivity[]__from_data(__module__STokMintDelegate__MintingActivity[]__MintingParticipantToken__is_valid_data_2, __module__STokMintDelegate__MintingActivity[]__MintingFungibleTokens__is_valid_data_2)(__helios__common__enum_field_0(self_242))
    };
    __module__STokMintDelegate__DelegateActivity[]__BurningActivities____is = (data_301) -> {
        __helios__common__enum_tag_equals(data_301, 4)
    };
    __module__STokMintDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_302) -> {
        __core__chooseData(data_302, () -> {
            pair_86 = __core__unConstrData__safe(data_302);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_86), 4),
                () -> {
                    data_303 = __core__listData(__core__sndPair(pair_86));
                    __core__chooseData(data_303, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_179 = __core__unListData__safe(data_303);
                        __core__chooseList(fields_179, () -> {
                            false
                        }, () -> {
                            head_105 = __core__headList__safe(fields_179);
                            __core__ifThenElse(
                                __module__STokMintDelegate__BurningActivity[]__is_valid_data(__module__STokMintDelegate__BurningActivity[]___placeholder1BA__is_valid_data_1)(head_105),
                                () -> {
                                    fields_180 = __core__tailList__safe(fields_179);
                                    __core__chooseList(fields_180, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData____is = (data_304) -> {
        __helios__common__enum_tag_equals(data_304, 5)
    };
    __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_305) -> {
        __core__chooseData(data_305, () -> {
            pair_87 = __core__unConstrData__safe(data_305);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_87), 5),
                () -> {
                    data_306 = __core__listData(__core__sndPair(pair_87));
                    __core__chooseData(data_306, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_181 = __core__unListData__safe(data_306);
                        __core__chooseList(fields_181, () -> {
                            false
                        }, () -> {
                            head_106 = __core__headList__safe(fields_181);
                            __core__ifThenElse(
                                __helios__txoutputid__is_valid_data(head_106),
                                () -> {
                                    fields_182 = __core__tailList__safe(fields_181);
                                    __core__chooseList(fields_182, () -> {
                                        false
                                    }, () -> {
                                        head_107 = __core__headList__safe(fields_182);
                                        __core__ifThenElse(
                                            __helios__string__is_valid_data(head_107),
                                            () -> {
                                                fields_183 = __core__tailList__safe(fields_182);
                                                __core__chooseList(fields_183, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__seed = (self_243) -> {
        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_243))
    };
    __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__dataType = (self_244) -> {
        __helios__string__from_data(__helios__common__enum_field_1(self_244))
    };
    __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData____is = (data_307) -> {
        __helios__common__enum_tag_equals(data_307, 6)
    };
    __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_308) -> {
        __core__chooseData(data_308, () -> {
            pair_88 = __core__unConstrData__safe(data_308);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_88), 6),
                () -> {
                    data_309 = __core__listData(__core__sndPair(pair_88));
                    __core__chooseData(data_309, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_184 = __core__unListData__safe(data_309);
                        __core__chooseList(fields_184, () -> {
                            false
                        }, () -> {
                            head_108 = __core__headList__safe(fields_184);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_108),
                                () -> {
                                    fields_185 = __core__tailList__safe(fields_184);
                                    __core__chooseList(fields_185, () -> {
                                        false
                                    }, () -> {
                                        head_109 = __core__headList__safe(fields_185);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_109),
                                            () -> {
                                                fields_186 = __core__tailList__safe(fields_185);
                                                __core__chooseList(fields_186, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_245) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_245))
    };
    __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__recId = (self_246) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_246))
    };
    __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData____is = (data_310) -> {
        __helios__common__enum_tag_equals(data_310, 7)
    };
    __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_311) -> {
        __core__chooseData(data_311, () -> {
            pair_89 = __core__unConstrData__safe(data_311);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_89), 7),
                () -> {
                    data_312 = __core__listData(__core__sndPair(pair_89));
                    __core__chooseData(data_312, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_187 = __core__unListData__safe(data_312);
                        __core__chooseList(fields_187, () -> {
                            false
                        }, () -> {
                            head_110 = __core__headList__safe(fields_187);
                            __core__ifThenElse(
                                __helios__string__is_valid_data(head_110),
                                () -> {
                                    fields_188 = __core__tailList__safe(fields_187);
                                    __core__chooseList(fields_188, () -> {
                                        false
                                    }, () -> {
                                        head_111 = __core__headList__safe(fields_188);
                                        __core__ifThenElse(
                                            __helios__bytearray__is_valid_data(head_111),
                                            () -> {
                                                fields_189 = __core__tailList__safe(fields_188);
                                                __core__chooseList(fields_189, true, false)
                                            },
                                            () -> {
                                                false
                                            }
                                        )()
                                    })()
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__dataType = (self_247) -> {
        __helios__string__from_data(__helios__common__enum_field_0(self_247))
    };
    __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__recId = (self_248) -> {
        __helios__bytearray__from_data(__helios__common__enum_field_1(self_248))
    };
    __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities____is = (data_313) -> {
        __helios__common__enum_tag_equals(data_313, 8)
    };
    __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_314) -> {
        __core__chooseData(data_314, () -> {
            pair_90 = __core__unConstrData__safe(data_314);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_90), 8),
                () -> {
                    data_315 = __core__listData(__core__sndPair(pair_90));
                    __core__chooseData(data_315, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_190 = __core__unListData__safe(data_315);
                        __core__chooseList(fields_190, () -> {
                            false
                        }, () -> {
                            head_112 = __core__headList__safe(fields_190);
                            __core__ifThenElse(
                                __helios__list[__helios__data]__is_valid_data(head_112),
                                () -> {
                                    fields_191 = __core__tailList__safe(fields_190);
                                    __core__chooseList(fields_191, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities__activities = (self_249) -> {
        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_249))
    };
    __module__STokMintDelegate__DelegateActivity[]__OtherActivities____is = (data_316) -> {
        __helios__common__enum_tag_equals(data_316, 9)
    };
    __module__STokMintDelegate__DelegateActivity[]__OtherActivities__is_valid_data_2 = (data_317) -> {
        __core__chooseData(data_317, () -> {
            pair_91 = __core__unConstrData__safe(data_317);
            __core__ifThenElse(
                __core__equalsInteger(__core__fstPair(pair_91), 9),
                () -> {
                    data_318 = __core__listData(__core__sndPair(pair_91));
                    __core__chooseData(data_318, () -> {
                        false
                    }, () -> {
                        false
                    }, () -> {
                        fields_192 = __core__unListData__safe(data_318);
                        __core__chooseList(fields_192, () -> {
                            false
                        }, () -> {
                            head_113 = __core__headList__safe(fields_192);
                            __core__ifThenElse(
                                __helios__data__is_valid_data(head_113),
                                () -> {
                                    fields_193 = __core__tailList__safe(fields_192);
                                    __core__chooseList(fields_193, true, false)
                                },
                                () -> {
                                    false
                                }
                            )()
                        })()
                    }, () -> {
                        false
                    }, () -> {
                        false
                    })()
                },
                () -> {
                    false
                }
            )()
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        }, () -> {
            false
        })()
    };
    __helios__option[__helios__string]__none____is = (data_319) -> {
        __helios__common__enum_tag_equals(data_319, 1)
    };
    __helios__list[__helios__string]__find_safe = (self_250) -> {
        (fn_30) -> {
            __helios__common__find_safe(self_250, (item_15) -> {
                fn_30(__helios__string__from_data(item_15))
            }, __helios__common__identity)
        }
    };
    __module__STokMintDelegate__DelegateActivity[]__additionalDelegateValidation = (__module__STokMintDelegate__DelegateActivity[]__supportedCapoDelegatePurposes) -> {
        (self_251) -> {
            (priorMddd, cctx) -> {
                mph_28 = __module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__STokMintDelegate__DelegateDatum[]__IsDelegation__dd(priorMddd));
                __helios__bool__or(() -> {
                    __cond_56 = self_251;
                    __core__ifThenElse(
                        __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_56),
                        () -> {
                            (__lhs_0_131) -> {
                                true
                            }
                        },
                        () -> {
                            __core__ifThenElse(
                                __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_56),
                                () -> {
                                    (__lhs_0_127) -> {
                                        CLA = __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_127);
                                        __cond_59 = CLA;
                                        __core__ifThenElse(
                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_59),
                                            () -> {
                                                (__lhs_0_128) -> {
                                                    seed_4 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_128);
                                                    purpose_3 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_128);
                                                    __cond_60 = __helios__list[__helios__string]__find_safe(__module__STokMintDelegate__DelegateActivity[]__supportedCapoDelegatePurposes(self_251)())((p_1) -> {
                                                        __helios__string____eq(p_1, purpose_3)
                                                    });
                                                    __core__ifThenElse(
                                                        __helios__option[__helios__string]__none____is(__cond_60),
                                                        () -> {
                                                            (__lhs_0_130) -> {
                                                                __core__chooseUnit(__core__ifThenElse(
                                                                    __helios__int____eq(__helios__list[__helios__string]__length(__module__STokMintDelegate__DelegateActivity[]__supportedCapoDelegatePurposes(self_251)()), 0),
                                                                    () -> {
                                                                        __helios__print("note: unspecialized delegate has no supported purposes")
                                                                    },
                                                                    () -> {
                                                                        () -> {
                                                                            ()
                                                                        }()
                                                                    }
                                                                )(), __helios__error("can't mint delegate with unsupported purpose"))
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_129) -> {
                                                                __module__CapoMintHelpers__validateUutMinting(mph_28, seed_4, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_4), false, (), false, (), true, false, false, (), false, ())
                                                            }
                                                        }
                                                    )()(__cond_60)
                                                }
                                            },
                                            () -> {
                                                (__39) -> {
                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- to customize: mint/spend delegates have an option to validate additional lifecycle constraints here", false, (), false, (), false, ()), true)
                                                }
                                            }
                                        )()(__cond_59)
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__STokMintDelegate__DelegateActivity[]__MintingActivities____is(__cond_56),
                                        () -> {
                                            (__lhs_0_122) -> {
                                                ma_2 = __module__STokMintDelegate__DelegateActivity[]__MintingActivities__activity(__lhs_0_122);
                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), "can't"), __cond_57 = ma_2;
                                                __core__ifThenElse(
                                                    __module__STokMintDelegate__MintingActivity[]__MintingParticipantToken____is(__cond_57),
                                                    () -> {
                                                        (__lhs_0_126) -> {
                                                            seed_3 = __module__STokMintDelegate__MintingActivity[]__MintingParticipantToken__seed(__lhs_0_126);
                                                            __module__StellarHeliosHelpers__REQTgroup[__helios__bool]("minting participant token", false, true, () -> {
                                                                purpose_2 = "member";
                                                                __module__CapoMintHelpers__validateUutMinting(mph_28, seed_3, __core__mkCons(__helios__string____to_data(purpose_2), __core__mkNilData(())), false, (), false, (), false, (), true, false, false, (), false, ())
                                                            })
                                                        }
                                                    },
                                                    () -> {
                                                        (__lhs_0_123) -> {
                                                            tokenName_4 = __module__STokMintDelegate__MintingActivity[]__MintingFungibleTokens__tokenName(__lhs_0_123);
                                                            __core__chooseUnit(__helios__print("MintingFungibleTokens: "), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx)())(), "^^^ that can fail, this won't"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't interfere with other policies that may have a good reason to mint in this txn", false, (), false, (), false, ()), __core__chooseUnit(__helios__print("    -- NOTE: no explicit logic for non-interference, but we only inspect our own-policy-mint"), ourMint = __helios__value__get_policy(__helios__tx__minted(__helios__scriptcontext__tx))(mph_28);
                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("checks that the tokens minted in OUR policy are exactly according to expectations", false, (), false, (), false, ()), tn_5 = __helios__bytearray__decode_utf8(tokenName_4)();
                                                            __core__chooseUnit(__cond_58 = __helios__map[__helios__bytearray@__helios__int]__get_safe(ourMint)(tokenName_4);
                                                            __core__ifThenElse(
                                                                __helios__option[__helios__int]__none____is(__cond_58),
                                                                () -> {
                                                                    (__lhs_0_125) -> {
                                                                        __helios__error(__helios__string____add("expected tokens not minted: ", tn_5))
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__lhs_0_124) -> {
                                                                        n_6 = __helios__option[__helios__int]__some__some(__lhs_0_124);
                                                                        __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  -- ok, minting ", __helios__int__show(n_6)()), " fungibles: "), tn_5))
                                                                    }
                                                                }
                                                            )()(__cond_58), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow other tokens of ours to be minted in this txn", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(ourMint), 1), "unexpected other tokens minted"), true))))))))
                                                        }
                                                    }
                                                )()(__cond_57))
                                            }
                                        },
                                        () -> {
                                            __core__ifThenElse(
                                                __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_56),
                                                () -> {
                                                    (__lhs_0_121) -> {
                                                        dataType_2 = __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_121);
                                                        __core__chooseUnit(__helios__print(__helios__string____add(" \u2139\uFE0F  mint: delegates CreatingDelegatedData authority to policy: ", dataType_2)), true)
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_56),
                                                        () -> {
                                                            (__lhs_0_120) -> {
                                                                dataType_1 = __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_120);
                                                                __core__chooseUnit(__helios__print(__helios__string____add(" \u2139\uFE0F  spend: delegates UpdatingDelegatedData authority to policy: ", dataType_1)), true)
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_56),
                                                                () -> {
                                                                    (__lhs_0_119) -> {
                                                                        dataType = __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__dataType(__lhs_0_119);
                                                                        __core__chooseUnit(__helios__print(__helios__string____add(" \u2139\uFE0F  spend: delegates DeletingDelegatedData authority to policy: ", dataType)), true)
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_56),
                                                                        () -> {
                                                                            (__lhs_0_118) -> {
                                                                                __core__chooseUnit(__helios__print(" \u2139\uFE0F  mint delegate: MultipleDelegateActivities: no special validation in this unspecialized delegate"), true)
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__STokMintDelegate__DelegateActivity[]__OtherActivities____is(__cond_56),
                                                                                () -> {
                                                                                    (__lhs_0_117) -> {
                                                                                        __helios__error("no other activities exist in this delegate")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__38) -> {
                                                                                        __core__chooseUnit(__helios__assert(false, "mint/spend delegate rejecting other activity"), false)
                                                                                    }
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()
                                        }
                                    )()
                                }
                            )()
                        }
                    )()(__cond_56)
                }, () -> {
                    __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__STokMintDelegate__DelegateDatum[]__IsDelegation__serialize(priorMddd)())
                })
            }
        }
    };
    __module__STokMintDelegate__DelegateActivity[]__supportedCapoDelegatePurposes_1 = (self_252) -> {
        () -> {
            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {
                true
            }, () -> {
                __module__STokMintDelegate__DelegateActivity[]____eq(self_252, self_252)
            }), "no way, man"), __core__mkNilData(()))
        }
    };
    __module__STokMintDelegate__DelegateActivity[]__otherDatumValidation = (self_253) -> {
        (_priorMdd) -> {
            neverTriggered = () -> {
                __helios__error("never called")
            };
            __cond_61 = self_253;
            __core__ifThenElse(
                __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_61),
                () -> {
                    (__lhs_0_133) -> {
                        neverTriggered()
                    }
                },
                () -> {
                    __core__ifThenElse(
                        __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_61),
                        () -> {
                            (__lhs_0_132) -> {
                                neverTriggered()
                            }
                        },
                        () -> {
                            (__40) -> {
                                false
                            }
                        }
                    )()
                }
            )()(__cond_61)
        }
    };
    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));
    __module__BasicDelegate__instance = #67656e6572616c;
    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#53546f6b4d696e7444656c6567617465));
    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));
    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));
    __helios__list[__helios__data]__all = (self_254) -> {
        (fn_31) -> {
            __helios__common__all(self_254, (item_16) -> {
                fn_31(__helios__data__from_data(item_16))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_255, other_5) -> {
        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_255), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;
    __helios__option[__helios__assetclass]__unwrap = (self_256) -> {
        () -> {
            __helios__assetclass__from_data(__helios__common__enum_field_0(self_256))
        }
    };
    __helios__option[__helios__assetclass]__some____new = (some_4) -> {
        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_4)))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_257) -> {
        (fn_32) -> {
            __helios__common__all(self_257, (item_17) -> {
                fn_32(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_258) -> {
        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_258))
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_259) -> {
        (fn_33, a0) -> {
            __helios__common__fold(self_259, (prev_4, item_18) -> {
                fn_33(prev_4, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))
            }, a0)
        }
    };
    __helios__map[__helios__bytearray@__helios__int]__delete = (self_260) -> {
        (key_26) -> {
            key_27 = __helios__bytearray____to_data(key_26);
            recurse_101 = (recurse_100, self_261) -> {
                __core__chooseList(self_261, () -> {
                    self_261
                }, () -> {
                    head_114 = __core__headList__safe(self_261);
                    tail_5 = __core__tailList__safe(self_261);
                    __core__ifThenElse(
                        __core__equalsData(key_27, __core__fstPair(head_114)),
                        () -> {
                            recurse_100(recurse_100, tail_5)
                        },
                        () -> {
                            __core__mkCons(head_114, recurse_100(recurse_100, tail_5))
                        }
                    )()
                })()
            };
            recurse_101(recurse_101, self_260)
        }
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_320) -> {
        __helios__common__enum_tag_equals(data_320, 0)
    };
    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_262) -> {
        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_262))
    };
    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_263) -> {
        (key_28) -> {
            __helios__common__map_get(self_263, __helios__mintingpolicyhash____to_data(key_28), (x_12) -> {
                __core__constrData(0, __helios__common__list_1(x_12))
            }, () -> {
                __core__constrData(1, __helios__common__list_0)
            })
        }
    };
    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_264) -> {
        (fn_34, a0_1, b0_1) -> {
            __helios__common__fold(self_264, (prev_5, item_19) -> {
                prev_5((a_17, b_16) -> {
                    fn_34(a_17, b_16, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_19))
                })
            }, (callback_16) -> {
                callback_16(a0_1, b0_1)
            })
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_265) -> {
        __helios__common__length(self_265)
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_266) -> {
        head_115 = __core__headList(self_266);
        (callback_17) -> {
            callback_17(__helios__string__from_data(__core__fstPair(head_115)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_115)))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;
    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_267) -> {
        () -> {
            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_267))
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_268) -> {
        (key_29) -> {
            key_30 = __helios__string____to_data(key_29);
            recurse_103 = (recurse_102, self_269) -> {
                __core__chooseList(self_269, () -> {
                    self_269
                }, () -> {
                    head_116 = __core__headList__safe(self_269);
                    tail_6 = __core__tailList__safe(self_269);
                    __core__ifThenElse(
                        __core__equalsData(key_30, __core__fstPair(head_116)),
                        () -> {
                            recurse_102(recurse_102, tail_6)
                        },
                        () -> {
                            __core__mkCons(head_116, recurse_102(recurse_102, tail_6))
                        }
                    )()
                })()
            };
            recurse_103(recurse_103, self_268)
        }
    };
    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_270, other_6) -> {
        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_270), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))
    };
    __helios__option[__helios__string]__unwrap = (self_271) -> {
        () -> {
            __helios__string__from_data(__helios__common__enum_field_0(self_271))
        }
    };
    __helios__option[__helios__bytearray]__unwrap = (self_272) -> {
        () -> {
            __helios__bytearray__from_data(__helios__common__enum_field_0(self_272))
        }
    };
    __module__BasicDelegate__checkOneActivity_1 = (__module__BasicDelegate__checkOneActivity) -> {
        (dgtionDatum, activity_3, __useopt__dd, dd, __useopt__baseCctx, baseCctx, __useopt__desc, desc) -> {
            dd_1 = __core__ifThenElse(
                __useopt__dd,
                () -> {
                    dd
                },
                () -> {
                    __module__STokMintDelegate__DelegateDatum[]__IsDelegation__dd(dgtionDatum)
                }
            )();
            baseCctx_1 = __core__ifThenElse(
                __useopt__baseCctx,
                () -> {
                    baseCctx
                },
                () -> {
                    __module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1))
                }
            )();
            desc_1 = __core__ifThenElse(
                __useopt__desc,
                () -> {
                    desc
                },
                () -> {
                    "\u2039unspecified\u203A"
                }
            )();
            __module__StellarHeliosHelpers__logGroup_1(__module__StellarHeliosHelpers__logGroup_1)(__helios__string____add("\u{1F3D2} checking activity: ", desc_1), false, true, () -> {
                result_9 = __core__ifThenElse(
                    true,
                    () -> {
                        (checkNonDelegatedActivities) -> {
                            __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, "checkNonDelegatedActivities failed"), __module__StellarHeliosHelpers__bREQTgroup(__core__ifThenElse(
                                __helios__bool__and(() -> {
                                    __module__BasicDelegate__isMintDelegate
                                }, () -> {
                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(baseCctx_1)(true, false)
                                }),
                                () -> {
                                    __helios__string____add("mintDgt: additionalDelegateValidation in ", __module__BasicDelegate__delegateName)
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __helios__bool__and(() -> {
                                            __module__BasicDelegate__isSpendDelegate
                                        }, () -> {
                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(baseCctx_1)(true, false)
                                        }),
                                        () -> {
                                            __helios__string____add("spendDgt: additionalDelegateValidation in ", __module__BasicDelegate__delegateName)
                                        },
                                        () -> {
                                            () -> {
                                                __helios__string____add(__module__BasicDelegate__delegateName, ": additionalDelegateValidation()")
                                            }()
                                        }
                                    )()
                                }
                            )(), false, true, () -> {
                                __module__STokMintDelegate__DelegateActivity[]__additionalDelegateValidation(__module__STokMintDelegate__DelegateActivity[]__supportedCapoDelegatePurposes_1)(activity_3)(dgtionDatum, __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(baseCctx_1)())
                            }))
                        }(__cond_62 = activity_3;
                        __core__ifThenElse(
                            __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_62),
                            () -> {
                                (__lhs_0_247) -> {
                                    activities_2 = __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_247);
                                    cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                    actingAsMintDgt = __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            __module__BasicDelegate__isMintDelegate
                                        }, () -> {
                                            __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)
                                        })
                                    }, () -> {
                                        __module__StellarHeliosHelpers__bREQT("Mint delegate: checks that all the indicated create/remove activities are valid", false, (), false, (), false, ())
                                    });
                                    actingAsSpendDgt = __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            __helios__bool__and(() -> {
                                                __helios__bool____not(actingAsMintDgt)
                                            }, () -> {
                                                __module__BasicDelegate__isSpendDelegate
                                            })
                                        }, () -> {
                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(true, false)
                                        })
                                    }, () -> {
                                        __module__StellarHeliosHelpers__bREQT("Spend delegate: checks that all the indicated record-update activities are valid", false, (), false, (), false, ())
                                    });
                                    notMintDgt = __helios__bool____not(actingAsMintDgt);
                                    notSpendDgt = __helios__bool____not(actingAsSpendDgt);
                                    mintDgtCheck_1 = __helios__bool__or(() -> {
                                        notMintDgt
                                    }, () -> {
                                        __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {
                                            a_18 = __module__STokMintDelegate__DelegateActivity[]__from_data(__module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__OtherActivities__is_valid_data_2)(rawActivity);
                                            __core__chooseUnit(__helios__print("  -- mintDgt checking multi-activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- validates nested activities: in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities", false, (), false, (), false, ()), __cond_111 = a_18;
                                            __core__ifThenElse(
                                                __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_111),
                                                () -> {
                                                    (__lhs_0_253) -> {
                                                        __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_18, true, dd_1, true, cctx_6, true, "one create is properly delegated")
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_111),
                                                        () -> {
                                                            (__lhs_0_252) -> {
                                                                __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_18, true, dd_1, true, cctx_6, true, "one delete is properly delegated")
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_111),
                                                                () -> {
                                                                    (__lhs_0_251) -> {
                                                                        __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt")
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_111),
                                                                        () -> {
                                                                            (__lhs_0_250) -> {
                                                                                __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_111),
                                                                                () -> {
                                                                                    (__lhs_0_249) -> {
                                                                                        __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_111),
                                                                                        () -> {
                                                                                            (__lhs_0_248) -> {
                                                                                                __helios__error("multi:multi: nesting not ok")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__74) -> {
                                                                                                __helios__error("multi:non-minting activities are invalid for mintDgt")
                                                                                            }
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()
                                                }
                                            )()(__cond_111)))
                                        })
                                    });
                                    spendDgtCheck_1 = __helios__bool__or(() -> {
                                        notSpendDgt
                                    }, () -> {
                                        __module__StellarHeliosHelpers__bREQTgroup("validates nested activities: in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities", false, true, () -> {
                                            __helios__list[__helios__data]__all(activities_2)((rawActivity_1) -> {
                                                a_19 = __module__STokMintDelegate__DelegateActivity[]__from_data(__module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__OtherActivities__is_valid_data_2)(rawActivity_1);
                                                __core__chooseUnit(__helios__print("  -- spendDgt checking multi-activity"), __cond_112 = a_19;
                                                __core__ifThenElse(
                                                    __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_112),
                                                    () -> {
                                                        (__lhs_0_259) -> {
                                                            __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                __module__BasicDelegate__isSpendDelegate
                                                            }, () -> {
                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_6)(false, ())
                                                            }), "UpdatingDelegatedData only ok at level-1 spendDgt"), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_19, true, dd_1, true, cctx_6, true, "one update is properly delegated"))
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_112),
                                                            () -> {
                                                                (__lhs_0_258) -> {
                                                                    __helios__error("CreatingDelegatedData only ok in mintDgt")
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_112),
                                                                    () -> {
                                                                        (__lhs_0_257) -> {
                                                                            __helios__error("TODO: validate spending the datum for burn")
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_112),
                                                                            () -> {
                                                                                (__lhs_0_256) -> {
                                                                                    __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_112),
                                                                                    () -> {
                                                                                        (__lhs_0_255) -> {
                                                                                            __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities____is(__cond_112),
                                                                                            () -> {
                                                                                                (__lhs_0_254) -> {
                                                                                                    __helios__error("multi:multi: nesting not ok")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__75) -> {
                                                                                                    __helios__error("multi: non-spending activities are invalid for spendDgt")
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()(__cond_112))
                                            })
                                        })
                                    });
                                    dgDataPolicyCheck = __core__ifThenElse(
                                        __helios__bool__or(() -> {
                                            __module__BasicDelegate__isMintDelegate
                                        }, () -> {
                                            __module__BasicDelegate__isSpendDelegate
                                        }),
                                        () -> {
                                            __core__chooseUnit(__helios__assert(__helios__bool____not(__module__BasicDelegate__isDgDataPolicy), "ack! mint/spend delegate can't be a delegated-data policy!"), true)
                                        },
                                        () -> {
                                            () -> {
                                                __module__StellarHeliosHelpers__bREQTgroup("multi-activity: in DgDataPolicy, only Minting/Burning/Spending activities are valid", false, true, () -> {
                                                    __helios__list[__helios__data]__all(activities_2)((rawActivity_2) -> {
                                                        a_20 = __module__STokMintDelegate__DelegateActivity[]__from_data(__module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__OtherActivities__is_valid_data_2)(rawActivity_2);
                                                        __cond_113 = a_20;
                                                        __core__ifThenElse(
                                                            __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_113),
                                                            () -> {
                                                                (__lhs_0_269) -> {
                                                                    __helios__error("UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)")
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_113),
                                                                    () -> {
                                                                        (__lhs_0_268) -> {
                                                                            __helios__error("CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)")
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_113),
                                                                            () -> {
                                                                                (__lhs_0_267) -> {
                                                                                    __helios__error("DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__STokMintDelegate__DelegateActivity[]__SpendingActivities____is(__cond_113),
                                                                                    () -> {
                                                                                        (__lhs_0_266) -> {
                                                                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_20, true, dd_1, true, cctx_6, true, "biz-logic for one record update")
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__STokMintDelegate__DelegateActivity[]__MintingActivities____is(__cond_113),
                                                                                            () -> {
                                                                                                (__lhs_0_265) -> {
                                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_20, true, dd_1, true, cctx_6, true, "biz-logic for one record create")
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__STokMintDelegate__DelegateActivity[]__BurningActivities____is(__cond_113),
                                                                                                    () -> {
                                                                                                        (__lhs_0_264) -> {
                                                                                                            __core__chooseUnit(__helios__assert(false, "TODO: support multi:BurningActivities for dgDataPolicy or other delegate"), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_20, true, dd_1, true, cctx_6, true, "biz-logic for one record delete"))
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __module__STokMintDelegate__DelegateActivity[]__OtherActivities____is(__cond_113),
                                                                                                            () -> {
                                                                                                                (__lhs_0_263) -> {
                                                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_20, true, dd_1, true, cctx_6, true, "biz-logic for OtherActivities ")
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_113),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_262) -> {
                                                                                                                            __helios__error("multi:DelegateLifecycleActivities not ok")
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_113),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_261) -> {
                                                                                                                                    __helios__error("multi:CapoLifecycleActivities not ok")
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_260) -> {
                                                                                                                                    __helios__error("multi:multi: nesting not ok")
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()(__cond_113)
                                                    })
                                                })
                                            }()
                                        }
                                    )();
                                    __helios__bool__and(() -> {
                                        __helios__bool__and(() -> {
                                            mintDgtCheck_1
                                        }, () -> {
                                            spendDgtCheck_1
                                        })
                                    }, () -> {
                                        dgDataPolicyCheck
                                    })
                                }
                            },
                            () -> {
                                __core__ifThenElse(
                                    __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_62),
                                    () -> {
                                        (__lhs_0_241) -> {
                                            innerActivity = __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_241);
                                            __cond_109 = innerActivity;
                                            __core__ifThenElse(
                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_109),
                                                () -> {
                                                    (__lhs_0_245) -> {
                                                        seed_10 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_245);
                                                        purpose_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_245);
                                                        BURNED = __helios__int____neg(1);
                                                        otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_1)), BURNED);
                                                        tnStr_3 = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_1))();
                                                        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("checking ReplacingMe on ", purpose_9), ": "), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("needs the charter to be approving the the new mint-delegate", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("  ^^^ should queue the new delegate in pendingChanges"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(baseCctx_1)();
                                                        (isUpdatingCharter) -> {
                                                            isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_10, __core__mkCons(__helios__string____to_data(purpose_9), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());
                                                            __helios__bool__and(() -> {
                                                                isMintingOk
                                                            }, () -> {
                                                                isUpdatingCharter
                                                            })
                                                        }(__cond_110 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();
                                                        __core__ifThenElse(
                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_110),
                                                            () -> {
                                                                (__lhs_0_246) -> {
                                                                    true
                                                                }
                                                            },
                                                            () -> {
                                                                (__73) -> {
                                                                    false
                                                                }
                                                            }
                                                        )()(__cond_110)))))
                                                    }
                                                },
                                                () -> {
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_109),
                                                        () -> {
                                                            (__lhs_0_244) -> {
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... Retiring delegate authority token", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- must burn the indicated authority token", false, (), false, (), false, ()), __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd_1)()), __helios__int____neg(1))))
                                                            }
                                                        },
                                                        () -> {
                                                            (__lhs_0_242) -> {
                                                                __lhs_0_243 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), false, ()), 0);
                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("import settings from delegate and validate them"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                    false
                                                                }, () -> {
                                                                    true
                                                                }), "ValidateSettings temporarily disabled"), false))
                                                            }
                                                        }
                                                    )()
                                                }
                                            )()(__cond_109)
                                        }
                                    },
                                    () -> {
                                        __core__ifThenElse(
                                            __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_62),
                                            () -> {
                                                (__lhs_0_142) -> {
                                                    dCLA = __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_142);
                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... with any CapoLifecycle activity: ", false, (), false, (), false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))())();
                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires the Capo's CharterData activity to match this delegate's activity", false, (), false, (), false, ()), __core__chooseUnit(__cond_107 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();
                                                    __core__ifThenElse(
                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_107),
                                                        () -> {
                                                            (__lhs_0_240) -> {
                                                                cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_240);
                                                                __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), "activity mismatch with Capo's CharterData activity"), __helios__print("  -- ok, CharterData capoLifecycleActivity matches ours
"))
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_107),
                                                                () -> {
                                                                    (__lhs_0_238) -> {
                                                                        __cond_108 = dCLA;
                                                                        __core__ifThenElse(
                                                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_108),
                                                                            () -> {
                                                                                (__lhs_0_239) -> {
                                                                                    __helios__print("ok, Capo:updatingCharter works for now with CreatingDelegate
")
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__72) -> {
                                                                                    __helios__error("when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate")
                                                                                }
                                                                            }
                                                                        )()(__cond_108)
                                                                    }
                                                                },
                                                                () -> {
                                                                    (__71) -> {
                                                                        __helios__error("this activity must match the capo's own CharterData activity")
                                                                    }
                                                                }
                                                            )()
                                                        }
                                                    )()(__cond_107), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);
                                                    (myCurrentRole) -> {
                                                        __helios__bool__and(() -> {
                                                            __cond_64 = dCLA;
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_64),
                                                                () -> {
                                                                    (__lhs_0_234) -> {
                                                                        seed_9 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_234);
                                                                        purpose_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_234);
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("XXX it should output the new delegate token to the Capo as a PendingDelegate datum"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated", false, (), false, (), false, ()), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_9);
                                                                        __cond_105 = myCurrentRole;
                                                                        __core__ifThenElse(
                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_105),
                                                                            () -> {
                                                                                (__lhs_0_235) -> {
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates the new delegate's UUT is minted", false, (), false, (), false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_9, __core__mkCons(__helios__string____to_data(purpose_8), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ()),
                                                                                        () -> {
                                                                                            __helios__print("  -- ok, minted the new delegate's UUT
")
                                                                                        },
                                                                                        () -> {
                                                                                            () -> {
                                                                                                ()
                                                                                            }()
                                                                                        }
                                                                                    )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the UUT must have the right disposition (is it checked somewhere else?!?)", false, (), false, (), false, ()), __cond_106 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)()))(purpose_8);
                                                                                    __core__ifThenElse(
                                                                                        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_106),
                                                                                        () -> {
                                                                                            (__lhs_0_237) -> {
                                                                                                __helios__error("the new delegate is not present in the Capo's named-delegates list")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            (__lhs_0_236) -> {
                                                                                                dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_236);
                                                                                                __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn(purpose_8)), "uutName mismatch"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))
                                                                                            }
                                                                                        }
                                                                                    )()(__cond_106))))
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                (__70) -> {
                                                                                    __helios__error("unreachable wrong role for CreatingDelegate")
                                                                                }
                                                                            }
                                                                        )()(__cond_105)))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_64),
                                                                        () -> {
                                                                            (__lhs_0_182) -> {
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... for the addingPendingDgt activity:", false, (), false, (), false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);
                                                                                nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);
                                                                                newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support otherManifestChange here"), __lhs_0_183 = __helios__common__assert_constr_index(newChange, 0);
                                                                                __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_183);
                                                                                action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);
                                                                                role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);
                                                                                OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);
                                                                                (newDgtRoleName) -> {
                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupUnit("The new pending-delegate action must be found at the head of the new change-list", false, true, () -> {
                                                                                        __cond_103 = action;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_103),
                                                                                            () -> {
                                                                                                (__lhs_0_232) -> {
                                                                                                    __core__chooseUnit(__helios__print("   -- another delegate-role check would be redundant."), __cond_104 = myCurrentRole;
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_104),
                                                                                                        () -> {
                                                                                                            (__lhs_0_233) -> {
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that the delegate queued for removal is present in the Capo's charterData", false, (), false, (), false, ()), __helios__error("implement me"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__69) -> {
                                                                                                                __helios__error("unreachable")
                                                                                                            }
                                                                                                        }
                                                                                                    )()(__cond_104))
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__68) -> {
                                                                                                    __helios__assert(true, "no way l")
                                                                                                }
                                                                                            }
                                                                                        )()(__cond_103)
                                                                                    }), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the change-list should be unchanged", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), "invalid update of pendingChanges; the new action must be prepended to the existing list."), __cond_102 = action;
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_102),
                                                                                        () -> {
                                                                                            (__lhs_0_231) -> {
                                                                                                __helios__error("unreachable")
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_102),
                                                                                                () -> {
                                                                                                    (__lhs_0_230) -> {
                                                                                                        seed_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_230);
                                                                                                        purpose_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_230);
                                                                                                        idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_230);
                                                                                                        (callback_21) -> {
                                                                                                            callback_21(seed_8, purpose_7, idPrefix_9)
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    (__lhs_0_229) -> {
                                                                                                        seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_229);
                                                                                                        purpose_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_229);
                                                                                                        idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_229);
                                                                                                        (callback_20) -> {
                                                                                                            callback_20(seed_7, purpose_6, idPrefix_8)
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()(__cond_102)((seed_6, purpose_5, pendingActionIdPrefix) -> {
                                                                                        (possibleMintDgtVerifications) -> {
                                                                                            (otherPossibleVerifications) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("TEMPORARY: only one pending change is allowed", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(oldPendingChanges), 0), "only one pending change is allowed for now (avoids resource-exhaustion)"), __helios__bool__and(() -> {
                                                                                                    __helios__bool__and(() -> {
                                                                                                        true
                                                                                                    }, () -> {
                                                                                                        possibleMintDgtVerifications
                                                                                                    })
                                                                                                }, () -> {
                                                                                                    otherPossibleVerifications
                                                                                                })))
                                                                                            }(__cond_91 = myCurrentRole;
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_91),
                                                                                                () -> {
                                                                                                    (__lhs_0_228) -> {
                                                                                                        __helios__error(__helios__string____add(__helios__string____add("this block had been run by spendDgt, but
", "... it's much cheaper to let the MintDgt do it ...
"), "... since it's already involved anyway"))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_91),
                                                                                                        () -> {
                                                                                                            (__lhs_0_202) -> {
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a queued change to duplicate any other pending entry for the same delegate name", false, (), false, (), false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {
                                                                                                                    __cond_92 = pdChange_2;
                                                                                                                    __core__ifThenElse(
                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_92),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_203) -> {
                                                                                                                                __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_203);
                                                                                                                                pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);
                                                                                                                                __cond_93 = pendingRole;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_93),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_204) -> {
                                                                                                                                            changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_204);
                                                                                                                                            __helios__string____neq(changingDgtName, newDgtRoleName)
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__62) -> {
                                                                                                                                            __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_93)
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__61) -> {
                                                                                                                                __helios__error("otherManifestChange not yet supported")
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_92)
                                                                                                                });
                                                                                                                __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add("already has a pending change for this delegate: ", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                (possibleReplacementIsCorrect) -> {
                                                                                                                    __helios__bool__and(() -> {
                                                                                                                        __helios__bool__and(() -> {
                                                                                                                            true
                                                                                                                        }, () -> {
                                                                                                                            isNotADuplicate
                                                                                                                        })
                                                                                                                    }, () -> {
                                                                                                                        possibleReplacementIsCorrect
                                                                                                                    })
                                                                                                                }(__cond_94 = action;
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_94),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_226) -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow an Add for an existing policy name", false, (), false, (), false, ()), __core__chooseUnit(__cond_101 = existingRoleEntryMaybe;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_101),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_227) -> {
                                                                                                                                        __helios__error(__helios__string____add("queuing Add failed: already has a delegate for policy name: ", newDgtRoleName))
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__67) -> {
                                                                                                                                        ()
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_101), true))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_94),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_207) -> {
                                                                                                                                    replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_207);
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("For Replace on an existing delegate... ", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: invariants cannot be replaced", false, (), false, (), false, ()), __core__chooseUnit(__cond_100 = role_2;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_100),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_225) -> {
                                                                                                                                                __helios__error("cannot Replace role: MintInvariant")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_100),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_224) -> {
                                                                                                                                                        __helios__error("cannot Replace role: SpendInvariant")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_100),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_223) -> {
                                                                                                                                                                __helios__error("HandledByCapoOnly role is not applicable in delegate context")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            (__66) -> {
                                                                                                                                                                __helios__print("  -- ok (not trying to replace an invariant)")
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()(__cond_100), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- doesn't allow a Replace if the policy-name doesn't already exist", false, (), false, (), false, ()), (existingDgtLink_1) -> {
                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token", false, (), false, (), false, ()), (existingDgTkn) -> {
                                                                                                                                            __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add("the current ", __cond_99 = role_2;
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_99),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_222) -> {
                                                                                                                                                        "mint"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_99),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_221) -> {
                                                                                                                                                                "spend"
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_99),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_220) -> {
                                                                                                                                                                        "dgDataPolicy"
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_99),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_219) -> {
                                                                                                                                                                                "named"
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__65) -> {
                                                                                                                                                                                "\u2039incontheeiieivable\u203A"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()(__cond_99)), " delegate's authority token doesn't match the queued action's token name "), __helios__assetclass__show(replacesDgt)())), true)
                                                                                                                                        }(__cond_98 = role_2;
                                                                                                                                        __core__ifThenElse(
                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_98),
                                                                                                                                            () -> {
                                                                                                                                                (__lhs_0_218) -> {
                                                                                                                                                    __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            () -> {
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_98),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_217) -> {
                                                                                                                                                            __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_98),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_216) -> {
                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest", false, (), false, (), false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1))))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_98),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_215) -> {
                                                                                                                                                                            __helios__error("unreachable: OtherNamedDgt deprecated")
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_98),
                                                                                                                                                                            () -> {
                                                                                                                                                                                (__lhs_0_214) -> {
                                                                                                                                                                                    __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            () -> {
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_98),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_213) -> {
                                                                                                                                                                                            __helios__error("unreachable")
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_98),
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_212) -> {
                                                                                                                                                                                                    __helios__error("unreachable")
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            () -> {
                                                                                                                                                                                                (__lhs_0_211) -> {
                                                                                                                                                                                                    __helios__error("unreachable")
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        )()
                                                                                                                                                                                    }
                                                                                                                                                                                )()
                                                                                                                                                                            }
                                                                                                                                                                        )()
                                                                                                                                                                    }
                                                                                                                                                                )()
                                                                                                                                                            }
                                                                                                                                                        )()
                                                                                                                                                    }
                                                                                                                                                )()
                                                                                                                                            }
                                                                                                                                        )()(__cond_98)))
                                                                                                                                    }(__cond_96 = existingRoleEntryMaybe;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_96),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_210) -> {
                                                                                                                                                __helios__error(__helios__string____add("queuing Replace failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_208) -> {
                                                                                                                                                __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_208);
                                                                                                                                                entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);
                                                                                                                                                __cond_97 = entryType_2;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_97),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_209) -> {
                                                                                                                                                            existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_209);
                                                                                                                                                            existingDgtLink
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__64) -> {
                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_97)
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_96))))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_205) -> {
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove if the policy-name doesn't already exist", false, (), false, (), false, ()), __core__chooseUnit(__cond_95 = existingRoleEntryMaybe;
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_95),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_206) -> {
                                                                                                                                                __helios__error(__helios__string____add("queuing Remove failed: the policy-name doesn't exist: ", newDgtRoleName))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__63) -> {
                                                                                                                                                ()
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_95), __helios__error("unreachable: Remove not yet supported")))
                                                                                                                                }
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()(__cond_94))))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__60) -> {
                                                                                                                __helios__error("unreachable")
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()(__cond_91))
                                                                                        }(__cond_84 = myCurrentRole;
                                                                                        __core__ifThenElse(
                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_84),
                                                                                            () -> {
                                                                                                (__lhs_0_201) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_84),
                                                                                                    () -> {
                                                                                                        (__lhs_0_185) -> {
                                                                                                            __helios__bool__and(() -> {
                                                                                                                __module__StellarHeliosHelpers__bREQT("(general) the mintDgt checks everything about the mint", false, (), false, (), false, ())
                                                                                                            }, () -> {
                                                                                                                __cond_85 = action;
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_85),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_193) -> {
                                                                                                                            __core__chooseUnit(__cond_90 = role_2;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_90),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_200) -> {
                                                                                                                                        __helios__error("cannot Remove role: MintDgt")
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_90),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_199) -> {
                                                                                                                                                __helios__error("cannot Remove role: SpendDgt")
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_90),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_198) -> {
                                                                                                                                                        __helios__error("cannot Remove role: MintInvariant")
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_90),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_197) -> {
                                                                                                                                                                __helios__error("cannot Remove role: SpendInvariant")
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_90),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_196) -> {
                                                                                                                                                                        __helios__assert(false, "todo")
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_90),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_195) -> {
                                                                                                                                                                                __helios__assert(false, "todo")
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_90),
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__lhs_0_194) -> {
                                                                                                                                                                                        __helios__error("DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity")
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                () -> {
                                                                                                                                                                                    (__59) -> {
                                                                                                                                                                                        ()
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            )()
                                                                                                                                                                        }
                                                                                                                                                                    )()
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()
                                                                                                                                                }
                                                                                                                                            )()
                                                                                                                                        }
                                                                                                                                    )()
                                                                                                                                }
                                                                                                                            )()(__cond_90), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow a Remove to duplicate an Add or Replace or Remove entry", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("^^^"), __core__chooseUnit(__helios__assert(false, "what else should be checked here?"), false))))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        (__56) -> {
                                                                                                                            __core__chooseUnit(__core__ifThenElse(
                                                                                                                                false,
                                                                                                                                () -> {
                                                                                                                                    __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't")
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    () -> {
                                                                                                                                        ()
                                                                                                                                    }()
                                                                                                                                }
                                                                                                                            )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_6);
                                                                                                                            dgTknName = mkTokenName_2(purpose_5);
                                                                                                                            mintedDgTkn = __helios__bool__and(() -> {
                                                                                                                                __module__StellarHeliosHelpers__bREQT("the new delegate is created with the indicated authority token", false, (), false, (), false, ())
                                                                                                                            }, () -> {
                                                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_6, __core__mkCons(__helios__string____to_data(purpose_5), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_6), false, (), false, (), true, false, false, (), false, ())
                                                                                                                            });
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("The new policy-token must match the seed", false, (), false, (), false, ()), (dgtLink_2) -> {
                                                                                                                                __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add("uutName mismatch; expected ", dgTknName), " but found "), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT("the new policy-delegate-script must take ownership of the dgTkn", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()), false, (), false, ());
                                                                                                                                (possibleExtraReplacementCheck) -> {
                                                                                                                                    __helios__bool__and(() -> {
                                                                                                                                        __helios__bool__and(() -> {
                                                                                                                                            mintedDgTkn
                                                                                                                                        }, () -> {
                                                                                                                                            delegateTakesOwnership
                                                                                                                                        })
                                                                                                                                    }, () -> {
                                                                                                                                        possibleExtraReplacementCheck
                                                                                                                                    })
                                                                                                                                }(__cond_87 = action;
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_87),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_188) -> {
                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("Replace: the queued change must match the idPrefix of the current delegate ", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("VALIDATE this through a unit-test ^"), __core__chooseUnit(__cond_88 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_88),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_190) -> {
                                                                                                                                                        dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_190);
                                                                                                                                                        __lhs_0_191 = dde;
                                                                                                                                                        entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_191);
                                                                                                                                                        __cond_89 = entryType_1;
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_89),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_192) -> {
                                                                                                                                                                    idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_192);
                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("expects the queued idPrefix to match the existing policy's idPrefix", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add("   -- expected: ", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add("   --   actual: ", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), "idPrefix mismatch"))))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__58) -> {
                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add("invalid Replace; the matching manifest entry for '", newDgtRoleName), "' isn't a DgDataPolicy."))
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_89)
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_189) -> {
                                                                                                                                                        __helios__error(__helios__string____add("no existing dgDataPolicy found with key: ", newDgtRoleName))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_88), true)))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__57) -> {
                                                                                                                                            true
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_87)))
                                                                                                                            }(__cond_86 = OdgtLink;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_86),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_187) -> {
                                                                                                                                        __helios__error("missing required delegate link in pending dgt change")
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_186) -> {
                                                                                                                                        dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_186);
                                                                                                                                        dl
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_86))))
                                                                                                                        }
                                                                                                                    }
                                                                                                                )()(__cond_85)
                                                                                                            })
                                                                                                        }
                                                                                                    },
                                                                                                    () -> {
                                                                                                        (__55) -> {
                                                                                                            __helios__error("unreachable")
                                                                                                        }
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )()(__cond_84))
                                                                                    }))))
                                                                                }(__cond_83 = role_2;
                                                                                __core__ifThenElse(
                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_83),
                                                                                    () -> {
                                                                                        (__lhs_0_184) -> {
                                                                                            dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_184);
                                                                                            dgtName
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        (__54) -> {
                                                                                            __helios__error("only DgDataPolicy is yet supported in queuePendingChange")
                                                                                        }
                                                                                    }
                                                                                )()(__cond_83))))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_64),
                                                                                () -> {
                                                                                    (__lhs_0_181) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement removePendDgt"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("allows the removal of a queued pending-delegate-change that can't be completed", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(false, "not yet implemented"), false)))
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    __core__ifThenElse(
                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_64),
                                                                                        () -> {
                                                                                            (__lhs_0_158) -> {
                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... To commit pending changes:", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("invariants cannot be replaced", false, (), false, (), false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)());
                                                                                                nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);
                                                                                                __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {
                                                                                                    __module__StellarHeliosHelpers__bREQT("the next-changes list must be empty", false, (), false, (), false, ())
                                                                                                }, () -> {
                                                                                                    __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)
                                                                                                }), "pendingChanges must be emptied"), spendDgtCheck = __core__ifThenElse(
                                                                                                    __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                                                    () -> {
                                                                                                        true
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            __core__ifThenElse(
                                                                                                                __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                                () -> {
                                                                                                                    true
                                                                                                                },
                                                                                                                () -> {
                                                                                                                    () -> {
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("...spendDgt: validates that all the pending delegates are installed", false, (), false, (), false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange) -> {
                                                                                                                            (pdChange) -> {
                                                                                                                                (pendingTypeName) -> {
                                                                                                                                    __core__chooseUnit(__cond_72 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_72),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_167) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- Remove: verifies that the delegate queued for removal is now removed from the Capo manifest", false, (), false, (), false, ()), __cond_75 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_75),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_168) -> {
                                                                                                                                                            __helios__error(__helios__string____add("queued Remove failed: name still present in next-manifest item: ", pendingTypeName))
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__50) -> {
                                                                                                                                                            ()
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_75))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__47) -> {
                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("   -- verifies that added & replaced entries are present in the updated map (at its next position)", false, (), false, (), false, ()), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                    __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),
                                                                                                                                                    () -> {
                                                                                                                                                        __helios__error("queued Add/Replace failed: no more items in next-manifest map")
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        () -> {
                                                                                                                                                            ()
                                                                                                                                                        }()
                                                                                                                                                    }
                                                                                                                                                )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {
                                                                                                                                                    ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("vv @CME entry: ", CME_key)), __lhs_0_163 = __helios__common__assert_constr_index(ME_type, 1);
                                                                                                                                                    ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_163);
                                                                                                                                                    ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_163);
                                                                                                                                                    refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_163);
                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO("support minting multiple threads of a dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount, 1), "refCount must be 1 when adding a new dgDataPolicy"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), "queued change: name mismatch with next-manifest item"), ME_name = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))();
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("    -- ME policy link ", ME_name)), pendingLink = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange))();
                                                                                                                                                    pendingName = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(pendingLink))();
                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add("    -- pdChange policy link ", pendingName)), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, pendingLink), "queued change: policyLink mismatch with next-manifest item"), (nextIdPrefix) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- @each manifest entry: next-manifest's idPrefix must match the queued change", false, (), false, (), false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), "idPrefix mismatch with next-manifest's dgDataPolicy"))
                                                                                                                                                    }(__cond_73 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_73),
                                                                                                                                                        () -> {
                                                                                                                                                            (__lhs_0_165) -> {
                                                                                                                                                                idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_165);
                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("    -- Replace: verifies that the next-manifest no longer has the replaced entry", false, (), false, (), false, ()), __core__chooseUnit(__cond_74 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))(pendingTypeName);
                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_74),
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__lhs_0_166) -> {
                                                                                                                                                                            __helios__error(__helios__string____add("queued Replace failed: duplicate name remaining in next-manifest map: ", pendingTypeName))
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    () -> {
                                                                                                                                                                        (__49) -> {
                                                                                                                                                                            ()
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                )()(__cond_74), idPrefix_6))
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        () -> {
                                                                                                                                                            __core__ifThenElse(
                                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_73),
                                                                                                                                                                () -> {
                                                                                                                                                                    (__lhs_0_164) -> {
                                                                                                                                                                        idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_164);
                                                                                                                                                                        idPrefix_5
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                () -> {
                                                                                                                                                                    (__48) -> {
                                                                                                                                                                        __helios__error("unreachable")
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            )()
                                                                                                                                                        }
                                                                                                                                                    )()(__cond_73)))))))))
                                                                                                                                                })))
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_72), __cond_71 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_71),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_162) -> {
                                                                                                                                                (callback_19) -> {
                                                                                                                                                    callback_19(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__46) -> {
                                                                                                                                                (callback_18) -> {
                                                                                                                                                    callback_18(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_71))
                                                                                                                                }(__cond_70 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_70),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_161) -> {
                                                                                                                                            typeName_3 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_161);
                                                                                                                                            __core__chooseUnit(__helios__print("  -- ok: DgDataPolicy in commitPendingChanges"), typeName_3)
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__45) -> {
                                                                                                                                            __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_70))
                                                                                                                            }(__cond_69 = pcChange;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_69),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_160) -> {
                                                                                                                                        dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_160);
                                                                                                                                        dgtChange
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_159) -> {
                                                                                                                                        __helios__error("otherManifestChange not yet supported")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_69))
                                                                                                                        }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {
                                                                                                                            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)
                                                                                                                        }))
                                                                                                                    }()
                                                                                                                }
                                                                                                            )()
                                                                                                        }()
                                                                                                    }
                                                                                                )();
                                                                                                mintDgtCheck = __core__ifThenElse(
                                                                                                    __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                                    () -> {
                                                                                                        true
                                                                                                    },
                                                                                                    () -> {
                                                                                                        __core__ifThenElse(
                                                                                                            __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false)),
                                                                                                            () -> {
                                                                                                                true
                                                                                                            },
                                                                                                            () -> {
                                                                                                                () -> {
                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... mintDgt: validates that all the removed dgTkns are burned", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the txn must have all the expected burns", false, (), false, (), false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();
                                                                                                                    mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1));
                                                                                                                    len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);
                                                                                                                    __core__chooseUnit(__core__ifThenElse(
                                                                                                                        __helios__int____gt(len, 1),
                                                                                                                        () -> {
                                                                                                                            __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))(false, ())), __helios__error(__helios__string____add("currently supporting only one minting policy being burned in the tx ", __helios__int__show(len)())))
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            () -> {
                                                                                                                                ()
                                                                                                                            }()
                                                                                                                        }
                                                                                                                    )(), (observedTokenBurn) -> {
                                                                                                                        remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange_1) -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS the spendDgt to check details of Replace activities", false, (), false, (), false, ()), (pdChange_1) -> {
                                                                                                                                __cond_78 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_78),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_173) -> {
                                                                                                                                            typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_173);
                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add("  -- ok: DgDataPolicy in commitPendingChanges: ", typeName_4)), __cond_79 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);
                                                                                                                                            __core__ifThenElse(
                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_79),
                                                                                                                                                () -> {
                                                                                                                                                    (__lhs_0_180) -> {
                                                                                                                                                        foldingBurn
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                () -> {
                                                                                                                                                    (__52) -> {
                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("verifies that a delegate queued for removal or replacement is burned", false, (), false, (), false, ()), __cond_80 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_4);
                                                                                                                                                        __core__ifThenElse(
                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_80),
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_179) -> {
                                                                                                                                                                    __helios__error(__helios__string____add("queued Remove failed: not present in previous-manifest map: ", typeName_4))
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            () -> {
                                                                                                                                                                (__lhs_0_174) -> {
                                                                                                                                                                    __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_174);
                                                                                                                                                                    ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);
                                                                                                                                                                    tn_7 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);
                                                                                                                                                                    mph_30 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);
                                                                                                                                                                    __cond_81 = mph_30;
                                                                                                                                                                    __core__ifThenElse(
                                                                                                                                                                        __helios__option[__helios__mintingpolicyhash]__some____is(__cond_81),
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__lhs_0_178) -> {
                                                                                                                                                                                __core__chooseUnit(__helios__print("    -- TODO: manifest entry with other-mph: allow optional burn"), foldingBurn)
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        () -> {
                                                                                                                                                                            (__53) -> {
                                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("each pending change must have a name recognized by the manifest", false, (), false, (), false, ()), __lhs_0_175 = __helios__common__assert_constr_index(ME_type_1, 1);
                                                                                                                                                                                refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_175);
                                                                                                                                                                                tnStr_2 = __helios__bytearray__decode_utf8_safe(tn_7)();
                                                                                                                                                                                __cond_82 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_7);
                                                                                                                                                                                __core__ifThenElse(
                                                                                                                                                                                    __helios__option[__helios__int]__none____is(__cond_82),
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_177) -> {
                                                                                                                                                                                            __helios__error(__helios__string____add("queued Remove/Replace failed: no burn, or double-burn: ", tnStr_2))
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    () -> {
                                                                                                                                                                                        (__lhs_0_176) -> {
                                                                                                                                                                                            burningCount = __helios__option[__helios__int]__some__some(__lhs_0_176);
                                                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add("    -- ok: BURN \u{1F525}", __helios__int__show(burningCount)()), "\xD7\u{1F4B4} "), tnStr_2)), __core__chooseUnit(__core__ifThenElse(
                                                                                                                                                                                                __helios__int____neq(__helios__int____sub(0, refCount_1), burningCount),
                                                                                                                                                                                                () -> {
                                                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add(__helios__string____add("queued Remove/Replace failed: expected burn of ", __helios__int__show(refCount_1)()), "\xD7\u{1F4B4} "), tnStr_2))
                                                                                                                                                                                                },
                                                                                                                                                                                                () -> {
                                                                                                                                                                                                    () -> {
                                                                                                                                                                                                        ()
                                                                                                                                                                                                    }()
                                                                                                                                                                                                }
                                                                                                                                                                                            )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_7)))
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                )()(__cond_82))
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    )()(__cond_81)
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        )()(__cond_80))
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            )()(__cond_79))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__51) -> {
                                                                                                                                            __helios__error("invalid delegate-change role (for now) in commitPendingChanges")
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()(__cond_78)
                                                                                                                            }(__cond_77 = pcChange_1;
                                                                                                                            __core__ifThenElse(
                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_77),
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_172) -> {
                                                                                                                                        dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_172);
                                                                                                                                        dgtChange_1
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                () -> {
                                                                                                                                    (__lhs_0_171) -> {
                                                                                                                                        __helios__error("otherManifestChange not yet supported")
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )()(__cond_77)))
                                                                                                                        }, observedTokenBurn);
                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("requires all the burns of our policy-id to be accounted for", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add("extra burns found in the transaction: 
", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... -- end of commitPendingChanges", false, (), false, (), false, ()), true)))
                                                                                                                    }(__cond_76 = mintThisPolicy;
                                                                                                                    __core__ifThenElse(
                                                                                                                        __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_76),
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_170) -> {
                                                                                                                                minted = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_170);
                                                                                                                                minted
                                                                                                                            }
                                                                                                                        },
                                                                                                                        () -> {
                                                                                                                            (__lhs_0_169) -> {
                                                                                                                                __core__mkNilPairData(())
                                                                                                                            }
                                                                                                                        }
                                                                                                                    )()(__cond_76)))))
                                                                                                                }()
                                                                                                            }
                                                                                                        )()
                                                                                                    }
                                                                                                )();
                                                                                                __core__chooseUnit(__core__ifThenElse(
                                                                                                    __helios__bool__and(() -> {
                                                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate)
                                                                                                    }, () -> {
                                                                                                        __helios__bool____not(__module__BasicDelegate__isSpendDelegate)
                                                                                                    }),
                                                                                                    () -> {
                                                                                                        __helios__error("unreachable? not mintDgt or spendDgt")
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            ()
                                                                                                        }()
                                                                                                    }
                                                                                                )(), __helios__bool__and(() -> {
                                                                                                    mintDgtCheck
                                                                                                }, () -> {
                                                                                                    spendDgtCheck
                                                                                                })))))
                                                                                            }
                                                                                        },
                                                                                        () -> {
                                                                                            __core__ifThenElse(
                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_64),
                                                                                                () -> {
                                                                                                    (__lhs_0_149) -> {
                                                                                                        manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_149);
                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't allow updating anything except the manifest", false, (), false, (), false, ()), __core__chooseUnit(__cond_65 = manifestActivity;
                                                                                                        __core__ifThenElse(
                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_65),
                                                                                                            () -> {
                                                                                                                (__lhs_0_157) -> {
                                                                                                                    __core__chooseUnit(__helios__assert(false, "TODO: support retirement activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("removes the indicated key from the manifest", false, (), false, (), false, ()), __module__StellarHeliosHelpers__REQT("delegates MUST be allowed to validate that this doesn't drop something they need", false, (), false, (), false, ()))))
                                                                                                                }
                                                                                                            },
                                                                                                            () -> {
                                                                                                                __core__ifThenElse(
                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_65),
                                                                                                                    () -> {
                                                                                                                        (__lhs_0_156) -> {
                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO("if delegates need a hook to validate that the updte is acceptable, that might be enforced here"), __core__chooseUnit(__helios__assert(false, "TODO: support updatingEntry activity"), __module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, (), false, (), false, ())))
                                                                                                                        }
                                                                                                                    },
                                                                                                                    () -> {
                                                                                                                        __core__ifThenElse(
                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_65),
                                                                                                                            () -> {
                                                                                                                                (__lhs_0_151) -> {
                                                                                                                                    key_31 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_151);
                                                                                                                                    tokenName_5 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_151);
                                                                                                                                    charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_7(cctx_4)(), 0);
                                                                                                                                    nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__address_1)(cctx_4)();
                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, (), false, (), false, ()), refInput = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_4)(false, (), true, tokenName_5);
                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__txinput____eq(refInput, refInput))(__helios__string____add(__helios__string____add("  -- found refInput: ", __helios__bytearray__decode_utf8_safe(tokenName_5)()), "?")), "refInput must be found"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry MUST be found in the new manifest", false, (), false, (), false, ()), __core__chooseUnit(__cond_66 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31);
                                                                                                                                    __core__ifThenElse(
                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_66),
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_155) -> {
                                                                                                                                                __helios__error(__helios__string____add("the new manifest entry is missing: ", key_31))
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        () -> {
                                                                                                                                            (__lhs_0_152) -> {
                                                                                                                                                __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_152);
                                                                                                                                                entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);
                                                                                                                                                tn_6 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);
                                                                                                                                                mph_29 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);
                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add("   -- ok, found the manifest entry for ", key_31)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the new entry must have the right token-name", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_6, tokenName_5), "token-name mismatch"), __core__chooseUnit(__cond_68 = mph_29;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __helios__option[__helios__mintingpolicyhash]__some____is(__cond_68),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_154) -> {
                                                                                                                                                            __helios__error("other-mph not yet supported")
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__44) -> {
                                                                                                                                                            ()
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_68), __cond_67 = entryType;
                                                                                                                                                __core__ifThenElse(
                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_67),
                                                                                                                                                    () -> {
                                                                                                                                                        (__lhs_0_153) -> {
                                                                                                                                                            __helios__print("   -- ok: matching name, with NamedTokenRef added in updatingManifest")
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    () -> {
                                                                                                                                                        (__43) -> {
                                                                                                                                                            __helios__error("addingEntry: the new manifest entry must be a NamedTokenRef for now")
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                )()(__cond_67)))))
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    )()(__cond_66), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the remainder of the manifest must be unchanged", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_31)), "manifest modified in an unexpected way"), __helios__print("  -- ok! new manifest as expected")))))))
                                                                                                                                }
                                                                                                                            },
                                                                                                                            () -> {
                                                                                                                                __core__ifThenElse(
                                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_65),
                                                                                                                                    () -> {
                                                                                                                                        (__lhs_0_150) -> {
                                                                                                                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__assert(false, "TODO: support forkingThreadToken activity"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the indicated token MUST be referenced in the transaction", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("validates that another copy of the token name is minted", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("when the key is a DgDataPolicy, the existing manifest entry is updated", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist", false, (), false, (), false, ()), __module__StellarHeliosHelpers__REQT("when the manifest already has the entry, the refCount is incremented by newThreadCount", false, (), false, (), false, ())))))))
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    () -> {
                                                                                                                                        (__42) -> {
                                                                                                                                            ()
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                )()
                                                                                                                            }
                                                                                                                        )()
                                                                                                                    }
                                                                                                                )()
                                                                                                            }
                                                                                                        )()(__cond_65), true))
                                                                                                    }
                                                                                                },
                                                                                                () -> {
                                                                                                    __core__ifThenElse(
                                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_64),
                                                                                                        () -> {
                                                                                                            (__lhs_0_148) -> {
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, (), false, (), false, ()), __helios__error("the mint/spend delegate never is involved when the minter is instructed to force a new delegate"))
                                                                                                            }
                                                                                                        },
                                                                                                        () -> {
                                                                                                            (__lhs_0_147) -> {
                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a forced delegate change is an escape-hatch only involving the minter and the Capo", false, (), false, (), false, ()), __helios__error("the mint/spend delegate never is involved when the spender is instructed to force a new delegate"))
                                                                                                            }
                                                                                                        }
                                                                                                    )()
                                                                                                }
                                                                                            )()
                                                                                        }
                                                                                    )()
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()(__cond_64)
                                                        }, () -> {
                                                            __core__ifThenElse(
                                                                true,
                                                                () -> {
                                                                    __core__chooseUnit(__helios__print("BasicDelegate harness deferring to specialization for CapoLifecycleActivities
"), true)
                                                                },
                                                                () -> {
                                                                    () -> {
                                                                        false
                                                                    }()
                                                                }
                                                            )()
                                                        })
                                                    }(__cond_63 = neededRole;
                                                    __core__ifThenElse(
                                                        __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_63),
                                                        () -> {
                                                            (__lhs_0_146) -> {
                                                                __helios__error("delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)")
                                                            }
                                                        },
                                                        () -> {
                                                            __core__ifThenElse(
                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_63),
                                                                () -> {
                                                                    (__lhs_0_145) -> {
                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on spend delegate", true, __module__BasicDelegate__isSpendDelegate, false, (), false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: spendDgt checking CapoLifecycleActivity"), neededRole)))
                                                                    }
                                                                },
                                                                () -> {
                                                                    __core__ifThenElse(
                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_63),
                                                                        () -> {
                                                                            (__lhs_0_144) -> {
                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT("... this Capo lifecycle activity is only valid on mint delegate", true, __module__BasicDelegate__isMintDelegate, false, (), false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(false, ()), "<----- that can fail, this can't"), __core__chooseUnit(__helios__print("  -- ok: mintDgt checking CapoLifecycleActivity"), neededRole)))
                                                                            }
                                                                        },
                                                                        () -> {
                                                                            __core__ifThenElse(
                                                                                __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_63),
                                                                                () -> {
                                                                                    (__lhs_0_143) -> {
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT("It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)", false, (), false, (), false, ()), __core__ifThenElse(
                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                            () -> {
                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()
                                                                                            },
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_4)(true, false),
                                                                                                    () -> {
                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            __helios__error(__helios__string____add("this Capo lifecycle activity is only valid on mint/spend delegate, not ", __module__BasicDelegate__delegateName))
                                                                                                        }()
                                                                                                    }
                                                                                                )()
                                                                                            }
                                                                                        )())
                                                                                    }
                                                                                },
                                                                                () -> {
                                                                                    (__41) -> {
                                                                                        __helios__error("no way k")
                                                                                    }
                                                                                }
                                                                            )()
                                                                        }
                                                                    )()
                                                                }
                                                            )()
                                                        }
                                                    )()(__cond_63)))))
                                                }
                                            },
                                            () -> {
                                                __core__ifThenElse(
                                                    __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData____is(__cond_62),
                                                    () -> {
                                                        (__lhs_0_141) -> {
                                                            seed_5 = __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_141);
                                                            dDataTypeName_1 = __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_141);
                                                            __core__ifThenElse(
                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                () -> {
                                                                    __helios__error("CreatingDelegatedData activity is only allowed in the mint delegate")
                                                                },
                                                                () -> {
                                                                    () -> {
                                                                        cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_3)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("context: CreatingDelegatedData", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("  -- ensures the data-controller is invoked with its minting activity for the indicated recId", false, (), false, (), false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_3)(dDataTypeName_1, false, (), false, ());
                                                                        tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_5);
                                                                        purpose_4 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();
                                                                        newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_4))();
                                                                        __helios__bool__and(() -> {
                                                                            __helios__bool__and(() -> {
                                                                                __helios__bool__and(() -> {
                                                                                    __helios__bool__and(() -> {
                                                                                        true
                                                                                    }, () -> {
                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_5, __core__mkCons(__helios__string____to_data(purpose_4), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())
                                                                                    })
                                                                                }, () -> {
                                                                                    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_3)(newDataId_1, dDataTypeName_1)
                                                                                })
                                                                            }, () -> {
                                                                                __module__StellarHeliosHelpers__bREQT("ensures the data-controller is invoked with ONE minting activity for the indicated recId", false, (), false, (), false, ())
                                                                            })
                                                                        }, () -> {
                                                                            __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_5))()
                                                                        }))))
                                                                    }()
                                                                }
                                                            )()
                                                        }
                                                    },
                                                    () -> {
                                                        __core__ifThenElse(
                                                            __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData____is(__cond_62),
                                                            () -> {
                                                                (__lhs_0_140) -> {
                                                                    dDataTypeName = __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_140);
                                                                    recId_5 = __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_140);
                                                                    __core__ifThenElse(
                                                                        __helios__bool____not(__module__BasicDelegate__isSpendDelegate),
                                                                        () -> {
                                                                            __helios__error("UpdatingDelegatedData activity is only allowed in the spend delegate")
                                                                        },
                                                                        () -> {
                                                                            () -> {
                                                                                cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("ensures the data-controller is invoked with ONE spending activity for the indicated recId", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput(__module__CapoHelpers__CapoCtx[]__getCharterData_7, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(cctx_2)(dDataTypeName, false, (), false, ()))(recId_5))(), "^^^ those can fail, this assert won't."), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_2)(recId_5, false, ());
                                                                                __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), "no way m"), __core__chooseUnit(__core__ifThenElse(
                                                                                    __helios__string____eq("settings", dDataTypeName),
                                                                                    () -> {
                                                                                        curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_2)(true, true))();
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add("when updating the current Capo settings, the delegates must all ", "have a chance to ensure the settings are valid for their needs")), __core__ifThenElse(
                                                                                            false,
                                                                                            () -> {
                                                                                                __core__ifThenElse(
                                                                                                    __helios__bytearray____eq(curSettingsId, recId_5),
                                                                                                    () -> {
                                                                                                        __core__chooseUnit(__helios__print(" -> "), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), "no way jose"), __helios__print(" <- ")))
                                                                                                    },
                                                                                                    () -> {
                                                                                                        () -> {
                                                                                                            recIdStr_4 = __helios__bytearray__decode_utf8_safe(recId_5)();
                                                                                                            curSettingsIdStr = __helios__bytearray__decode_utf8_safe(curSettingsId)();
                                                                                                            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add("  -- NOTE: updating ", recIdStr_4), ", which isn't currentSettings="), curSettingsIdStr))
                                                                                                        }()
                                                                                                    }
                                                                                                )()
                                                                                            },
                                                                                            () -> {
                                                                                                () -> {
                                                                                                    ()
                                                                                                }()
                                                                                            }
                                                                                        )())
                                                                                    },
                                                                                    () -> {
                                                                                        () -> {
                                                                                            ()
                                                                                        }()
                                                                                    }
                                                                                )(), __helios__bool__and(() -> {
                                                                                    __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1)(cctx_2)(recId_5, dDataTypeName))("  -- did output delegated data? ")
                                                                                }, () -> {
                                                                                    true
                                                                                }))))))))
                                                                            }()
                                                                        }
                                                                    )()
                                                                }
                                                            },
                                                            () -> {
                                                                __core__ifThenElse(
                                                                    __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData____is(__cond_62),
                                                                    () -> {
                                                                        (__lhs_0_138) -> {
                                                                            recId_4 = __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_138);
                                                                            __core__ifThenElse(
                                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),
                                                                                () -> {
                                                                                    __helios__error("DeletingDelegatedData activity is only allowed in the mint delegate")
                                                                                },
                                                                                () -> {
                                                                                    () -> {
                                                                                        cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();
                                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_1)(false, ()), "<---- fails in there, not here"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the spendDgt allows the spending of the utxo", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("the mintDgt requires the burning of its UUT", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("it must not delete a record that's still referenced by the Capo manifest", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT("a matching manifest entry has to be changed or removed prior to deletion", false, (), false, (), false, ()), __lhs_0_139 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2)(cctx_1)(recId_4, false, ());
                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO("verify the input was found ^"), __core__chooseUnit(__helios__assert(false, "Delete not supported yet"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("implement the generic data-controller re-delegation convention here"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO("ensure that the right delegate is consulted with its BurningActivities.*"), false))))))))))
                                                                                    }()
                                                                                }
                                                                            )()
                                                                        }
                                                                    },
                                                                    () -> {
                                                                        __core__ifThenElse(
                                                                            __module__STokMintDelegate__DelegateActivity[]__SpendingActivities____is(__cond_62),
                                                                            () -> {
                                                                                (__lhs_0_137) -> {
                                                                                    true
                                                                                }
                                                                            },
                                                                            () -> {
                                                                                __core__ifThenElse(
                                                                                    __module__STokMintDelegate__DelegateActivity[]__MintingActivities____is(__cond_62),
                                                                                    () -> {
                                                                                        (__lhs_0_136) -> {
                                                                                            true
                                                                                        }
                                                                                    },
                                                                                    () -> {
                                                                                        __core__ifThenElse(
                                                                                            __module__STokMintDelegate__DelegateActivity[]__BurningActivities____is(__cond_62),
                                                                                            () -> {
                                                                                                (__lhs_0_135) -> {
                                                                                                    true
                                                                                                }
                                                                                            },
                                                                                            () -> {
                                                                                                (__lhs_0_134) -> {
                                                                                                    true
                                                                                                }
                                                                                            }
                                                                                        )()
                                                                                    }
                                                                                )()
                                                                            }
                                                                        )()
                                                                    }
                                                                )()
                                                            }
                                                        )()
                                                    }
                                                )()
                                            }
                                        )()
                                    }
                                )()
                            }
                        )()(__cond_62))
                    },
                    () -> {
                        () -> {
                            false
                        }()
                    }
                )();
                result_9
            })
        }
    };
    __module__BasicDelegate__main = (mdd, activity_4) -> {
        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(" \u{1F6A5}\u2753delegate: ", __module__BasicDelegate__delegateName), "
")), (result_10) -> {
            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F6A5}\u{1F7E2} delegate: ", __module__BasicDelegate__delegateName), ": ok!
")), result_10)
        }(__cond_114 = mdd;
        __core__ifThenElse(
            __module__STokMintDelegate__DelegateDatum[]__capoStoredData____is(__cond_114),
            () -> {
                (__lhs_0_272) -> {
                    __helios__error("Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum")
                }
            },
            () -> {
                __core__ifThenElse(
                    __module__STokMintDelegate__DelegateDatum[]__IsDelegation____is(__cond_114),
                    () -> {
                        (isD) -> {
                            dd_2 = __module__STokMintDelegate__DelegateDatum[]__IsDelegation__dd(isD);
                            __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __helios__int__serialize(__module__BasicDelegate__rev)()), "param/script-hash uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __module__BasicDelegate__instance), "param/script-hash uniqueness"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __helios__string__encode_utf8(__module__BasicDelegate__delegateName)()), "param/script-hash uniqueness"), __core__chooseUnit(__module__StellarHeliosHelpers__logGroupUnit("delegate: spending dgTkn", true, false, true, () -> {
                                __helios__print(__helios__value__show(__helios__txinput__value(__helios__scriptcontext__get_current_input()))(false, ()))
                            }), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_2)))();
                            govAuthorityCheck = __core__ifThenElse(
                                __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),
                                () -> {
                                    true
                                },
                                () -> {
                                    () -> {
                                        __core__ifThenElse(
                                            __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),
                                            () -> {
                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add("\u{1F4DD} ", __module__BasicDelegate__delegateName), ": requiresGovAuthority is overridden to false in the delegate's .hlb.ts")), __core__chooseUnit(__helios__print("   -- the policy can still choose to situationally enforce gov-authority"), true))
                                            },
                                            () -> {
                                                () -> {
                                                    __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_7)(cctx_7)())()
                                                }()
                                            }
                                        )()
                                    }()
                                }
                            )();
                            __helios__bool__and(() -> {
                                govAuthorityCheck
                            }, () -> {
                                __module__BasicDelegate__checkOneActivity_1(__module__BasicDelegate__checkOneActivity_1)(isD, activity_4, true, dd_2, true, cctx_7, true, __helios__string____add(__helios__string____add("delegate ", __module__BasicDelegate__delegateName), "'s overall policy"))
                            })))))
                        }
                    },
                    () -> {
                        (__76) -> {
                            kaboomInvalidRedeemer = () -> {
                                __helios__error("wrong Actvy/dtm")
                            };
                            __cond_115 = activity_4;
                            __core__ifThenElse(
                                __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_115),
                                () -> {
                                    (__lhs_0_271) -> {
                                        kaboomInvalidRedeemer()
                                    }
                                },
                                () -> {
                                    __core__ifThenElse(
                                        __module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities____is(__cond_115),
                                        () -> {
                                            (__lhs_0_270) -> {
                                                kaboomInvalidRedeemer()
                                            }
                                        },
                                        () -> {
                                            (__77) -> {
                                                __module__STokMintDelegate__DelegateActivity[]__otherDatumValidation(activity_4)(mdd)
                                            }
                                        }
                                    )()
                                }
                            )()(__cond_115)
                        }
                    }
                )()
            }
        )()(__cond_114)))
    };
    __core__ifThenElse(
        __module__BasicDelegate__main(__module__STokMintDelegate__DelegateDatum[]__from_data(__module__STokMintDelegate__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__STokMintDelegate__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__STokMintDelegate__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__STokMintDelegate__DelegateActivity[]__from_data(__module__STokMintDelegate__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__STokMintDelegate__DelegateActivity[]__OtherActivities__is_valid_data_2)(__REDEEMER)),
        () -> {
            ()
        },
        () -> {
            __helios__error("validation returned false")
        }
    )()
}`, "optimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/STokMintDelegate.hl", "src/CapoMintHelpers.hl", "src/delegation/CapoDelegateHelpers.hl", "src/StellarHeliosHelpers.hl"], "indices": "9f1865001903450b1871001905fa08187500190613081897011905c0041898011905c00419029e0219013f171902de0219015c181c19031702190167181819048a01190128183e1905dd0118e8181b1905f00118e3181b19065e0119018b182119068801190184183319068e0119017e182b19083b011901d21419089101190230182d1908e00119024018461909070119023d183b1909290119023d1824190d7f011902d41839190e45011902b41831190eb801190252182e190f44011903fc1828190f6a01190404182a190fe60119042318601916e7011901c918251917a200190268111918130019026f184c19183100190282186019183900190215184e19183a00190215184e19184d00190284186819185500190215184e19185600190215184e1918da00190288183019196901190500183419196e001902960a1919800019029318211919810019029318211919a40019029f18301919a50019029f18301919b5001902ae111919da001902a31838191a02001902a61843191a55001902b51852191a5d00190215184e191a5e00190215184e191a72001902b710191a73001902ec11191a7b00190215184e191a7c00190215184e191a8f001902f111191a9700190215184e191a9800190215184e191ac1001902bc181d191ad6001902c2181d191aeb001902ca181d191b23001902d21844191b64001902de1857191b83001902f51831191bce001905070b191bcf001905070b191bdd00190509184c191c2a011905331830191c470019065710191d3e031901741826191d94031901d0182b191d95031901d0182b191e2e0319021d181a191e49031901f31820191e5e031901f0183d191e6c031901f9182f191edd031902041841191f0f031901f3184119202d031901ad181c1920e5001901c0184b192107001901c0184d192206031901210419220a031901250419221a031901420a19221b0319013e181a192245031901361619224c0319012918221923260019019e184b1923570019019e184d19239a001907a510192451001907a51847192493001907811019254f0019078118471925600019072c181f1925ab00190732141925e30019070318581926460019071c101927a704190146161928dc001906040c19294b001905e1091929ce001905ce09192aae04183104192ae90019057c182e192b33001904d915192b34001904d915192be40019033f06192bf60019033d1827192c2d0019032911192c3700190215184e192c3800190215184e192cf50019032e1841192cf8001903321856192d6300190338182d192daf0019020708192db10019020609192e6b041901800c192ea0041901721834192ef304190178181b192f0b041901680b192faa051901370a1930a90518cb0e1930c305184614ff", "variableNames": "", "termDescriptions": "ae191980683c7377697463683e191981683c7377697463683e1919a4683c7377697463683e1919a5683c7377697463683e191a7270616374734f6e546869735265636f7264191bce683c7377697463683e191bcf683c7377697463683e19220668736565645478496419220a68696478427974657319239a69636861727465724163192493696368617274657241631925e378204361706f4374783a3a6d7573744f757470757444656c65676174656444617461192b33683c7377697463683e192b34683c7377697463683e" }, "unoptimizedSmap": { "sourceNames": ["src/CapoHelpers.hl", "src/delegation/BasicDelegate.hl", "src/STokMintDelegate.hl", "src/CapoMintHelpers.hl", "src/StellarHeliosHelpers.hl", "src/delegation/CapoDelegateHelpers.hl"], "indices": "9f1903f70019019d183219042b001903450b190461001905fa081904650019061308190575011905c004190576011905c0041905a401190581021905a501190581021905a801190582182e1905a901190582182e1905aa01190582091905ab01190582041905ac0119058218271905ae0119058218271905af0119058218191905b10119058218191905b2011905820a1905bf011905be0a1905c2011905be18291905c3011905be181a1906cc011905b418221908dd01190128183e190a3c0118e8181b190a5f0118e3181b190af20119018b1821190b1c011901841833190b240119017e182b190b340119017a182c190b80011901a21839190ba7011901a6184d190c36011901d214190cae01190230182d190d04011902401846190d11011902431835190d1f0119023d1824190d270119023d183b190fb30119034e1853191255011902ad18481912e7011902d41839191373011902ca18351913be011902b4183119141b01190252182e1914260119025118431914f6011903fc182819152f01190404182019153e01190405182519155501190407187619161701190423186019170b0119040a182919171d01190404182a1919b301190459182a191a0401190460182a191b02011904701845191b03011904701845191b27011904801862191b35011904671844191b69011904861842191b7301190487182a191c6801190201183b191ca00119020a183a191d04011901c91825191d24011904ae183c191d45011904af1832191e10011904f7183c191e31011904f81833191e73011905001834191ec20119052c1841191f0201190522181c191f25011905331830191f32011905051841191f4c0119053b183c191f6d0119053c1832191fdf01190548181a191ff80119054418421922a602190131183f1922b10219012218181922b802190122183a1922f40219013f171923550219015c181c1923bd0219016a183b1923c30219016718181924820219018c16192fd3031901741826192fd503190175182b193012031901b708193014031901b808193037031901b81821193073031901cf0819307c031901d0182b19307d031901d0182b1930ff0319021d181a1931040319021d12193123031901f31820193131031901f0183d193166031901f9182f1931e40319020418411931e90319020a181c1931f60319020c18541931fc0319020a1827193215031901f31841193284031901ad1824193288031901ad181c1932c10319018f182b1934ac03190121041934b003190125041934b60319013b041934c2031901420a1934c30319013e181a1934ea0319013618281934f503190136111934f703190136161934fc03190129182219350c0418b1183e19350d0418b1183e19350e0418b1183e19350f0418b1183e19356703184a04193629031860181b193632031852183e19368003184c181819372303182b0819372403182b0819374700190885081938f30019084b181919391a00190836182119391d00190834181819395d0019081f15193ab6001907a510193b09001907a51847193b5f0019078110193bb7001907811847193bc60019072b1827193bc80019072c181f193c100019073214193c3a001907031858193c770019070f14193c88001907101833193cc60019071c10193d040019066517193d0500190665182d193d9d00190655181c193dad0019065710193dde0019064f1824193df70019063f181f193e200019063f1820193e2b001906391828193e2c001906391841193e470019062f11193e8f00190612181c193ec200190601181c193f04001906091818193f11001906040c193f1e001905f91818193f5a001905e109193f61001905df181d193f7a001905d61820193fa0001905ce09193fa7001905cc181b193fe6001905a409193fea001905a2186719400c0019059a18381940180019059c1862194041001905a6184c19404a001905bb09194054001905b71519413a00190575181e1941440019057c182e19415d0019057b141941600019057e182719416e0418b2182719417c0418b21219417f0418b4141941c8001905070b1941c9001905070b1941cf00190509184c194221001904f9183f194223001904f81821194224001904f81821194257001904d7181c194261001904d915194262001904d9151943a700190343101943ad00190314181b1943ae0019033f061943cd0019033d18271943e30019033e0f1943f7001903291119441e0019032e184119442c00190332185619445700190338182d194481001902960a1944900019029318211944910019029318211944a30019029818491944b60019029918241944c10019029b181b1944c80019029c18411944db0019029d18551944f0001902f9151945010019029f18301945020019029f183019450a001902ae11194520001902a3183819453b001902a61843194546001902a7184d194556001902a71845194599001902b3183b1945a0001902b518521945b2001902b518261945b4001902b7101945b5001902e818621945c8001902ec111945e3001902ed18511945f6001902f111194628001902bc181d194640001902c2181d194658001902ca181d194684001902d218441946a1001902d618701946c4001902d918431946d9001902de185719470a001902f518311947240019025b181919472f0019025c184a1947380019028c182f19475200190268111947940019026d185819479b0019026f184c1947a90019026f18211947ac00190281185b1947bf0019028218601947d20019028318501947e500190284186819485d0019028818301948b90019021f18561948bb0019021e151948bc0019021e151948c00019021f141948c50019021f0f1948d10019021f18441948d200190221184f1948d40019021f184e1948d50019021f184e1948e100190222184c1948f800190222182b1948f900190227131949070019021417194908001902141719490900190215185619490b00190214182b19490c00190214182b1949100019021514194915001902150f19492100190215184419492600190215184e19492700190215184e1949390019020a1821194955001901f51827194958001902070819495a0019020609194970001901fb185119497b001901fb1849194997001901fe1848194b66001901c413194b76001901c0184b194b7b001901c01830194b7e001901c0184d194bc70019019e184b194bcc0019019e1830194bcf0019019e184d195e2e051901800c195e4d051901871837195e61051901830c195e6e0519018d15195e710519018d1835195e730519018d1835195e740519018d1830195e770519018d1836195ea4051901721834195ed6051901781829195ed705190178181b195ef3051901680b195f05051901650a195fb30519014616195fc60519014113195fcc0519013c185a19600c051901170a197460051831041978b0041901370a1978d70419013a12197a7a0418cb0e197a9b0418c71819197ace0418a21835197ad00418a30a197ad30418a30b197af404188a1822197b2a0418810f197b6b04187014197b760418710d197b8404187313197b8504187004197bf504183f04197bf604183f04197bff04184111197c1a04184614197c350418310e197c3a0418310a197c4804181e1822197c4904181e1822197c540418230dff", "variableNames": "", "termDescriptions": "b8331905a4646d61696e1905a5646d61696e19152f636c656e193012666d70685374721930146676616c5374721931e968746e537472696e671934ac6873656564547849641934b06869647842797465731934b6686d696e694861736819350c6863616c6c6261636b19350d6863616c6c6261636b19350e6863616c6c6261636b19350f6863616c6c6261636b193567687461726765744964193ab669636861727465724163193b5f69636861727465724163193c3a78204361706f4374783a3a6d7573744f757470757444656c65676174656444617461193c776b61637475616c4964537472193e476473656c66193e8f6473656c66193ec26473656c66193f1e6473656c6619413a6473656c661941c8683c7377697463683e1941c9683c7377697463683e194223636b6579194224636b65791942576473656c66194261683c7377697463683e194262683c7377697463683e1943a76473656c661943ad6473656c66194490683c7377697463683e194491683c7377697463683e194501683c7377697463683e194502683c7377697463683e1945b470616374734f6e546869735265636f72641948bb636d73671948bc636d73671949076b617373657274696f6e4f6b1949086b617373657274696f6e4f6b19490b636d736719490c636d73671949396473656c661949556473656c66197ace683c61737369676e3e197af469636f6c6c6170736564197bf56863616c6c6261636b197bf66863616c6c6261636b197c4869636f6c6c6170736564197c4969636f6c6c6170736564" } },
      scriptHash: "3207d0299d6c9ddbb1cbc4384ac2621939da3adb1e577b1e85a82b54",
      config: { "rev": "1", "delegateName": "STokMintDelegate", "isMintDelegate": true, "isSpendDelegate": true, "isDgDataPolicy": false, "requiresGovAuthority": true }
    }
  };
  specializedDelegateModule = STokMintDelegate_hl;
  requiresGovAuthority = true;
  get delegateName() {
    return "STokMintDelegate";
  }
}
function makeSTokMintDelegateBundle(capoBundle, delegateName) {
  const base = STokMintDelegateBundle.usingCapoBundleClass(capoBundle);
  class SpecificDelegateBundle extends base {
    specializedDelegateModule = STokMintDelegate_hl;
    requiresGovAuthority = true;
    delegateName = delegateName;
  }
  return SpecificDelegateBundle;
}

export { STokMintDelegateBundle, STokMintDelegateBundle as default, makeSTokMintDelegateBundle };
//# sourceMappingURL=STokMintDelegate.hlb.mjs.map
