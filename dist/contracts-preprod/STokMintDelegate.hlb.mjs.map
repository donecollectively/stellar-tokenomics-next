{"version":3,"file":"STokMintDelegate.hlb.mjs","sources":["../../src/STokMintDelegate.hlb.ts"],"sourcesContent":["import { CapoHeliosBundle, MintSpendDelegateBundle, type ConcreteCapoDelegateBundle } from \"@donecollectively/stellar-contracts\"\nimport type { Source } from \"@helios-lang/compiler-utils\"\nimport tokenomicsBasicMintDelegate from \"./STokMintDelegate.hl\"\nimport StellarTokenomicsCapoBundle from \"./StellarTokenomics.hlb.js\";\n\n/**\n * @public\n */\nconst stmdbBase = MintSpendDelegateBundle.usingCapoBundleClass(\n    StellarTokenomicsCapoBundle\n)\n\n/**\n * A specialized minting delegate for testing purposes\n * @public\n */\nexport class STokMintDelegateBundle \nextends stmdbBase {\n    specializedDelegateModule = tokenomicsBasicMintDelegate\n    requiresGovAuthority = true\n\n    get delegateName() {\n        return \"STokMintDelegate\"\n    }\n\n}\n\nexport default STokMintDelegateBundle;\n\n/**\n * @public\n */\nexport type IsStokMintDelegate = {\n    specializedDelegateModule: typeof tokenomicsBasicMintDelegate\n    requiresGovAuthority: true\n}\n\n/**\n * @public\n */\nexport type Constructor<T> = new (...args: any[]) => T;\n\n/**\n * Creates a typed helper class to use as a mint delegate for tokenomics subclasses\n * \n * ## Usage:\n * In your `MyMintDelegate.hlb.ts`:\n * ```typescript\n *    export const MyMintDelegate = makeSTokMintDelegateBundle(MyCapoBundle, \"MyMintDelegate\")\n *    export default MyMintDelegate\n * ```\n * This HLB file will be compiled to make  `.bridge.ts` and `.typeInfo.d.ts` for your delegate.  Import\n * the DataBridge and make your `MySpendMintDelegate.ts`, extending `STokMintDelegate` \n * and using:\n * ```typescript\n * export class MyMintSpendDelegate extends STokMintDelegate {\n *    get delegateName() {\n *        return \"MyMintSpendDelegate\";\n *    }\n *    dataBridgeClass = MyMintSpendDelegateDataBridge;\n *     async scriptBundleClass(): Promise<CapoDelegateBundle> {\n *        const module = await import(\"./MyMintSpendDelegate.hlb\");\n *        return module.MyMintSpendDelegateBundle\n *     }\n * ```\n * \n * Use your Mint Delegate class in your Capo:\n * ```typescript\n * delegateRoles({\n *    spendDelegate: defineRole(\"spendDgt\", MyMintSpendDelegate, {}),\n *    mintDelegate: defineRole(\"mintDgt\", MyMintSpendDelegate, {}),\n * })\n * ```\n * \n * @public\n */\nexport function makeSTokMintDelegateBundle(\n    capoBundle: typeof CapoHeliosBundle,\n    delegateName: string\n) : ConcreteCapoDelegateBundle & Constructor<STokMintDelegateBundle & IsStokMintDelegate> {\n    const base = STokMintDelegateBundle.usingCapoBundleClass(capoBundle)\n    class SpecificDelegateBundle extends base {\n        specializedDelegateModule = tokenomicsBasicMintDelegate\n        requiresGovAuthority = true\n        delegateName = delegateName\n    }\n    return SpecificDelegateBundle as any\n}"],"names":["tokenomicsBasicMintDelegate"],"mappings":";;;;;;;;;;;;AAQA,MAAM,YAAY,uBAAA,CAAwB,oBAAA;AAAA,EACtC;AACJ,CAAA;AAMO,MAAM,+BACL,SAAA,CAAU;AAAA,EAAC,wBAAA,GAAA;AAAA,IAAA,SAAA,EAAA;AAAA,MAAA,UAAA,EAAA,0DAAA;AAAA,MAAA,MAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,gBAAA,EAAA,KAAA,EAAA,wBAAA,IAAA;AAAA;AAAA,GAAA;AAAA,EAAA,kBAAA,GAAA,QAAA;AAAA,EAAA,MAAA,uBAAA,OAAA,EAAA;AAAA,IAAA,MAAA,MAAA,GAAA,MAAA,OAAA,oEAAA,CAAA;AAAA,IAAA,MAAA,YAAA,GAAA,MAAA,CAAA,WAAA,CAAA,OAAA,CAAA;AAAA,IAAA,IAAA,CAAA,YAAA,EAAA;AAAA,MAAA,MAAA,IAAA,KAAA,CAAA,CAAA,iBAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AAAA,IAAA;AAAA,IAAA,OAAA,YAAA;AAAA,EAAA;AAAA,EAAA,yBAAA,GACaA,mBAAA;AAAA,EAC5B,oBAAA,GAAuB,IAAA;AAAA,EAEvB,IAAI,YAAA,GAAe;AACf,IAAA,OAAO,kBAAA;AAAA,EACX;AAEJ;AAmDO,SAAS,0BAAA,CACZ,YACA,YAAA,EACsF;AACtF,EAAA,MAAM,IAAA,GAAO,sBAAA,CAAuB,oBAAA,CAAqB,UAAU,CAAA;AAAA,EACnE,MAAM,+BAA+B,IAAA,CAAK;AAAA,IACtC,yBAAA,GAA4BA,mBAAA;AAAA,IAC5B,oBAAA,GAAuB,IAAA;AAAA,IACvB,YAAA,GAAe,YAAA;AAAA;AAEnB,EAAA,OAAO,sBAAA;AACX;;;;"}