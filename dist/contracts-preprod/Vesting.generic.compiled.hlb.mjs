export const precompiled = {
    "singleton": {
        "programElements": {
            "src/delegation/BasicDelegate.hl": "027afd9f75063ea33dddf672afda9b8e0a09cb60b8856246e2d924f1f96b0f55",
            "src/CapoMintHelpers.hl": "3fca50bb43a69ff20b3d1c38a2d861763b960bbec1f36a4e56d4fc09b9c93299",
            "src/delegation/CapoDelegateHelpers.hl": "3c7ed244361870b62c0b40ac3faece6ce8d87985937e3142939634b04f341b10",
            "src/StellarHeliosHelpers.hl": "3761577f61419fc37d8b8df0d3d6cbd24217db0702031af15c043b02a541cbb6",
            "src/CapoHelpers.hl": "fb03f3b74232c0aa160824b8a6440ce84425551cd1b0a457e7829acbde991535",
            "src/Vesting/VestingData.hl": "99778cb660a76e5a001b7c59fd8e90f78907a80ba0247f91444ad2218f11dbe2",
            "src/Vesting/VxfProtocol.hl": "662e1f64cae95585bb6533175bc310f45471efc37cafca10294c8fc25b0a9010",
            "generatedSpecializedDelegateModule": "98edbd7bbc5b3b37346c818057708d8ddd40a9004f763e7f3b5d020e1b22dd89",
            "src/Vesting/VestingPolicy.hl": "30afa511b21584ec3d2c7228dcb18330705722e5917bbcb47d2cec62be1ff9a9",
            "params": {
                "BasicDelegate::rev": "const rev: Int = ##01;",
                "BasicDelegate::instance": "const instance: ByteArray = #67656e6572616c;",
                "BasicDelegate::delegateName": "const delegateName: String = ##4d56657374696e67506f6c696379;",
                "BasicDelegate::isMintDelegate": "const isMintDelegate: Bool = ##d87980;",
                "BasicDelegate::isSpendDelegate": "const isSpendDelegate: Bool = ##d87980;",
                "BasicDelegate::isDgDataPolicy": "const isDgDataPolicy: Bool = ##d87a80;",
                "BasicDelegate::requiresGovAuthority": "const requiresGovAuthority: Bool = ##d87a80;"
            }
        },
        "version": "PlutusV2",
        "optimized": "",
        "unoptimized": "",
        "optimizedIR": "(__DATUM, __REDEEMER, __CONTEXT) -> {\n    __common8 = __core__unConstrData(__CONTEXT);\n    __common9 = __core__sndPair(__common8);\n    __common6 = __core__fstPair(__core__unConstrData(__DATUM));\n    __helios__common__fold = (self_3, fn, z) -> {\n        recurse_1 = (recurse, self_4, z_1) -> {\n            __core__chooseList(self_4, () -> {\n                z_1\n            }, () -> {\n                recurse(recurse, __core__tailList__safe(self_4), fn(z_1, __core__headList__safe(self_4)))\n            })()\n        };\n        recurse_1(recurse_1, self_3, z)\n    };\n    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {\n        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {\n            callback_ok(__core__unBData__safe(data))\n        })()\n    };\n    __helios__bytearray__show = (self_7) -> {\n        recurse_5 = (recurse_4, self_8) -> {\n            n = __core__lengthOfByteString(self_8);\n            __core__ifThenElse(\n                __core__lessThanInteger(0, n),\n                () -> {\n                    __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(self_5 = __core__indexByteString__safe(self_8, 0);\n                    recurse_3 = (recurse_2, self_6, bytes) -> {\n                        digit = __core__modInteger(self_6, 16);\n                        bytes_1 = __core__consByteString(__core__ifThenElse(\n                            __core__lessThanInteger(digit, 10),\n                            __core__addInteger(digit, 48),\n                            __core__addInteger(digit, 87)\n                        ), bytes);\n                        __core__ifThenElse(\n                            __core__lessThanInteger(self_6, 16),\n                            () -> {\n                                bytes_1\n                            },\n                            () -> {\n                                recurse_2(recurse_2, __core__divideInteger(self_6, 16), bytes_1)\n                            }\n                        )()\n                    };\n                    __core__decodeUtf8__safe(__core__ifThenElse(\n                        __core__lessThanInteger(self_5, 0),\n                        () -> {\n                            __core__consByteString(45, recurse_3(recurse_3, __core__multiplyInteger(self_5, -1), #))\n                        },\n                        () -> {\n                            recurse_3(recurse_3, self_5, #)\n                        }\n                    )()));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),\n                        __core__consByteString(48, hex_bytes),\n                        hex_bytes\n                    )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_8)))\n                },\n                () -> {\n                    \"\"\n                }\n            )()\n        };\n        recurse_5(recurse_5, self_7)\n    };\n    __helios__int__show = (self_9) -> {\n        __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {\n            bytes_3 = __core__consByteString(__core__addInteger(__core__modInteger(i, 10), 48), bytes_2);\n            __core__ifThenElse(\n                __core__lessThanInteger(i, 10),\n                () -> {\n                    bytes_3\n                },\n                () -> {\n                    recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)\n                }\n            )()\n        };\n        __core__ifThenElse(\n            __core__lessThanInteger(self_9, 0),\n            () -> {\n                __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_9, -1), #))\n            },\n            () -> {\n                recurse_7(recurse_7, self_9, #)\n            }\n        )())\n    };\n    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__divideInteger(byte, 64), 2),\n            () -> {\n                callback(true, __core__modInteger(byte, 64))\n            },\n            () -> {\n                callback(false, 0)\n            }\n        )()\n    };\n    __helios__string__is_valid_utf8 = (bytes_5) -> {\n        n_2 = __core__lengthOfByteString(bytes_5);\n        recurse_11 = (recurse_10, i_1) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(i_1, n_2),\n                () -> {\n                    true\n                },\n                () -> {\n                    b0 = __core__indexByteString__safe(bytes_5, i_1);\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(b0, 127),\n                        () -> {\n                            recurse_10(recurse_10, __core__addInteger(i_1, 1))\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),\n                                () -> {\n                                    inext_2 = __core__addInteger(i_1, 2);\n                                    __core__ifThenElse(\n                                        __core__lessThanEqualsInteger(inext_2, n_2),\n                                        () -> {\n                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {\n                                                __core__ifThenElse(\n                                                    valid_5,\n                                                    () -> {\n                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);\n                                                        __core__ifThenElse(\n                                                            __core__ifThenElse(\n                                                                __core__lessThanEqualsInteger(128, c_2),\n                                                                () -> {\n                                                                    __core__lessThanEqualsInteger(c_2, 2047)\n                                                                },\n                                                                () -> {\n                                                                    false\n                                                                }\n                                                            )(),\n                                                            () -> {\n                                                                recurse_10(recurse_10, inext_2)\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    },\n                                                    () -> {\n                                                        false\n                                                    }\n                                                )()\n                                            })\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),\n                                        () -> {\n                                            inext_1 = __core__addInteger(i_1, 3);\n                                            __core__ifThenElse(\n                                                __core__lessThanEqualsInteger(inext_1, n_2),\n                                                () -> {\n                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {\n                                                        __core__ifThenElse(\n                                                            valid_3,\n                                                            () -> {\n                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {\n                                                                    __core__ifThenElse(\n                                                                        valid_4,\n                                                                        () -> {\n                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));\n                                                                            __core__ifThenElse(\n                                                                                __core__ifThenElse(\n                                                                                    __core__lessThanEqualsInteger(2048, c_1),\n                                                                                    () -> {\n                                                                                        __core__lessThanEqualsInteger(c_1, 65535)\n                                                                                    },\n                                                                                    () -> {\n                                                                                        false\n                                                                                    }\n                                                                                )(),\n                                                                                () -> {\n                                                                                    recurse_10(recurse_10, inext_1)\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )()\n                                                                })\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    })\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),\n                                                () -> {\n                                                    inext = __core__addInteger(i_1, 4);\n                                                    __core__ifThenElse(\n                                                        __core__lessThanEqualsInteger(inext, n_2),\n                                                        () -> {\n                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {\n                                                                __core__ifThenElse(\n                                                                    valid,\n                                                                    () -> {\n                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {\n                                                                            __core__ifThenElse(\n                                                                                valid_1,\n                                                                                () -> {\n                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            valid_2,\n                                                                                            () -> {\n                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__lessThanEqualsInteger(65536, c),\n                                                                                                        () -> {\n                                                                                                            __core__lessThanEqualsInteger(c, 2097151)\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )(),\n                                                                                                    () -> {\n                                                                                                        recurse_10(recurse_10, inext)\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    })\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        })\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        };\n        recurse_11(recurse_11, 0)\n    };\n    __helios__value__show = (self_15) -> {\n        __helios__common__fold(self_15, (prev, pair) -> {\n            mph_data = __core__fstPair(pair);\n            tokens_data = __core__sndPair(pair);\n            __core__appendString(prev, __helios__common__unBData__safe(mph_data, (mph) -> {\n                __core__appendString(__core__ifThenElse(\n                    __core__equalsByteString(mph, #),\n                    () -> {\n                        \"\"\n                    },\n                    () -> {\n                        __core__appendString(__helios__bytearray__show(mph), \"\n\")\n                    }\n                )(), __core__chooseData(tokens_data, () -> {\n                    \"\"\n                }, () -> {\n                    __helios__common__fold(__core__unMapData__safe(tokens_data), (prev_1, pair_1) -> {\n                        token_name_data = __core__fstPair(pair_1);\n                        qty_data = __core__sndPair(pair_1);\n                        __helios__common__unBData__safe(token_name_data, (token_name) -> {\n                            __core__chooseData(qty_data, () -> {\n                                \"\"\n                            }, () -> {\n                                \"\"\n                            }, () -> {\n                                \"\"\n                            }, () -> {\n                                qty = __core__unIData__safe(qty_data);\n                                __core__ifThenElse(\n                                    __core__equalsByteString(mph, #),\n                                    () -> {\n                                        __core__appendString(\"lovelace \", __core__appendString(__helios__int__show(qty), \"\n\"))\n                                    },\n                                    () -> {\n                                        __core__appendString(\"  .\", __core__appendString(__core__ifThenElse(\n                                            __helios__string__is_valid_utf8(token_name),\n                                            () -> {\n                                                __core__decodeUtf8__safe(token_name)\n                                            },\n                                            () -> {\n                                                __helios__bytearray__show(token_name)\n                                            }\n                                        )(), __core__appendString(\" \", __core__appendString(__helios__int__show(qty), \"\n\"))))\n                                    }\n                                )()\n                            }, () -> {\n                                \"\"\n                            })()\n                        }, () -> {\n                            \"\"\n                        })\n                    }, prev)\n                }, () -> {\n                    \"\"\n                }, () -> {\n                    \"\"\n                }, () -> {\n                    \"\"\n                })())\n            }, () -> {\n                \"\"\n            }))\n        }, \"\")\n    };\n    __helios__scriptcontext__purpose = __core__headList(__core__tailList(__common9));\n    __helios__scriptcontext__tx = __core__headList(__common9);\n    __helios__scriptcontext__get_current_input = () -> {\n        id = __core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__purpose)));\n        recurse_13 = (recurse_12, lst) -> {\n            __core__chooseList(lst, () -> {\n                error()\n            }, () -> {\n                item = __core__headList__safe(lst);\n                __core__ifThenElse(\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(item))), id),\n                    () -> {\n                        item\n                    },\n                    () -> {\n                        recurse_12(recurse_12, __core__tailList__safe(lst))\n                    }\n                )()\n            })()\n        };\n        recurse_13(recurse_13, __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))\n    };\n    __helios__value__new = (assetClass, i_2) -> {\n        mph_1 = __core__headList(__core__sndPair(__core__unConstrData(assetClass)));\n        tokenName = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass))));\n        __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __core__iData(i_2)), __core__mkNilPairData(())))), __core__mkNilPairData(()))\n    };\n    __helios__assetclass__new = (mph_2, token_name_1) -> {\n        __core__constrData(0, __core__mkCons(__core__bData(mph_2), __core__mkCons(__core__bData(token_name_1), __core__mkNilData(()))))\n    };\n    __helios__common__enum_field_4 = (self_28) -> {\n        __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_28)))))))\n    };\n    __helios__common__assert_constr_index = (data_3, i_3) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_3)), i_3),\n            () -> {\n                data_3\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__common__length = (lst_3) -> {\n        recurse_19 = (recurse_18, lst_4) -> {\n            __core__chooseList(lst_4, () -> {\n                0\n            }, () -> {\n                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)\n            })()\n        };\n        recurse_19(recurse_19, lst_3)\n    };\n    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {\n        recurse_21 = (recurse_20, self_39, key_2) -> {\n            __core__chooseList(self_39, fnNotFound, () -> {\n                head_1 = __core__headList__safe(self_39);\n                __core__ifThenElse(\n                    __core__equalsData(key_2, __core__fstPair(head_1)),\n                    () -> {\n                        fnFound(__core__sndPair(head_1))\n                    },\n                    () -> {\n                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)\n                    }\n                )()\n            })()\n        };\n        recurse_21(recurse_21, self_38, key_1)\n    };\n    __helios__common__all = (self_40, fn_1) -> {\n        recurse_23 = (recurse_22, self_41, fn_2) -> {\n            __core__chooseList(self_41, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    fn_2(__core__headList__safe(self_41)),\n                    () -> {\n                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_23(recurse_23, self_40, fn_1)\n    };\n    __helios__common__enum_fields_after_4 = (self_44) -> {\n        __core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_44)))))))\n    };\n    __helios__value__get_safe = (self_49, assetClass_2) -> {\n        mintingPolicyHash = __core__headList(__core__sndPair(__core__unConstrData(assetClass_2)));\n        tokenName_2 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(assetClass_2))));\n        outer_3 = (outer_2, inner_3, map_3) -> {\n            __core__chooseList(map_3, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mintingPolicyHash),\n                    () -> {\n                        inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_3))))\n                    },\n                    () -> {\n                        outer_2(outer_2, inner_3, __core__tailList__safe(map_3))\n                    }\n                )()\n            })()\n        };\n        outer_3(outer_3, (inner_4, map_4) -> {\n            __core__chooseList(map_4, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), tokenName_2),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_4)))\n                    },\n                    () -> {\n                        inner_4(inner_4, __core__tailList__safe(map_4))\n                    }\n                )()\n            })()\n        }, self_49)\n    };\n    __helios__txoutputdatum__inline = (self_50) -> {\n        pair_5 = __core__unConstrData(self_50);\n        index_1 = __core__fstPair(pair_5);\n        fields_2 = __core__sndPair(pair_5);\n        __core__ifThenElse(\n            __core__equalsInteger(index_1, 2),\n            () -> {\n                __core__headList(fields_2)\n            },\n            () -> {\n                error()\n            }\n        )()\n    };\n    __helios__common__filter = (self_55, fn_3, nil) -> {\n        recurse_25 = (recurse_24, self_56, fn_4) -> {\n            __core__chooseList(self_56, () -> {\n                nil\n            }, () -> {\n                head_2 = __core__headList__safe(self_56);\n                __core__ifThenElse(\n                    fn_4(head_2),\n                    () -> {\n                        __core__mkCons(head_2, recurse_24(recurse_24, __core__tailList__safe(self_56), fn_4))\n                    },\n                    () -> {\n                        recurse_24(recurse_24, __core__tailList__safe(self_56), fn_4)\n                    }\n                )()\n            })()\n        };\n        recurse_25(recurse_25, self_55, fn_3)\n    };\n    __helios__common__mStruct_field = (self_58, name_1) -> {\n        map_5 = __core__unMapData(self_58);\n        name_data = __core__bData(name_1);\n        recurse_27 = (recurse_26, map_6) -> {\n            __core__chooseList(map_6, () -> {\n                error()\n            }, () -> {\n                head_3 = __core__headList__safe(map_6);\n                key_3 = __core__fstPair(head_3);\n                value_2 = __core__sndPair(head_3);\n                __core__ifThenElse(\n                    __core__equalsData(key_3, name_data),\n                    () -> {\n                        value_2\n                    },\n                    () -> {\n                        recurse_26(recurse_26, __core__tailList__safe(map_6))\n                    }\n                )()\n            })()\n        };\n        recurse_27(recurse_27, map_5)\n    };\n    __helios__value__is_zero = (self_59) -> {\n        recurse_31 = (recurse_30, map_7) -> {\n            __core__chooseList(map_7, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    tokens_1 = __core__unMapData(__core__sndPair(__core__headList__safe(map_7)));\n                    recurse_29 = (recurse_28, tokens_2) -> {\n                        __core__chooseList(tokens_2, () -> {\n                            true\n                        }, () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0),\n                                () -> {\n                                    recurse_28(recurse_28, __core__tailList__safe(tokens_2))\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_29(recurse_29, tokens_1),\n                    () -> {\n                        recurse_30(recurse_30, __core__tailList__safe(map_7))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_31(recurse_31, self_59)\n    };\n    __helios__value__contains_policy = (self_63, mph_5) -> {\n        mph_6 = __core__bData(mph_5);\n        recurse_33 = (recurse_32, map_8) -> {\n            __core__chooseList(map_8, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_8)), mph_6),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_32(recurse_32, __core__tailList__safe(map_8))\n                    }\n                )()\n            })()\n        };\n        recurse_33(recurse_33, self_63)\n    };\n    __helios__value__get_policy = (self_66, mph_7) -> {\n        mph_8 = __core__bData(mph_7);\n        recurse_35 = (recurse_34, map_9) -> {\n            __core__chooseList(map_9, () -> {\n                error()\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_9)), mph_8),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_9)))\n                    },\n                    () -> {\n                        recurse_34(recurse_34, __core__tailList__safe(map_9))\n                    }\n                )()\n            })()\n        };\n        recurse_35(recurse_35, self_66)\n    };\n    __helios__value__get_inner_map_int = (map_10, key_4) -> {\n        recurse_37 = (recurse_36, map_11, key_5) -> {\n            __core__chooseList(map_11, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_11)), key_5),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_11)))\n                    },\n                    () -> {\n                        recurse_36(recurse_36, __core__tailList__safe(map_11), key_5)\n                    }\n                )()\n            })()\n        };\n        recurse_37(recurse_37, map_10, key_4)\n    };\n    __helios__common__any = (self_67, fn_7) -> {\n        recurse_41 = (recurse_40, self_68, fn_8) -> {\n            __core__chooseList(self_68, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    fn_8(__core__headList__safe(self_68)),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_40(recurse_40, __core__tailList__safe(self_68), fn_8)\n                    }\n                )()\n            })()\n        };\n        recurse_41(recurse_41, self_67, fn_7)\n    };\n    __helios__value__merge_map_keys = (a_5, b_5) -> {\n        (aKeys) -> {\n            recurse_45 = (recurse_44, keys, map_14) -> {\n                __core__chooseList(map_14, () -> {\n                    __core__mkNilData(())\n                }, () -> {\n                    key_7 = __core__fstPair(__core__headList__safe(map_14));\n                    __core__ifThenElse(\n                        __helios__common__any(aKeys, (item_4) -> {\n                            __core__equalsData(item_4, key_7)\n                        }),\n                        () -> {\n                            recurse_44(recurse_44, keys, __core__tailList__safe(map_14))\n                        },\n                        () -> {\n                            __core__mkCons(key_7, recurse_44(recurse_44, keys, __core__tailList__safe(map_14)))\n                        }\n                    )()\n                })()\n            };\n            b_4 = recurse_45(recurse_45, aKeys, b_5);\n            recurse_43 = (recurse_42, lst_6, rem) -> {\n                __core__chooseList(rem, () -> {\n                    lst_6\n                }, () -> {\n                    __core__mkCons(__core__headList__safe(rem), recurse_42(recurse_42, lst_6, __core__tailList__safe(rem)))\n                })()\n            };\n            recurse_43(recurse_43, b_4, aKeys)\n        }(recurse_39 = (recurse_38, map_13) -> {\n            __core__chooseList(map_13, () -> {\n                __core__mkNilData(())\n            }, () -> {\n                __core__mkCons(__core__fstPair(__core__headList__safe(map_13)), recurse_38(recurse_38, __core__tailList__safe(map_13)))\n            })()\n        };\n        recurse_39(recurse_39, a_5))\n    };\n    __helios__value__get_inner_map = (map_15, mph_9) -> {\n        recurse_49 = (recurse_48, map_16) -> {\n            __core__chooseList(map_16, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_16)), mph_9),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_16)))\n                    },\n                    () -> {\n                        recurse_48(recurse_48, __core__tailList__safe(map_16))\n                    }\n                )()\n            })()\n        };\n        recurse_49(recurse_49, map_15)\n    };\n    __helios__value____add = (a_8, b_8) -> {\n        recurse_51 = (recurse_50, keys_2) -> {\n            __core__chooseList(keys_2, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                key_9 = __core__headList__safe(keys_2);\n                tail_1 = recurse_50(recurse_50, __core__tailList__safe(keys_2));\n                item_5 = (a_6, b_6) -> {\n                    recurse_47 = (recurse_46, keys_1) -> {\n                        __core__chooseList(keys_1, () -> {\n                            __core__mkNilPairData(())\n                        }, () -> {\n                            key_8 = __core__headList__safe(keys_1);\n                            tail = recurse_46(recurse_46, __core__tailList__safe(keys_1));\n                            sum = __core__addInteger(__helios__value__get_inner_map_int(a_6, key_8), __helios__value__get_inner_map_int(b_6, key_8));\n                            __core__ifThenElse(\n                                __core__equalsInteger(sum, 0),\n                                () -> {\n                                    tail\n                                },\n                                () -> {\n                                    __core__mkCons(__core__mkPairData(key_8, __core__iData(sum)), tail)\n                                }\n                            )()\n                        })()\n                    };\n                    recurse_47(recurse_47, __helios__value__merge_map_keys(a_6, b_6))\n                }(__helios__value__get_inner_map(a_8, key_9), __helios__value__get_inner_map(b_8, key_9));\n                __core__chooseList(item_5, () -> {\n                    tail_1\n                }, () -> {\n                    __core__mkCons(__core__mkPairData(key_9, __core__mapData(item_5)), tail_1)\n                })()\n            })()\n        };\n        recurse_51(recurse_51, __helios__value__merge_map_keys(a_8, b_8))\n    };\n    __helios__common__map = (self_69, fn_9) -> {\n        recurse_53 = (recurse_52, rem_1) -> {\n            __core__chooseList(rem_1, () -> {\n                __core__mkNilData(())\n            }, () -> {\n                __core__mkCons(fn_9(__core__headList__safe(rem_1)), recurse_52(recurse_52, __core__tailList__safe(rem_1)))\n            })()\n        };\n        recurse_53(recurse_53, self_69)\n    };\n    __helios__txinput__address = (self_82) -> {\n        self_21 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_82))));\n        __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n    };\n    __helios__common__find_safe = (self_100, fn_13) -> {\n        recurse_65 = (recurse_64, self_101, fn_14) -> {\n            __core__chooseList(self_101, () -> {\n                __core__constrData(1, __core__mkNilData(()))\n            }, () -> {\n                head_7 = __core__headList__safe(self_101);\n                __core__ifThenElse(\n                    fn_14(head_7),\n                    () -> {\n                        __core__constrData(0, __core__mkCons(head_7, __core__mkNilData(())))\n                    },\n                    () -> {\n                        recurse_64(recurse_64, __core__tailList__safe(self_101), fn_14)\n                    }\n                )()\n            })()\n        };\n        recurse_65(recurse_65, self_100, fn_13)\n    };\n    __helios__list[__helios__txoutput]__find = (self_102, fn_15) -> {\n        recurse_67 = (recurse_66, lst_12) -> {\n            __core__chooseList(lst_12, () -> {\n                error()\n            }, () -> {\n                item_6 = __core__headList__safe(lst_12);\n                __core__ifThenElse(\n                    fn_15(item_6),\n                    () -> {\n                        item_6\n                    },\n                    () -> {\n                        recurse_66(recurse_66, __core__tailList__safe(lst_12))\n                    }\n                )()\n            })()\n        };\n        recurse_67(recurse_67, self_102)\n    };\n    __module__StellarHeliosHelpers__AnyData[]__type = (self_108) -> {\n        d = __helios__common__mStruct_field(self_108, #747065);\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_5) -> {\n        __core__ifThenElse(\n            __core__chooseData(value_5, () -> {\n                true\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            })(),\n            () -> {\n                (__lhs_0) -> {\n                    fields_7 = __core__sndPair(__core__unConstrData(__lhs_0));\n                    __cond_2 = __core__headList(fields_7);\n                    __core__ifThenElse(\n                        __core__chooseData(__cond_2, () -> {\n                            false\n                        }, () -> {\n                            true\n                        }, () -> {\n                            false\n                        }, () -> {\n                            false\n                        }, () -> {\n                            false\n                        })(),\n                        () -> {\n                            (__lhs_0_1) -> {\n                                __core__headList(fields_7)\n                            }\n                        },\n                        () -> {\n                            (__3) -> {\n                                error()\n                            }\n                        }\n                    )()(__cond_2)\n                }\n            },\n            () -> {\n                (__2) -> {\n                    error()\n                }\n            }\n        )()(value_5)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_112) -> {\n        d = __core__headList(__core__sndPair(__core__unConstrData(self_112)));\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __helios__list[__helios__string]__join = (self_126) -> {\n        recurse_73 = (recurse_72, lst_13, sep) -> {\n            __core__chooseList(lst_13, () -> {\n                \"\"\n            }, () -> {\n                __core__appendString(__core__appendString(sep, __core__decodeUtf8(__core__unBData(__core__headList__safe(lst_13)))), recurse_72(recurse_72, __core__tailList__safe(lst_13), \", \"))\n            })()\n        };\n        recurse_73(recurse_73, self_126, \"\")\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_134, mph_12) -> {\n        __helios__assetclass__new(mph_12, __core__encodeUtf8(d = __core__headList(self_134);\n        __core__decodeUtf8(__core__unBData(d))))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_141, mph_15) -> {\n        (uut) -> {\n            validatorHash = __core__headList(__core__tailList(self_141));\n            ac_1 = __helios__assetclass__new(mph_15, __core__encodeUtf8(uut));\n            hasDelegate = __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(validatorHash)), 0),\n                () -> {\n                    (__lhs_0_15) -> {\n                        vh_3 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_15))));\n                        a_3 = __helios__value__get_safe((outputs) -> {\n                            __helios__common__fold(outputs, (prev_3, txOutput) -> {\n                                __helios__value____add(prev_3, __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txOutput))))))\n                            }, __core__mkNilPairData(()))\n                        }(self_57 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__filter(self_57, (output) -> {\n                            (credential) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(credential)), 1),\n                                    () -> {\n                                        __core__equalsByteString(vh_3, self_87 = __helios__common__assert_constr_index(credential, 1);\n                                        __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(self_87)))))\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }(self_21 = __core__headList(__core__sndPair(__core__unConstrData(output)));\n                            __core__headList(__core__sndPair(__core__unConstrData(self_21))))\n                        }, __core__mkNilData(()))), ac_1);\n                        __core__ifThenElse(\n                            __core__lessThanEqualsInteger(a_3, 0),\n                            false,\n                            true\n                        )\n                    }\n                },\n                () -> {\n                    (__lhs_0_12) -> {\n                        (__cond_10) -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_10)), 0),\n                                () -> {\n                                    (__lhs_0_14) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_13) -> {\n                                        false\n                                    }\n                                }\n                            )()(__cond_10)\n                        }(self_140 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n                        __helios__common__find_safe(self_140, (o) -> {\n                            a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(o))))), ac_1);\n                            __core__ifThenElse(\n                                __core__lessThanEqualsInteger(a_3, 0),\n                                false,\n                                true\n                            )\n                        }))\n                    }\n                }\n            )()(validatorHash);\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __core__ifThenElse(\n                        hasDelegate,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        false\n                    }\n                )(),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), hasDelegate)\n        }(d = __core__headList(self_141);\n        __core__decodeUtf8(__core__unBData(d)))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_164) -> {\n        __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_164)))))))\n    };\n    __module__CapoHelpers__DgDataDetails[]____new = (dataSrc, id_1, mph_20) -> {\n        __core__mkCons(dataSrc, __core__mkCons(__core__bData(id_1), __core__mkCons(__core__bData(#), __core__mkCons(__core__bData(mph_20), __core__mkCons(__core__constrData(1, __core__mkNilData(())), __core__mkNilData(()))))))\n    };\n    __module__CapoHelpers__DgDataDetails[]__output = (self_193) -> {\n        __cond_29 = __core__headList(self_193);\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_29)), 2),\n            () -> {\n                (self_21) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_29)), 3),\n                    () -> {\n                        (self_18) -> {\n                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))\n                        }\n                    },\n                    () -> {\n                        (__28) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_29)\n    };\n    __module__CapoHelpers__DgDataDetails[]__outputData = (self_195) -> {\n        __cond_31 = __helios__txoutputdatum__inline(self_51 = __module__CapoHelpers__DgDataDetails[]__output(self_195);\n        __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n        __core__ifThenElse(\n            __core__chooseData(__cond_31, () -> {\n                true\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            })(),\n            () -> {\n                (__lhs_0_54) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_54)))\n                }\n            },\n            () -> {\n                (__30) -> {\n                    error()\n                }\n            }\n        )()(__cond_31)\n    };\n    __module__CapoHelpers__CapoCtx[]__updatingDgData = (__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1, self_202, recIdBytes_2) -> {\n        input_3 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate, self_202, recIdBytes_2);\n        output_4 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1(self_202, recIdBytes_2);\n        mph_21 = __core__unBData(__core__headList(self_202));\n        __module__CapoHelpers__DgDataDetails[]____new(__core__constrData(3, __core__mkCons(input_3, __core__mkCons(output_4, __core__mkNilData(())))), recIdBytes_2, mph_21)\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_204) -> {\n        __cond_33 = __core__headList(__core__tailList(self_204));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 0),\n            () -> {\n                (__lhs_0_65) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_33)), 1),\n                    () -> {\n                        (__lhs_0_64) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_57) -> {\n                            utxo_5 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_57))));\n                            (activity_6) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_6)), 2),\n                                    () -> {\n                                        (__lhs_0_63) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_6)), 4),\n                                            () -> {\n                                                (__lhs_0_62) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_6)), 1),\n                                                    () -> {\n                                                        (__lhs_0_61) -> {\n                                                            activity_6\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_6)), 5),\n                                                            () -> {\n                                                                (__lhs_0_60) -> {\n                                                                    activity_6\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_6)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_59) -> {\n                                                                            activity_6\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__lhs_0_58) -> {\n                                                                            activity_6\n                                                                        }\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()(activity_6)\n                            }(targetId = __core__headList(__core__sndPair(__core__unConstrData(utxo_5)));\n                            redeemers = __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx)))))));\n                            (spendsExpectedInput) -> {\n                                __helios__common__map_get(redeemers, spendsExpectedInput, (x_4) -> {\n                                    x_4\n                                }, () -> {\n                                    error()\n                                })\n                            }(recurse_71 = (recurse_70, map_22) -> {\n                                __core__chooseList(map_22, () -> {\n                                    error()\n                                }, () -> {\n                                    item_7 = __core__fstPair(__core__headList__safe(map_22));\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(item_7)), 1),\n                                            () -> {\n                                                (sp) -> {\n                                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(sp))), targetId)\n                                                }\n                                            },\n                                            () -> {\n                                                (__1) -> {\n                                                    false\n                                                }\n                                            }\n                                        )()(item_7),\n                                        () -> {\n                                            item_7\n                                        },\n                                        () -> {\n                                            recurse_70(recurse_70, __core__tailList__safe(map_22))\n                                        }\n                                    )()\n                                })()\n                            };\n                            recurse_71(recurse_71, redeemers)))\n                        }\n                    }\n                )()\n            }\n        )()(__cond_33)\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_205, key_16) -> {\n        __helios__common__map_get(self_205, __core__bData(__core__encodeUtf8(key_16)), (x_5) -> {\n            __core__constrData(0, __core__mkCons(x_5, __core__mkNilData(())))\n        }, () -> {\n            __core__constrData(1, __core__mkNilData(()))\n        })\n    };\n    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_5, self_211) -> {\n        __core__chooseUnit(cond = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(self_166 = __module__CapoHelpers__CapoCtx[]__getCharterData_5(self_211);\n        __core__unListData(__core__headList(__helios__common__enum_fields_after_4(self_166))), __core__unBData(__core__headList(self_211)));\n        __core__ifThenElse(\n            cond,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), self_211)\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterData_9 = (self_217) -> {\n        __cond_39 = __core__headList(__core__tailList(self_217));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_39)), 1),\n            () -> {\n                (self_169) -> {\n                    data_141 = __core__headList(__core__sndPair(__core__unConstrData(self_169)));\n                    __helios__common__assert_constr_index(data_141, 0)\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_39)), 2),\n                    () -> {\n                        (self_171) -> {\n                            data_141 = __core__headList(__core__sndPair(__core__unConstrData(self_171)));\n                            __helios__common__assert_constr_index(data_141, 0)\n                        }\n                    },\n                    () -> {\n                        (__32) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_39)\n    };\n    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__address_2, self_218) -> {\n        charterAc_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_218)), #63686172746572);\n        capoAddr = __module__CapoHelpers__CapoCtx[]__address_2(self_218);\n        __cond_40 = __core__headList(__core__tailList(self_218));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_40)), 2),\n            () -> {\n                (__lhs_0_75) -> {\n                    __helios__common__assert_constr_index(__helios__txoutputdatum__inline(self_51 = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))))), (txo_3) -> {\n                        __core__ifThenElse(\n                            __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo_3))), capoAddr),\n                            () -> {\n                                a_3 = __helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txo_3))))), charterAc_2);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    });\n                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51)))))), 0)\n                }\n            },\n            () -> {\n                (__33) -> {\n                    error()\n                }\n            }\n        )()(__cond_40)\n    };\n    __module__CapoHelpers__CapoCtx[]__address_3 = (self_221) -> {\n        __helios__txinput__address(__cond_41 = __core__headList(__core__tailList(self_221));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_41)), 1),\n            () -> {\n                (self_18) -> {\n                    __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_41)), 2),\n                    () -> {\n                        (self_18) -> {\n                            __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_18))))\n                        }\n                    },\n                    () -> {\n                        (__34) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_41))\n    };\n    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1 = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2, self_223, recIdBytes_6) -> {\n        hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(self_223, false, recIdBytes_6);\n        (__cond_43) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_43)), 1),\n                () -> {\n                    (__lhs_0_81) -> {\n                        error()\n                    }\n                },\n                () -> {\n                    (__lhs_0_80) -> {\n                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_80)))\n                    }\n                }\n            )()(__cond_43)\n        }(self_137 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n        __helios__common__find_safe(self_137, hasDD_1))\n    };\n    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3 = (self_224, __useopt__typeName, id_4) -> {\n        typeName_2 = __core__ifThenElse(\n            __useopt__typeName,\n            () -> {\n                \"vest\"\n            },\n            () -> {\n                \"\"\n            }\n        )();\n        capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_3(self_224);\n        (txin_4) -> {\n            __core__ifThenElse(\n                __core__equalsData(__helios__txinput__address(txin_4), capoAddr_1),\n                () -> {\n                    data_164 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_4))));\n                    __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_164)), 2),\n                        () -> {\n                            (__lhs_0_82) -> {\n                                x_7 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_164);\n                                __core__ifThenElse(\n                                    __core__ifThenElse(\n                                        __core__equalsString(typeName_2, \"\"),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_7), \"vest\")\n                                        }\n                                    )(),\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsByteString(id_4, #),\n                                            () -> {\n                                                true\n                                            },\n                                            () -> {\n                                                __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_7, #406964)), id_4)\n                                            }\n                                        )()\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            }\n                        },\n                        () -> {\n                            (__35) -> {\n                                false\n                            }\n                        }\n                    )()(data_164)\n                },\n                () -> {\n                    false\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3 = (self_227, recId_7) -> {\n        ac_2 = __helios__assetclass__new(__core__unBData(__core__headList(self_227)), recId_7);\n        capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_3(self_227);\n        (__cond_47) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_47)), 1),\n                () -> {\n                    (__lhs_0_86) -> {\n                        error()\n                    }\n                },\n                () -> {\n                    (__lhs_0_85) -> {\n                        __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_85)))\n                    }\n                }\n            )()(__cond_47)\n        }(self_140 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))))));\n        __helios__common__find_safe(self_140, (txout) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(__helios__value__get_safe(__core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txout))))), ac_2), 1),\n                () -> {\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txout))), capoAddr_3)\n                },\n                () -> {\n                    false\n                }\n            )()\n        }))\n    };\n    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput, self_228) -> {\n        charter_1 = __core__headList(__core__tailList(self_228));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 1),\n            () -> {\n                (__lhs_0_92) -> {\n                    self_228\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_1)), 2),\n                    () -> {\n                        (__lhs_0_91) -> {\n                            self_228\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_87) -> {\n                            mph_24 = __core__unBData(__core__headList(self_228));\n                            charterAc_3 = __helios__assetclass__new(mph_24, #63686172746572);\n                            (__cond_49) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_49)), 1),\n                                    () -> {\n                                        (__lhs_0_90) -> {\n                                            __module__CapoHelpers__CapoCtx[]__withCharterInput(self_228)\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_89) -> {\n                                            charterUtxo_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_89)));\n                                            datum_4 = __helios__common__assert_constr_index(data_141 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_2))));\n                                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                            __helios__common__assert_constr_index(data_141, 0), 0);\n                                            __core__mkCons(__core__bData(mph_24), __core__mkCons(__core__constrData(1, __core__mkCons(datum_4, __core__mkCons(charterUtxo_2, __core__mkNilData(())))), __core__mkNilData(())))\n                                        }\n                                    }\n                                )()(__cond_49)\n                            }(self_137 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                            __helios__common__find_safe(self_137, (txin_5) -> {\n                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_5))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_3);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            }))\n                        }\n                    }\n                )()\n            }\n        )()(charter_1)\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_229) -> {\n        charter_2 = __core__headList(__core__tailList(self_229));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 2),\n            () -> {\n                (__lhs_0_98) -> {\n                    self_229\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_2)), 1),\n                    () -> {\n                        (__lhs_0_97) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_93) -> {\n                            mph_25 = __core__unBData(__core__headList(self_229));\n                            charterAc_4 = __helios__assetclass__new(mph_25, #63686172746572);\n                            (charterUtxo_3) -> {\n                                datum_5 = __helios__common__assert_constr_index(data_141 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_3))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                __helios__common__assert_constr_index(data_141, 0), 0);\n                                __core__mkCons(__core__bData(mph_25), __core__mkCons(__core__constrData(2, __core__mkCons(datum_5, __core__mkCons(charterUtxo_3, __core__mkNilData(())))), __core__mkNilData(())))\n                            }((__cond_51) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_51)), 0),\n                                    () -> {\n                                        (self_21) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_95) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_51)\n                            }(self_137 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                            __helios__common__find_safe(self_137, (txin_6) -> {\n                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_6))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_4);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_2)\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_230) -> {\n        charter_3 = __core__headList(__core__tailList(self_230));\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 1),\n            () -> {\n                (__lhs_0_102) -> {\n                    self_230\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(charter_3)), 2),\n                    () -> {\n                        (__lhs_0_101) -> {\n                            error()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_99) -> {\n                            mph_26 = __core__unBData(__core__headList(self_230));\n                            (utxo_8) -> {\n                                datum_6 = __helios__common__assert_constr_index(data_141 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(utxo_8))));\n                                __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                __helios__common__assert_constr_index(data_141, 0), 0);\n                                __core__mkCons(__core__bData(mph_26), __core__mkCons(__core__constrData(1, __core__mkCons(datum_6, __core__mkCons(utxo_8, __core__mkNilData(())))), __core__mkNilData(())))\n                            }(charterAc = __helios__assetclass__new(mph_26, #63686172746572);\n                            (__cond_12) -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_12)), 0),\n                                    () -> {\n                                        (self_21) -> {\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_19) -> {\n                                            error()\n                                        }\n                                    }\n                                )()(__cond_12)\n                            }(self_137 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                            __helios__common__find_safe(self_137, (txin) -> {\n                                a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin))));\n                                __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc);\n                                __core__ifThenElse(\n                                    __core__lessThanEqualsInteger(a_3, 0),\n                                    false,\n                                    true\n                                )\n                            })))\n                        }\n                    }\n                )()\n            }\n        )()(charter_3)\n    };\n    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {\n        seedTxId = __core__headList(__core__sndPair(__core__unConstrData(seed_1)));\n        seedIdx = __core__unIData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(seed_1)))));\n        idxBytes = __core__serialiseData(__core__iData(seedIdx));\n        rawTxId = __core__sliceByteString(5, 32, __core__serialiseData(seedTxId));\n        txoInfo = __core__ifThenElse(\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(__core__lengthOfByteString(idxBytes), 9),\n                false,\n                true\n            ),\n            () -> {\n                error()\n            },\n            () -> {\n                __core__appendByteString(__core__appendByteString(rawTxId, #40), idxBytes)\n            }\n        )();\n        mhs = __helios__bytearray__show(__core__sliceByteString(0, 6, __core__blake2b_256(txoInfo)));\n        (p) -> {\n            __core__appendString(__core__appendString(p, \"-\"), mhs)\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_240, fn_26) -> {\n        recurse_91 = (recurse_90, map_29) -> {\n            __core__chooseList(map_29, () -> {\n                ()\n            }, () -> {\n                head_44 = __core__headList__safe(map_29);\n                __core__chooseUnit(fn_26(__core__unBData(__core__fstPair(head_44)), __core__unIData(__core__sndPair(head_44))), recurse_90(recurse_90, __core__tailList__safe(map_29)))\n            })()\n        };\n        recurse_91(recurse_91, self_240)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__sort = (self_249, comp_4) -> {\n        recurse_57 = (recurse_56, lst_11) -> {\n            __core__chooseList(lst_11, () -> {\n                lst_11\n            }, () -> {\n                tail_2 = recurse_56(recurse_56, __core__tailList__safe(lst_11));\n                x_3 = __core__headList__safe(lst_11);\n                recurse_55 = (recurse_54, lst_9) -> {\n                    __core__chooseList(lst_9, () -> {\n                        __core__mkCons(x_3, lst_9)\n                    }, () -> {\n                        head_4 = __core__headList__safe(lst_9);\n                        __core__ifThenElse(\n                            comp_4(__core__unBData(__core__fstPair(x_3)), __core__unIData(__core__sndPair(x_3)), __core__unBData(__core__fstPair(head_4)), __core__unIData(__core__sndPair(head_4))),\n                            () -> {\n                                __core__mkCons(x_3, lst_9)\n                            },\n                            () -> {\n                                __core__mkCons(head_4, recurse_54(recurse_54, __core__tailList__safe(lst_9)))\n                            }\n                        )()\n                    })()\n                };\n                recurse_55(recurse_55, tail_2)\n            })()\n        };\n        recurse_57(recurse_57, self_249)\n    };\n    __module__CapoMintHelpers__validateUutMinting = (mph_30, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__otherMintedValue, otherMintedValue) -> {\n        mkTokenName_1 = __core__ifThenElse(\n            __useopt__mkTokenName,\n            () -> {\n                mkTokenName\n            },\n            () -> {\n                __module__CapoMintHelpers__mkUutTnFactory(seed_2)\n            }\n        )();\n        otherMintedValue_1 = __core__ifThenElse(\n            __useopt__otherMintedValue,\n            () -> {\n                otherMintedValue\n            },\n            () -> {\n                __core__mkNilPairData(())\n            }\n        )();\n        result_3 = __core__chooseUnit(msg_1 = __core__appendString(\"-- uut purposes: \", __helios__list[__helios__string]__join(purposes));\n        (), (delegateApproval) -> {\n            valueMinted = __core__unMapData(__helios__common__enum_field_4(__helios__scriptcontext__tx));\n            tokenNames = __helios__common__map(purposes, (item_14) -> {\n                s = mkTokenName_1(__core__decodeUtf8(__core__unBData(item_14)));\n                __core__bData(__core__encodeUtf8(s))\n            });\n            expectedValue = __helios__value____add(__helios__value____add(__core__mkNilPairData(()), otherMintedValue_1), self_250 = __helios__common__map(tokenNames, (item_13) -> {\n                __core__mapData(tn_2 = __core__decodeUtf8(__core__unBData(item_13));\n                tnBytes_1 = __core__encodeUtf8(tn_2);\n                __core__chooseUnit(__core__ifThenElse(\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(__core__lengthOfByteString(tnBytes_1), 0),\n                        false,\n                        true\n                    ),\n                    () -> {\n                        ()\n                    },\n                    () -> {\n                        error()\n                    }\n                )(), __helios__value__new(__helios__assetclass__new(mph_30, tnBytes_1), 1)))\n            });\n            recurse_97 = (recurse_96, lst_25) -> {\n                __core__chooseList(lst_25, () -> {\n                    __core__mkNilPairData(())\n                }, () -> {\n                    __helios__value____add(__core__unMapData(__core__headList__safe(lst_25)), recurse_96(recurse_96, __core__tailList__safe(lst_25)))\n                })()\n            };\n            recurse_97(recurse_97, self_250));\n            __core__chooseUnit(__core__ifThenElse(\n                __core__ifThenElse(\n                    __helios__value__contains_policy(valueMinted, mph_30),\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue, mph_30), (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted, (tn_4, i_12) -> {\n                ()\n            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted, mph_30);\n            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint, (k1, _v1, k2, _v2) -> {\n                __core__lessThanByteString(k1, k2)\n            });\n            __core__chooseUnit(__core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted, (tn_3, i_11) -> {\n                ()\n            }), filteredOtherMint = __helios__common__filter(valueMinted, (pair_40) -> {\n                (b_15, __42) -> {\n                    __core__ifThenElse(\n                        __core__equalsByteString(b_15, mph_30),\n                        false,\n                        true\n                    )\n                }(__core__unBData(__core__fstPair(pair_40)), __core__unMapData(__core__sndPair(pair_40)))\n            }, __core__mkNilPairData(()));\n            __core__ifThenElse(\n                b = __helios__value__is_zero(filteredOtherMint);\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    msg_1 = __helios__value__show(__helios__common__filter(filteredOtherMint, (pair_6) -> {\n                        b = __core__equalsByteString(__core__unBData(__core__fstPair(pair_6)), #);\n                        __core__ifThenElse(\n                            b,\n                            false,\n                            true\n                        )\n                    }, __core__mkNilPairData(())));\n                    ()\n                },\n                () -> {\n                    ()\n                }\n            )()), (thisPolicyMintOK) -> {\n                otherPoliciesMintOk = __core__ifThenElse(\n                    b = __helios__value__is_zero(otherMintedValue_1);\n                    __core__ifThenElse(\n                        b,\n                        false,\n                        true\n                    ),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        remainingExpectedMint = __core__ifThenElse(\n                            __helios__value__contains_policy(expectedValue, mph_30),\n                            () -> {\n                                key_25 = __core__bData(mph_30);\n                                recurse_95 = (recurse_94, self_247) -> {\n                                    __core__chooseList(self_247, () -> {\n                                        self_247\n                                    }, () -> {\n                                        head_46 = __core__headList__safe(self_247);\n                                        tail_4 = __core__tailList__safe(self_247);\n                                        __core__ifThenElse(\n                                            __core__equalsData(key_25, __core__fstPair(head_46)),\n                                            () -> {\n                                                recurse_94(recurse_94, tail_4)\n                                            },\n                                            () -> {\n                                                __core__mkCons(head_46, recurse_94(recurse_94, tail_4))\n                                            }\n                                        )()\n                                    })()\n                                };\n                                recurse_95(recurse_95, expectedValue)\n                            },\n                            () -> {\n                                expectedValue\n                            }\n                        )();\n                        __core__ifThenElse(\n                            __helios__value__is_zero(remainingExpectedMint),\n                            () -> {\n                                true\n                            },\n                            () -> {\n                                result_3 = __core__chooseUnit(recurse_93 = (recurse_92, map_30) -> {\n                                    __core__chooseList(map_30, () -> {\n                                        ()\n                                    }, () -> {\n                                        head_45 = __core__headList__safe(map_30);\n                                        __core__chooseUnit((otherMph, expectedTokensThisPolicy) -> {\n                                            mintedThisPolicy = __helios__value__get_policy(valueMinted, otherMph);\n                                            __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy, (tokenName_3, expectedCount) -> {\n                                                __core__ifThenElse(\n                                                    (b) -> {\n                                                        __core__ifThenElse(\n                                                            b,\n                                                            false,\n                                                            true\n                                                        )\n                                                    }(__cond_61 = __helios__common__map_get(mintedThisPolicy, __core__bData(tokenName_3), (x_12) -> {\n                                                        __core__constrData(0, __core__mkCons(x_12, __core__mkNilData(())))\n                                                    }, () -> {\n                                                        __core__constrData(1, __core__mkNilData(()))\n                                                    });\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_61)), 1),\n                                                        () -> {\n                                                            (__lhs_0_125) -> {\n                                                                false\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_124) -> {\n                                                                actualCount = __core__unIData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_124))));\n                                                                __core__equalsInteger(actualCount, expectedCount)\n                                                            }\n                                                        }\n                                                    )()(__cond_61)),\n                                                    () -> {\n                                                        error()\n                                                    },\n                                                    () -> {\n                                                        ()\n                                                    }\n                                                )()\n                                            })\n                                        }(__core__unBData(__core__fstPair(head_45)), __core__unMapData(__core__sndPair(head_45))), recurse_92(recurse_92, __core__tailList__safe(map_30)))\n                                    })()\n                                };\n                                recurse_93(recurse_93, remainingExpectedMint), true);\n                                true\n                            }\n                        )()\n                    }\n                )();\n                __core__chooseUnit(__core__ifThenElse(\n                    otherPoliciesMintOk,\n                    () -> {\n                        ()\n                    },\n                    () -> {\n                        error()\n                    }\n                )(), __core__chooseUnit(__core__ifThenElse(\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(__helios__common__length(purposes), 1),\n                        false,\n                        true\n                    ),\n                    () -> {\n                        msg_1 = __core__appendString(__core__appendString(__core__appendString(\"✅ ok: minted uuts: {\", __helios__list[__helios__string]__join(purposes)), \"}\"), mkTokenName_1(\"\"));\n                        ()\n                    },\n                    () -> {\n                        msg_1 = __core__appendString(\"✅ ok: minted uut: \", d = __core__headList(tokenNames);\n                        __core__decodeUtf8(__core__unBData(d)));\n                        ()\n                    }\n                )(), otherPoliciesMintOk))\n            }(result_3 = __core__chooseUnit(__core__ifThenElse(\n                __core__equalsData(__core__mapData(actualThisPolicyMintSorted), __core__mapData(expectedValuesSorted)),\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), __core__chooseUnit((cond) -> {\n                ()\n            }(result_3 = __core__chooseUnit(__core__ifThenElse(\n                b = __helios__common__any(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))), (input_6) -> {\n                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(input_6))), seed_2)\n                });\n                __core__ifThenElse(\n                    b,\n                    false,\n                    true\n                ),\n                () -> {\n                    error()\n                },\n                () -> {\n                    ()\n                }\n            )(), true);\n            true), true));\n            true))))\n        }(__lhs_0_123 = __helios__common__assert_constr_index(refInputs_1 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n        charterAc_1 = __helios__assetclass__new(mph_30, #63686172746572);\n        hasCharter_1 = (txin_1) -> {\n            a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(txin_1))));\n            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), charterAc_1);\n            __core__ifThenElse(\n                __core__lessThanEqualsInteger(a_3, 0),\n                false,\n                true\n            )\n        };\n        (charterUtxo_1) -> {\n            __helios__common__assert_constr_index(data_141 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(charterUtxo_1))));\n            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n            __helios__common__assert_constr_index(data_141, 0), 0)\n        }(__cond_13 = __helios__common__find_safe(refInputs_1, hasCharter_1);\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_13)), 0),\n            () -> {\n                (self_21) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                }\n            },\n            () -> {\n                (__lhs_0_21) -> {\n                    (__cond_14) -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_14)), 0),\n                            () -> {\n                                (self_21) -> {\n                                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                }\n                            },\n                            () -> {\n                                (__lhs_0_22) -> {\n                                    error()\n                                }\n                            }\n                        )()(__cond_14)\n                    }(self_137 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                    __helios__common__find_safe(self_137, hasCharter_1))\n                }\n            }\n        )()(__cond_13)), 0);\n        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_123);\n        true));\n        __core__chooseUnit(__core__ifThenElse(\n            result_3,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), result_3)\n    };\n    __module__VestingData__VestingData[]__previous = (self_194) -> {\n        __cond_30 = __helios__txoutputdatum__inline((self_53) -> {\n            self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_53))));\n            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51)))))\n        }(__cond_28 = __core__headList(self_194);\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 1),\n            () -> {\n                (self_21) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_28)), 3),\n                    () -> {\n                        (self_21) -> {\n                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                        }\n                    },\n                    () -> {\n                        (__27) -> {\n                            error()\n                        }\n                    }\n                )()\n            }\n        )()(__cond_28)));\n        __core__ifThenElse(\n            __core__chooseData(__cond_30, () -> {\n                true\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            })(),\n            () -> {\n                (__lhs_0_53) -> {\n                    __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_53)))\n                }\n            },\n            () -> {\n                (__29) -> {\n                    error()\n                }\n            }\n        )()(__cond_30)\n    };\n    __module__BasicDelegate__checkOneActivity_1 = (__module__BasicDelegate__checkOneActivity, dgtionDatum, activity_9, dd, baseCctx) -> {\n        checkNonDelegatedActivities = __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 8),\n            () -> {\n                (__lhs_0_278) -> {\n                    activities_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_278))));\n                    cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx);\n                    result_3 = __helios__common__all(activities_2, (rawActivity_2) -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 6),\n                            () -> {\n                                (__lhs_0_300) -> {\n                                    error()\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 5),\n                                    () -> {\n                                        (__lhs_0_299) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 7),\n                                            () -> {\n                                                (__lhs_0_298) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 2),\n                                                    () -> {\n                                                        (__lhs_0_297) -> {\n                                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_2, dd, cctx_6)\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 3),\n                                                            () -> {\n                                                                (__lhs_0_296) -> {\n                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_2, dd, cctx_6)\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 4),\n                                                                    () -> {\n                                                                        (__lhs_0_295) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 9),\n                                                                            () -> {\n                                                                                (__lhs_0_294) -> {\n                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity, dgtionDatum, rawActivity_2, dd, cctx_6)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 1),\n                                                                                    () -> {\n                                                                                        (__lhs_0_293) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(rawActivity_2)), 0),\n                                                                                            () -> {\n                                                                                                (__lhs_0_292) -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__lhs_0_291) -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()(rawActivity_2)\n                    });\n                    __core__chooseUnit(__core__ifThenElse(\n                        result_3,\n                        () -> {\n                            ()\n                        },\n                        () -> {\n                            error()\n                        }\n                    )(), result_3)\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 1),\n                    () -> {\n                        (__lhs_0_272) -> {\n                            innerActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_272)));\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 0),\n                                () -> {\n                                    (__lhs_0_276) -> {\n                                        seed_9 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_276)));\n                                        (purpose_7) -> {\n                                            otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(dd))), __core__unBData(__core__headList(__core__tailList(__core__tailList(dd))))), -1);\n                                            (tnStr_3) -> {\n                                                cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(baseCctx);\n                                                (isUpdatingCharter) -> {\n                                                    isMintingOk = __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_9, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_7)), __core__mkNilData(())), false, (), true, otherMintedValue_2);\n                                                    __core__ifThenElse(\n                                                        isMintingOk,\n                                                        () -> {\n                                                            isUpdatingCharter\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                }(__cond_116 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5);\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_116)), 5),\n                                                    () -> {\n                                                        (__lhs_0_277) -> {\n                                                            true\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        (__77) -> {\n                                                            false\n                                                        }\n                                                    }\n                                                )()(__cond_116))\n                                            }(self_14 = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd))));\n                                            __core__ifThenElse(\n                                                __helios__string__is_valid_utf8(self_14),\n                                                () -> {\n                                                    __core__decodeUtf8__safe(self_14)\n                                                },\n                                                () -> {\n                                                    __helios__bytearray__show(self_14)\n                                                }\n                                            )())\n                                        }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_276))));\n                                        __core__decodeUtf8(__core__unBData(d)))\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(innerActivity)), 1),\n                                        () -> {\n                                            (__lhs_0_275) -> {\n                                                __core__equalsInteger((self_24, assetClass_1) -> {\n                                                    __common28 = __core__unConstrData(assetClass_1);\n                                                    __common29 = __core__sndPair(__common28);\n                                                    mph_3 = __core__headList(__common29);\n                                                    tokenName_1 = __core__headList(__core__tailList(__common29));\n                                                    outer_1 = (outer, inner, map) -> {\n                                                        __core__chooseList(map, () -> {\n                                                            error()\n                                                        }, () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_3),\n                                                                () -> {\n                                                                    inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))\n                                                                },\n                                                                () -> {\n                                                                    outer(outer, inner, __core__tailList__safe(map))\n                                                                }\n                                                            )()\n                                                        })()\n                                                    };\n                                                    outer_1(outer_1, (inner_1, map_1) -> {\n                                                        __core__chooseList(map_1, () -> {\n                                                            error()\n                                                        }, () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),\n                                                                () -> {\n                                                                    __core__unIData(__core__sndPair(__core__headList__safe(map_1)))\n                                                                },\n                                                                () -> {\n                                                                    inner_1(inner_1, __core__tailList__safe(map_1))\n                                                                }\n                                                            )()\n                                                        })()\n                                                    }, self_24)\n                                                }(__core__unMapData(__helios__common__enum_field_4(__helios__scriptcontext__tx)), __helios__assetclass__new(__core__unBData(__core__headList(__core__tailList(dd))), __core__unBData(__core__headList(__core__tailList(__core__tailList(dd)))))), -1)\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_273) -> {\n                                                error()\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(innerActivity)\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 0),\n                            () -> {\n                                (__lhs_0_173) -> {\n                                    dCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_173)));\n                                    cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__withCharterInput_1(mph_28 = __core__unBData(__core__headList(__core__tailList(dd)));\n                                    __core__mkCons(__core__bData(mph_28), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(())))));\n                                    __common18 = __module__CapoHelpers__CapoCtx[]__getCharterData_9(cctx_4);\n                                    __core__chooseUnit(__cond_113 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4);\n                                    __common27 = __core__fstPair(__core__unConstrData(__cond_113));\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__common27, 0),\n                                        () -> {\n                                            (__lhs_0_271) -> {\n                                                cCLA = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_271)));\n                                                __core__ifThenElse(\n                                                    __core__equalsData(cCLA, dCLA),\n                                                    () -> {\n                                                        ()\n                                                    },\n                                                    () -> {\n                                                        error()\n                                                    }\n                                                )()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__common27, 5),\n                                                () -> {\n                                                    (__lhs_0_269) -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                                            () -> {\n                                                                (__lhs_0_270) -> {\n                                                                    ()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__76) -> {\n                                                                    error()\n                                                                }\n                                                            }\n                                                        )()(dCLA)\n                                                    }\n                                                },\n                                                () -> {\n                                                    (__75) -> {\n                                                        error()\n                                                    }\n                                                }\n                                            )()\n                                        }\n                                    )()(__cond_113), neededRole = __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 4),\n                                        () -> {\n                                            (__lhs_0_113) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                () -> {\n                                                    (__lhs_0_112) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                        () -> {\n                                                            (__lhs_0_111) -> {\n                                                                __core__constrData(1, __core__mkNilData(()))\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                                () -> {\n                                                                    (__lhs_0_110) -> {\n                                                                        __core__constrData(0, __core__mkNilData(()))\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                                        () -> {\n                                                                            (__lhs_0_109) -> {\n                                                                                __core__constrData(1, __core__mkNilData(()))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                                () -> {\n                                                                                    (__lhs_0_108) -> {\n                                                                                        __core__constrData(6, __core__mkNilData(()))\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    (__lhs_0_107) -> {\n                                                                                        error()\n                                                                                    }\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()(dCLA);\n                                    myCurrentRole = __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 7),\n                                        () -> {\n                                            (__lhs_0_177) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 1),\n                                                () -> {\n                                                    (__lhs_0_176) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 0),\n                                                        () -> {\n                                                            (__lhs_0_175) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(neededRole)), 6),\n                                                                () -> {\n                                                                    __common16 = __core__headList(cctx_4);\n                                                                    __common17 = __core__unBData(__common16);\n                                                                    (__lhs_0_174) -> {\n                                                                        __core__ifThenElse(\n                                                                            input_4 = __helios__scriptcontext__get_current_input();\n                                                                            acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__common18), __common17);\n                                                                            a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_4))));\n                                                                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), acMintDgt);\n                                                                            __core__ifThenElse(\n                                                                                __core__lessThanEqualsInteger(a_3, 0),\n                                                                                false,\n                                                                                true\n                                                                            ),\n                                                                            () -> {\n                                                                                __core__constrData(0, __core__mkNilData(()))\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    input_5 = __helios__scriptcontext__get_current_input();\n                                                                                    acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__common18)))), __common17);\n                                                                                    a_3 = __helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(input_5))));\n                                                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), acSpendDgt);\n                                                                                    __core__ifThenElse(\n                                                                                        __core__lessThanEqualsInteger(a_3, 0),\n                                                                                        false,\n                                                                                        true\n                                                                                    ),\n                                                                                    () -> {\n                                                                                        __core__constrData(1, __core__mkNilData(()))\n                                                                                    },\n                                                                                    () -> {\n                                                                                        error()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__45) -> {\n                                                                        error()\n                                                                    }\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()(neededRole);\n                                    __core__ifThenElse(\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 0),\n                                            () -> {\n                                                (__lhs_0_265) -> {\n                                                    seed_8 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_265)));\n                                                    (purpose_6) -> {\n                                                        mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                            () -> {\n                                                                (__lhs_0_266) -> {\n                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                        __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_8, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_6)), __core__mkNilData(())), true, mkTn_1, false, ()),\n                                                                        () -> {\n                                                                            ()\n                                                                        },\n                                                                        () -> {\n                                                                            ()\n                                                                        }\n                                                                    )(), (__cond_112) -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_112)), 1),\n                                                                            () -> {\n                                                                                (__lhs_0_268) -> {\n                                                                                    error()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__lhs_0_267) -> {\n                                                                                    dgtLink_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_267))));\n                                                                                    __core__chooseUnit(cond = __core__equalsString(d = __core__headList(dgtLink_3);\n                                                                                    __core__decodeUtf8(__core__unBData(d)), mkTn_1(purpose_6));\n                                                                                    __core__ifThenElse(\n                                                                                        cond,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )(), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3, __core__unBData(__core__headList(__core__tailList(dd)))))\n                                                                                }\n                                                                            }\n                                                                        )()(__cond_112)\n                                                                    }((self_213) -> {\n                                                                        __helios__common__map_get(self_213, __core__bData(__core__encodeUtf8(purpose_6)), (x_6) -> {\n                                                                            __core__constrData(0, __core__mkCons(x_6, __core__mkNilData(())))\n                                                                        }, () -> {\n                                                                            __core__constrData(1, __core__mkNilData(()))\n                                                                        })\n                                                                    }(self_163 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_3, cctx_4);\n                                                                    __core__unMapData(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_163)))))))))\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__74) -> {\n                                                                    error()\n                                                                }\n                                                            }\n                                                        )()(myCurrentRole)\n                                                    }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_265))));\n                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 1),\n                                                    () -> {\n                                                        (__lhs_0_213) -> {\n                                                            charterData_4 = __helios__common__assert_constr_index(__common18, 0);\n                                                            __common0 = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))));\n                                                            nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_3, cctx_4);\n                                                            nextChangeList = __core__unListData(__core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData_2)))));\n                                                            newChange = __core__headList(nextChangeList);\n                                                            __lhs_0_214 = __helios__common__assert_constr_index(newChange, 0);\n                                                            __lhs_0_0_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_214))));\n                                                            __common7 = __core__tailList(__lhs_0_0_2);\n                                                            action = __core__headList(__lhs_0_0_2);\n                                                            __common21 = __core__unConstrData(action);\n                                                            __common23 = __core__equalsInteger(__core__fstPair(__common21), 1);\n                                                            role_2 = __core__headList(__common7);\n                                                            __common4 = __core__equalsInteger(__core__fstPair(__core__unConstrData(role_2)), 4);\n                                                            OdgtLink = __core__headList(__core__tailList(__common7));\n                                                            newDgtRoleName = __core__ifThenElse(\n                                                                __common4,\n                                                                () -> {\n                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name\n                                                                },\n                                                                () -> {\n                                                                    (__58) -> {\n                                                                        error()\n                                                                    }\n                                                                }\n                                                            )()(role_2);\n                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                __common23,\n                                                                () -> {\n                                                                    (__lhs_0_263) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__72) -> {\n                                                                        ()\n                                                                    }\n                                                                }\n                                                            )()(action), __core__chooseUnit((cond) -> {\n                                                                __core__ifThenElse(\n                                                                    cond,\n                                                                    () -> {\n                                                                        ()\n                                                                    },\n                                                                    () -> {\n                                                                        error()\n                                                                    }\n                                                                )()\n                                                            }(self_288 = __core__tailList(nextChangeList);\n                                                            __core__equalsData(__core__listData(self_288), __core__listData(__common0))), __core__ifThenElse(\n                                                                __common23,\n                                                                () -> {\n                                                                    (__lhs_0_262) -> {\n                                                                        error()\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                        () -> {\n                                                                            (__lhs_0_261) -> {\n                                                                                __common24 = __core__sndPair(__core__unConstrData(__lhs_0_261));\n                                                                                __common25 = __core__tailList(__common24);\n                                                                                seed_7 = __core__headList(__common24);\n                                                                                (purpose_5) -> {\n                                                                                    (idPrefix_9) -> {\n                                                                                        (callback_20) -> {\n                                                                                            callback_20(seed_7, purpose_5, idPrefix_9)\n                                                                                        }\n                                                                                    }(d = __core__headList(__core__tailList(__common25));\n                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                }(d = __core__headList(__common25);\n                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            (__lhs_0_260) -> {\n                                                                                seed_6 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_260)));\n                                                                                (purpose_4) -> {\n                                                                                    (idPrefix_8) -> {\n                                                                                        (callback_19) -> {\n                                                                                            callback_19(seed_6, purpose_4, idPrefix_8)\n                                                                                        }\n                                                                                    }(d = __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_260)))));\n                                                                                    __core__decodeUtf8(__core__unBData(d)))\n                                                                                }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_260))));\n                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                            }\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(action)((seed_5, purpose_3, pendingActionIdPrefix) -> {\n                                                                possibleMintDgtVerifications = __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                    () -> {\n                                                                        (__lhs_0_232) -> {\n                                                                            true\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                            () -> {\n                                                                                (__lhs_0_216) -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 1),\n                                                                                        () -> {\n                                                                                            (__lhs_0_224) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__60) -> {\n                                                                                                mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);\n                                                                                                mintedDgTkn = __module__CapoMintHelpers__validateUutMinting(__core__unBData(__core__headList(__core__tailList(dd))), seed_5, __core__mkCons(__core__bData(__core__encodeUtf8(purpose_3)), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, ());\n                                                                                                dgtLink_2 = __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(OdgtLink)), 1),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_218) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (self_212) -> {\n                                                                                                            __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_212))))\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()(OdgtLink);\n                                                                                                (__common1) -> {\n                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                        __core__equalsString(__common1, mkTokenName_2(purpose_3)),\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), (delegateTakesOwnership) -> {\n                                                                                                        possibleExtraReplacementCheck = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_219) -> {\n                                                                                                                    __core__chooseUnit(__cond_94 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_94)), 0),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_221) -> {\n                                                                                                                                dde = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_221)));\n                                                                                                                                entryType_1 = __helios__common__mStruct_field(dde, #747065);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_1)), 1),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_223) -> {\n                                                                                                                                            (idPrefix_7) -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __core__equalsString(idPrefix_7, pendingActionIdPrefix),\n                                                                                                                                                    () -> {\n                                                                                                                                                        ()\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        error()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }(d = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_223))));\n                                                                                                                                            __core__decodeUtf8(__core__unBData(d)))\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__62) -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(entryType_1)\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_220) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(__cond_94), true)\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                (__61) -> {\n                                                                                                                    true\n                                                                                                                }\n                                                                                                            }\n                                                                                                        )()(action);\n                                                                                                        __core__ifThenElse(\n                                                                                                            __core__ifThenElse(\n                                                                                                                mintedDgTkn,\n                                                                                                                () -> {\n                                                                                                                    true\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    false\n                                                                                                                }\n                                                                                                            )(),\n                                                                                                            () -> {\n                                                                                                                possibleExtraReplacementCheck\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                false\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }(assertion_2 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2, __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                        assertion_2,\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    )(), true)))\n                                                                                                }(d = __core__headList(dgtLink_2);\n                                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                                            }\n                                                                                        }\n                                                                                    )()(action)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__59) -> {\n                                                                                    error()\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()(myCurrentRole);\n                                                                otherPossibleVerifications = __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 1),\n                                                                    () -> {\n                                                                        (__lhs_0_259) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(myCurrentRole)), 0),\n                                                                            () -> {\n                                                                                (__lhs_0_233) -> {\n                                                                                    isNotADuplicate = __helios__common__all(__common0, (pdChange_2) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(pdChange_2)), 0),\n                                                                                            () -> {\n                                                                                                (__lhs_0_234) -> {\n                                                                                                    __lhs_0_0_3 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_234))));\n                                                                                                    pendingRole = __core__headList(__core__tailList(__lhs_0_0_3));\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(pendingRole)), 4),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_235) -> {\n                                                                                                                changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_235);\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsString(changingDgtName, newDgtRoleName),\n                                                                                                                    false,\n                                                                                                                    true\n                                                                                                                )\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__66) -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()(pendingRole)\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__65) -> {\n                                                                                                    error()\n                                                                                                }\n                                                                                            }\n                                                                                        )()(pdChange_2)\n                                                                                    });\n                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                        isNotADuplicate,\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    )(), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_4)))), newDgtRoleName);\n                                                                                    possibleReplacementIsCorrect = __core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 0),\n                                                                                        () -> {\n                                                                                            (__lhs_0_257) -> {\n                                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 0),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_258) -> {\n                                                                                                            error()\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__71) -> {\n                                                                                                            ()\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()(existingRoleEntryMaybe), true)\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(action)), 2),\n                                                                                                () -> {\n                                                                                                    __common19 = __core__unConstrData(role_2);\n                                                                                                    __common20 = __core__fstPair(__common19);\n                                                                                                    __common26 = __core__equalsInteger(__common20, 2);\n                                                                                                    (__lhs_0_238) -> {\n                                                                                                        replacesDgt = __core__headList(__core__tailList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_238))))));\n                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                            __common26,\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_256) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__common20, 3),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_255) -> {\n                                                                                                                            error()\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__common20, 7),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_254) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__70) -> {\n                                                                                                                                    ()\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(role_2), existingDgtLink_1 = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(existingRoleEntryMaybe)), 1),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_241) -> {\n                                                                                                                    error()\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_239) -> {\n                                                                                                                    __lhs_0_0_4 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_239)));\n                                                                                                                    entryType_2 = __helios__common__mStruct_field(__lhs_0_0_4, #747065);\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType_2)), 1),\n                                                                                                                        () -> {\n                                                                                                                            (self_155) -> {\n                                                                                                                                __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(self_155))))\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__68) -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(entryType_2)\n                                                                                                                }\n                                                                                                            }\n                                                                                                        )()(existingRoleEntryMaybe);\n                                                                                                        existingDgTkn = __core__ifThenElse(\n                                                                                                            __core__equalsInteger(__common20, 0),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_249) -> {\n                                                                                                                    some_5 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4), __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                                    __core__constrData(0, __core__mkCons(some_5, __core__mkNilData(())))\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __core__equalsInteger(__common20, 1),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_248) -> {\n                                                                                                                            some_5 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__core__unListData(__core__headList(__core__sndPair(__core__unConstrData(charterData_4)))), __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                                            __core__constrData(0, __core__mkCons(some_5, __core__mkNilData(())))\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __common4,\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_247) -> {\n                                                                                                                                    some_5 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1, __core__unBData(__core__headList(__core__tailList(dd))));\n                                                                                                                                    __core__constrData(0, __core__mkCons(some_5, __core__mkNilData(())))\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsInteger(__common20, 5),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_246) -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __core__equalsInteger(__common20, 6),\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_245) -> {\n                                                                                                                                                    error()\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __common26,\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_244) -> {\n                                                                                                                                                            error()\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __core__equalsInteger(__common20, 3),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_243) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_242) -> {\n                                                                                                                                                                    error()\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }\n                                                                                                                                        )()\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(role_2);\n                                                                                                        __core__chooseUnit(cond = __core__equalsData(replacesDgt, __core__headList(__core__sndPair(__core__unConstrData(existingDgTkn))));\n                                                                                                        __core__ifThenElse(\n                                                                                                            cond,\n                                                                                                            () -> {\n                                                                                                                ()\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                error()\n                                                                                                            }\n                                                                                                        )(), true))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__lhs_0_236) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(action);\n                                                                                    __core__ifThenElse(\n                                                                                        isNotADuplicate,\n                                                                                        () -> {\n                                                                                            possibleReplacementIsCorrect\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )())\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__64) -> {\n                                                                                    error()\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()(myCurrentRole);\n                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                    __core__equalsInteger(__helios__common__length(__common0), 0),\n                                                                    () -> {\n                                                                        ()\n                                                                    },\n                                                                    () -> {\n                                                                        error()\n                                                                    }\n                                                                )(), __core__ifThenElse(\n                                                                    possibleMintDgtVerifications,\n                                                                    () -> {\n                                                                        otherPossibleVerifications\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )())\n                                                            })))\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 2),\n                                                            () -> {\n                                                                (__lhs_0_212) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_189) -> {\n                                                                            error()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 6),\n                                                                            () -> {\n                                                                                (__lhs_0_180) -> {\n                                                                                    manifestActivity = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_180)));\n                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 0),\n                                                                                        () -> {\n                                                                                            (__lhs_0_188) -> {\n                                                                                                error()\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 1),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_187) -> {\n                                                                                                        error()\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 2),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_182) -> {\n                                                                                                                (key_31) -> {\n                                                                                                                    tokenName_4 = __core__unBData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__lhs_0_182)))));\n                                                                                                                    charterData_3 = __helios__common__assert_constr_index(__common18, 0);\n                                                                                                                    nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__address_3, cctx_4);\n                                                                                                                    __common3 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(nextCharterData))));\n                                                                                                                    (refInput) -> {\n                                                                                                                        __core__chooseUnit(__core__ifThenElse(\n                                                                                                                            __core__equalsData(refInput, refInput),\n                                                                                                                            () -> {\n                                                                                                                                ()\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                error()\n                                                                                                                            }\n                                                                                                                        )(), __core__chooseUnit(__cond_72 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__common3, key_31);\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_72)), 1),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_186) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_183) -> {\n                                                                                                                                    __lhs_0_0 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_183)));\n                                                                                                                                    entryType = __helios__common__mStruct_field(__lhs_0_0, #747065);\n                                                                                                                                    tn_5 = __core__unBData(__helios__common__mStruct_field(__lhs_0_0, #746e));\n                                                                                                                                    mph_31 = __helios__common__mStruct_field(__lhs_0_0, #6d7068);\n                                                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                        __core__equalsByteString(tn_5, tokenName_4),\n                                                                                                                                        () -> {\n                                                                                                                                            ()\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            error()\n                                                                                                                                        }\n                                                                                                                                    )(), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(mph_31)), 0),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_185) -> {\n                                                                                                                                                error()\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__48) -> {\n                                                                                                                                                ()\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(mph_31), __core__ifThenElse(\n                                                                                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(entryType)), 0),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_184) -> {\n                                                                                                                                                ()\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__47) -> {\n                                                                                                                                                error()\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(entryType)))\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()(__cond_72), (cond) -> {\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                cond,\n                                                                                                                                () -> {\n                                                                                                                                    ()\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            )()\n                                                                                                                        }(self_303 = __core__unMapData(__core__headList(__core__tailList(__helios__common__enum_fields_after_4(charterData_3))));\n                                                                                                                        __core__equalsData(__core__mapData(self_303), __core__mapData(key_30 = __core__bData(__core__encodeUtf8(key_31));\n                                                                                                                        recurse_103 = (recurse_102, self_302) -> {\n                                                                                                                            __core__chooseList(self_302, () -> {\n                                                                                                                                self_302\n                                                                                                                            }, () -> {\n                                                                                                                                head_49 = __core__headList__safe(self_302);\n                                                                                                                                tail_6 = __core__tailList__safe(self_302);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __core__equalsData(key_30, __core__fstPair(head_49)),\n                                                                                                                                    () -> {\n                                                                                                                                        recurse_102(recurse_102, tail_6)\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        __core__mkCons(head_49, recurse_102(recurse_102, tail_6))\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            })()\n                                                                                                                        };\n                                                                                                                        recurse_103(recurse_103, __common3))))))\n                                                                                                                    }(hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3(cctx_4, false, tokenName_4);\n                                                                                                                    (__cond_42) -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_42)), 1),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_79) -> {\n                                                                                                                                    error()\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (self_21) -> {\n                                                                                                                                    __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()(__cond_42)\n                                                                                                                    }(self_137 = __core__unListData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx)))));\n                                                                                                                    __helios__common__find_safe(self_137, hasDD)))\n                                                                                                                }(d = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_182)));\n                                                                                                                __core__decodeUtf8(__core__unBData(d)))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(manifestActivity)), 3),\n                                                                                                                () -> {\n                                                                                                                    (__lhs_0_181) -> {\n                                                                                                                        error()\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    (__46) -> {\n                                                                                                                        ()\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(manifestActivity), true)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(dCLA)), 5),\n                                                                                    () -> {\n                                                                                        (__lhs_0_179) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__lhs_0_178) -> {\n                                                                                            error()\n                                                                                        }\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()(dCLA),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )())\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 5),\n                                    () -> {\n                                        (__lhs_0_172) -> {\n                                            error()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 6),\n                                            () -> {\n                                                (__lhs_0_171) -> {\n                                                    error()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 7),\n                                                    () -> {\n                                                        (__lhs_0_169) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 2),\n                                                            () -> {\n                                                                (__lhs_0_168) -> {\n                                                                    true\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 3),\n                                                                    () -> {\n                                                                        (__lhs_0_167) -> {\n                                                                            true\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 4),\n                                                                            () -> {\n                                                                                (__lhs_0_166) -> {\n                                                                                    true\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__lhs_0_165) -> {\n                                                                                    true\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()\n                    }\n                )()\n            }\n        )()(activity_9);\n        __core__chooseUnit(__core__ifThenElse(\n            checkNonDelegatedActivities,\n            () -> {\n                ()\n            },\n            () -> {\n                error()\n            }\n        )(), (result_3) -> {\n            __core__chooseUnit(__core__ifThenElse(\n                result_3,\n                () -> {\n                    ()\n                },\n                () -> {\n                    error()\n                }\n            )(), result_3)\n        }(cctx = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1, baseCctx);\n        __core__ifThenElse(\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 1),\n                () -> {\n                    (__lhs_0_162) -> {\n                        true\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 0),\n                        () -> {\n                            (__lhs_0_161) -> {\n                                error()\n                            }\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 3),\n                                () -> {\n                                    __common2 = __core__headList(__core__tailList(__core__tailList(__helios__common__enum_fields_after_4(__helios__scriptcontext__tx))));\n                                    __common30 = __core__unConstrData(__common2);\n                                    __common31 = __core__sndPair(__common30);\n                                    (__lhs_0_156) -> {\n                                        ma_2 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_156)));\n                                        seed_3 = __core__headList(__core__sndPair(__core__unConstrData(ma_2)));\n                                        mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);\n                                        mintingOk = __module__CapoMintHelpers__validateUutMinting(self_146 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(dgtionDatum))));\n                                        __core__unBData(__core__headList(__core__tailList(self_146))), seed_3, __core__mkCons(__core__bData(#76657374), __core__mkNilData(())), true, mkTn, false, ());\n                                        __core__chooseUnit((cond) -> {\n                                            ()\n                                        }(self_237 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx);\n                                        true), (newRecData) -> {\n                                            __lhs_0_158 = __module__CapoHelpers__DgDataDetails[]__output(newRecData);\n                                            rec = __module__CapoHelpers__DgDataDetails[]__outputData(newRecData);\n                                            __core__chooseUnit(cond = __core__lessThanEqualsInteger(__core__subtractInteger(__core__unIData((self_21) -> {\n                                                __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                            }(self_21 = __core__headList(__core__tailList(__common31));\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_21))))), __core__unIData((self_21) -> {\n                                                __core__headList(__core__sndPair(__core__unConstrData(self_21)))\n                                            }(self_21 = __core__headList(__common31);\n                                            __core__headList(__core__sndPair(__core__unConstrData(self_21)))))), 3600000);\n                                            __core__ifThenElse(\n                                                cond,\n                                                () -> {\n                                                    ()\n                                                },\n                                                () -> {\n                                                    error()\n                                                }\n                                            )(), ownerToken = __core__unBData(__helios__common__mStruct_field(rec, #6f6e72546b6e));\n                                            ownerTokenAc = __helios__assetclass__new(self_146 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(dgtionDatum))));\n                                            __core__unBData(__core__headList(__core__tailList(self_146))), ownerToken);\n                                            __core__ifThenElse(\n                                                __core__ifThenElse(\n                                                    __core__ifThenElse(\n                                                        __core__ifThenElse(\n                                                            __core__ifThenElse(\n                                                                (__cond_66) -> {\n                                                                    __core__ifThenElse(\n                                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_66)), 1),\n                                                                        () -> {\n                                                                            (__lhs_0_160) -> {\n                                                                                error()\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            (__lhs_0_159) -> {\n                                                                                true\n                                                                            }\n                                                                        }\n                                                                    )()(__cond_66)\n                                                                }(self_137 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(__helios__scriptcontext__tx))));\n                                                                __helios__common__find_safe(self_137, (i_13) -> {\n                                                                    __core__equalsInteger(__helios__value__get_safe(self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(i_13))));\n                                                                    __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))), ownerTokenAc), 1)\n                                                                })),\n                                                                () -> {\n                                                                    true\n                                                                },\n                                                                () -> {\n                                                                    false\n                                                                }\n                                                            )(),\n                                                            () -> {\n                                                                __core__chooseUnit(cond = __core__equalsData(__helios__common__mStruct_field(rec, #7374617465), __core__constrData(0, __core__mkNilData(())));\n                                                                __core__ifThenElse(\n                                                                    cond,\n                                                                    () -> {\n                                                                        ()\n                                                                    },\n                                                                    () -> {\n                                                                        error()\n                                                                    }\n                                                                )(), __cond_62 = __helios__common__mStruct_field(rec, #64746c73);\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_62)), 0),\n                                                                    () -> {\n                                                                        (__lhs_0_128) -> {\n                                                                            true\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(__cond_62)), 2),\n                                                                            () -> {\n                                                                                (__lhs_0_127) -> {\n                                                                                    true\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__lhs_0_126) -> {\n                                                                                    vestingProgress = __core__unListData(__helios__common__enum_field_4(__lhs_0_126));\n                                                                                    __core__ifThenElse(\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__unIData(__core__headList(vestingProgress)), 0),\n                                                                                            () -> {\n                                                                                                __helios__value__is_zero(__core__unMapData(__core__headList(__core__tailList(vestingProgress))))\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )(),\n                                                                                        () -> {\n                                                                                            __core__equalsInteger(__core__unIData(__core__headList(__core__tailList(__core__tailList(vestingProgress)))), 0)\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()(__cond_62))\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )(),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )(),\n                                                    () -> {\n                                                        true\n                                                    },\n                                                    () -> {\n                                                        false\n                                                    }\n                                                )(),\n                                                () -> {\n                                                    mintingOk\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )())\n                                        }(recIdBytes_1 = __core__encodeUtf8(mkTn(\"vest\"));\n                                        output_3 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3(cctx, recIdBytes_1);\n                                        recIdAssetClass = __helios__assetclass__new(__core__unBData(__core__headList(cctx)), recIdBytes_1);\n                                        minted = __helios__value__get_safe(__core__unMapData(__helios__common__enum_field_4(__helios__scriptcontext__tx)), recIdAssetClass);\n                                        __core__chooseUnit(__core__ifThenElse(\n                                            __core__equalsInteger(minted, 1),\n                                            () -> {\n                                                ()\n                                            },\n                                            () -> {\n                                                error()\n                                            }\n                                        )(), mph_22 = __core__unBData(__core__headList(cctx));\n                                        __module__CapoHelpers__DgDataDetails[]____new(__core__constrData(2, __core__mkCons(output_3, __core__mkNilData(()))), recIdBytes_1, mph_22))))\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 2),\n                                        () -> {\n                                            (__lhs_0_131) -> {\n                                                x_13 = __core__headList(__core__sndPair(__core__unConstrData(__lhs_0_131)));\n                                                __core__chooseUnit((cond) -> {\n                                                    ()\n                                                }(self_237 = __module__CapoHelpers__CapoCtx[]__withCharterRef(cctx);\n                                                true), __core__ifThenElse(\n                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(x_13)), 0),\n                                                    () -> {\n                                                        __common14 = __core__unConstrData(__helios__scriptcontext__tx);\n                                                        __common15 = __core__sndPair(__common14);\n                                                        (__lhs_0_153) -> {\n                                                            recId_15 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_153))));\n                                                            vestingDD_7 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3, cctx, recId_15);\n                                                            __lhs_0_154 = __module__VestingData__VestingData[]__previous(vestingDD_7);\n                                                            __lhs_0_155 = __module__CapoHelpers__DgDataDetails[]__outputData(vestingDD_7);\n                                                            hasRecInput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3(cctx, true, recId_15);\n                                                            (hasRecOutput) -> {\n                                                                __core__chooseUnit((self_283) -> {\n                                                                    recurse_99 = (recurse_98, lst_26) -> {\n                                                                        __core__chooseList(lst_26, () -> {\n                                                                            ()\n                                                                        }, () -> {\n                                                                            __core__chooseUnit(inputData_1 = __helios__txoutputdatum__inline(self_51 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(__core__headList__safe(lst_26)))));\n                                                                            __core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(self_51))))));\n                                                                            __core__chooseUnit(cond = __core__equalsData(__helios__common__mStruct_field(inputData_1, #7374617465), __core__constrData(0, __core__mkNilData(())));\n                                                                            __core__ifThenElse(\n                                                                                cond,\n                                                                                () -> {\n                                                                                    ()\n                                                                                },\n                                                                                () -> {\n                                                                                    error()\n                                                                                }\n                                                                            )(), updatedUtxo = __helios__list[__helios__txoutput]__find(__core__unListData(__core__headList(__core__tailList(__core__tailList(__common15)))), hasRecOutput);\n                                                                            updatedData = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(updatedUtxo))))));\n                                                                            ()), recurse_98(recurse_98, __core__tailList__safe(lst_26)))\n                                                                        })()\n                                                                    };\n                                                                    recurse_99(recurse_99, self_283)\n                                                                }(self_57 = __core__unListData(__core__headList(__common15));\n                                                                __helios__common__filter(self_57, hasRecInput, __core__mkNilData(()))), true)\n                                                            }(capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_3(cctx);\n                                                            (txo_4) -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsData(__core__headList(__core__sndPair(__core__unConstrData(txo_4))), capoAddr_2),\n                                                                    () -> {\n                                                                        data_165 = __helios__txoutputdatum__inline(__core__headList(__core__tailList(__core__tailList(__core__sndPair(__core__unConstrData(txo_4))))));\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_165)), 2),\n                                                                            () -> {\n                                                                                (__lhs_0_83) -> {\n                                                                                    x_8 = __module__StellarHeliosHelpers__fromCip68Wrapper(data_165);\n                                                                                    __core__ifThenElse(\n                                                                                        __core__equalsString(__module__StellarHeliosHelpers__AnyData[]__type(x_8), \"vest\"),\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __core__equalsByteString(recId_15, #),\n                                                                                                () -> {\n                                                                                                    true\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__equalsByteString(__core__unBData(__helios__common__mStruct_field(x_8, #406964)), recId_15)\n                                                                                                }\n                                                                                            )()\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__36) -> {\n                                                                                    false\n                                                                                }\n                                                                            }\n                                                                        )()(data_165)\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(x_13)), 1),\n                                                            () -> {\n                                                                (__lhs_0_150) -> {\n                                                                    recId_14 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_150))));\n                                                                    vestingDD_6 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3, cctx, recId_14);\n                                                                    __lhs_0_151 = __module__VestingData__VestingData[]__previous(vestingDD_6);\n                                                                    __lhs_0_152 = __module__CapoHelpers__DgDataDetails[]__outputData(vestingDD_6);\n                                                                    false\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(x_13)), 2),\n                                                                    () -> {\n                                                                        (__lhs_0_147) -> {\n                                                                            recId_13 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_147))));\n                                                                            vestingDD_5 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3, cctx, recId_13);\n                                                                            __lhs_0_148 = __module__VestingData__VestingData[]__previous(vestingDD_5);\n                                                                            __lhs_0_149 = __module__CapoHelpers__DgDataDetails[]__outputData(vestingDD_5);\n                                                                            false\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(x_13)), 3),\n                                                                            () -> {\n                                                                                (__lhs_0_144) -> {\n                                                                                    recId_12 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_144))));\n                                                                                    vestingDD_4 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3, cctx, recId_12);\n                                                                                    __lhs_0_145 = __module__VestingData__VestingData[]__previous(vestingDD_4);\n                                                                                    __lhs_0_146 = __module__CapoHelpers__DgDataDetails[]__outputData(vestingDD_4);\n                                                                                    false\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(x_13)), 4),\n                                                                                    () -> {\n                                                                                        (__lhs_0_141) -> {\n                                                                                            recId_11 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_141))));\n                                                                                            vestingDD_3 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3, cctx, recId_11);\n                                                                                            __lhs_0_142 = __module__VestingData__VestingData[]__previous(vestingDD_3);\n                                                                                            __lhs_0_143 = __module__CapoHelpers__DgDataDetails[]__outputData(vestingDD_3);\n                                                                                            false\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __core__equalsInteger(__core__fstPair(__core__unConstrData(x_13)), 5),\n                                                                                            () -> {\n                                                                                                (__lhs_0_138) -> {\n                                                                                                    recId_10 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_138))));\n                                                                                                    vestingDD_2 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3, cctx, recId_10);\n                                                                                                    __lhs_0_139 = __module__VestingData__VestingData[]__previous(vestingDD_2);\n                                                                                                    __lhs_0_140 = __module__CapoHelpers__DgDataDetails[]__outputData(vestingDD_2);\n                                                                                                    false\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __core__equalsInteger(__core__fstPair(__core__unConstrData(x_13)), 6),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_135) -> {\n                                                                                                            recId_9 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_135))));\n                                                                                                            vestingDD_1 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3, cctx, recId_9);\n                                                                                                            __lhs_0_136 = __module__VestingData__VestingData[]__previous(vestingDD_1);\n                                                                                                            __lhs_0_137 = __module__CapoHelpers__DgDataDetails[]__outputData(vestingDD_1);\n                                                                                                            false\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_132) -> {\n                                                                                                            recId_8 = __core__unBData(__core__headList(__core__sndPair(__core__unConstrData(__lhs_0_132))));\n                                                                                                            vestingDD = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3, cctx, recId_8);\n                                                                                                            __lhs_0_133 = __module__VestingData__VestingData[]__previous(vestingDD);\n                                                                                                            __lhs_0_134 = __module__CapoHelpers__DgDataDetails[]__outputData(vestingDD);\n                                                                                                            false\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(x_13))\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 4),\n                                                () -> {\n                                                    (__lhs_0_130) -> {\n                                                        error()\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __core__equalsInteger(__core__fstPair(__core__unConstrData(activity_9)), 9),\n                                                        () -> {\n                                                            (__lhs_0_129) -> {\n                                                                error()\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__43) -> {\n                                                                false\n                                                            }\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()(activity_9),\n            () -> {\n                true\n            },\n            () -> {\n                __core__equalsByteString(__core__serialiseData(__helios__scriptcontext__tx), __core__serialiseData(dgtionDatum))\n            }\n        )()))\n    };\n    __core__ifThenElse(\n        __core__ifThenElse(\n            __core__equalsInteger(__common6, 2),\n            () -> {\n                (__lhs_0_303) -> {\n                    error()\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(__common6, 1),\n                    () -> {\n                        (isD) -> {\n                            dd_2 = __core__unListData(__core__headList(__core__sndPair(__core__unConstrData(isD))));\n                            __core__chooseUnit((cond) -> {\n                                __core__ifThenElse(\n                                    cond,\n                                    () -> {\n                                        ()\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));\n                            __core__ifThenElse(\n                                __core__equalsByteString(self, #01),\n                                false,\n                                true\n                            )), __core__chooseUnit((cond) -> {\n                                __core__ifThenElse(\n                                    cond,\n                                    () -> {\n                                        ()\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));\n                            __core__ifThenElse(\n                                __core__equalsByteString(self, #67656e6572616c),\n                                false,\n                                true\n                            )), __core__chooseUnit((cond) -> {\n                                __core__ifThenElse(\n                                    cond,\n                                    () -> {\n                                        ()\n                                    },\n                                    () -> {\n                                        error()\n                                    }\n                                )()\n                            }(self = __core__unBData(__core__headList(__core__tailList(__core__tailList(dd_2))));\n                            __core__ifThenElse(\n                                __core__equalsByteString(self, #56657374696e67506f6c696379),\n                                false,\n                                true\n                            )), __core__chooseUnit(msg_1 = __helios__value__show(self_20 = __helios__scriptcontext__get_current_input();\n                            self_19 = __core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_20))));\n                            __core__unMapData(__core__headList(__core__tailList(__core__sndPair(__core__unConstrData(self_19))))));\n                            (), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1, mph_28 = __core__unBData(__core__headList(__core__tailList(dd_2)));\n                            __core__mkCons(__core__bData(mph_28), __core__mkCons(__core__constrData(0, __core__mkNilData(())), __core__mkNilData(()))));\n                            (govAuthorityCheck) -> {\n                                __module__BasicDelegate__checkOneActivity_1(__module__BasicDelegate__checkOneActivity_1, isD, __REDEEMER, dd_2, cctx_7)\n                            }(self_237 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_9, cctx_7);\n                            true)))))\n                        }\n                    },\n                    () -> {\n                        __common10 = __core__unConstrData(__REDEEMER);\n                        __common11 = __core__fstPair(__common10);\n                        __common12 = __core__equalsInteger(__common11, 1);\n                        (__80) -> {\n                            __core__ifThenElse(\n                                __common12,\n                                () -> {\n                                    (__lhs_0_302) -> {\n                                        error()\n                                    }\n                                },\n                                () -> {\n                                    __common13 = __core__equalsInteger(__common11, 0);\n                                    __core__ifThenElse(\n                                        __common13,\n                                        () -> {\n                                            (__lhs_0_301) -> {\n                                                error()\n                                            }\n                                        },\n                                        () -> {\n                                            (__81) -> {\n                                                __core__ifThenElse(\n                                                    __common12,\n                                                    () -> {\n                                                        (__lhs_0_164) -> {\n                                                            error()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __common13,\n                                                            () -> {\n                                                                (__lhs_0_163) -> {\n                                                                    error()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__44) -> {\n                                                                    false\n                                                                }\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(__REDEEMER)\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(__REDEEMER)\n                        }\n                    }\n                )()\n            }\n        )()(__DATUM),\n        () -> {\n            ()\n        },\n        () -> {\n            error()\n        }\n    )()\n}",
        "unoptimizedIR": "(__DATUM, __REDEEMER, __CONTEXT) -> {\n    __helios__error = (msg) -> {\n        __core__trace(msg, () -> {\n            error()\n        })()\n    };\n    __helios__print = (msg_1) -> {\n        __core__trace(msg_1, ())\n    };\n    __helios__string____add = __core__appendString;\n    __helios__assert = (cond, msg_2) -> {\n        __core__ifThenElse(\n            cond,\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(msg_2, () -> {\n                    error()\n                })()\n            }\n        )()\n    };\n    __helios__bool____not = (b) -> {\n        __core__ifThenElse(\n            b,\n            false,\n            true\n        )\n    };\n    __helios__bytearray____eq = __core__equalsByteString;\n    __helios__bytearray____neq = (self, other) -> {\n        __helios__bool____not(__helios__bytearray____eq(self, other))\n    };\n    __helios__int____to_data = __core__iData;\n    __helios__int__serialize = (self_1) -> {\n        () -> {\n            __core__serialiseData(__helios__int____to_data(self_1))\n        }\n    };\n    __helios__string__encode_utf8 = (self_2) -> {\n        () -> {\n            __core__encodeUtf8(self_2)\n        }\n    };\n    __helios__common__fold = (self_3, fn, z) -> {\n        recurse_1 = (recurse, self_4, z_1) -> {\n            __core__chooseList(self_4, () -> {\n                z_1\n            }, () -> {\n                recurse(recurse, __core__tailList__safe(self_4), fn(z_1, __core__headList__safe(self_4)))\n            })()\n        };\n        recurse_1(recurse_1, self_3, z)\n    };\n    __helios__common__unBData__safe = (data, callback_ok, callback_nok) -> {\n        __core__chooseData(data, callback_nok, callback_nok, callback_nok, callback_nok, () -> {\n            callback_ok(__core__unBData__safe(data))\n        })()\n    };\n    __helios__mintingpolicyhash____eq = __helios__bytearray____eq;\n    __helios__int__to_hex = (self_5) -> {\n        () -> {\n            recurse_3 = (recurse_2) -> {\n                (self_6, bytes) -> {\n                    digit = __core__modInteger(self_6, 16);\n                    bytes_1 = __core__consByteString(__core__ifThenElse(\n                        __core__lessThanInteger(digit, 10),\n                        __core__addInteger(digit, 48),\n                        __core__addInteger(digit, 87)\n                    ), bytes);\n                    __core__ifThenElse(\n                        __core__lessThanInteger(self_6, 16),\n                        () -> {\n                            bytes_1\n                        },\n                        () -> {\n                            recurse_2(recurse_2)(__core__divideInteger(self_6, 16), bytes_1)\n                        }\n                    )()\n                }\n            };\n            __core__decodeUtf8__safe(__core__ifThenElse(\n                __core__lessThanInteger(self_5, 0),\n                () -> {\n                    __core__consByteString(45, recurse_3(recurse_3)(__core__multiplyInteger(self_5, -1), #))\n                },\n                () -> {\n                    recurse_3(recurse_3)(self_5, #)\n                }\n            )())\n        }\n    };\n    __helios__bytearray__show = (self_7) -> {\n        () -> {\n            recurse_5 = (recurse_4, self_8) -> {\n                n = __core__lengthOfByteString(self_8);\n                __core__ifThenElse(\n                    __core__lessThanInteger(0, n),\n                    () -> {\n                        __core__appendString(__core__decodeUtf8__safe(hex_bytes = __core__encodeUtf8(__helios__int__to_hex(__core__indexByteString__safe(self_8, 0))());\n                        __core__ifThenElse(\n                            __core__equalsInteger(__core__lengthOfByteString(hex_bytes), 1),\n                            __core__consByteString(48, hex_bytes),\n                            hex_bytes\n                        )), recurse_4(recurse_4, __core__sliceByteString(1, n, self_8)))\n                    },\n                    () -> {\n                        \"\"\n                    }\n                )()\n            };\n            recurse_5(recurse_5, self_7)\n        }\n    };\n    __helios__mintingpolicyhash__show = __helios__bytearray__show;\n    __helios__common__unMapData__safe = (data_1, callback_ok_1, callback_nok_1) -> {\n        __core__chooseData(data_1, callback_nok_1, () -> {\n            callback_ok_1(__core__unMapData__safe(data_1))\n        }, callback_nok_1, callback_nok_1, callback_nok_1)()\n    };\n    __helios__common__unIData__safe = (data_2, callback_ok_2, callback_nok_2) -> {\n        __core__chooseData(data_2, callback_nok_2, callback_nok_2, callback_nok_2, () -> {\n            callback_ok_2(__core__unIData__safe(data_2))\n        }, callback_nok_2)()\n    };\n    __helios__bool__and = (a, b_1) -> {\n        __core__ifThenElse(\n            a(),\n            () -> {\n                b_1()\n            },\n            () -> {\n                false\n            }\n        )()\n    };\n    __helios__int__show_digit = (x) -> {\n        __core__addInteger(__core__modInteger(x, 10), 48)\n    };\n    __helios__int__show = (self_9) -> {\n        () -> {\n            __core__decodeUtf8__safe(recurse_7 = (recurse_6, i, bytes_2) -> {\n                bytes_3 = __core__consByteString(__helios__int__show_digit(i), bytes_2);\n                __core__ifThenElse(\n                    __core__lessThanInteger(i, 10),\n                    () -> {\n                        bytes_3\n                    },\n                    () -> {\n                        recurse_6(recurse_6, __core__divideInteger(i, 10), bytes_3)\n                    }\n                )()\n            };\n            __core__ifThenElse(\n                __core__lessThanInteger(self_9, 0),\n                () -> {\n                    __core__consByteString(45, recurse_7(recurse_7, __core__multiplyInteger(self_9, -1), #))\n                },\n                () -> {\n                    recurse_7(recurse_7, self_9, #)\n                }\n            )())\n        }\n    };\n    __helios__real__ONE = 1000000;\n    __helios__real__floor = (self_10) -> {\n        () -> {\n            __core__divideInteger(self_10, __helios__real__ONE)\n        }\n    };\n    __helios__int__abs = (self_11) -> {\n        () -> {\n            __core__ifThenElse(\n                __core__lessThanInteger(self_11, 0),\n                () -> {\n                    __core__multiplyInteger(self_11, -1)\n                },\n                () -> {\n                    self_11\n                }\n            )()\n        }\n    };\n    __helios__real__abs = __helios__int__abs;\n    __helios__int__show_padded = (self_12, n_1) -> {\n        recurse_9 = (recurse_8, x_1, pos, bytes_4) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(x_1, 0),\n                () -> {\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(n_1, pos),\n                        () -> {\n                            bytes_4\n                        },\n                        () -> {\n                            recurse_8(recurse_8, 0, __core__addInteger(pos, 1), __core__consByteString(48, bytes_4))\n                        }\n                    )()\n                },\n                () -> {\n                    recurse_8(recurse_8, __core__divideInteger(x_1, 10), __core__addInteger(pos, 1), __core__consByteString(__helios__int__show_digit(x_1), bytes_4))\n                }\n            )()\n        };\n        recurse_9(recurse_9, self_12, 0, #)\n    };\n    __helios__int____mod = __core__modInteger;\n    __helios__real__PRECISION = 6;\n    __helios__real__show = (self_13) -> {\n        () -> {\n            show_positive = (x_2) -> {\n                __helios__string____add(__helios__int__show(__helios__real__floor(__helios__real__abs(x_2)())())(), __helios__string____add(\".\", __core__decodeUtf8__safe(__helios__int__show_padded(__helios__int____mod(x_2, __helios__real__ONE), __helios__real__PRECISION))))\n            };\n            __core__ifThenElse(\n                __core__lessThanInteger(self_13, 0),\n                () -> {\n                    __helios__string____add(\"-\", show_positive(__core__multiplyInteger(self_13, -1)))\n                },\n                () -> {\n                    show_positive(self_13)\n                }\n            )()\n        }\n    };\n    __helios__string__parse_utf8_cont_byte = (byte, callback) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__divideInteger(byte, 64), 2),\n            () -> {\n                callback(true, __core__modInteger(byte, 64))\n            },\n            () -> {\n                callback(false, 0)\n            }\n        )()\n    };\n    __helios__string__is_valid_utf8 = (bytes_5) -> {\n        n_2 = __core__lengthOfByteString(bytes_5);\n        recurse_11 = (recurse_10, i_1) -> {\n            __core__ifThenElse(\n                __core__equalsInteger(i_1, n_2),\n                () -> {\n                    true\n                },\n                () -> {\n                    b0 = __core__indexByteString__safe(bytes_5, i_1);\n                    __core__ifThenElse(\n                        __core__lessThanEqualsInteger(b0, 127),\n                        () -> {\n                            recurse_10(recurse_10, __core__addInteger(i_1, 1))\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __core__equalsInteger(__core__divideInteger(b0, 32), 6),\n                                () -> {\n                                    inext_2 = __core__addInteger(i_1, 2);\n                                    __core__ifThenElse(\n                                        __core__lessThanEqualsInteger(inext_2, n_2),\n                                        () -> {\n                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_5, c1_2) -> {\n                                                __core__ifThenElse(\n                                                    valid_5,\n                                                    () -> {\n                                                        c_2 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 32), 64), c1_2);\n                                                        __core__ifThenElse(\n                                                            __helios__bool__and(() -> {\n                                                                __core__lessThanEqualsInteger(128, c_2)\n                                                            }, () -> {\n                                                                __core__lessThanEqualsInteger(c_2, 2047)\n                                                            }),\n                                                            () -> {\n                                                                recurse_10(recurse_10, inext_2)\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    },\n                                                    () -> {\n                                                        false\n                                                    }\n                                                )()\n                                            })\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __core__equalsInteger(__core__divideInteger(b0, 16), 14),\n                                        () -> {\n                                            inext_1 = __core__addInteger(i_1, 3);\n                                            __core__ifThenElse(\n                                                __core__lessThanEqualsInteger(inext_1, n_2),\n                                                () -> {\n                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid_3, c1_1) -> {\n                                                        __core__ifThenElse(\n                                                            valid_3,\n                                                            () -> {\n                                                                __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_4, c2_1) -> {\n                                                                    __core__ifThenElse(\n                                                                        valid_4,\n                                                                        () -> {\n                                                                            c_1 = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 16), 4096), __core__addInteger(__core__multiplyInteger(c1_1, 64), c2_1));\n                                                                            __core__ifThenElse(\n                                                                                __helios__bool__and(() -> {\n                                                                                    __core__lessThanEqualsInteger(2048, c_1)\n                                                                                }, () -> {\n                                                                                    __core__lessThanEqualsInteger(c_1, 65535)\n                                                                                }),\n                                                                                () -> {\n                                                                                    recurse_10(recurse_10, inext_1)\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )()\n                                                                })\n                                                            },\n                                                            () -> {\n                                                                false\n                                                            }\n                                                        )()\n                                                    })\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __core__equalsInteger(__core__divideInteger(b0, 8), 30),\n                                                () -> {\n                                                    inext = __core__addInteger(i_1, 4);\n                                                    __core__ifThenElse(\n                                                        __core__lessThanEqualsInteger(inext, n_2),\n                                                        () -> {\n                                                            __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 1)), (valid, c1) -> {\n                                                                __core__ifThenElse(\n                                                                    valid,\n                                                                    () -> {\n                                                                        __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 2)), (valid_1, c2) -> {\n                                                                            __core__ifThenElse(\n                                                                                valid_1,\n                                                                                () -> {\n                                                                                    __helios__string__parse_utf8_cont_byte(__core__indexByteString__safe(bytes_5, __core__addInteger(i_1, 3)), (valid_2, c3) -> {\n                                                                                        __core__ifThenElse(\n                                                                                            valid_2,\n                                                                                            () -> {\n                                                                                                c = __core__addInteger(__core__multiplyInteger(__core__modInteger(b0, 8), 262144), __core__addInteger(__core__multiplyInteger(c1, 4096), __core__addInteger(__core__multiplyInteger(c2, 64), c3)));\n                                                                                                __core__ifThenElse(\n                                                                                                    __helios__bool__and(() -> {\n                                                                                                        __core__lessThanEqualsInteger(65536, c)\n                                                                                                    }, () -> {\n                                                                                                        __core__lessThanEqualsInteger(c, 2097151)\n                                                                                                    }),\n                                                                                                    () -> {\n                                                                                                        recurse_10(recurse_10, inext)\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        false\n                                                                                                    }\n                                                                                                )()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    })\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        })\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        };\n        recurse_11(recurse_11, 0)\n    };\n    __helios__bytearray__decode_utf8_safe = (self_14) -> {\n        () -> {\n            __core__ifThenElse(\n                __helios__string__is_valid_utf8(self_14),\n                () -> {\n                    __core__decodeUtf8__safe(self_14)\n                },\n                () -> {\n                    __helios__bytearray__show(self_14)()\n                }\n            )()\n        }\n    };\n    __helios__value__show = (self_15) -> {\n        (__useopt__ada, ada) -> {\n            __helios__common__fold(self_15, (prev, pair) -> {\n                mph_data = __core__fstPair(pair);\n                tokens_data = __core__sndPair(pair);\n                __helios__string____add(prev, __helios__common__unBData__safe(mph_data, (mph) -> {\n                    __helios__string____add(__core__ifThenElse(\n                        __helios__mintingpolicyhash____eq(mph, #),\n                        () -> {\n                            \"\"\n                        },\n                        () -> {\n                            __helios__string____add(__helios__mintingpolicyhash__show(mph)(), \"\n\")\n                        }\n                    )(), __helios__common__unMapData__safe(tokens_data, (tokens) -> {\n                        __helios__common__fold(tokens, (prev_1, pair_1) -> {\n                            token_name_data = __core__fstPair(pair_1);\n                            qty_data = __core__sndPair(pair_1);\n                            __helios__common__unBData__safe(token_name_data, (token_name) -> {\n                                __helios__common__unIData__safe(qty_data, (qty) -> {\n                                    __core__ifThenElse(\n                                        __helios__mintingpolicyhash____eq(mph, #),\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __helios__bool__and(() -> {\n                                                    __useopt__ada\n                                                }, () -> {\n                                                    ada\n                                                }),\n                                                () -> {\n                                                    __helios__string____add(\"ada \", __helios__string____add(__helios__real__show(qty)(), \"\n\"))\n                                                },\n                                                () -> {\n                                                    __helios__string____add(\"lovelace \", __helios__string____add(__helios__int__show(qty)(), \"\n\"))\n                                                }\n                                            )()\n                                        },\n                                        () -> {\n                                            __helios__string____add(\"  .\", __helios__string____add(__helios__bytearray__decode_utf8_safe(token_name)(), __helios__string____add(\" \", __helios__string____add(__helios__int__show(qty)(), \"\n\"))))\n                                        }\n                                    )()\n                                }, () -> {\n                                    \"\"\n                                })\n                            }, () -> {\n                                \"\"\n                            })\n                        }, prev)\n                    }, () -> {\n                        \"\"\n                    }))\n                }, () -> {\n                    \"\"\n                }))\n            }, \"\")\n        }\n    };\n    __helios__common__enum_fields = (self_16) -> {\n        __core__sndPair(__core__unConstrData(self_16))\n    };\n    __helios__common__enum_fields_after_0 = (self_17) -> {\n        __core__tailList(__helios__common__enum_fields(self_17))\n    };\n    __helios__common__enum_field_1 = (self_18) -> {\n        __core__headList(__helios__common__enum_fields_after_0(self_18))\n    };\n    __helios__txoutput__value = (self_19) -> {\n        __core__unMapData(__helios__common__enum_field_1(self_19))\n    };\n    __helios__txinput__output = __helios__common__enum_field_1;\n    __helios__txinput__value = (self_20) -> {\n        __helios__txoutput__value(__helios__txinput__output(self_20))\n    };\n    __helios__common__enum_field_0 = (self_21) -> {\n        __core__headList(__helios__common__enum_fields(self_21))\n    };\n    __helios__scriptcontext__data = __CONTEXT;\n    __helios__scriptcontext__purpose = __helios__common__enum_field_1(__helios__scriptcontext__data);\n    __helios__scriptcontext__get_spending_purpose_output_id = () -> {\n        __helios__common__enum_field_0(__helios__scriptcontext__purpose)\n    };\n    __helios__txinput__output_id = __helios__common__enum_field_0;\n    __helios__tx__inputs = (self_22) -> {\n        __core__unListData(__helios__common__enum_field_0(self_22))\n    };\n    __helios__scriptcontext__tx = __helios__common__enum_field_0(__helios__scriptcontext__data);\n    __helios__scriptcontext__get_current_input = () -> {\n        id = __helios__scriptcontext__get_spending_purpose_output_id();\n        recurse_13 = (recurse_12, lst) -> {\n            __core__chooseList(lst, () -> {\n                __helios__error(\"not found\")\n            }, () -> {\n                item = __core__headList__safe(lst);\n                __core__ifThenElse(\n                    __core__equalsData(__helios__txinput__output_id(item), id),\n                    () -> {\n                        item\n                    },\n                    () -> {\n                        recurse_12(recurse_12, __core__tailList__safe(lst))\n                    }\n                )()\n            })()\n        };\n        recurse_13(recurse_13, __helios__tx__inputs(__helios__scriptcontext__tx))\n    };\n    __helios__bool__or = (a_1, b_2) -> {\n        __core__ifThenElse(\n            a_1(),\n            () -> {\n                true\n            },\n            () -> {\n                b_2()\n            }\n        )()\n    };\n    __helios__string____to_data = (s) -> {\n        __core__bData(__core__encodeUtf8(s))\n    };\n    __helios__value__ZERO = __core__mkNilPairData(());\n    __helios__value__new = (assetClass, i_2) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(0, i_2),\n            () -> {\n                __helios__value__ZERO\n            },\n            () -> {\n                mph_1 = __helios__common__enum_field_0(assetClass);\n                tokenName = __helios__common__enum_field_1(assetClass);\n                __core__mkCons(__core__mkPairData(mph_1, __core__mapData(__core__mkCons(__core__mkPairData(tokenName, __helios__int____to_data(i_2)), __core__mkNilPairData(())))), __core__mkNilPairData(()))\n            }\n        )()\n    };\n    __helios__common__list_0 = __core__mkNilData(());\n    __helios__common__list_1 = (a_2) -> {\n        __core__mkCons(a_2, __helios__common__list_0)\n    };\n    __helios__common__list_2 = (arg0, arg1) -> {\n        __core__mkCons(arg0, __helios__common__list_1(arg1))\n    };\n    __helios__bytearray____to_data = __core__bData;\n    __helios__mintingpolicyhash____to_data = __helios__bytearray____to_data;\n    __helios__assetclass__new = (mph_2, token_name_1) -> {\n        __core__constrData(0, __helios__common__list_2(__helios__mintingpolicyhash____to_data(mph_2), __helios__bytearray____to_data(token_name_1)))\n    };\n    __helios__int____neg = (self_23) -> {\n        __core__multiplyInteger(self_23, -1)\n    };\n    __helios__int____eq = __core__equalsInteger;\n    __helios__value__get = (self_24) -> {\n        (assetClass_1) -> {\n            mph_3 = __helios__common__enum_field_0(assetClass_1);\n            tokenName_1 = __helios__common__enum_field_1(assetClass_1);\n            outer_1 = (outer, inner, map) -> {\n                __core__chooseList(map, () -> {\n                    __helios__error(__helios__string____add(__helios__string____add(\"policy \", __helios__mintingpolicyhash__show(__core__unBData(mph_3))()), \" not found\"))\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsData(__core__fstPair(__core__headList__safe(map)), mph_3),\n                        () -> {\n                            inner(inner, __core__unMapData(__core__sndPair(__core__headList__safe(map))))\n                        },\n                        () -> {\n                            outer(outer, inner, __core__tailList__safe(map))\n                        }\n                    )()\n                })()\n            };\n            inner_2 = (inner_1, map_1) -> {\n                __core__chooseList(map_1, () -> {\n                    __helios__error(\"tokenName not found\")\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsData(__core__fstPair(__core__headList__safe(map_1)), tokenName_1),\n                        () -> {\n                            __core__unIData(__core__sndPair(__core__headList__safe(map_1)))\n                        },\n                        () -> {\n                            inner_1(inner_1, __core__tailList__safe(map_1))\n                        }\n                    )()\n                })()\n            };\n            outer_1(outer_1, inner_2, self_24)\n        }\n    };\n    __helios__common__enum_fields_after_1 = (self_25) -> {\n        __core__tailList(__helios__common__enum_fields_after_0(self_25))\n    };\n    __helios__common__enum_fields_after_2 = (self_26) -> {\n        __core__tailList(__helios__common__enum_fields_after_1(self_26))\n    };\n    __helios__common__enum_fields_after_3 = (self_27) -> {\n        __core__tailList(__helios__common__enum_fields_after_2(self_27))\n    };\n    __helios__common__enum_field_4 = (self_28) -> {\n        __core__headList(__helios__common__enum_fields_after_3(self_28))\n    };\n    __helios__tx__minted = (self_29) -> {\n        __core__unMapData(__helios__common__enum_field_4(self_29))\n    };\n    __helios__common__assert_constr_index = (data_3, i_3) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(data_3)), i_3),\n            () -> {\n                data_3\n            },\n            () -> {\n                __helios__error(\"unexpected constructor index\")\n            }\n        )()\n    };\n    __helios__string____eq = __core__equalsString;\n    __helios__common____eq = __core__equalsData;\n    __helios__assetclass____eq = __helios__common____eq;\n    __helios__data__show = (self_30) -> {\n        () -> {\n            show_data_list = (list, show_item) -> {\n                __helios__common__fold(list, (prev_2, item_1) -> {\n                    __core__ifThenElse(\n                        __helios__string____eq(prev_2, \"\"),\n                        () -> {\n                            show_item(item_1)\n                        },\n                        () -> {\n                            __helios__string____add(prev_2, __helios__string____add(\",\", show_item(item_1)))\n                        }\n                    )()\n                }, \"\")\n            };\n            (recurse_15, data_5) -> {\n                recurse_15(recurse_15, data_5)\n            }((recurse_14, data_4) -> {\n                __core__chooseData(data_4, () -> {\n                    pair_3 = __core__unConstrData__safe(data_4);\n                    tag = __core__fstPair(pair_3);\n                    fields = __core__sndPair(pair_3);\n                    __helios__string____add(__helios__int__show(tag)(), __helios__string____add(\"{\", __helios__string____add(show_data_list(fields, (item_3) -> {\n                        recurse_14(recurse_14, item_3)\n                    }), \"}\")))\n                }, () -> {\n                    map_2 = __core__unMapData__safe(data_4);\n                    __helios__string____add(\"{\", __helios__string____add(show_data_list(map_2, (pair_2) -> {\n                        key = recurse_14(recurse_14, __core__fstPair(pair_2));\n                        value_1 = recurse_14(recurse_14, __core__sndPair(pair_2));\n                        __helios__string____add(key, __helios__string____add(\":\", value_1))\n                    }), \"}\"))\n                }, () -> {\n                    lst_1 = __core__unListData__safe(data_4);\n                    __helios__string____add(\"[\", __helios__string____add(show_data_list(lst_1, (item_2) -> {\n                        recurse_14(recurse_14, item_2)\n                    }), \"]\"))\n                }, () -> {\n                    value = __core__unIData__safe(data_4);\n                    __helios__int__show(value)()\n                }, () -> {\n                    bytes_6 = __core__unBData__safe(data_4);\n                    __helios__bytearray__show(bytes_6)()\n                })()\n            }, self_30)\n        }\n    };\n    __helios__data__show_constr_data = (callback_1) -> {\n        (data_6) -> {\n            callback_nok_3 = __helios__data__show(data_6);\n            __core__chooseData(data_6, () -> {\n                pair_4 = __core__unConstrData__safe(data_6);\n                callback_1(__core__fstPair(pair_4), __core__sndPair(pair_4))\n            }, callback_nok_3, callback_nok_3, callback_nok_3, callback_nok_3)()\n        }\n    };\n    __helios__data__show_field = (index, callback_2) -> {\n        (list_1) -> {\n            recurse_17 = (recurse_16) -> {\n                (lst_2, i_4) -> {\n                    __core__chooseList(lst_2, () -> {\n                        \"<missing>\"\n                    }, () -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(i_4, 0),\n                            () -> {\n                                head = __core__headList__safe(lst_2);\n                                callback_2(head)\n                            },\n                            () -> {\n                                recurse_16(recurse_16)(__core__tailList__safe(lst_2), __core__subtractInteger(i_4, 1))\n                            }\n                        )()\n                    })()\n                }\n            };\n            recurse_17(recurse_17)(list_1, index)\n        }\n    };\n    __helios__data__show_bdata = (callback_3) -> {\n        (data_7) -> {\n            callback_nok_4 = __helios__data__show(data_7);\n            __core__chooseData(data_7, callback_nok_4, callback_nok_4, callback_nok_4, callback_nok_4, () -> {\n                callback_3(__core__unBData__safe(data_7))\n            })()\n        }\n    };\n    __helios__assetclass__show = (self_31) -> {\n        () -> {\n            __helios__data__show_constr_data((tag_1, fields_1) -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(tag_1, 0),\n                    () -> {\n                        mph_str = __helios__data__show_field(0, __helios__data__show_bdata((mph_4) -> {\n                            __helios__bytearray__show(mph_4)()\n                        }))(fields_1);\n                        token_name_str = __helios__data__show_field(1, __helios__data__show_bdata((token_name_2) -> {\n                            __helios__bytearray__show(token_name_2)()\n                        }))(fields_1);\n                        __core__appendString(mph_str, __core__appendString(\".\", token_name_str))\n                    },\n                    () -> {\n                        __helios__data__show(self_31)()\n                    }\n                )()\n            })(self_31)\n        }\n    };\n    __helios__string____neq = (self_32, other_1) -> {\n        __helios__bool____not(__helios__string____eq(self_32, other_1))\n    };\n    __helios__int____gt = (a_3, b_3) -> {\n        __helios__bool____not(__core__lessThanEqualsInteger(a_3, b_3))\n    };\n    __helios__int____neq = (self_33, other_2) -> {\n        __helios__bool____not(__helios__int____eq(self_33, other_2))\n    };\n    __helios__int____sub = __core__subtractInteger;\n    __helios__value__to_map = (self_34) -> {\n        () -> {\n            self_34\n        }\n    };\n    __helios__string__show = (self_35) -> {\n        () -> {\n            __core__appendString(\"'\", __core__appendString(self_35, \"'\"))\n        }\n    };\n    __helios__bool__show = (self_36) -> {\n        () -> {\n            __core__ifThenElse(\n                self_36,\n                \"true\",\n                \"false\"\n            )\n        }\n    };\n    __helios__bool__trace = (self_37) -> {\n        (prefix) -> {\n            __core__trace(__helios__string____add(prefix, __helios__bool__show(self_37)()), self_37)\n        }\n    };\n    __helios__txinput____eq = __helios__common____eq;\n    __helios__bytearray__from_data = __core__unBData;\n    __helios__string__from_data = (d) -> {\n        __core__decodeUtf8(__core__unBData(d))\n    };\n    __helios__common__length = (lst_3) -> {\n        recurse_19 = (recurse_18, lst_4) -> {\n            __core__chooseList(lst_4, () -> {\n                0\n            }, () -> {\n                __core__addInteger(recurse_18(recurse_18, __core__tailList__safe(lst_4)), 1)\n            })()\n        };\n        recurse_19(recurse_19, lst_3)\n    };\n    __helios__common__map_get = (self_38, key_1, fnFound, fnNotFound) -> {\n        recurse_21 = (recurse_20, self_39, key_2) -> {\n            __core__chooseList(self_39, fnNotFound, () -> {\n                head_1 = __core__headList__safe(self_39);\n                __core__ifThenElse(\n                    __core__equalsData(key_2, __core__fstPair(head_1)),\n                    () -> {\n                        fnFound(__core__sndPair(head_1))\n                    },\n                    () -> {\n                        recurse_20(recurse_20, __core__tailList__safe(self_39), key_2)\n                    }\n                )()\n            })()\n        };\n        recurse_21(recurse_21, self_38, key_1)\n    };\n    __helios__common__enum_tag_equals = (data_8, i_5) -> {\n        __core__equalsInteger(__core__fstPair(__core__unConstrData(data_8)), i_5)\n    };\n    __helios__common__all = (self_40, fn_1) -> {\n        recurse_23 = (recurse_22, self_41, fn_2) -> {\n            __core__chooseList(self_41, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    fn_2(__core__headList__safe(self_41)),\n                    () -> {\n                        recurse_22(recurse_22, __core__tailList__safe(self_41), fn_2)\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_23(recurse_23, self_40, fn_1)\n    };\n    __helios__common__identity = (self_42) -> {\n        self_42\n    };\n    __helios__assetclass____to_data = __helios__common__identity;\n    __helios__assetclass__from_data = __helios__common__identity;\n    __helios__data__from_data = __helios__common__identity;\n    __helios__bool__from_data = (d_1) -> {\n        __core__ifThenElse(\n            __core__equalsInteger(__core__fstPair(__core__unConstrData(d_1)), 0),\n            false,\n            true\n        )\n    };\n    __helios__int__from_data = __core__unIData;\n    __helios__int____leq = __core__lessThanEqualsInteger;\n    __helios__duration____leq = __helios__int____leq;\n    __helios__time____sub = __helios__int____sub;\n    __helios__time__from_data = __helios__int__from_data;\n    __helios__timerange__end = (self_43) -> {\n        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_1(self_43))))\n    };\n    __helios__common__enum_fields_after_4 = (self_44) -> {\n        __core__tailList(__helios__common__enum_fields_after_3(self_44))\n    };\n    __helios__common__enum_fields_after_5 = (self_45) -> {\n        __core__tailList(__helios__common__enum_fields_after_4(self_45))\n    };\n    __helios__common__enum_fields_after_6 = (self_46) -> {\n        __core__tailList(__helios__common__enum_fields_after_5(self_46))\n    };\n    __helios__common__enum_field_7 = (self_47) -> {\n        __core__headList(__helios__common__enum_fields_after_6(self_47))\n    };\n    __helios__tx__time_range = __helios__common__enum_field_7;\n    __helios__timerange__start = (self_48) -> {\n        __helios__time__from_data(__helios__common__enum_field_0(__helios__common__enum_field_0(__helios__common__enum_field_0(self_48))))\n    };\n    __helios__duration__HOUR = 3600000;\n    __helios__value__get_safe = (self_49) -> {\n        (assetClass_2) -> {\n            mintingPolicyHash = __helios__common__enum_field_0(assetClass_2);\n            tokenName_2 = __helios__common__enum_field_1(assetClass_2);\n            outer_3 = (outer_2, inner_3, map_3) -> {\n                __core__chooseList(map_3, () -> {\n                    0\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsData(__core__fstPair(__core__headList__safe(map_3)), mintingPolicyHash),\n                        () -> {\n                            inner_3(inner_3, __core__unMapData(__core__sndPair(__core__headList__safe(map_3))))\n                        },\n                        () -> {\n                            outer_2(outer_2, inner_3, __core__tailList__safe(map_3))\n                        }\n                    )()\n                })()\n            };\n            inner_5 = (inner_4, map_4) -> {\n                __core__chooseList(map_4, () -> {\n                    0\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsData(__core__fstPair(__core__headList__safe(map_4)), tokenName_2),\n                        () -> {\n                            __core__unIData(__core__sndPair(__core__headList__safe(map_4)))\n                        },\n                        () -> {\n                            inner_4(inner_4, __core__tailList__safe(map_4))\n                        }\n                    )()\n                })()\n            };\n            outer_3(outer_3, inner_5, self_49)\n        }\n    };\n    __helios__txoutputdatum__inline = (self_50) -> {\n        pair_5 = __core__unConstrData(self_50);\n        index_1 = __core__fstPair(pair_5);\n        fields_2 = __core__sndPair(pair_5);\n        __core__ifThenElse(\n            __core__equalsInteger(index_1, 2),\n            () -> {\n                __core__headList(fields_2)\n            },\n            () -> {\n                __helios__error(\"not an inline datum\")\n            }\n        )()\n    };\n    __helios__common__enum_field_2 = (self_51) -> {\n        __core__headList(__helios__common__enum_fields_after_1(self_51))\n    };\n    __helios__txoutput__datum = __helios__common__enum_field_2;\n    __helios__tx__outputs = (self_52) -> {\n        __core__unListData(__helios__common__enum_field_2(self_52))\n    };\n    __helios__txinput__datum = (self_53) -> {\n        __helios__txoutput__datum(__helios__txinput__output(self_53))\n    };\n    __helios__common__serialize = (self_54) -> {\n        () -> {\n            __core__serialiseData(self_54)\n        }\n    };\n    __helios__tx__serialize = __helios__common__serialize;\n    __helios__common__filter = (self_55, fn_3, nil) -> {\n        recurse_25 = (recurse_24, self_56, fn_4) -> {\n            __core__chooseList(self_56, () -> {\n                nil\n            }, () -> {\n                head_2 = __core__headList__safe(self_56);\n                __core__ifThenElse(\n                    fn_4(head_2),\n                    () -> {\n                        __core__mkCons(head_2, recurse_24(recurse_24, __core__tailList__safe(self_56), fn_4))\n                    },\n                    () -> {\n                        recurse_24(recurse_24, __core__tailList__safe(self_56), fn_4)\n                    }\n                )()\n            })()\n        };\n        recurse_25(recurse_25, self_55, fn_3)\n    };\n    __helios__common__filter_list = (self_57, fn_5) -> {\n        __helios__common__filter(self_57, fn_5, __helios__common__list_0)\n    };\n    __helios__txinput__from_data = __helios__common__identity;\n    __helios__data__is_valid_data = (data_9) -> {\n        true\n    };\n    __helios__string__is_valid_data = (data_10) -> {\n        __core__chooseData(data_10, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            __helios__string__is_valid_utf8(__core__unBData__safe(data_10))\n        })()\n    };\n    __helios__bytearray__is_valid_data = (data_11) -> {\n        __core__chooseData(data_11, false, false, false, false, true)\n    };\n    __helios__txoutputid__from_data = __helios__common__identity;\n    __helios__common__test_constr_data_2 = (data_12, index_2, test_a, test_b) -> {\n        __core__chooseData(data_12, () -> {\n            pair_6 = __core__unConstrData__safe(data_12);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_6), index_2),\n                () -> {\n                    fields_3 = __core__sndPair(pair_6);\n                    __core__chooseList(fields_3, () -> {\n                        false\n                    }, () -> {\n                        __core__ifThenElse(\n                            test_a(__core__headList__safe(fields_3)),\n                            () -> {\n                                tail = __core__tailList__safe(fields_3);\n                                __core__chooseList(tail, () -> {\n                                    false\n                                }, () -> {\n                                    __core__ifThenElse(\n                                        test_b(__core__headList__safe(tail)),\n                                        () -> {\n                                            __core__chooseList(__core__tailList__safe(tail), () -> {\n                                                true\n                                            }, () -> {\n                                                false\n                                            })()\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                })()\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__bytearray__is_valid_data_fixed_length = (n_3) -> {\n        (data_13) -> {\n            __core__chooseData(data_13, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                bytes_7 = __core__unBData__safe(data_13);\n                __core__ifThenElse(\n                    __core__equalsInteger(__core__lengthOfByteString(bytes_7), n_3),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }\n    };\n    __helios__txid__is_valid_data = (data_14) -> {\n        __core__chooseData(data_14, () -> {\n            pair_7 = __core__unConstrData__safe(data_14);\n            index_3 = __core__fstPair(pair_7);\n            fields_4 = __core__sndPair(pair_7);\n            __core__ifThenElse(\n                __core__equalsInteger(0, index_3),\n                () -> {\n                    __core__chooseList(fields_4, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_4), () -> {\n                            __helios__bytearray__is_valid_data_fixed_length(32)(__core__headList__safe(fields_4))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__int__is_valid_data = (data_15) -> {\n        __core__chooseData(data_15, false, false, false, true, false)\n    };\n    __helios__txoutputid__is_valid_data = (data_16) -> {\n        __helios__common__test_constr_data_2(data_16, 0, __helios__txid__is_valid_data, __helios__int__is_valid_data)\n    };\n    __helios__mintingpolicyhash__is_valid_data = (data_17) -> {\n        __core__chooseData(data_17, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            bytes_8 = __core__unBData__safe(data_17);\n            n_4 = __core__lengthOfByteString(bytes_8);\n            __core__ifThenElse(\n                __core__equalsInteger(n_4, 0),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(n_4, 28),\n                        true,\n                        false\n                    )\n                }\n            )()\n        })()\n    };\n    __helios__bytearray__is_valid_data_max_length = (n_5) -> {\n        (data_18) -> {\n            __core__chooseData(data_18, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                false\n            }, () -> {\n                bytes_9 = __core__unBData__safe(data_18);\n                __core__ifThenElse(\n                    __core__lessThanEqualsInteger(__core__lengthOfByteString(bytes_9), n_5),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }\n    };\n    __helios__value__is_valid_data = (data_19) -> {\n        __core__chooseData(data_19, () -> {\n            false\n        }, () -> {\n            map_5 = __core__unMapData__safe(data_19);\n            recurse_27 = (recurse_26, map_6) -> {\n                __core__chooseList(map_6, () -> {\n                    true\n                }, () -> {\n                    head_3 = __core__headList__safe(map_6);\n                    key_3 = __core__fstPair(head_3);\n                    value_2 = __core__sndPair(head_3);\n                    tail_1 = __core__tailList__safe(map_6);\n                    __core__ifThenElse(\n                        __helios__mintingpolicyhash__is_valid_data(key_3),\n                        () -> {\n                            __core__chooseData(value_2, () -> {\n                                false\n                            }, () -> {\n                                inner_6 = __core__unMapData__safe(value_2);\n                                __core__chooseList(inner_6, () -> {\n                                    false\n                                }, () -> {\n                                    recurse_inner_1 = (recurse_inner, inner_7) -> {\n                                        __core__chooseList(inner_7, () -> {\n                                            recurse_26(recurse_26, tail_1)\n                                        }, () -> {\n                                            head_4 = __core__headList__safe(inner_7);\n                                            key_4 = __core__fstPair(head_4);\n                                            value_3 = __core__sndPair(head_4);\n                                            __core__ifThenElse(\n                                                __helios__bytearray__is_valid_data_max_length(32)(key_4),\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __helios__int__is_valid_data(value_3),\n                                                        () -> {\n                                                            recurse_26(recurse_26, tail_1)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        })()\n                                    };\n                                    recurse_inner_1(recurse_inner_1, inner_6)\n                                })()\n                            }, () -> {\n                                false\n                            }, () -> {\n                                false\n                            }, () -> {\n                                false\n                            })()\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                })()\n            };\n            recurse_27(recurse_27, map_5)\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__common__mStruct_field_internal = (map_7, name) -> {\n        name_data = __core__bData(name);\n        recurse_29 = (recurse_28, map_8) -> {\n            __core__chooseList(map_8, () -> {\n                __helios__error(__core__appendString(__core__decodeUtf8__safe(__core__unBData__safe(__core__bData(name))), \": field not found\"))\n            }, () -> {\n                head_5 = __core__headList__safe(map_8);\n                key_5 = __core__fstPair(head_5);\n                value_4 = __core__sndPair(head_5);\n                __core__ifThenElse(\n                    __core__equalsData(key_5, name_data),\n                    () -> {\n                        value_4\n                    },\n                    () -> {\n                        recurse_28(recurse_28, __core__tailList__safe(map_8))\n                    }\n                )()\n            })()\n        };\n        recurse_29(recurse_29, map_7)\n    };\n    __helios__common__mStruct_field = (self_58, name_1) -> {\n        __helios__common__mStruct_field_internal(__core__unMapData(self_58), name_1)\n    };\n    __helios__common__test_mStruct_field = (self_59, name_2, inner_test) -> {\n        __core__chooseData(self_59, () -> {\n            false\n        }, () -> {\n            map_9 = __core__unMapData__safe(self_59);\n            recurse_31 = (recurse_30, map_10) -> {\n                __core__chooseList(map_10, () -> {\n                    __core__trace(__core__appendString(\"Warning: field not found: \", __core__decodeUtf8__safe(__core__unBData__safe(name_2))), () -> {\n                        false\n                    })()\n                }, () -> {\n                    head_6 = __core__headList__safe(map_10);\n                    key_6 = __core__fstPair(head_6);\n                    value_5 = __core__sndPair(head_6);\n                    __core__ifThenElse(\n                        __core__equalsData(key_6, name_2),\n                        () -> {\n                            inner_test(value_5)\n                        },\n                        () -> {\n                            recurse_30(recurse_30, __core__tailList__safe(map_10))\n                        }\n                    )()\n                })()\n            };\n            recurse_31(recurse_31, map_9)\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__bool__is_valid_data = (data_20) -> {\n        __core__chooseData(data_20, () -> {\n            pair_8 = __core__unConstrData__safe(data_20);\n            index_4 = __core__fstPair(pair_8);\n            fields_5 = __core__sndPair(pair_8);\n            __core__chooseList(fields_5, () -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(0, index_4),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __core__equalsInteger(1, index_4),\n                            () -> {\n                                true\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    }\n                )()\n            }, () -> {\n                false\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__time__is_valid_data = __helios__int__is_valid_data;\n    __helios__time____eq = __helios__int____eq;\n    __helios__time__new = __helios__common__identity;\n    __helios__value__is_zero_inner = (tokens_1) -> {\n        recurse_33 = (recurse_32, tokens_2) -> {\n            __core__chooseList(tokens_2, () -> {\n                true\n            }, () -> {\n                __helios__bool__and(() -> {\n                    __core__equalsInteger(__core__unIData(__core__sndPair(__core__headList__safe(tokens_2))), 0)\n                }, () -> {\n                    recurse_32(recurse_32, __core__tailList__safe(tokens_2))\n                })\n            })()\n        };\n        recurse_33(recurse_33, tokens_1)\n    };\n    __helios__value__is_zero = (self_60) -> {\n        () -> {\n            recurse_35 = (recurse_34, map_11) -> {\n                __core__chooseList(map_11, () -> {\n                    true\n                }, () -> {\n                    __helios__bool__and(() -> {\n                        __helios__value__is_zero_inner(__core__unMapData(__core__sndPair(__core__headList__safe(map_11))))\n                    }, () -> {\n                        recurse_34(recurse_34, __core__tailList__safe(map_11))\n                    })\n                })()\n            };\n            recurse_35(recurse_35, self_60)\n        }\n    };\n    __helios__real____eq = __helios__int____eq;\n    __helios__real__from_data = __helios__int__from_data;\n    __helios__common__struct_fields_after_0 = __core__tailList;\n    __helios__common__struct_fields_after_1 = (self_61) -> {\n        __core__tailList(__helios__common__struct_fields_after_0(self_61))\n    };\n    __helios__common__struct_field_2 = (self_62) -> {\n        __core__headList(__helios__common__struct_fields_after_1(self_62))\n    };\n    __helios__value__from_data = __core__unMapData;\n    __helios__common__struct_field_1 = (self_63) -> {\n        __core__headList(__helios__common__struct_fields_after_0(self_63))\n    };\n    __helios__common__struct_field_0 = __core__headList;\n    __helios__real__is_valid_data = __helios__int__is_valid_data;\n    __helios__duration__is_valid_data = __helios__int__is_valid_data;\n    __helios__assetclass__is_valid_data = (data_21) -> {\n        __helios__common__test_constr_data_2(data_21, 0, __helios__mintingpolicyhash__is_valid_data, __helios__bytearray__is_valid_data_max_length(32))\n    };\n    __helios__pubkeyhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);\n    __helios__value__contains_policy = (self_64) -> {\n        (mph_5) -> {\n            mph_6 = __helios__mintingpolicyhash____to_data(mph_5);\n            recurse_37 = (recurse_36, map_12) -> {\n                __core__chooseList(map_12, () -> {\n                    false\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsData(__core__fstPair(__core__headList__safe(map_12)), mph_6),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            recurse_36(recurse_36, __core__tailList__safe(map_12))\n                        }\n                    )()\n                })()\n            };\n            recurse_37(recurse_37, self_64)\n        }\n    };\n    __helios__common__filter_map = (self_65, fn_6) -> {\n        __helios__common__filter(self_65, fn_6, __core__mkNilPairData(()))\n    };\n    __helios__value__get_assets = (self_66) -> {\n        () -> {\n            __helios__common__filter_map(self_66, (pair_9) -> {\n                __helios__bool____not(__core__equalsByteString(__core__unBData(__core__fstPair(pair_9)), #))\n            })\n        }\n    };\n    __helios__value__from_map = __helios__common__identity;\n    __helios__mintingpolicyhash____neq = __helios__bytearray____neq;\n    __helios__value__get_policy = (self_67) -> {\n        (mph_7) -> {\n            mph_8 = __helios__mintingpolicyhash____to_data(mph_7);\n            recurse_39 = (recurse_38, map_13) -> {\n                __core__chooseList(map_13, () -> {\n                    __helios__error(\"policy not found\")\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsData(__core__fstPair(__core__headList__safe(map_13)), mph_8),\n                        () -> {\n                            __core__unMapData(__core__sndPair(__core__headList__safe(map_13)))\n                        },\n                        () -> {\n                            recurse_38(recurse_38, __core__tailList__safe(map_13))\n                        }\n                    )()\n                })()\n            };\n            recurse_39(recurse_39, self_67)\n        }\n    };\n    __helios__value__get_inner_map_int = (map_14, key_7) -> {\n        recurse_41 = (recurse_40, map_15, key_8) -> {\n            __core__chooseList(map_15, () -> {\n                0\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_15)), key_8),\n                    () -> {\n                        __core__unIData(__core__sndPair(__core__headList__safe(map_15)))\n                    },\n                    () -> {\n                        recurse_40(recurse_40, __core__tailList__safe(map_15), key_8)\n                    }\n                )()\n            })()\n        };\n        recurse_41(recurse_41, map_14, key_7)\n    };\n    __helios__value__get_map_keys = (map_16) -> {\n        recurse_43 = (recurse_42, map_17) -> {\n            __core__chooseList(map_17, () -> {\n                __helios__common__list_0\n            }, () -> {\n                __core__mkCons(__core__fstPair(__core__headList__safe(map_17)), recurse_42(recurse_42, __core__tailList__safe(map_17)))\n            })()\n        };\n        recurse_43(recurse_43, map_16)\n    };\n    __helios__common__any = (self_68, fn_7) -> {\n        recurse_45 = (recurse_44, self_69, fn_8) -> {\n            __core__chooseList(self_69, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    fn_8(__core__headList__safe(self_69)),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        recurse_44(recurse_44, __core__tailList__safe(self_69), fn_8)\n                    }\n                )()\n            })()\n        };\n        recurse_45(recurse_45, self_68, fn_7)\n    };\n    __helios__common__is_in_bytearray_list = (lst_5, key_9) -> {\n        __helios__common__any(lst_5, (item_4) -> {\n            __core__equalsData(item_4, key_9)\n        })\n    };\n    __helios__common__concat = (a_4, b_4) -> {\n        recurse_47 = (recurse_46, lst_6, rem) -> {\n            __core__chooseList(rem, () -> {\n                lst_6\n            }, () -> {\n                __core__mkCons(__core__headList__safe(rem), recurse_46(recurse_46, lst_6, __core__tailList__safe(rem)))\n            })()\n        };\n        recurse_47(recurse_47, b_4, a_4)\n    };\n    __helios__value__merge_map_keys = (a_5, b_5) -> {\n        aKeys = __helios__value__get_map_keys(a_5);\n        recurse_49 = (recurse_48, keys, map_18) -> {\n            __core__chooseList(map_18, () -> {\n                __helios__common__list_0\n            }, () -> {\n                key_10 = __core__fstPair(__core__headList__safe(map_18));\n                __core__ifThenElse(\n                    __helios__common__is_in_bytearray_list(aKeys, key_10),\n                    () -> {\n                        recurse_48(recurse_48, keys, __core__tailList__safe(map_18))\n                    },\n                    () -> {\n                        __core__mkCons(key_10, recurse_48(recurse_48, keys, __core__tailList__safe(map_18)))\n                    }\n                )()\n            })()\n        };\n        uniqueBKeys = recurse_49(recurse_49, aKeys, b_5);\n        __helios__common__concat(aKeys, uniqueBKeys)\n    };\n    __helios__value__add_or_subtract_inner = (op) -> {\n        (a_6, b_6) -> {\n            recurse_51 = (recurse_50, keys_1, result) -> {\n                __core__chooseList(keys_1, () -> {\n                    result\n                }, () -> {\n                    key_11 = __core__headList__safe(keys_1);\n                    tail_2 = recurse_50(recurse_50, __core__tailList__safe(keys_1), result);\n                    sum = op(__helios__value__get_inner_map_int(a_6, key_11), __helios__value__get_inner_map_int(b_6, key_11));\n                    __core__ifThenElse(\n                        __core__equalsInteger(sum, 0),\n                        () -> {\n                            tail_2\n                        },\n                        () -> {\n                            __core__mkCons(__core__mkPairData(key_11, __core__iData(sum)), tail_2)\n                        }\n                    )()\n                })()\n            };\n            recurse_51(recurse_51, __helios__value__merge_map_keys(a_6, b_6), __core__mkNilPairData(()))\n        }\n    };\n    __helios__value__get_inner_map = (map_19, mph_9) -> {\n        recurse_53 = (recurse_52, map_20) -> {\n            __core__chooseList(map_20, () -> {\n                __core__mkNilPairData(())\n            }, () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__core__fstPair(__core__headList__safe(map_20)), mph_9),\n                    () -> {\n                        __core__unMapData(__core__sndPair(__core__headList__safe(map_20)))\n                    },\n                    () -> {\n                        recurse_52(recurse_52, __core__tailList__safe(map_20))\n                    }\n                )()\n            })()\n        };\n        recurse_53(recurse_53, map_19)\n    };\n    __helios__value__add_or_subtract = (a_7, b_7, op_1) -> {\n        recurse_55 = (recurse_54, keys_2, result_1) -> {\n            __core__chooseList(keys_2, () -> {\n                result_1\n            }, () -> {\n                key_12 = __core__headList__safe(keys_2);\n                tail_3 = recurse_54(recurse_54, __core__tailList__safe(keys_2), result_1);\n                item_5 = __helios__value__add_or_subtract_inner(op_1)(__helios__value__get_inner_map(a_7, key_12), __helios__value__get_inner_map(b_7, key_12));\n                __core__chooseList(item_5, () -> {\n                    tail_3\n                }, () -> {\n                    __core__mkCons(__core__mkPairData(key_12, __core__mapData(item_5)), tail_3)\n                })()\n            })()\n        };\n        recurse_55(recurse_55, __helios__value__merge_map_keys(a_7, b_7), __core__mkNilPairData(()))\n    };\n    __helios__value____add = (a_8, b_8) -> {\n        __helios__value__add_or_subtract(a_8, b_8, __core__addInteger)\n    };\n    __helios__common__map = (self_70, fn_9, init) -> {\n        recurse_57 = (recurse_56, rem_1, lst_7) -> {\n            __core__chooseList(rem_1, () -> {\n                lst_7\n            }, () -> {\n                __core__mkCons(fn_9(__core__headList__safe(rem_1)), recurse_56(recurse_56, __core__tailList__safe(rem_1), lst_7))\n            })()\n        };\n        recurse_57(recurse_57, self_70, init)\n    };\n    __helios__value____to_data = __core__mapData;\n    __helios__value__value = __helios__common__identity;\n    __helios__common__insert_in_sorted = (x_3, lst_8, comp) -> {\n        recurse_59 = (recurse_58, lst_9) -> {\n            __core__chooseList(lst_9, () -> {\n                __core__mkCons(x_3, lst_9)\n            }, () -> {\n                head_7 = __core__headList__safe(lst_9);\n                __core__ifThenElse(\n                    comp(x_3, head_7),\n                    () -> {\n                        __core__mkCons(x_3, lst_9)\n                    },\n                    () -> {\n                        __core__mkCons(head_7, recurse_58(recurse_58, __core__tailList__safe(lst_9)))\n                    }\n                )()\n            })()\n        };\n        recurse_59(recurse_59, lst_8)\n    };\n    __helios__common__sort = (lst_10, comp_1) -> {\n        recurse_61 = (recurse_60, lst_11) -> {\n            __core__chooseList(lst_11, () -> {\n                lst_11\n            }, () -> {\n                (head_8, tail_4) -> {\n                    __helios__common__insert_in_sorted(head_8, tail_4, comp_1)\n                }(__core__headList__safe(lst_11), recurse_60(recurse_60, __core__tailList__safe(lst_11)))\n            })()\n        };\n        recurse_61(recurse_61, lst_10)\n    };\n    __helios__mintingpolicyhash__from_data = __helios__bytearray__from_data;\n    __helios__bytearray____lt = __core__lessThanByteString;\n    __helios__int__max = (a_9, b_9) -> {\n        __core__ifThenElse(\n            __core__lessThanInteger(a_9, b_9),\n            b_9,\n            a_9\n        )\n    };\n    __helios__common__slice_bytearray = (self_71, selfLengthFn) -> {\n        (start, end) -> {\n            normalize = (pos_1) -> {\n                __core__ifThenElse(\n                    __core__lessThanInteger(pos_1, 0),\n                    () -> {\n                        __core__addInteger(__core__addInteger(selfLengthFn(self_71), 1), pos_1)\n                    },\n                    () -> {\n                        pos_1\n                    }\n                )()\n            };\n            fn_11 = (start_1) -> {\n                fn_10 = (end_1) -> {\n                    __core__sliceByteString(start_1, __core__subtractInteger(end_1, __helios__int__max(start_1, 0)), self_71)\n                };\n                fn_10(normalize(end))\n            };\n            fn_11(normalize(start))\n        }\n    };\n    __helios__bytearray__slice = (self_72) -> {\n        __helios__common__slice_bytearray(self_72, __core__lengthOfByteString)\n    };\n    __helios__bytearray__blake2b = (self_73) -> {\n        () -> {\n            __core__blake2b_256(self_73)\n        }\n    };\n    __helios__bytearray__length = __core__lengthOfByteString;\n    __helios__bytearray____add = __core__appendByteString;\n    __helios__txid__serialize = __helios__common__serialize;\n    __helios__txoutputid__index = (self_74) -> {\n        __helios__int__from_data(__helios__common__enum_field_1(self_74))\n    };\n    __helios__txoutputid__tx_id = __helios__common__enum_field_0;\n    __helios__common__enum_fields_after_7 = (self_75) -> {\n        __core__tailList(__helios__common__enum_fields_after_6(self_75))\n    };\n    __helios__common__enum_fields_after_8 = (self_76) -> {\n        __core__tailList(__helios__common__enum_fields_after_7(self_76))\n    };\n    __helios__common__enum_field_9 = (self_77) -> {\n        __core__headList(__helios__common__enum_fields_after_8(self_77))\n    };\n    __helios__tx__redeemers = (self_78) -> {\n        __core__unMapData(__helios__common__enum_field_9(self_78))\n    };\n    __helios__scriptpurpose__spending____is = (data_22) -> {\n        __helios__common__enum_tag_equals(data_22, 1)\n    };\n    __helios__txoutputid____eq = __helios__common____eq;\n    __helios__scriptpurpose__spending__output_id = __helios__common__enum_field_0;\n    __helios__scriptpurpose____to_data = __helios__common__identity;\n    __helios__txid__show = (self_79) -> {\n        () -> {\n            __helios__data__show_constr_data((tag_2, fields_6) -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(tag_2, 0),\n                    () -> {\n                        __helios__data__show_field(0, __helios__data__show_bdata((bytes_10) -> {\n                            __helios__bytearray__show(bytes_10)()\n                        }))(fields_6)\n                    },\n                    () -> {\n                        __helios__data__show(self_79)()\n                    }\n                )()\n            })(self_79)\n        }\n    };\n    __helios__data__show_idata = (callback_4) -> {\n        (data_23) -> {\n            callback_nok_5 = __helios__data__show(data_23);\n            __core__chooseData(data_23, callback_nok_5, callback_nok_5, callback_nok_5, () -> {\n                callback_4(__core__unIData__safe(data_23))\n            }, callback_nok_5)()\n        }\n    };\n    __helios__txoutputid__show = (self_80) -> {\n        () -> {\n            __helios__data__show_constr_data((tag_3, fields_7) -> {\n                __core__ifThenElse(\n                    __core__equalsInteger(tag_3, 0),\n                    () -> {\n                        tx_id_str = __helios__data__show_field(0, (tx_id_data) -> {\n                            __helios__txid__show(tx_id_data)()\n                        })(fields_7);\n                        index_str = __helios__data__show_field(1, __helios__data__show_idata((i_6) -> {\n                            __helios__int__show(i_6)()\n                        }))(fields_7);\n                        __core__appendString(tx_id_str, __core__appendString(\"#\", index_str))\n                    },\n                    () -> {\n                        __helios__data__show(self_80)()\n                    }\n                )()\n            })(self_80)\n        }\n    };\n    __helios__tx__ref_inputs = (self_81) -> {\n        __core__unListData(__helios__common__enum_field_1(self_81))\n    };\n    __helios__address____eq = __helios__common____eq;\n    __helios__txoutput__address = __helios__common__enum_field_0;\n    __helios__string__serialize = (self_82) -> {\n        () -> {\n            __core__serialiseData(__helios__string____to_data(self_82))\n        }\n    };\n    __helios__txinput__address = (self_83) -> {\n        __helios__txoutput__address(__helios__txinput__output(self_83))\n    };\n    __helios__txoutput__from_data = __helios__common__identity;\n    __helios__option__NONE = __core__constrData(1, __helios__common__list_0);\n    __helios__option__NONE_FUNC = (callback_5) -> {\n        callback_5(false, ())\n    };\n    __helios__option__SOME_FUNC = (some) -> {\n        (callback_6) -> {\n            callback_6(true, some)\n        }\n    };\n    __helios__bytearray__from_data_safe = (data_24) -> {\n        __core__chooseData(data_24, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__SOME_FUNC(__core__unBData__safe(data_24))\n        })()\n    };\n    __helios__int__from_data_safe = (data_25) -> {\n        __core__chooseData(data_25, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__NONE_FUNC\n        }, () -> {\n            __helios__option__SOME_FUNC(__core__unIData__safe(data_25))\n        }, () -> {\n            __helios__option__NONE_FUNC\n        })()\n    };\n    __helios__struct____to_data = __core__listData;\n    __helios__struct____eq = (self_84, other_3) -> {\n        __core__equalsData(__helios__struct____to_data(self_84), __helios__struct____to_data(other_3))\n    };\n    __helios__data__constrdata____is = (data_26) -> {\n        __core__chooseData(data_26, () -> {\n            true\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__data__constrdata__fields = (data_27) -> {\n        __core__sndPair(__core__unConstrData(data_27))\n    };\n    __helios__value__compare_inner = (comp_2, a_10, b_10) -> {\n        recurse_63 = (recurse_62, keys_3) -> {\n            __core__chooseList(keys_3, () -> {\n                true\n            }, () -> {\n                key_13 = __core__headList__safe(keys_3);\n                __core__ifThenElse(\n                    __helios__bool____not(comp_2(__helios__value__get_inner_map_int(a_10, key_13), __helios__value__get_inner_map_int(b_10, key_13))),\n                    () -> {\n                        false\n                    },\n                    () -> {\n                        recurse_62(recurse_62, __core__tailList__safe(keys_3))\n                    }\n                )()\n            })()\n        };\n        recurse_63(recurse_63, __helios__value__merge_map_keys(a_10, b_10))\n    };\n    __helios__value__compare = (a_11, b_11, comp_3) -> {\n        recurse_65 = (recurse_64, keys_4) -> {\n            __core__chooseList(keys_4, () -> {\n                true\n            }, () -> {\n                key_14 = __core__headList__safe(keys_4);\n                __core__ifThenElse(\n                    __helios__bool____not(__helios__value__compare_inner(comp_3, __helios__value__get_inner_map(a_11, key_14), __helios__value__get_inner_map(b_11, key_14))),\n                    () -> {\n                        false\n                    },\n                    () -> {\n                        recurse_64(recurse_64, __core__tailList__safe(keys_4))\n                    }\n                )()\n            })()\n        };\n        recurse_65(recurse_65, __helios__value__merge_map_keys(a_11, b_11))\n    };\n    __helios__value____geq = (a_12, b_12) -> {\n        __helios__value__compare(a_12, b_12, (a_qty, b_qty) -> {\n            __helios__bool____not(__core__lessThanInteger(a_qty, b_qty))\n        })\n    };\n    __helios__value__contains = (self_85) -> {\n        (value_6) -> {\n            __helios__value____geq(self_85, value_6)\n        }\n    };\n    __helios__txoutput__sum_values = (outputs) -> {\n        __helios__common__fold(outputs, (prev_3, txOutput) -> {\n            __helios__value____add(prev_3, __helios__txoutput__value(txOutput))\n        }, __helios__value__ZERO)\n    };\n    __helios__tx__filter_outputs = (self_86, fn_12) -> {\n        __helios__common__filter_list(__helios__tx__outputs(self_86), fn_12)\n    };\n    __helios__address__credential = __helios__common__enum_field_0;\n    __helios__spendingcredential__is_validator = (self_87) -> {\n        __core__equalsInteger(__core__fstPair(__core__unConstrData(self_87)), 1)\n    };\n    __helios__validatorhash____eq = __helios__bytearray____eq;\n    __helios__validatorhash__from_data = __helios__bytearray__from_data;\n    __helios__spendingcredential__validator__hash = (self_88) -> {\n        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_88))\n    };\n    __helios__spendingcredential__validator__cast = (data_28) -> {\n        __helios__common__assert_constr_index(data_28, 1)\n    };\n    __helios__txoutput__is_locked_by = (self_89) -> {\n        (hash) -> {\n            credential = __helios__address__credential(__helios__txoutput__address(self_89));\n            __core__ifThenElse(\n                __helios__spendingcredential__is_validator(credential),\n                () -> {\n                    __helios__validatorhash____eq(hash, __helios__spendingcredential__validator__hash(__helios__spendingcredential__validator__cast(credential)))\n                },\n                () -> {\n                    false\n                }\n            )()\n        }\n    };\n    __helios__tx__outputs_locked_by = (self_90) -> {\n        (vh) -> {\n            __helios__tx__filter_outputs(self_90, (output) -> {\n                __helios__txoutput__is_locked_by(output)(vh)\n            })\n        }\n    };\n    __helios__tx__value_locked_by = (self_91) -> {\n        (vh_1) -> {\n            __helios__txoutput__sum_values(__helios__tx__outputs_locked_by(self_91)(vh_1))\n        }\n    };\n    __helios__txoutputdatum__serialize = __helios__common__serialize;\n    __helios__data__constrdata__tag = (data_29) -> {\n        __core__fstPair(__core__unConstrData(data_29))\n    };\n    __helios__common__struct_fields_after_2 = (self_92) -> {\n        __core__tailList(__helios__common__struct_fields_after_1(self_92))\n    };\n    __helios__common__struct_fields_after_3 = (self_93) -> {\n        __core__tailList(__helios__common__struct_fields_after_2(self_93))\n    };\n    __helios__common__struct_field_4 = (self_94) -> {\n        __core__headList(__helios__common__struct_fields_after_3(self_94))\n    };\n    __helios__common__struct_field_3 = (self_95) -> {\n        __core__headList(__helios__common__struct_fields_after_2(self_95))\n    };\n    __helios__struct__serialize = (self_96) -> {\n        () -> {\n            __core__serialiseData(__helios__struct____to_data(self_96))\n        }\n    };\n    __helios__txoutput__is_valid_data = (data_30) -> {\n        __core__chooseData(data_30, () -> {\n            true\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__txinput__is_valid_data = (data_31) -> {\n        __helios__common__test_constr_data_2(data_31, 0, __helios__txoutputid__is_valid_data, __helios__txoutput__is_valid_data)\n    };\n    __helios__txinput____to_data = __helios__common__identity;\n    __helios__common__enum_field_6 = (self_97) -> {\n        __core__headList(__helios__common__enum_fields_after_5(self_97))\n    };\n    __helios__common__enum_field_5 = (self_98) -> {\n        __core__headList(__helios__common__enum_fields_after_4(self_98))\n    };\n    __helios__common__enum_field_3 = (self_99) -> {\n        __core__headList(__helios__common__enum_fields_after_2(self_99))\n    };\n    __helios__txoutput____to_data = __helios__common__identity;\n    __helios__validatorhash__is_valid_data = __helios__bytearray__is_valid_data_fixed_length(28);\n    __helios__spendingcredential__is_valid_data = (data_32) -> {\n        __core__chooseData(data_32, () -> {\n            pair_10 = __core__unConstrData__safe(data_32);\n            index_5 = __core__fstPair(pair_10);\n            fields_8 = __core__sndPair(pair_10);\n            __core__ifThenElse(\n                __core__equalsInteger(index_5, 0),\n                () -> {\n                    __core__chooseList(fields_8, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_8), () -> {\n                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_8))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_5, 1),\n                        () -> {\n                            __core__chooseList(fields_8, () -> {\n                                false\n                            }, () -> {\n                                __core__chooseList(__core__tailList__safe(fields_8), () -> {\n                                    __helios__pubkeyhash__is_valid_data(__core__headList__safe(fields_8))\n                                }, () -> {\n                                    false\n                                })()\n                            })()\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__common__test_list_head_data = (test_head, test_tail) -> {\n        (list_2) -> {\n            __core__chooseList(list_2, () -> {\n                false\n            }, () -> {\n                __core__ifThenElse(\n                    test_head(__core__headList(list_2)),\n                    () -> {\n                        test_tail(__core__tailList(list_2))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }\n    };\n    __helios__stakinghash__is_valid_data = __helios__spendingcredential__is_valid_data;\n    __helios__common__test_list_empty = (list_3) -> {\n        __core__chooseList(list_3, true, false)\n    };\n    __helios__stakingcredential__is_valid_data = (data_33) -> {\n        __core__chooseData(data_33, () -> {\n            pair_11 = __core__unConstrData__safe(data_33);\n            tag_4 = __core__fstPair(pair_11);\n            fields_9 = __core__sndPair(pair_11);\n            __core__ifThenElse(\n                __core__equalsInteger(tag_4, 0),\n                () -> {\n                    __helios__common__test_list_head_data(__helios__stakinghash__is_valid_data, __helios__common__test_list_empty)(fields_9)\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(tag_4, 1),\n                        () -> {\n                            __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_head_data(__helios__int__is_valid_data, __helios__common__test_list_empty)))(fields_9)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__option[__helios__stakingcredential]__is_valid_data = (data_34) -> {\n        __core__chooseData(data_34, () -> {\n            pair_12 = __core__unConstrData__safe(data_34);\n            index_6 = __core__fstPair(pair_12);\n            fields_10 = __core__sndPair(pair_12);\n            __core__ifThenElse(\n                __core__equalsInteger(index_6, 0),\n                () -> {\n                    __core__chooseList(fields_10, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_10), () -> {\n                            __helios__stakingcredential__is_valid_data(__core__headList__safe(fields_10))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_6, 1),\n                        () -> {\n                            __core__chooseList(fields_10, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__address__is_valid_data = (data_35) -> {\n        __helios__common__test_constr_data_2(data_35, 0, __helios__spendingcredential__is_valid_data, __helios__option[__helios__stakingcredential]__is_valid_data)\n    };\n    __helios__validatorhash__show = __helios__bytearray__show;\n    __helios__common__find_safe = (self_100, fn_13, callback_7) -> {\n        recurse_67 = (recurse_66, self_101, fn_14) -> {\n            __core__chooseList(self_101, () -> {\n                __core__constrData(1, __helios__common__list_0)\n            }, () -> {\n                head_9 = __core__headList__safe(self_101);\n                __core__ifThenElse(\n                    fn_14(head_9),\n                    () -> {\n                        __core__constrData(0, __helios__common__list_1(callback_7(head_9)))\n                    },\n                    () -> {\n                        recurse_66(recurse_66, __core__tailList__safe(self_101), fn_14)\n                    }\n                )()\n            })()\n        };\n        recurse_67(recurse_67, self_100, fn_13)\n    };\n    __helios__spendingcredential____eq = __helios__common____eq;\n    __helios__validatorhash____to_data = __helios__bytearray____to_data;\n    __helios__spendingcredential__new_validator = (hash_1) -> {\n        __core__constrData(1, __helios__common__list_1(__helios__validatorhash____to_data(hash_1)))\n    };\n    __helios__bool____to_data = (b_13) -> {\n        __core__constrData(__core__ifThenElse(\n            b_13,\n            1,\n            0\n        ), __helios__common__list_0)\n    };\n    __helios__data__mapdata____is = (data_36) -> {\n        __core__chooseData(data_36, () -> {\n            false\n        }, () -> {\n            true\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__scriptpurpose__from_data = __helios__common__identity;\n    __module__StellarHeliosHelpers__logGroupStart = (group, __useopt__collapsed, collapsed) -> {\n        collapsed_1 = __core__ifThenElse(\n            __useopt__collapsed,\n            () -> {\n                collapsed\n            },\n            () -> {\n                false\n            }\n        )();\n        __core__ifThenElse(\n            collapsed_1,\n            () -> {\n                __helios__print(__helios__string____add(\"🐣🗜️ \", group))\n            },\n            () -> {\n                () -> {\n                    __helios__print(__helios__string____add(\"🐣\", group))\n                }()\n            }\n        )()\n    };\n    __module__StellarHeliosHelpers__logGroupEnd = (__useopt__status, status) -> {\n        status_1 = __core__ifThenElse(\n            __useopt__status,\n            () -> {\n                status\n            },\n            () -> {\n                \"\"\n            }\n        )();\n        __helios__print(__helios__string____add(\"🥚 \", status_1))\n    };\n    __module__StellarHeliosHelpers__emptyUnitFunc = () -> {\n        ()\n    };\n    __module__StellarHeliosHelpers__logGroup_1 = (__module__StellarHeliosHelpers__logGroup) -> {\n        (group_1, __useopt__collapsed_1, collapsed_2, callback_8) -> {\n            collapsed_3 = __core__ifThenElse(\n                __useopt__collapsed_1,\n                () -> {\n                    collapsed_2\n                },\n                () -> {\n                    false\n                }\n            )();\n            __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(group_1, true, collapsed_3), result_2 = callback_8();\n            __core__chooseUnit(__core__ifThenElse(\n                result_2,\n                () -> {\n                    __module__StellarHeliosHelpers__logGroupEnd(true, \"✅\")\n                },\n                () -> {\n                    () -> {\n                        __module__StellarHeliosHelpers__logGroupEnd(true, \"❌\")\n                    }()\n                }\n            )(), result_2))\n        }\n    };\n    __module__StellarHeliosHelpers__logGroupUnit = (group_2, __useopt__collapsed_2, collapsed_4, __useopt__callback, callback_9) -> {\n        collapsed_5 = __core__ifThenElse(\n            __useopt__collapsed_2,\n            () -> {\n                collapsed_4\n            },\n            () -> {\n                false\n            }\n        )();\n        callback_10 = __core__ifThenElse(\n            __useopt__callback,\n            () -> {\n                callback_9\n            },\n            () -> {\n                __module__StellarHeliosHelpers__emptyUnitFunc\n            }\n        )();\n        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(group_2, true, collapsed_5), __core__chooseUnit(callback_10(), __module__StellarHeliosHelpers__logGroupEnd(false, ())))\n    };\n    __module__StellarHeliosHelpers__TODO = (task) -> {\n        __helios__print(__helios__string____add(__helios__string____add(\"  🟥  😳💦  TODO: \", task), \"\n\"))\n    };\n    __module__StellarHeliosHelpers__REQT = (reqt, __useopt__assertion, assertion, __useopt__onError, onError, __useopt__showSuccess, showSuccess) -> {\n        assertion_1 = __core__ifThenElse(\n            __useopt__assertion,\n            () -> {\n                assertion\n            },\n            () -> {\n                true\n            }\n        )();\n        onError_1 = __core__ifThenElse(\n            __useopt__onError,\n            () -> {\n                onError\n            },\n            () -> {\n                __helios__string____add(\"  ❌ failed reqt: ❗\", reqt)\n            }\n        )();\n        showSuccess_1 = __core__ifThenElse(\n            __useopt__showSuccess,\n            () -> {\n                showSuccess\n            },\n            () -> {\n                false\n            }\n        )();\n        __core__chooseUnit(__core__ifThenElse(\n            __helios__bool__and(() -> {\n                showSuccess_1\n            }, () -> {\n                assertion_1\n            }),\n            () -> {\n                __helios__print(__helios__string____add(\"✅ ❗\", reqt))\n            },\n            () -> {\n                () -> {\n                    __helios__print(__helios__string____add(\"❗\", reqt))\n                }()\n            }\n        )(), __helios__assert(assertion_1, onError_1))\n    };\n    __module__StellarHeliosHelpers__bREQT = (reqt_1, __useopt__assertion_1, assertion_2, __useopt__onError_1, onError_2, __useopt__showSuccess_1, showSuccess_2) -> {\n        assertion_3 = __core__ifThenElse(\n            __useopt__assertion_1,\n            () -> {\n                assertion_2\n            },\n            () -> {\n                true\n            }\n        )();\n        onError_3 = __core__ifThenElse(\n            __useopt__onError_1,\n            () -> {\n                onError_2\n            },\n            () -> {\n                __helios__string____add(\"  ❌ failed reqt: ❗\", reqt_1)\n            }\n        )();\n        showSuccess_3 = __core__ifThenElse(\n            __useopt__showSuccess_1,\n            () -> {\n                showSuccess_2\n            },\n            () -> {\n                false\n            }\n        )();\n        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(reqt_1, true, assertion_3, true, onError_3, true, showSuccess_3), true)\n    };\n    __module__StellarHeliosHelpers__REQTgroupStart = (reqt_2, __useopt__collapsed_3, collapsed_6) -> {\n        collapsed_7 = __core__ifThenElse(\n            __useopt__collapsed_3,\n            () -> {\n                collapsed_6\n            },\n            () -> {\n                false\n            }\n        )();\n        __module__StellarHeliosHelpers__logGroupStart(__helios__string____add(\"❗\", reqt_2), true, collapsed_7)\n    };\n    __module__StellarHeliosHelpers__bREQTgroup = (reqt_3, __useopt__collapsed_4, collapsed_8, callback_11) -> {\n        collapsed_9 = __core__ifThenElse(\n            __useopt__collapsed_4,\n            () -> {\n                collapsed_8\n            },\n            () -> {\n                false\n            }\n        )();\n        result_3 = __module__StellarHeliosHelpers__logGroup_1(__module__StellarHeliosHelpers__logGroup_1)(__helios__string____add(\"❗\", reqt_3), collapsed_9, true, callback_11);\n        __core__chooseUnit(__helios__assert(result_3, __helios__string____add(\"❌ failed reqt: ❗\", reqt_3)), result_3)\n    };\n    __module__StellarHeliosHelpers__REQTgroupUnit = (reqt_4, __useopt__collapsed_5, collapsed_10, callback_12) -> {\n        collapsed_11 = __core__ifThenElse(\n            __useopt__collapsed_5,\n            () -> {\n                collapsed_10\n            },\n            () -> {\n                false\n            }\n        )();\n        __module__StellarHeliosHelpers__logGroupUnit(__helios__string____add(\"❗\", reqt_4), true, collapsed_11, true, callback_12)\n    };\n    __module__StellarHeliosHelpers__mkTv = (mph_10, __useopt__tn, tn, __useopt__tnBytes, tnBytes, __useopt__count, count) -> {\n        tn_1 = __core__ifThenElse(\n            __useopt__tn,\n            () -> {\n                tn\n            },\n            () -> {\n                \"\"\n            }\n        )();\n        tnBytes_1 = __core__ifThenElse(\n            __useopt__tnBytes,\n            () -> {\n                tnBytes\n            },\n            () -> {\n                __helios__string__encode_utf8(tn_1)()\n            }\n        )();\n        count_1 = __core__ifThenElse(\n            __useopt__count,\n            () -> {\n                count\n            },\n            () -> {\n                1\n            }\n        )();\n        __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__bytearray__length(tnBytes_1), 0), \"missing reqd tn or tnBytes\"), __helios__value__new(__helios__assetclass__new(mph_10, tnBytes_1), count_1))\n    };\n    __helios__list[__helios__txoutput]__find = (self_102) -> {\n        (fn_15) -> {\n            recurse_69 = (recurse_68, lst_12) -> {\n                __core__chooseList(lst_12, () -> {\n                    __helios__error(\"not found\")\n                }, () -> {\n                    item_6 = __helios__txoutput__from_data(__core__headList__safe(lst_12));\n                    __core__ifThenElse(\n                        fn_15(item_6),\n                        () -> {\n                            item_6\n                        },\n                        () -> {\n                            recurse_68(recurse_68, __core__tailList__safe(lst_12))\n                        }\n                    )()\n                })()\n            };\n            recurse_69(recurse_69, self_102)\n        }\n    };\n    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length = (self_103) -> {\n        __helios__common__length(self_103)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__length = (self_104) -> {\n        __helios__common__length(self_104)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal = (map_21) -> {\n        recurse_71 = (recurse_70, map_22) -> {\n            __core__chooseList(map_22, () -> {\n                true\n            }, () -> {\n                head_10 = __core__headList__safe(map_22);\n                __core__ifThenElse(\n                    __helios__bytearray__is_valid_data(__core__fstPair(head_10)),\n                    () -> {\n                        __core__ifThenElse(\n                            __helios__int__is_valid_data(__core__sndPair(head_10)),\n                            () -> {\n                                recurse_70(recurse_70, __core__tailList__safe(map_22))\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_71(recurse_71, map_21)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__from_data = (data_37) -> {\n        map_23 = __core__unMapData(data_37);\n        _ = __core__ifThenElse(\n            __helios__map[__helios__bytearray@__helios__int]__is_valid_data_internal(map_23),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid map data\", ())\n            }\n        )();\n        map_23\n    };\n    __helios__map[__helios__scriptpurpose@__helios__data]__get = (self_105) -> {\n        (key_15) -> {\n            __helios__common__map_get(self_105, __helios__scriptpurpose____to_data(key_15), (x_4) -> {\n                __helios__data__from_data(x_4)\n            }, () -> {\n                __helios__error(\"key not found\")\n            })\n        }\n    };\n    __helios__map[__helios__scriptpurpose@__helios__data]__find_key = (self_106) -> {\n        (fn_16) -> {\n            recurse_73 = (recurse_72, map_24) -> {\n                __core__chooseList(map_24, () -> {\n                    __helios__error(\"not found\")\n                }, () -> {\n                    item_7 = __helios__scriptpurpose__from_data(__core__fstPair(__core__headList__safe(map_24)));\n                    __core__ifThenElse(\n                        fn_16(item_7),\n                        () -> {\n                            item_7\n                        },\n                        () -> {\n                            recurse_72(recurse_72, __core__tailList__safe(map_24))\n                        }\n                    )()\n                })()\n            };\n            recurse_73(recurse_73, self_106)\n        }\n    };\n    __module__StellarHeliosHelpers__mustFindInputRedeemer = (txInput) -> {\n        targetId = __helios__txinput__output_id(txInput);\n        redeemers = __helios__tx__redeemers(__helios__scriptcontext__tx);\n        spendsExpectedInput = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(redeemers)((purpose) -> {\n            __cond = purpose;\n            __core__ifThenElse(\n                __helios__scriptpurpose__spending____is(__cond),\n                () -> {\n                    (sp) -> {\n                        __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp), targetId)\n                    }\n                },\n                () -> {\n                    (__1) -> {\n                        false\n                    }\n                }\n            )()(__cond)\n        });\n        __helios__map[__helios__scriptpurpose@__helios__data]__get(redeemers)(spendsExpectedInput)\n    };\n    __module__StellarHeliosHelpers__AnyData[]__is_valid_data = (data_38) -> {\n        __core__ifThenElse(\n            __helios__common__test_mStruct_field(data_38, __core__bData(#747065), __helios__string__is_valid_data),\n            () -> {\n                __core__ifThenElse(\n                    __helios__common__test_mStruct_field(data_38, __core__bData(#406964), __helios__bytearray__is_valid_data),\n                    () -> {\n                        true\n                    },\n                    () -> {\n                        __core__trace(\"Warning: invalid data in AnyData.@id\", () -> {\n                            false\n                        })()\n                    }\n                )()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid data in AnyData.tpe\", () -> {\n                    false\n                })()\n            }\n        )()\n    };\n    __module__StellarHeliosHelpers__AnyData[]__from_data = (data_39) -> {\n        ignore = __core__ifThenElse(\n            __module__StellarHeliosHelpers__AnyData[]__is_valid_data(data_39),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid AnyData data\", ())\n            }\n        )();\n        data_39\n    };\n    __module__StellarHeliosHelpers__AnyData[]__id = (self_107) -> {\n        __helios__bytearray__from_data(__helios__common__mStruct_field(self_107, #406964))\n    };\n    __module__StellarHeliosHelpers__AnyData[]__type = (self_108) -> {\n        __helios__string__from_data(__helios__common__mStruct_field(self_108, #747065))\n    };\n    __helios__list[__helios__data]__head = (self_109) -> {\n        __helios__data__from_data(__core__headList(self_109))\n    };\n    __module__StellarHeliosHelpers__fromCip68Wrapper = (value_7) -> {\n        __cond_1 = value_7;\n        __core__ifThenElse(\n            __helios__data__constrdata____is(__cond_1),\n            () -> {\n                (__lhs_0) -> {\n                    fields_11 = __helios__data__constrdata__fields(__lhs_0);\n                    __cond_2 = __helios__list[__helios__data]__head(fields_11);\n                    __core__ifThenElse(\n                        __helios__data__mapdata____is(__cond_2),\n                        () -> {\n                            (__lhs_0_1) -> {\n                                __helios__list[__helios__data]__head(fields_11)\n                            }\n                        },\n                        () -> {\n                            (__3) -> {\n                                __helios__error(\"bad cast from ConstrData{_, ...fields} to mStruct: first field must be a map\")\n                            }\n                        }\n                    )()(__cond_2)\n                }\n            },\n            () -> {\n                (__2) -> {\n                    __helios__error(\"bad cast to mStruct from non-ConstrData\")\n                }\n            }\n        )()(__cond_1)\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data) -> {\n        (data_40) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data(data_40),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data(data_40),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data(data_40),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1) -> {\n        (data_41) -> {\n            ignore_1 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_1, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_1)(data_41),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid DelegateLifecycleActivity data\", ())\n                }\n            )();\n            data_41\n        }\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is = (data_42) -> {\n        __helios__common__enum_tag_equals(data_42, 0)\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2 = (data_43) -> {\n        __core__chooseData(data_43, () -> {\n            pair_13 = __core__unConstrData__safe(data_43);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_13), 0),\n                () -> {\n                    data_44 = __core__listData(__core__sndPair(pair_13));\n                    __core__chooseData(data_44, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_12 = __core__unListData__safe(data_44);\n                        __core__chooseList(fields_12, () -> {\n                            false\n                        }, () -> {\n                            head_11 = __core__headList__safe(fields_12);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_11),\n                                () -> {\n                                    fields_13 = __core__tailList__safe(fields_12);\n                                    __core__chooseList(fields_13, () -> {\n                                        false\n                                    }, () -> {\n                                        head_12 = __core__headList__safe(fields_13);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_12),\n                                            () -> {\n                                                fields_14 = __core__tailList__safe(fields_13);\n                                                __core__chooseList(fields_14, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed = (self_110) -> {\n        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_110))\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose = (self_111) -> {\n        __helios__string__from_data(__helios__common__enum_field_1(self_111))\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is = (data_45) -> {\n        __helios__common__enum_tag_equals(data_45, 1)\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2 = (data_46) -> {\n        __core__chooseData(data_46, () -> {\n            pair_14 = __core__unConstrData__safe(data_46);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_14), 1),\n                () -> {\n                    data_47 = __core__listData(__core__sndPair(pair_14));\n                    __core__chooseData(data_47, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_15 = __core__unListData__safe(data_47);\n                        __core__chooseList(fields_15, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is = (data_48) -> {\n        __helios__common__enum_tag_equals(data_48, 2)\n    };\n    __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2 = (data_49) -> {\n        __core__chooseData(data_49, () -> {\n            pair_15 = __core__unConstrData__safe(data_49);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_15), 2),\n                () -> {\n                    data_50 = __core__listData(__core__sndPair(pair_15));\n                    __core__chooseData(data_50, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_16 = __core__unListData__safe(data_50);\n                        __core__chooseList(fields_16, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]____to_data = __helios__common__identity;\n    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data) -> {\n        (data_51) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data(data_51),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data(data_51),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data(data_51),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data(data_51),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data(data_51),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data(data_51),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data(data_51),\n                                                                () -> {\n                                                                    true\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data(data_51),\n                                                                        () -> {\n                                                                            true\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__from_data = (__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1) -> {\n        (data_52) -> {\n            ignore_2 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_1, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_1)(data_52),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid DelegateRole data\", ())\n                }\n            )();\n            data_52\n        }\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is = (data_53) -> {\n        __helios__common__enum_tag_equals(data_53, 0)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2 = (data_54) -> {\n        __core__chooseData(data_54, () -> {\n            pair_16 = __core__unConstrData__safe(data_54);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_16), 0),\n                () -> {\n                    data_55 = __core__listData(__core__sndPair(pair_16));\n                    __core__chooseData(data_55, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_17 = __core__unListData__safe(data_55);\n                        __core__chooseList(fields_17, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new = () -> {\n        __core__constrData(0, __core__mkNilData(()))\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is = (data_56) -> {\n        __helios__common__enum_tag_equals(data_56, 1)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2 = (data_57) -> {\n        __core__chooseData(data_57, () -> {\n            pair_17 = __core__unConstrData__safe(data_57);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_17), 1),\n                () -> {\n                    data_58 = __core__listData(__core__sndPair(pair_17));\n                    __core__chooseData(data_58, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_18 = __core__unListData__safe(data_58);\n                        __core__chooseList(fields_18, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new = () -> {\n        __core__constrData(1, __core__mkNilData(()))\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is = (data_59) -> {\n        __helios__common__enum_tag_equals(data_59, 2)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2 = (data_60) -> {\n        __core__chooseData(data_60, () -> {\n            pair_18 = __core__unConstrData__safe(data_60);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_18), 2),\n                () -> {\n                    data_61 = __core__listData(__core__sndPair(pair_18));\n                    __core__chooseData(data_61, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_19 = __core__unListData__safe(data_61);\n                        __core__chooseList(fields_19, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is = (data_62) -> {\n        __helios__common__enum_tag_equals(data_62, 3)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2 = (data_63) -> {\n        __core__chooseData(data_63, () -> {\n            pair_19 = __core__unConstrData__safe(data_63);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_19), 3),\n                () -> {\n                    data_64 = __core__listData(__core__sndPair(pair_19));\n                    __core__chooseData(data_64, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_20 = __core__unListData__safe(data_64);\n                        __core__chooseList(fields_20, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is = (data_65) -> {\n        __helios__common__enum_tag_equals(data_65, 4)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2 = (data_66) -> {\n        __core__chooseData(data_66, () -> {\n            pair_20 = __core__unConstrData__safe(data_66);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_20), 4),\n                () -> {\n                    data_67 = __core__listData(__core__sndPair(pair_20));\n                    __core__chooseData(data_67, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_21 = __core__unListData__safe(data_67);\n                        __core__chooseList(fields_21, () -> {\n                            false\n                        }, () -> {\n                            head_13 = __core__headList__safe(fields_21);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_13),\n                                () -> {\n                                    fields_22 = __core__tailList__safe(fields_21);\n                                    __core__chooseList(fields_22, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name = (self_112) -> {\n        __helios__string__from_data(__helios__common__enum_field_0(self_112))\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new = (self_113) -> {\n        __core__constrData(4, __helios__common__list_1(__helios__string____to_data(self_113)))\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is = (data_68) -> {\n        __helios__common__enum_tag_equals(data_68, 5)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2 = (data_69) -> {\n        __core__chooseData(data_69, () -> {\n            pair_21 = __core__unConstrData__safe(data_69);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_21), 5),\n                () -> {\n                    data_70 = __core__listData(__core__sndPair(pair_21));\n                    __core__chooseData(data_70, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_23 = __core__unListData__safe(data_70);\n                        __core__chooseList(fields_23, () -> {\n                            false\n                        }, () -> {\n                            head_14 = __core__headList__safe(fields_23);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_14),\n                                () -> {\n                                    fields_24 = __core__tailList__safe(fields_23);\n                                    __core__chooseList(fields_24, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is = (data_71) -> {\n        __helios__common__enum_tag_equals(data_71, 6)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2 = (data_72) -> {\n        __core__chooseData(data_72, () -> {\n            pair_22 = __core__unConstrData__safe(data_72);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_22), 6),\n                () -> {\n                    data_73 = __core__listData(__core__sndPair(pair_22));\n                    __core__chooseData(data_73, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_25 = __core__unListData__safe(data_73);\n                        __core__chooseList(fields_25, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new = () -> {\n        __core__constrData(6, __core__mkNilData(()))\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is = (data_74) -> {\n        __helios__common__enum_tag_equals(data_74, 7)\n    };\n    __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2 = (data_75) -> {\n        __core__chooseData(data_75, () -> {\n            pair_23 = __core__unConstrData__safe(data_75);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_23), 7),\n                () -> {\n                    data_76 = __core__listData(__core__sndPair(pair_23));\n                    __core__chooseData(data_76, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_26 = __core__unListData__safe(data_76);\n                        __core__chooseList(fields_26, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data) -> {\n        (data_77) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data(data_77),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data(data_77),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data(data_77),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data(data_77),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data(data_77),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__from_data = (__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1) -> {\n        (data_78) -> {\n            ignore_3 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_1, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_1)(data_78),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid ManifestActivity data\", ())\n                }\n            )();\n            data_78\n        }\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is = (data_79) -> {\n        __helios__common__enum_tag_equals(data_79, 0)\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2 = (data_80) -> {\n        __core__chooseData(data_80, () -> {\n            pair_24 = __core__unConstrData__safe(data_80);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_24), 0),\n                () -> {\n                    data_81 = __core__listData(__core__sndPair(pair_24));\n                    __core__chooseData(data_81, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_27 = __core__unListData__safe(data_81);\n                        __core__chooseList(fields_27, () -> {\n                            false\n                        }, () -> {\n                            head_15 = __core__headList__safe(fields_27);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_15),\n                                () -> {\n                                    fields_28 = __core__tailList__safe(fields_27);\n                                    __core__chooseList(fields_28, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is = (data_82) -> {\n        __helios__common__enum_tag_equals(data_82, 1)\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2 = (data_83) -> {\n        __core__chooseData(data_83, () -> {\n            pair_25 = __core__unConstrData__safe(data_83);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_25), 1),\n                () -> {\n                    data_84 = __core__listData(__core__sndPair(pair_25));\n                    __core__chooseData(data_84, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_29 = __core__unListData__safe(data_84);\n                        __core__chooseList(fields_29, () -> {\n                            false\n                        }, () -> {\n                            head_16 = __core__headList__safe(fields_29);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_16),\n                                () -> {\n                                    fields_30 = __core__tailList__safe(fields_29);\n                                    __core__chooseList(fields_30, () -> {\n                                        false\n                                    }, () -> {\n                                        head_17 = __core__headList__safe(fields_30);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_17),\n                                            () -> {\n                                                fields_31 = __core__tailList__safe(fields_30);\n                                                __core__chooseList(fields_31, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is = (data_85) -> {\n        __helios__common__enum_tag_equals(data_85, 2)\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2 = (data_86) -> {\n        __core__chooseData(data_86, () -> {\n            pair_26 = __core__unConstrData__safe(data_86);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_26), 2),\n                () -> {\n                    data_87 = __core__listData(__core__sndPair(pair_26));\n                    __core__chooseData(data_87, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_32 = __core__unListData__safe(data_87);\n                        __core__chooseList(fields_32, () -> {\n                            false\n                        }, () -> {\n                            head_18 = __core__headList__safe(fields_32);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_18),\n                                () -> {\n                                    fields_33 = __core__tailList__safe(fields_32);\n                                    __core__chooseList(fields_33, () -> {\n                                        false\n                                    }, () -> {\n                                        head_19 = __core__headList__safe(fields_33);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_19),\n                                            () -> {\n                                                fields_34 = __core__tailList__safe(fields_33);\n                                                __core__chooseList(fields_34, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key = (self_114) -> {\n        __helios__string__from_data(__helios__common__enum_field_0(self_114))\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName = (self_115) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_1(self_115))\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is = (data_88) -> {\n        __helios__common__enum_tag_equals(data_88, 3)\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2 = (data_89) -> {\n        __core__chooseData(data_89, () -> {\n            pair_27 = __core__unConstrData__safe(data_89);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_27), 3),\n                () -> {\n                    data_90 = __core__listData(__core__sndPair(pair_27));\n                    __core__chooseData(data_90, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_35 = __core__unListData__safe(data_90);\n                        __core__chooseList(fields_35, () -> {\n                            false\n                        }, () -> {\n                            head_20 = __core__headList__safe(fields_35);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_20),\n                                () -> {\n                                    fields_36 = __core__tailList__safe(fields_35);\n                                    __core__chooseList(fields_36, () -> {\n                                        false\n                                    }, () -> {\n                                        head_21 = __core__headList__safe(fields_36);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_21),\n                                            () -> {\n                                                fields_37 = __core__tailList__safe(fields_36);\n                                                __core__chooseList(fields_37, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2 = (data_91) -> {\n        __core__chooseData(data_91, () -> {\n            pair_28 = __core__unConstrData__safe(data_91);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_28), 4),\n                () -> {\n                    data_92 = __core__listData(__core__sndPair(pair_28));\n                    __core__chooseData(data_92, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_38 = __core__unListData__safe(data_92);\n                        __core__chooseList(fields_38, () -> {\n                            false\n                        }, () -> {\n                            head_22 = __core__headList__safe(fields_38);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_22),\n                                () -> {\n                                    fields_39 = __core__tailList__safe(fields_38);\n                                    __core__chooseList(fields_39, () -> {\n                                        false\n                                    }, () -> {\n                                        head_23 = __core__headList__safe(fields_39);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_23),\n                                            () -> {\n                                                fields_40 = __core__tailList__safe(fields_39);\n                                                __core__chooseList(fields_40, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data) -> {\n        (data_93) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data(data_93),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data(data_93),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data(data_93),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data = (__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1) -> {\n        (data_94) -> {\n            ignore_4 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_1, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_1)(data_94),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid PendingDelegateAction data\", ())\n                }\n            )();\n            data_94\n        }\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is = (data_95) -> {\n        __helios__common__enum_tag_equals(data_95, 0)\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2 = (data_96) -> {\n        __core__chooseData(data_96, () -> {\n            pair_29 = __core__unConstrData__safe(data_96);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_29), 0),\n                () -> {\n                    data_97 = __core__listData(__core__sndPair(pair_29));\n                    __core__chooseData(data_97, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_41 = __core__unListData__safe(data_97);\n                        __core__chooseList(fields_41, () -> {\n                            false\n                        }, () -> {\n                            head_24 = __core__headList__safe(fields_41);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_24),\n                                () -> {\n                                    fields_42 = __core__tailList__safe(fields_41);\n                                    __core__chooseList(fields_42, () -> {\n                                        false\n                                    }, () -> {\n                                        head_25 = __core__headList__safe(fields_42);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_25),\n                                            () -> {\n                                                fields_43 = __core__tailList__safe(fields_42);\n                                                __core__chooseList(fields_43, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_26 = __core__headList__safe(fields_43);\n                                                    __core__ifThenElse(\n                                                        __helios__string__is_valid_data(head_26),\n                                                        () -> {\n                                                            fields_44 = __core__tailList__safe(fields_43);\n                                                            __core__chooseList(fields_44, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed = (self_116) -> {\n        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_116))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose = (self_117) -> {\n        __helios__string__from_data(__helios__common__enum_field_1(self_117))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix = (self_118) -> {\n        __helios__string__from_data(__helios__common__enum_field_2(self_118))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is = (data_98) -> {\n        __helios__common__enum_tag_equals(data_98, 1)\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2 = (data_99) -> {\n        __core__chooseData(data_99, () -> {\n            pair_30 = __core__unConstrData__safe(data_99);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_30), 1),\n                () -> {\n                    data_100 = __core__listData(__core__sndPair(pair_30));\n                    __core__chooseData(data_100, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_45 = __core__unListData__safe(data_100);\n                        __core__chooseList(fields_45, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is = (data_101) -> {\n        __helios__common__enum_tag_equals(data_101, 2)\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2 = (data_102) -> {\n        __core__chooseData(data_102, () -> {\n            pair_31 = __core__unConstrData__safe(data_102);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_31), 2),\n                () -> {\n                    data_103 = __core__listData(__core__sndPair(pair_31));\n                    __core__chooseData(data_103, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_46 = __core__unListData__safe(data_103);\n                        __core__chooseList(fields_46, () -> {\n                            false\n                        }, () -> {\n                            head_27 = __core__headList__safe(fields_46);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_27),\n                                () -> {\n                                    fields_47 = __core__tailList__safe(fields_46);\n                                    __core__chooseList(fields_47, () -> {\n                                        false\n                                    }, () -> {\n                                        head_28 = __core__headList__safe(fields_47);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_28),\n                                            () -> {\n                                                fields_48 = __core__tailList__safe(fields_47);\n                                                __core__chooseList(fields_48, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_29 = __core__headList__safe(fields_48);\n                                                    __core__ifThenElse(\n                                                        __helios__string__is_valid_data(head_29),\n                                                        () -> {\n                                                            fields_49 = __core__tailList__safe(fields_48);\n                                                            __core__chooseList(fields_49, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_30 = __core__headList__safe(fields_49);\n                                                                __core__ifThenElse(\n                                                                    __helios__assetclass__is_valid_data(head_30),\n                                                                    () -> {\n                                                                        fields_50 = __core__tailList__safe(fields_49);\n                                                                        __core__chooseList(fields_50, true, false)\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed = (self_119) -> {\n        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_119))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose = (self_120) -> {\n        __helios__string__from_data(__helios__common__enum_field_1(self_120))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix = (self_121) -> {\n        __helios__string__from_data(__helios__common__enum_field_2(self_121))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt = (self_122) -> {\n        __helios__assetclass__from_data(__helios__common__enum_field_3(self_122))\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq = __helios__common____eq;\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data) -> {\n        (data_104) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data(data_104),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data(data_104),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data(data_104),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data(data_104),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data(data_104),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data(data_104),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data(data_104),\n                                                                () -> {\n                                                                    true\n                                                                },\n                                                                () -> {\n                                                                    false\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data = (__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1) -> {\n        (data_105) -> {\n            ignore_5 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_1, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_1)(data_105),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid CapoLifecycleActivity data\", ())\n                }\n            )();\n            data_105\n        }\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is = (data_106) -> {\n        __helios__common__enum_tag_equals(data_106, 0)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2 = (data_107) -> {\n        __core__chooseData(data_107, () -> {\n            pair_32 = __core__unConstrData__safe(data_107);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_32), 0),\n                () -> {\n                    data_108 = __core__listData(__core__sndPair(pair_32));\n                    __core__chooseData(data_108, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_51 = __core__unListData__safe(data_108);\n                        __core__chooseList(fields_51, () -> {\n                            false\n                        }, () -> {\n                            head_31 = __core__headList__safe(fields_51);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_31),\n                                () -> {\n                                    fields_52 = __core__tailList__safe(fields_51);\n                                    __core__chooseList(fields_52, () -> {\n                                        false\n                                    }, () -> {\n                                        head_32 = __core__headList__safe(fields_52);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_32),\n                                            () -> {\n                                                fields_53 = __core__tailList__safe(fields_52);\n                                                __core__chooseList(fields_53, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed = (self_123) -> {\n        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_123))\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose = (self_124) -> {\n        __helios__string__from_data(__helios__common__enum_field_1(self_124))\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is = (data_109) -> {\n        __helios__common__enum_tag_equals(data_109, 1)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2 = (data_110) -> {\n        __core__chooseData(data_110, () -> {\n            pair_33 = __core__unConstrData__safe(data_110);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_33), 1),\n                () -> {\n                    data_111 = __core__listData(__core__sndPair(pair_33));\n                    __core__chooseData(data_111, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_54 = __core__unListData__safe(data_111);\n                        __core__chooseList(fields_54, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is = (data_112) -> {\n        __helios__common__enum_tag_equals(data_112, 2)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2 = (data_113) -> {\n        __core__chooseData(data_113, () -> {\n            pair_34 = __core__unConstrData__safe(data_113);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_34), 2),\n                () -> {\n                    data_114 = __core__listData(__core__sndPair(pair_34));\n                    __core__chooseData(data_114, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_55 = __core__unListData__safe(data_114);\n                        __core__chooseList(fields_55, () -> {\n                            false\n                        }, () -> {\n                            head_33 = __core__headList__safe(fields_55);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_33),\n                                () -> {\n                                    fields_56 = __core__tailList__safe(fields_55);\n                                    __core__chooseList(fields_56, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is = (data_115) -> {\n        __helios__common__enum_tag_equals(data_115, 3)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2 = (data_116) -> {\n        __core__chooseData(data_116, () -> {\n            pair_35 = __core__unConstrData__safe(data_116);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_35), 3),\n                () -> {\n                    data_117 = __core__listData(__core__sndPair(pair_35));\n                    __core__chooseData(data_117, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_57 = __core__unListData__safe(data_117);\n                        __core__chooseList(fields_57, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is = (data_118) -> {\n        __helios__common__enum_tag_equals(data_118, 4)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2 = (data_119) -> {\n        __core__chooseData(data_119, () -> {\n            pair_36 = __core__unConstrData__safe(data_119);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_36), 4),\n                () -> {\n                    data_120 = __core__listData(__core__sndPair(pair_36));\n                    __core__chooseData(data_120, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_58 = __core__unListData__safe(data_120);\n                        __core__chooseList(fields_58, () -> {\n                            false\n                        }, () -> {\n                            head_34 = __core__headList__safe(fields_58);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_34),\n                                () -> {\n                                    fields_59 = __core__tailList__safe(fields_58);\n                                    __core__chooseList(fields_59, () -> {\n                                        false\n                                    }, () -> {\n                                        head_35 = __core__headList__safe(fields_59);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_35),\n                                            () -> {\n                                                fields_60 = __core__tailList__safe(fields_59);\n                                                __core__chooseList(fields_60, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is = (data_121) -> {\n        __helios__common__enum_tag_equals(data_121, 5)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2 = (data_122) -> {\n        __core__chooseData(data_122, () -> {\n            pair_37 = __core__unConstrData__safe(data_122);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_37), 5),\n                () -> {\n                    data_123 = __core__listData(__core__sndPair(pair_37));\n                    __core__chooseData(data_123, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_61 = __core__unListData__safe(data_123);\n                        __core__chooseList(fields_61, () -> {\n                            false\n                        }, () -> {\n                            head_36 = __core__headList__safe(fields_61);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_36),\n                                () -> {\n                                    fields_62 = __core__tailList__safe(fields_61);\n                                    __core__chooseList(fields_62, () -> {\n                                        false\n                                    }, () -> {\n                                        head_37 = __core__headList__safe(fields_62);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_37),\n                                            () -> {\n                                                fields_63 = __core__tailList__safe(fields_62);\n                                                __core__chooseList(fields_63, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is = (data_124) -> {\n        __helios__common__enum_tag_equals(data_124, 6)\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2 = (data_125) -> {\n        __core__chooseData(data_125, () -> {\n            pair_38 = __core__unConstrData__safe(data_125);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_38), 6),\n                () -> {\n                    data_126 = __core__listData(__core__sndPair(pair_38));\n                    __core__chooseData(data_126, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_64 = __core__unListData__safe(data_126);\n                        __core__chooseList(fields_64, () -> {\n                            false\n                        }, () -> {\n                            head_38 = __core__headList__safe(fields_64);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_38),\n                                () -> {\n                                    fields_65 = __core__tailList__safe(fields_64);\n                                    __core__chooseList(fields_65, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity = (self_125) -> {\n        __module__CapoDelegateHelpers__ManifestActivity[]__from_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(__helios__common__enum_field_0(self_125))\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]____to_data = __helios__common__identity;\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data) -> {\n        (data_127) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data(data_127),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data(data_127),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data(data_127),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data(data_127),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data(data_127),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data(data_127),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data(data_127),\n                                                                () -> {\n                                                                    true\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data(data_127),\n                                                                        () -> {\n                                                                            true\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data(data_127),\n                                                                                () -> {\n                                                                                    true\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data(data_127),\n                                                                                        () -> {\n                                                                                            true\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __helios__list[__helios__string]__join = (self_126) -> {\n        (__useopt__separator, separator) -> {\n            separator_1 = __core__ifThenElse(\n                __useopt__separator,\n                separator,\n                \"\"\n            );\n            recurse_75 = (recurse_74, lst_13, sep) -> {\n                __core__chooseList(lst_13, () -> {\n                    \"\"\n                }, () -> {\n                    __helios__string____add(__helios__string____add(sep, __helios__string__from_data(__core__headList__safe(lst_13))), recurse_74(recurse_74, __core__tailList__safe(lst_13), separator_1))\n                })()\n            };\n            recurse_75(recurse_75, self_126, \"\")\n        }\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data = (__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_1) -> {\n        (data_128) -> {\n            ignore_6 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__is_valid_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_1, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_1)(data_128),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid AbstractDelegateActivitiesEnum data\", ())\n                }\n            )();\n            data_128\n        }\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2 = (data_129) -> {\n        __core__chooseData(data_129, () -> {\n            pair_39 = __core__unConstrData__safe(data_129);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_39), 0),\n                () -> {\n                    data_130 = __core__listData(__core__sndPair(pair_39));\n                    __core__chooseData(data_130, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_66 = __core__unListData__safe(data_130);\n                        __core__chooseList(fields_66, () -> {\n                            false\n                        }, () -> {\n                            head_39 = __core__headList__safe(fields_66);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_39),\n                                () -> {\n                                    fields_67 = __core__tailList__safe(fields_66);\n                                    __core__chooseList(fields_67, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is = (data_131) -> {\n        __helios__common__enum_tag_equals(data_131, 1)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2 = (data_132) -> {\n        __core__chooseData(data_132, () -> {\n            pair_40 = __core__unConstrData__safe(data_132);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_40), 1),\n                () -> {\n                    data_133 = __core__listData(__core__sndPair(pair_40));\n                    __core__chooseData(data_133, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_68 = __core__unListData__safe(data_133);\n                        __core__chooseList(fields_68, () -> {\n                            false\n                        }, () -> {\n                            head_40 = __core__headList__safe(fields_68);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_40),\n                                () -> {\n                                    fields_69 = __core__tailList__safe(fields_68);\n                                    __core__chooseList(fields_69, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity = (self_127) -> {\n        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_127))\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is = (data_134) -> {\n        __helios__common__enum_tag_equals(data_134, 2)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2 = (data_135) -> {\n        __core__chooseData(data_135, () -> {\n            pair_41 = __core__unConstrData__safe(data_135);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_41), 2),\n                () -> {\n                    data_136 = __core__listData(__core__sndPair(pair_41));\n                    __core__chooseData(data_136, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_70 = __core__unListData__safe(data_136);\n                        __core__chooseList(fields_70, () -> {\n                            false\n                        }, () -> {\n                            head_41 = __core__headList__safe(fields_70);\n                            __core__ifThenElse(\n                                __helios__data__is_valid_data(head_41),\n                                () -> {\n                                    fields_71 = __core__tailList__safe(fields_70);\n                                    __core__chooseList(fields_71, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity = (self_128) -> {\n        __helios__data__from_data(__helios__common__enum_field_0(self_128))\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is = (data_137) -> {\n        __helios__common__enum_tag_equals(data_137, 3)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2 = (data_138) -> {\n        __core__chooseData(data_138, () -> {\n            pair_42 = __core__unConstrData__safe(data_138);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_42), 3),\n                () -> {\n                    data_139 = __core__listData(__core__sndPair(pair_42));\n                    __core__chooseData(data_139, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_72 = __core__unListData__safe(data_139);\n                        __core__chooseList(fields_72, () -> {\n                            false\n                        }, () -> {\n                            head_42 = __core__headList__safe(fields_72);\n                            __core__ifThenElse(\n                                __helios__data__is_valid_data(head_42),\n                                () -> {\n                                    fields_73 = __core__tailList__safe(fields_72);\n                                    __core__chooseList(fields_73, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity = (self_129) -> {\n        __helios__data__from_data(__helios__common__enum_field_0(self_129))\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2 = (data_140) -> {\n        __core__chooseData(data_140, () -> {\n            pair_43 = __core__unConstrData__safe(data_140);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_43), 4),\n                () -> {\n                    data_141 = __core__listData(__core__sndPair(pair_43));\n                    __core__chooseData(data_141, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_74 = __core__unListData__safe(data_141);\n                        __core__chooseList(fields_74, () -> {\n                            false\n                        }, () -> {\n                            head_43 = __core__headList__safe(fields_74);\n                            __core__ifThenElse(\n                                __helios__data__is_valid_data(head_43),\n                                () -> {\n                                    fields_75 = __core__tailList__safe(fields_74);\n                                    __core__chooseList(fields_75, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is = (data_142) -> {\n        __helios__common__enum_tag_equals(data_142, 5)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2 = (data_143) -> {\n        __core__chooseData(data_143, () -> {\n            pair_44 = __core__unConstrData__safe(data_143);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_44), 5),\n                () -> {\n                    data_144 = __core__listData(__core__sndPair(pair_44));\n                    __core__chooseData(data_144, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_76 = __core__unListData__safe(data_144);\n                        __core__chooseList(fields_76, () -> {\n                            false\n                        }, () -> {\n                            head_44 = __core__headList__safe(fields_76);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_44),\n                                () -> {\n                                    fields_77 = __core__tailList__safe(fields_76);\n                                    __core__chooseList(fields_77, () -> {\n                                        false\n                                    }, () -> {\n                                        head_45 = __core__headList__safe(fields_77);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_45),\n                                            () -> {\n                                                fields_78 = __core__tailList__safe(fields_77);\n                                                __core__chooseList(fields_78, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is = (data_145) -> {\n        __helios__common__enum_tag_equals(data_145, 6)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2 = (data_146) -> {\n        __core__chooseData(data_146, () -> {\n            pair_45 = __core__unConstrData__safe(data_146);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_45), 6),\n                () -> {\n                    data_147 = __core__listData(__core__sndPair(pair_45));\n                    __core__chooseData(data_147, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_79 = __core__unListData__safe(data_147);\n                        __core__chooseList(fields_79, () -> {\n                            false\n                        }, () -> {\n                            head_46 = __core__headList__safe(fields_79);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_46),\n                                () -> {\n                                    fields_80 = __core__tailList__safe(fields_79);\n                                    __core__chooseList(fields_80, () -> {\n                                        false\n                                    }, () -> {\n                                        head_47 = __core__headList__safe(fields_80);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_47),\n                                            () -> {\n                                                fields_81 = __core__tailList__safe(fields_80);\n                                                __core__chooseList(fields_81, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is = (data_148) -> {\n        __helios__common__enum_tag_equals(data_148, 7)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2 = (data_149) -> {\n        __core__chooseData(data_149, () -> {\n            pair_46 = __core__unConstrData__safe(data_149);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_46), 7),\n                () -> {\n                    data_150 = __core__listData(__core__sndPair(pair_46));\n                    __core__chooseData(data_150, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_82 = __core__unListData__safe(data_150);\n                        __core__chooseList(fields_82, () -> {\n                            false\n                        }, () -> {\n                            head_48 = __core__headList__safe(fields_82);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_48),\n                                () -> {\n                                    fields_83 = __core__tailList__safe(fields_82);\n                                    __core__chooseList(fields_83, () -> {\n                                        false\n                                    }, () -> {\n                                        head_49 = __core__headList__safe(fields_83);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_49),\n                                            () -> {\n                                                fields_84 = __core__tailList__safe(fields_83);\n                                                __core__chooseList(fields_84, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is = (data_151) -> {\n        __helios__common__enum_tag_equals(data_151, 8)\n    };\n    __helios__list[__helios__data]__is_valid_data_internal = (lst_14) -> {\n        recurse_77 = (recurse_76, lst_15) -> {\n            __core__chooseList(lst_15, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    __helios__data__is_valid_data(__core__headList__safe(lst_15)),\n                    () -> {\n                        recurse_76(recurse_76, __core__tailList__safe(lst_15))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_77(recurse_77, lst_14)\n    };\n    __helios__list[__helios__data]__is_valid_data = (data_152) -> {\n        __core__chooseData(data_152, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            __helios__list[__helios__data]__is_valid_data_internal(__core__unListData__safe(data_152))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2 = (data_153) -> {\n        __core__chooseData(data_153, () -> {\n            pair_47 = __core__unConstrData__safe(data_153);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_47), 8),\n                () -> {\n                    data_154 = __core__listData(__core__sndPair(pair_47));\n                    __core__chooseData(data_154, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_85 = __core__unListData__safe(data_154);\n                        __core__chooseList(fields_85, () -> {\n                            false\n                        }, () -> {\n                            head_50 = __core__headList__safe(fields_85);\n                            __core__ifThenElse(\n                                __helios__list[__helios__data]__is_valid_data(head_50),\n                                () -> {\n                                    fields_86 = __core__tailList__safe(fields_85);\n                                    __core__chooseList(fields_86, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__list[__helios__data]__from_data = (data_155) -> {\n        lst_16 = __core__unListData(data_155);\n        __4 = __core__ifThenElse(\n            __helios__list[__helios__data]__is_valid_data_internal(lst_16),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid list data\", ())\n            }\n        )();\n        lst_16\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities = (self_130) -> {\n        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_130))\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities____is = (data_156) -> {\n        __helios__common__enum_tag_equals(data_156, 9)\n    };\n    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2 = (data_157) -> {\n        __core__chooseData(data_157, () -> {\n            pair_48 = __core__unConstrData__safe(data_157);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_48), 9),\n                () -> {\n                    data_158 = __core__listData(__core__sndPair(pair_48));\n                    __core__chooseData(data_158, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_87 = __core__unListData__safe(data_158);\n                        __core__chooseList(fields_87, () -> {\n                            false\n                        }, () -> {\n                            head_51 = __core__headList__safe(fields_87);\n                            __core__ifThenElse(\n                                __helios__data__is_valid_data(head_51),\n                                () -> {\n                                    fields_88 = __core__tailList__safe(fields_87);\n                                    __core__chooseList(fields_88, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is = (data_159) -> {\n        __helios__common__enum_tag_equals(data_159, 0)\n    };\n    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new = () -> {\n        __core__constrData(0, __core__mkNilData(()))\n    };\n    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is = (data_160) -> {\n        __helios__common__enum_tag_equals(data_160, 1)\n    };\n    __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new = () -> {\n        __core__constrData(1, __core__mkNilData(()))\n    };\n    __helios__option[__helios__validatorhash]__is_valid_data = (data_161) -> {\n        __core__chooseData(data_161, () -> {\n            pair_49 = __core__unConstrData__safe(data_161);\n            index_7 = __core__fstPair(pair_49);\n            fields_89 = __core__sndPair(pair_49);\n            __core__ifThenElse(\n                __core__equalsInteger(index_7, 0),\n                () -> {\n                    __core__chooseList(fields_89, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_89), () -> {\n                            __helios__validatorhash__is_valid_data(__core__headList__safe(fields_89))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_7, 1),\n                        () -> {\n                            __core__chooseList(fields_89, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data = (data_162) -> {\n        __core__chooseData(data_162, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_90 = __core__unListData__safe(data_162);\n            __core__chooseList(fields_90, () -> {\n                false\n            }, () -> {\n                head_52 = __core__headList__safe(fields_90);\n                __core__ifThenElse(\n                    __helios__string__is_valid_data(head_52),\n                    () -> {\n                        fields_91 = __core__tailList__safe(fields_90);\n                        __core__chooseList(fields_91, () -> {\n                            false\n                        }, () -> {\n                            head_53 = __core__headList__safe(fields_91);\n                            __core__ifThenElse(\n                                __helios__option[__helios__validatorhash]__is_valid_data(head_53),\n                                () -> {\n                                    fields_92 = __core__tailList__safe(fields_91);\n                                    __core__chooseList(fields_92, () -> {\n                                        false\n                                    }, () -> {\n                                        head_54 = __core__headList__safe(fields_92);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_54),\n                                            () -> {\n                                                fields_93 = __core__tailList__safe(fields_92);\n                                                __core__chooseList(fields_93, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]____eq = __helios__struct____eq;\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data = (data_163) -> {\n        ignore_7 = __core__ifThenElse(\n            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(data_163),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid RelativeDelegateLink data\", ())\n            }\n        )();\n        __core__unListData(data_163)\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data = __helios__struct____to_data;\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName = (self_131) -> {\n        __helios__string__from_data(__helios__common__struct_field_0(self_131))\n    };\n    __helios__option[__helios__validatorhash]__from_data = (data_164) -> {\n        __5 = __core__ifThenElse(\n            __helios__option[__helios__validatorhash]__is_valid_data(data_164),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid option data\", ())\n            }\n        )();\n        data_164\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash = (self_132) -> {\n        __helios__option[__helios__validatorhash]__from_data(__helios__common__struct_field_1(self_132))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken = (self_133) -> {\n        (mph_11) -> {\n            __module__StellarHeliosHelpers__mkTv(mph_11, true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_133), false, (), false, ())\n        }\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken = (self_134) -> {\n        (mph_12) -> {\n            __helios__assetclass__new(mph_12, __helios__string__encode_utf8(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_134))())\n        }\n    };\n    __helios__option[__helios__txinput]__none____is = (data_165) -> {\n        __helios__common__enum_tag_equals(data_165, 1)\n    };\n    __helios__option[__helios__bool]__none____new = () -> {\n        __helios__option__NONE\n    };\n    __helios__option[__helios__bool]__some____new = (some_1) -> {\n        __core__constrData(0, __helios__common__list_1(__helios__bool____to_data(some_1)))\n    };\n    __helios__option[__helios__txinput]__some__some = (self_135) -> {\n        __helios__txinput__from_data(__helios__common__enum_field_0(self_135))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings = (__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput) -> {\n        (self_136) -> {\n            (inputs, mph_13, inputRequired) -> {\n                __cond_3 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput(self_136)(inputs, mph_13, true, inputRequired);\n                __core__ifThenElse(\n                    __helios__option[__helios__txinput]__none____is(__cond_3),\n                    () -> {\n                        (__lhs_0_5) -> {\n                            __helios__option[__helios__bool]__none____new()\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_2) -> {\n                            spendDelegateInput = __helios__option[__helios__txinput]__some__some(__lhs_0_2);\n                            (spendDelegateIsValid) -> {\n                                __core__chooseUnit(__helios__assert(spendDelegateIsValid, \"no way o\"), __helios__option[__helios__bool]__some____new(spendDelegateIsValid))\n                            }(__cond_4 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(spendDelegateInput));\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_4),\n                                () -> {\n                                    (__lhs_0_3) -> {\n                                        a_13 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_3);\n                                        __cond_5 = a_13;\n                                        __core__ifThenElse(\n                                            __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings____is(__cond_5),\n                                            () -> {\n                                                (__lhs_0_4) -> {\n                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput(self_136)(mph_13, false, (), false, ())\n                                                }\n                                            },\n                                            () -> {\n                                                (__7) -> {\n                                                    __helios__error(__helios__string____add(\"delegate not ValidatingSettings: \", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_136)))\n                                                }\n                                            }\n                                        )()(__cond_5)\n                                    }\n                                },\n                                () -> {\n                                    (__6) -> {\n                                        __helios__error(\"no way n\")\n                                    }\n                                }\n                            )()(__cond_4))\n                        }\n                    }\n                )()(__cond_3)\n            }\n        }\n    };\n    __helios__option[__helios__validatorhash]__none____is = (data_166) -> {\n        __helios__common__enum_tag_equals(data_166, 1)\n    };\n    __helios__option[__helios__txinput]__none____new = () -> {\n        __helios__option__NONE\n    };\n    __helios__option[__helios__txinput]__some____is = (data_167) -> {\n        __helios__common__enum_tag_equals(data_167, 0)\n    };\n    __helios__list[__helios__txinput]__find_safe = (self_137) -> {\n        (fn_17) -> {\n            __helios__common__find_safe(self_137, (item_8) -> {\n                fn_17(__helios__txinput__from_data(item_8))\n            }, __helios__common__identity)\n        }\n    };\n    __helios__option[__helios__validatorhash]__some__some = (self_138) -> {\n        __helios__validatorhash__from_data(__helios__common__enum_field_0(self_138))\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1 = (self_139) -> {\n        (inputs_1, mph_14, __useopt__required, required) -> {\n            required_1 = __core__ifThenElse(\n                __useopt__required,\n                () -> {\n                    required\n                },\n                () -> {\n                    true\n                }\n            )();\n            uutName = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(self_139);\n            __cond_6 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(self_139);\n            __core__ifThenElse(\n                __helios__option[__helios__validatorhash]__none____is(__cond_6),\n                () -> {\n                    (__lhs_0_8) -> {\n                        __core__ifThenElse(\n                            required_1,\n                            () -> {\n                                __helios__error(__helios__string____add(\"❌❌ ➡️ 💁 missing required input with dgTkn \", uutName))\n                            },\n                            () -> {\n                                () -> {\n                                    __helios__option[__helios__txinput]__none____new()\n                                }()\n                            }\n                        )()\n                    }\n                },\n                () -> {\n                    (__lhs_0_6) -> {\n                        vh_2 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_6);\n                        needsAddrWithCred = __helios__spendingcredential__new_validator(vh_2);\n                        ac = __helios__assetclass__new(mph_14, __helios__string__encode_utf8(uutName)());\n                        __core__chooseUnit(__helios__print(__helios__string____add(\"  -- seeking input dgTkn: \", uutName)), __cond_7 = __helios__list[__helios__txinput]__find_safe(inputs_1)((i_7) -> {\n                            __helios__bool__and(() -> {\n                                __helios__spendingcredential____eq(__helios__address__credential(__helios__txinput__address(i_7)), needsAddrWithCred)\n                            }, () -> {\n                                __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_7))(ac), 0)\n                            })\n                        });\n                        __core__ifThenElse(\n                            __helios__option[__helios__txinput]__some____is(__cond_7),\n                            () -> {\n                                (foundGood) -> {\n                                    __core__chooseUnit(__helios__print(\"     ✅ ➡️  💁 found ^ input dgTkn\"), foundGood)\n                                }\n                            },\n                            () -> {\n                                (__lhs_0_7) -> {\n                                    __core__ifThenElse(\n                                        required_1,\n                                        () -> {\n                                            __helios__error(__helios__string____add(\"_❌ ➡️  💁 missing req'd input dgTkn (at script addr) \", uutName))\n                                        },\n                                        () -> {\n                                            () -> {\n                                                __core__chooseUnit(__helios__print(\" <- 🚫 ➡️ 💁 no input with ^ dgTkn; not req'd; returning false\n\"), __helios__option[__helios__txinput]__none____new())\n                                            }()\n                                        }\n                                    )()\n                                }\n                            }\n                        )()(__cond_7))\n                    }\n                }\n            )()(__cond_6)\n        }\n    };\n    __helios__option[__helios__validatorhash]__some____is = (data_168) -> {\n        __helios__common__enum_tag_equals(data_168, 0)\n    };\n    __helios__option[__helios__txoutput]__some____is = (data_169) -> {\n        __helios__common__enum_tag_equals(data_169, 0)\n    };\n    __helios__list[__helios__txoutput]__find_safe = (self_140) -> {\n        (fn_18) -> {\n            __helios__common__find_safe(self_140, (item_9) -> {\n                fn_18(__helios__txoutput__from_data(item_9))\n            }, __helios__common__identity)\n        }\n    };\n    __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1 = (self_141) -> {\n        (mph_15, __useopt__required_1, required_2, __useopt__createdOrReturned, createdOrReturned) -> {\n            required_3 = __core__ifThenElse(\n                __useopt__required_1,\n                () -> {\n                    required_2\n                },\n                () -> {\n                    true\n                }\n            )();\n            createdOrReturned_1 = __core__ifThenElse(\n                __useopt__createdOrReturned,\n                () -> {\n                    createdOrReturned\n                },\n                () -> {\n                    __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____new()\n                }\n            )();\n            __lhs_0_9 = self_141;\n            uut = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_9);\n            validatorHash = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_9);\n            ac_1 = __helios__assetclass__new(mph_15, __helios__string__encode_utf8(uut)());\n            (cOrR) -> {\n                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\" ⬅️ 🔎 💁 expect dgTkn \", cOrR), \": \"), uut)), (hasDelegate) -> {\n                    __core__chooseUnit(__core__ifThenElse(\n                        __helios__bool__and(() -> {\n                            __helios__bool____not(hasDelegate)\n                        }, () -> {\n                            required_3\n                        }),\n                        () -> {\n                            __cond_11 = createdOrReturned_1;\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DgTknDisposition[]__Created____is(__cond_11),\n                                () -> {\n                                    (__lhs_0_18) -> {\n                                        __helios__error(__helios__string____add(\"⬅️ ❌ 💁 dgTkn not created: \", uut))\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_16) -> {\n                                        __lhs_0_17 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(self_141)(__helios__tx__inputs(__helios__scriptcontext__tx), mph_15, true, true);\n                                        __helios__error(__helios__string____add(\"⬅️ ❌ 💁 dgTkn not returned: \", uut))\n                                    }\n                                }\n                            )()(__cond_11)\n                        },\n                        () -> {\n                            () -> {\n                                __core__ifThenElse(\n                                    hasDelegate,\n                                    () -> {\n                                        __helios__print(__helios__string____add(__helios__string____add(\"✅ ⬅️ 💁 ok:  ^ dgTkn has \", cOrR), \" a valid output\"))\n                                    },\n                                    () -> {\n                                        () -> {\n                                            __helios__print(\" ⬅️  ok 🚫💁 no delegate but not req'd; false\")\n                                        }()\n                                    }\n                                )()\n                            }()\n                        }\n                    )(), hasDelegate)\n                }(__cond_9 = validatorHash;\n                __core__ifThenElse(\n                    __helios__option[__helios__validatorhash]__some____is(__cond_9),\n                    () -> {\n                        (__lhs_0_15) -> {\n                            vh_3 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_15);\n                            __core__chooseUnit(__helios__print(__helios__string____add(\"  ... ^ sent to validator: \", __helios__validatorhash__show(vh_3)())), __helios__int____gt(__helios__value__get_safe(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_3))(ac_1), 0))\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_12) -> {\n                            __core__chooseUnit(__helios__print(\"   (to anywhere)\"), __cond_10 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o) -> {\n                                __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(o))(ac_1), 0)\n                            });\n                            __core__ifThenElse(\n                                __helios__option[__helios__txoutput]__some____is(__cond_10),\n                                () -> {\n                                    (__lhs_0_14) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_13) -> {\n                                        false\n                                    }\n                                }\n                            )()(__cond_10))\n                        }\n                    }\n                )()(__cond_9)))\n            }(__cond_8 = createdOrReturned_1;\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__DgTknDisposition[]__Returned____is(__cond_8),\n                () -> {\n                    (__lhs_0_11) -> {\n                        \"returned\"\n                    }\n                },\n                () -> {\n                    (__lhs_0_10) -> {\n                        \"created\"\n                    }\n                }\n            )()(__cond_8))\n        }\n    };\n    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_170) -> {\n        __core__chooseData(data_170, () -> {\n            pair_50 = __core__unConstrData__safe(data_170);\n            index_8 = __core__fstPair(pair_50);\n            fields_94 = __core__sndPair(pair_50);\n            __core__ifThenElse(\n                __core__equalsInteger(index_8, 0),\n                () -> {\n                    __core__chooseList(fields_94, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_94), () -> {\n                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(fields_94))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_8, 1),\n                        () -> {\n                            __core__chooseList(fields_94, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data = (data_171) -> {\n        __core__chooseData(data_171, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_95 = __core__unListData__safe(data_171);\n            __core__chooseList(fields_95, () -> {\n                false\n            }, () -> {\n                head_55 = __core__headList__safe(fields_95);\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__PendingDelegateAction[]__is_valid_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(head_55),\n                    () -> {\n                        fields_96 = __core__tailList__safe(fields_95);\n                        __core__chooseList(fields_96, () -> {\n                            false\n                        }, () -> {\n                            head_56 = __core__headList__safe(fields_96);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_56),\n                                () -> {\n                                    fields_97 = __core__tailList__safe(fields_96);\n                                    __core__chooseList(fields_97, () -> {\n                                        false\n                                    }, () -> {\n                                        head_57 = __core__headList__safe(fields_97);\n                                        __core__ifThenElse(\n                                            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_57),\n                                            () -> {\n                                                fields_98 = __core__tailList__safe(fields_97);\n                                                __core__chooseList(fields_98, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data = (data_172) -> {\n        ignore_8 = __core__ifThenElse(\n            __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(data_172),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid PendingDelegateChange data\", ())\n            }\n        )();\n        __core__unListData(data_172)\n    };\n    __module__CapoDelegateHelpers__PendingDelegateChange[]__action = (self_142) -> {\n        __module__CapoDelegateHelpers__PendingDelegateAction[]__from_data(__module__CapoDelegateHelpers__PendingDelegateAction[]__Add__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove__is_valid_data_2, __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__is_valid_data_2)(__helios__common__struct_field_0(self_142))\n    };\n    __module__CapoDelegateHelpers__PendingDelegateChange[]__role = (self_143) -> {\n        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_143))\n    };\n    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_173) -> {\n        __8 = __core__ifThenElse(\n            __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(data_173),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid option data\", ())\n            }\n        )();\n        data_173\n    };\n    __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink = (self_144) -> {\n        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__struct_field_2(self_144))\n    };\n    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data) -> {\n        (data_174) -> {\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data(data_174),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data(data_174),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoDelegateHelpers__PendingCharterChange[]__from_data = (__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1) -> {\n        (data_175) -> {\n            ignore_9 = __core__ifThenElse(\n                __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_1, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_1)(data_175),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid PendingCharterChange data\", ())\n                }\n            )();\n            data_175\n        }\n    };\n    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is = (data_176) -> {\n        __helios__common__enum_tag_equals(data_176, 0)\n    };\n    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2 = (data_177) -> {\n        __core__chooseData(data_177, () -> {\n            pair_51 = __core__unConstrData__safe(data_177);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_51), 0),\n                () -> {\n                    data_178 = __core__listData(__core__sndPair(pair_51));\n                    __core__chooseData(data_178, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_99 = __core__unListData__safe(data_178);\n                        __core__chooseList(fields_99, () -> {\n                            false\n                        }, () -> {\n                            head_58 = __core__headList__safe(fields_99);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__PendingDelegateChange[]__is_valid_data(head_58),\n                                () -> {\n                                    fields_100 = __core__tailList__safe(fields_99);\n                                    __core__chooseList(fields_100, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change = (self_145) -> {\n        __module__CapoDelegateHelpers__PendingDelegateChange[]__from_data(__helios__common__enum_field_0(self_145))\n    };\n    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal = (lst_17) -> {\n        recurse_79 = (recurse_78, lst_18) -> {\n            __core__chooseList(lst_18, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__core__headList__safe(lst_18)),\n                    () -> {\n                        recurse_78(recurse_78, __core__tailList__safe(lst_18))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_79(recurse_79, lst_17)\n    };\n    __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data = (data_179) -> {\n        __core__chooseData(data_179, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data_internal(__core__unListData__safe(data_179))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2 = (data_180) -> {\n        __core__chooseData(data_180, () -> {\n            pair_52 = __core__unConstrData__safe(data_180);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_52), 1),\n                () -> {\n                    data_181 = __core__listData(__core__sndPair(pair_52));\n                    __core__chooseData(data_181, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_101 = __core__unListData__safe(data_181);\n                        __core__chooseList(fields_101, () -> {\n                            false\n                        }, () -> {\n                            head_59 = __core__headList__safe(fields_101);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__ManifestActivity[]__is_valid_data(__module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken__is_valid_data_2, __module__CapoDelegateHelpers__ManifestActivity[]__burningThreadToken__is_valid_data_2)(head_59),\n                                () -> {\n                                    fields_102 = __core__tailList__safe(fields_101);\n                                    __core__chooseList(fields_102, () -> {\n                                        false\n                                    }, () -> {\n                                        head_60 = __core__headList__safe(fields_102);\n                                        __core__ifThenElse(\n                                            __helios__list[__module__CapoDelegateHelpers__DelegateRole[]]__is_valid_data(head_60),\n                                            () -> {\n                                                fields_103 = __core__tailList__safe(fields_102);\n                                                __core__chooseList(fields_103, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data = (data_182) -> {\n        __core__chooseData(data_182, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_104 = __core__unListData__safe(data_182);\n            __core__chooseList(fields_104, () -> {\n                false\n            }, () -> {\n                head_61 = __core__headList__safe(fields_104);\n                __core__ifThenElse(\n                    __helios__address__is_valid_data(head_61),\n                    () -> {\n                        fields_105 = __core__tailList__safe(fields_104);\n                        __core__chooseList(fields_105, () -> {\n                            false\n                        }, () -> {\n                            head_62 = __core__headList__safe(fields_105);\n                            __core__ifThenElse(\n                                __helios__mintingpolicyhash__is_valid_data(head_62),\n                                () -> {\n                                    fields_106 = __core__tailList__safe(fields_105);\n                                    __core__chooseList(fields_106, () -> {\n                                        false\n                                    }, () -> {\n                                        head_63 = __core__headList__safe(fields_106);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_63),\n                                            () -> {\n                                                fields_107 = __core__tailList__safe(fields_106);\n                                                __core__chooseList(fields_107, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoDelegateHelpers__DelegationDetail[]__from_data = (data_183) -> {\n        ignore_10 = __core__ifThenElse(\n            __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(data_183),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid DelegationDetail data\", ())\n            }\n        )();\n        __core__unListData(data_183)\n    };\n    __module__CapoDelegateHelpers__DelegationDetail[]__mph = (self_146) -> {\n        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_1(self_146))\n    };\n    __module__CapoDelegateHelpers__DelegationDetail[]__tn = (self_147) -> {\n        __helios__bytearray__from_data(__helios__common__struct_field_2(self_147))\n    };\n    __module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken = (self_148) -> {\n        () -> {\n            __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(self_148), __module__CapoDelegateHelpers__DelegationDetail[]__tn(self_148))\n        }\n    };\n    __helios__list[__helios__txinput]__any = (self_149) -> {\n        (fn_19) -> {\n            __helios__common__any(self_149, (item_10) -> {\n                fn_19(__helios__txinput__from_data(item_10))\n            })\n        }\n    };\n    __module__CapoHelpers__dgd_DataSrc[]____to_data = __helios__common__identity;\n    __module__CapoHelpers__dgd_DataSrc[]__is_valid_data = (__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data) -> {\n        (data_184) -> {\n            __core__ifThenElse(\n                __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data(data_184),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data(data_184),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data(data_184),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data(data_184),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__from_data = (__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_1) -> {\n        (data_185) -> {\n            ignore_11 = __core__ifThenElse(\n                __module__CapoHelpers__dgd_DataSrc[]__is_valid_data(__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_1, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_1)(data_185),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid dgd_DataSrc data\", ())\n                }\n            )();\n            data_185\n        }\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_2 = (data_186) -> {\n        __core__chooseData(data_186, () -> {\n            pair_53 = __core__unConstrData__safe(data_186);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_53), 0),\n                () -> {\n                    data_187 = __core__listData(__core__sndPair(pair_53));\n                    __core__chooseData(data_187, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_108 = __core__unListData__safe(data_187);\n                        __core__chooseList(fields_108, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Input____is = (data_188) -> {\n        __helios__common__enum_tag_equals(data_188, 1)\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_2 = (data_189) -> {\n        __core__chooseData(data_189, () -> {\n            pair_54 = __core__unConstrData__safe(data_189);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_54), 1),\n                () -> {\n                    data_190 = __core__listData(__core__sndPair(pair_54));\n                    __core__chooseData(data_190, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_109 = __core__unListData__safe(data_190);\n                        __core__chooseList(fields_109, () -> {\n                            false\n                        }, () -> {\n                            head_64 = __core__headList__safe(fields_109);\n                            __core__ifThenElse(\n                                __helios__txinput__is_valid_data(head_64),\n                                () -> {\n                                    fields_110 = __core__tailList__safe(fields_109);\n                                    __core__chooseList(fields_110, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Input__utxo = (self_150) -> {\n        __helios__txinput__from_data(__helios__common__enum_field_0(self_150))\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Output____is = (data_191) -> {\n        __helios__common__enum_tag_equals(data_191, 2)\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_2 = (data_192) -> {\n        __core__chooseData(data_192, () -> {\n            pair_55 = __core__unConstrData__safe(data_192);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_55), 2),\n                () -> {\n                    data_193 = __core__listData(__core__sndPair(pair_55));\n                    __core__chooseData(data_193, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_111 = __core__unListData__safe(data_193);\n                        __core__chooseList(fields_111, () -> {\n                            false\n                        }, () -> {\n                            head_65 = __core__headList__safe(fields_111);\n                            __core__ifThenElse(\n                                __helios__txoutput__is_valid_data(head_65),\n                                () -> {\n                                    fields_112 = __core__tailList__safe(fields_111);\n                                    __core__chooseList(fields_112, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Output__txo = (self_151) -> {\n        __helios__txoutput__from_data(__helios__common__enum_field_0(self_151))\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Output____new = (self_152) -> {\n        __core__constrData(2, __helios__common__list_1(__helios__txoutput____to_data(self_152)))\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Both____is = (data_194) -> {\n        __helios__common__enum_tag_equals(data_194, 3)\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_2 = (data_195) -> {\n        __core__chooseData(data_195, () -> {\n            pair_56 = __core__unConstrData__safe(data_195);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_56), 3),\n                () -> {\n                    data_196 = __core__listData(__core__sndPair(pair_56));\n                    __core__chooseData(data_196, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_113 = __core__unListData__safe(data_196);\n                        __core__chooseList(fields_113, () -> {\n                            false\n                        }, () -> {\n                            head_66 = __core__headList__safe(fields_113);\n                            __core__ifThenElse(\n                                __helios__txinput__is_valid_data(head_66),\n                                () -> {\n                                    fields_114 = __core__tailList__safe(fields_113);\n                                    __core__chooseList(fields_114, () -> {\n                                        false\n                                    }, () -> {\n                                        head_67 = __core__headList__safe(fields_114);\n                                        __core__ifThenElse(\n                                            __helios__txoutput__is_valid_data(head_67),\n                                            () -> {\n                                                fields_115 = __core__tailList__safe(fields_114);\n                                                __core__chooseList(fields_115, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Both__utxo = (self_153) -> {\n        __helios__txinput__from_data(__helios__common__enum_field_0(self_153))\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Both__txo = (self_154) -> {\n        __helios__txoutput__from_data(__helios__common__enum_field_1(self_154))\n    };\n    __module__CapoHelpers__dgd_DataSrc[]__Both____new = (utxo, txo) -> {\n        __core__constrData(3, __core__mkCons(__helios__txinput____to_data(utxo), __core__mkCons(__helios__txoutput____to_data(txo), __core__mkNilData(()))))\n    };\n    __helios__option[__helios__int]__is_valid_data = (data_197) -> {\n        __core__chooseData(data_197, () -> {\n            pair_57 = __core__unConstrData__safe(data_197);\n            index_9 = __core__fstPair(pair_57);\n            fields_116 = __core__sndPair(pair_57);\n            __core__ifThenElse(\n                __core__equalsInteger(index_9, 0),\n                () -> {\n                    __core__chooseList(fields_116, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_116), () -> {\n                            __helios__int__is_valid_data(__core__headList__safe(fields_116))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_9, 1),\n                        () -> {\n                            __core__chooseList(fields_116, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__ManifestEntryType[]__is_valid_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data) -> {\n        (data_198) -> {\n            __core__ifThenElse(\n                __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data(data_198),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data(data_198),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data(data_198),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data(data_198),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data(data_198),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__ManifestEntryType[]__from_data = (__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1) -> {\n        (data_199) -> {\n            ignore_12 = __core__ifThenElse(\n                __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_1, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_1)(data_199),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid ManifestEntryType data\", ())\n                }\n            )();\n            data_199\n        }\n    };\n    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is = (data_200) -> {\n        __helios__common__enum_tag_equals(data_200, 0)\n    };\n    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2 = (data_201) -> {\n        __core__chooseData(data_201, () -> {\n            pair_58 = __core__unConstrData__safe(data_201);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_58), 0),\n                () -> {\n                    data_202 = __core__listData(__core__sndPair(pair_58));\n                    __core__chooseData(data_202, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_117 = __core__unListData__safe(data_202);\n                        __core__chooseList(fields_117, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is = (data_203) -> {\n        __helios__common__enum_tag_equals(data_203, 1)\n    };\n    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2 = (data_204) -> {\n        __core__chooseData(data_204, () -> {\n            pair_59 = __core__unConstrData__safe(data_204);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_59), 1),\n                () -> {\n                    data_205 = __core__listData(__core__sndPair(pair_59));\n                    __core__chooseData(data_205, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_118 = __core__unListData__safe(data_205);\n                        __core__chooseList(fields_118, () -> {\n                            false\n                        }, () -> {\n                            head_68 = __core__headList__safe(fields_118);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_68),\n                                () -> {\n                                    fields_119 = __core__tailList__safe(fields_118);\n                                    __core__chooseList(fields_119, () -> {\n                                        false\n                                    }, () -> {\n                                        head_69 = __core__headList__safe(fields_119);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_69),\n                                            () -> {\n                                                fields_120 = __core__tailList__safe(fields_119);\n                                                __core__chooseList(fields_120, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_70 = __core__headList__safe(fields_120);\n                                                    __core__ifThenElse(\n                                                        __helios__int__is_valid_data(head_70),\n                                                        () -> {\n                                                            fields_121 = __core__tailList__safe(fields_120);\n                                                            __core__chooseList(fields_121, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink = (self_155) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_155))\n    };\n    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix = (self_156) -> {\n        __helios__string__from_data(__helios__common__enum_field_1(self_156))\n    };\n    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount = (self_157) -> {\n        __helios__int__from_data(__helios__common__enum_field_2(self_157))\n    };\n    __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2 = (data_206) -> {\n        __core__chooseData(data_206, () -> {\n            pair_60 = __core__unConstrData__safe(data_206);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_60), 2),\n                () -> {\n                    data_207 = __core__listData(__core__sndPair(pair_60));\n                    __core__chooseData(data_207, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_122 = __core__unListData__safe(data_207);\n                        __core__chooseList(fields_122, () -> {\n                            false\n                        }, () -> {\n                            head_71 = __core__headList__safe(fields_122);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateRole[]__is_valid_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(head_71),\n                                () -> {\n                                    fields_123 = __core__tailList__safe(fields_122);\n                                    __core__chooseList(fields_123, () -> {\n                                        false\n                                    }, () -> {\n                                        head_72 = __core__headList__safe(fields_123);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_72),\n                                            () -> {\n                                                fields_124 = __core__tailList__safe(fields_123);\n                                                __core__chooseList(fields_124, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2 = (data_208) -> {\n        __core__chooseData(data_208, () -> {\n            pair_61 = __core__unConstrData__safe(data_208);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_61), 3),\n                () -> {\n                    data_209 = __core__listData(__core__sndPair(pair_61));\n                    __core__chooseData(data_209, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_125 = __core__unListData__safe(data_209);\n                        __core__chooseList(fields_125, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2 = (data_210) -> {\n        __core__chooseData(data_210, () -> {\n            pair_62 = __core__unConstrData__safe(data_210);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_62), 4),\n                () -> {\n                    data_211 = __core__listData(__core__sndPair(pair_62));\n                    __core__chooseData(data_211, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_126 = __core__unListData__safe(data_211);\n                        __core__chooseList(fields_126, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__option[__helios__mintingpolicyhash]__is_valid_data = (data_212) -> {\n        __core__chooseData(data_212, () -> {\n            pair_63 = __core__unConstrData__safe(data_212);\n            index_10 = __core__fstPair(pair_63);\n            fields_127 = __core__sndPair(pair_63);\n            __core__ifThenElse(\n                __core__equalsInteger(index_10, 0),\n                () -> {\n                    __core__chooseList(fields_127, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_127), () -> {\n                            __helios__mintingpolicyhash__is_valid_data(__core__headList__safe(fields_127))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_10, 1),\n                        () -> {\n                            __core__chooseList(fields_127, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoManifestEntry[]__is_valid_data = (data_213) -> {\n        __core__ifThenElse(\n            __helios__common__test_mStruct_field(data_213, __core__bData(#6d7068), __helios__option[__helios__mintingpolicyhash]__is_valid_data),\n            () -> {\n                __core__ifThenElse(\n                    __helios__common__test_mStruct_field(data_213, __core__bData(#746e), __helios__bytearray__is_valid_data),\n                    () -> {\n                        __core__ifThenElse(\n                            __helios__common__test_mStruct_field(data_213, __core__bData(#747065), __module__CapoHelpers__ManifestEntryType[]__is_valid_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)),\n                            () -> {\n                                true\n                            },\n                            () -> {\n                                __core__trace(\"Warning: invalid data in CapoManifestEntry.tpe\", () -> {\n                                    false\n                                })()\n                            }\n                        )()\n                    },\n                    () -> {\n                        __core__trace(\"Warning: invalid data in CapoManifestEntry.tn\", () -> {\n                            false\n                        })()\n                    }\n                )()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid data in CapoManifestEntry.mph\", () -> {\n                    false\n                })()\n            }\n        )()\n    };\n    __module__CapoHelpers__CapoManifestEntry[]__from_data = (data_214) -> {\n        ignore_13 = __core__ifThenElse(\n            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(data_214),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid CapoManifestEntry data\", ())\n            }\n        )();\n        data_214\n    };\n    __module__CapoHelpers__CapoManifestEntry[]__entryType = (self_158) -> {\n        __module__CapoHelpers__ManifestEntryType[]__from_data(__module__CapoHelpers__ManifestEntryType[]__NamedTokenRef__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__DelegateThreads__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleMembership__is_valid_data_2, __module__CapoHelpers__ManifestEntryType[]__MerkleStateRoot__is_valid_data_2)(__helios__common__mStruct_field(self_158, #747065))\n    };\n    __module__CapoHelpers__CapoManifestEntry[]__tokenName = (self_159) -> {\n        __helios__bytearray__from_data(__helios__common__mStruct_field(self_159, #746e))\n    };\n    __helios__option[__helios__mintingpolicyhash]__from_data = (data_215) -> {\n        __9 = __core__ifThenElse(\n            __helios__option[__helios__mintingpolicyhash]__is_valid_data(data_215),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid option data\", ())\n            }\n        )();\n        data_215\n    };\n    __module__CapoHelpers__CapoManifestEntry[]__mph = (self_160) -> {\n        __helios__option[__helios__mintingpolicyhash]__from_data(__helios__common__mStruct_field(self_160, #6d7068))\n    };\n    __helios__option[__helios__mintingpolicyhash]__some____is = (data_216) -> {\n        __helios__common__enum_tag_equals(data_216, 0)\n    };\n    __module__CapoHelpers__CapoDatum[]__is_valid_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data) -> {\n        (data_217) -> {\n            __core__ifThenElse(\n                __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data(data_217),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data(data_217),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data(data_217),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__CapoDatum[]__from_data = (__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1) -> {\n        (data_218) -> {\n            ignore_14 = __core__ifThenElse(\n                __module__CapoHelpers__CapoDatum[]__is_valid_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_1, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_1)(data_218),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid CapoDatum data\", ())\n                }\n            )();\n            data_218\n        }\n    };\n    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (lst_19) -> {\n        recurse_81 = (recurse_80, lst_20) -> {\n            __core__chooseList(lst_20, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__headList__safe(lst_20)),\n                    () -> {\n                        recurse_80(recurse_80, __core__tailList__safe(lst_20))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_81(recurse_81, lst_19)\n    };\n    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_219) -> {\n        __core__chooseData(data_219, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unListData__safe(data_219))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal = (map_25) -> {\n        recurse_83 = (recurse_82, map_26) -> {\n            __core__chooseList(map_26, () -> {\n                true\n            }, () -> {\n                head_73 = __core__headList__safe(map_26);\n                __core__ifThenElse(\n                    __helios__string__is_valid_data(__core__fstPair(head_73)),\n                    () -> {\n                        __core__ifThenElse(\n                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(__core__sndPair(head_73)),\n                            () -> {\n                                recurse_82(recurse_82, __core__tailList__safe(map_26))\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_83(recurse_83, map_25)\n    };\n    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data = (data_220) -> {\n        __core__chooseData(data_220, () -> {\n            false\n        }, () -> {\n            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(__core__unMapData__safe(data_220))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal = (map_27) -> {\n        recurse_85 = (recurse_84, map_28) -> {\n            __core__chooseList(map_28, () -> {\n                true\n            }, () -> {\n                head_74 = __core__headList__safe(map_28);\n                __core__ifThenElse(\n                    __helios__string__is_valid_data(__core__fstPair(head_74)),\n                    () -> {\n                        __core__ifThenElse(\n                            __module__CapoHelpers__CapoManifestEntry[]__is_valid_data(__core__sndPair(head_74)),\n                            () -> {\n                                recurse_84(recurse_84, __core__tailList__safe(map_28))\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_85(recurse_85, map_27)\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data = (data_221) -> {\n        __core__chooseData(data_221, () -> {\n            false\n        }, () -> {\n            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(__core__unMapData__safe(data_221))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal = (lst_21) -> {\n        recurse_87 = (recurse_86, lst_22) -> {\n            __core__chooseList(lst_22, () -> {\n                true\n            }, () -> {\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__PendingCharterChange[]__is_valid_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList__safe(lst_22)),\n                    () -> {\n                        recurse_86(recurse_86, __core__tailList__safe(lst_22))\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_87(recurse_87, lst_21)\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data = (data_222) -> {\n        __core__chooseData(data_222, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(__core__unListData__safe(data_222))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2 = (data_223) -> {\n        __core__chooseData(data_223, () -> {\n            pair_64 = __core__unConstrData__safe(data_223);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_64), 0),\n                () -> {\n                    data_224 = __core__listData(__core__sndPair(pair_64));\n                    __core__chooseData(data_224, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_128 = __core__unListData__safe(data_224);\n                        __core__chooseList(fields_128, () -> {\n                            false\n                        }, () -> {\n                            head_75 = __core__headList__safe(fields_128);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_75),\n                                () -> {\n                                    fields_129 = __core__tailList__safe(fields_128);\n                                    __core__chooseList(fields_129, () -> {\n                                        false\n                                    }, () -> {\n                                        head_76 = __core__headList__safe(fields_129);\n                                        __core__ifThenElse(\n                                            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_76),\n                                            () -> {\n                                                fields_130 = __core__tailList__safe(fields_129);\n                                                __core__chooseList(fields_130, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_77 = __core__headList__safe(fields_130);\n                                                    __core__ifThenElse(\n                                                        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_77),\n                                                        () -> {\n                                                            fields_131 = __core__tailList__safe(fields_130);\n                                                            __core__chooseList(fields_131, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_78 = __core__headList__safe(fields_131);\n                                                                __core__ifThenElse(\n                                                                    __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_78),\n                                                                    () -> {\n                                                                        fields_132 = __core__tailList__safe(fields_131);\n                                                                        __core__chooseList(fields_132, () -> {\n                                                                            false\n                                                                        }, () -> {\n                                                                            head_79 = __core__headList__safe(fields_132);\n                                                                            __core__ifThenElse(\n                                                                                __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data(head_79),\n                                                                                () -> {\n                                                                                    fields_133 = __core__tailList__safe(fields_132);\n                                                                                    __core__chooseList(fields_133, () -> {\n                                                                                        false\n                                                                                    }, () -> {\n                                                                                        head_80 = __core__headList__safe(fields_133);\n                                                                                        __core__ifThenElse(\n                                                                                            __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_80),\n                                                                                            () -> {\n                                                                                                fields_134 = __core__tailList__safe(fields_133);\n                                                                                                __core__chooseList(fields_134, () -> {\n                                                                                                    false\n                                                                                                }, () -> {\n                                                                                                    head_81 = __core__headList__safe(fields_134);\n                                                                                                    __core__ifThenElse(\n                                                                                                        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data(head_81),\n                                                                                                        () -> {\n                                                                                                            fields_135 = __core__tailList__safe(fields_134);\n                                                                                                            __core__chooseList(fields_135, () -> {\n                                                                                                                false\n                                                                                                            }, () -> {\n                                                                                                                head_82 = __core__headList__safe(fields_135);\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data(head_82),\n                                                                                                                    () -> {\n                                                                                                                        fields_136 = __core__tailList__safe(fields_135);\n                                                                                                                        __core__chooseList(fields_136, true, false)\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        false\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            })()\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            false\n                                                                                                        }\n                                                                                                    )()\n                                                                                                })()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                false\n                                                                                            }\n                                                                                        )()\n                                                                                    })()\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        })()\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__from_data = (data_225) -> {\n        ignore_15 = __core__ifThenElse(\n            __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(data_225),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid CharterData data\", ())\n            }\n        )();\n        data_225\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData____to_data = __helios__common__identity;\n    __module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink = (self_161) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_161))\n    };\n    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_226) -> {\n        lst_23 = __core__unListData(data_226);\n        __10 = __core__ifThenElse(\n            __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(lst_23),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid list data\", ())\n            }\n        )();\n        lst_23\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants = (self_162) -> {\n        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_1(self_162))\n    };\n    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data = (data_227) -> {\n        map_29 = __core__unMapData(data_227);\n        __11 = __core__ifThenElse(\n            __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__is_valid_data_internal(map_29),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid map data\", ())\n            }\n        )();\n        map_29\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates = (self_163) -> {\n        __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_2(self_163))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink = (self_164) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_3(self_164))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants = (self_165) -> {\n        __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__from_data(__helios__common__enum_field_4(self_165))\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink = (self_166) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_5(self_166))\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data = (data_228) -> {\n        map_30 = __core__unMapData(data_228);\n        __12 = __core__ifThenElse(\n            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__is_valid_data_internal(map_30),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid map data\", ())\n            }\n        )();\n        map_30\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__manifest = (self_167) -> {\n        __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__from_data(__helios__common__enum_field_6(self_167))\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data = (data_229) -> {\n        lst_24 = __core__unListData(data_229);\n        __13 = __core__ifThenElse(\n            __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__is_valid_data_internal(lst_24),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid list data\", ())\n            }\n        )();\n        lst_24\n    };\n    __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges = (self_168) -> {\n        __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__from_data(__helios__common__enum_field_7(self_168))\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data = __core__mapData;\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data = __core__listData;\n    __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2 = (data_230) -> {\n        __core__chooseData(data_230, () -> {\n            pair_65 = __core__unConstrData__safe(data_230);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_65), 1),\n                () -> {\n                    data_231 = __core__listData(__core__sndPair(pair_65));\n                    __core__chooseData(data_231, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_137 = __core__unListData__safe(data_231);\n                        __core__chooseList(fields_137, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoDatum[]__DelegatedData____is = (data_232) -> {\n        __helios__common__enum_tag_equals(data_232, 2)\n    };\n    __helios__map[__helios__string@__helios__data]__is_valid_data_internal = (map_31) -> {\n        recurse_89 = (recurse_88, map_32) -> {\n            __core__chooseList(map_32, () -> {\n                true\n            }, () -> {\n                head_83 = __core__headList__safe(map_32);\n                __core__ifThenElse(\n                    __helios__string__is_valid_data(__core__fstPair(head_83)),\n                    () -> {\n                        __core__ifThenElse(\n                            __helios__data__is_valid_data(__core__sndPair(head_83)),\n                            () -> {\n                                recurse_88(recurse_88, __core__tailList__safe(map_32))\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        };\n        recurse_89(recurse_89, map_31)\n    };\n    __helios__map[__helios__string@__helios__data]__is_valid_data = (data_233) -> {\n        __core__chooseData(data_233, () -> {\n            false\n        }, () -> {\n            __helios__map[__helios__string@__helios__data]__is_valid_data_internal(__core__unMapData__safe(data_233))\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2 = (data_234) -> {\n        __core__chooseData(data_234, () -> {\n            pair_66 = __core__unConstrData__safe(data_234);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_66), 2),\n                () -> {\n                    data_235 = __core__listData(__core__sndPair(pair_66));\n                    __core__chooseData(data_235, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_138 = __core__unListData__safe(data_235);\n                        __core__chooseList(fields_138, () -> {\n                            false\n                        }, () -> {\n                            head_84 = __core__headList__safe(fields_138);\n                            __core__ifThenElse(\n                                __helios__map[__helios__string@__helios__data]__is_valid_data(head_84),\n                                () -> {\n                                    fields_139 = __core__tailList__safe(fields_138);\n                                    __core__chooseList(fields_139, () -> {\n                                        false\n                                    }, () -> {\n                                        head_85 = __core__headList__safe(fields_139);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_85),\n                                            () -> {\n                                                fields_140 = __core__tailList__safe(fields_139);\n                                                __core__chooseList(fields_140, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_86 = __core__headList__safe(fields_140);\n                                                    __core__ifThenElse(\n                                                        __helios__data__is_valid_data(head_86),\n                                                        () -> {\n                                                            fields_141 = __core__tailList__safe(fields_140);\n                                                            __core__chooseList(fields_141, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]____to_data = __helios__common__identity;\n    __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data) -> {\n        (data_236) -> {\n            __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data(data_236),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data(data_236),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data(data_236),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__from_data = (__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1) -> {\n        (data_237) -> {\n            ignore_16 = __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__is_valid_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_1, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_1)(data_237),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid cctx_CharterInputType data\", ())\n                }\n            )();\n            data_237\n        }\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Unk____is = (data_238) -> {\n        __helios__common__enum_tag_equals(data_238, 0)\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2 = (data_239) -> {\n        __core__chooseData(data_239, () -> {\n            pair_67 = __core__unConstrData__safe(data_239);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_67), 0),\n                () -> {\n                    data_240 = __core__listData(__core__sndPair(pair_67));\n                    __core__chooseData(data_240, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_142 = __core__unListData__safe(data_240);\n                        __core__chooseList(fields_142, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Unk____new = () -> {\n        __core__constrData(0, __core__mkNilData(()))\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is = (data_241) -> {\n        __helios__common__enum_tag_equals(data_241, 1)\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2 = (data_242) -> {\n        __core__chooseData(data_242, () -> {\n            pair_68 = __core__unConstrData__safe(data_242);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_68), 1),\n                () -> {\n                    data_243 = __core__listData(__core__sndPair(pair_68));\n                    __core__chooseData(data_243, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_143 = __core__unListData__safe(data_243);\n                        __core__chooseList(fields_143, () -> {\n                            false\n                        }, () -> {\n                            head_87 = __core__headList__safe(fields_143);\n                            __core__ifThenElse(\n                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_87),\n                                () -> {\n                                    fields_144 = __core__tailList__safe(fields_143);\n                                    __core__chooseList(fields_144, () -> {\n                                        false\n                                    }, () -> {\n                                        head_88 = __core__headList__safe(fields_144);\n                                        __core__ifThenElse(\n                                            __helios__txinput__is_valid_data(head_88),\n                                            () -> {\n                                                fields_145 = __core__tailList__safe(fields_144);\n                                                __core__chooseList(fields_145, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum = (self_169) -> {\n        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_169))\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo = (self_170) -> {\n        __helios__txinput__from_data(__helios__common__enum_field_1(self_170))\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new = (datum, utxo_1) -> {\n        __core__constrData(1, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum), __core__mkCons(__helios__txinput____to_data(utxo_1), __core__mkNilData(()))))\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Input____is = (data_244) -> {\n        __helios__common__enum_tag_equals(data_244, 2)\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2 = (data_245) -> {\n        __core__chooseData(data_245, () -> {\n            pair_69 = __core__unConstrData__safe(data_245);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_69), 2),\n                () -> {\n                    data_246 = __core__listData(__core__sndPair(pair_69));\n                    __core__chooseData(data_246, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_146 = __core__unListData__safe(data_246);\n                        __core__chooseList(fields_146, () -> {\n                            false\n                        }, () -> {\n                            head_89 = __core__headList__safe(fields_146);\n                            __core__ifThenElse(\n                                __module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2(head_89),\n                                () -> {\n                                    fields_147 = __core__tailList__safe(fields_146);\n                                    __core__chooseList(fields_147, () -> {\n                                        false\n                                    }, () -> {\n                                        head_90 = __core__headList__safe(fields_147);\n                                        __core__ifThenElse(\n                                            __helios__txinput__is_valid_data(head_90),\n                                            () -> {\n                                                fields_148 = __core__tailList__safe(fields_147);\n                                                __core__chooseList(fields_148, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Input__datum = (self_171) -> {\n        __module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__common__enum_field_0(self_171))\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo = (self_172) -> {\n        __helios__txinput__from_data(__helios__common__enum_field_1(self_172))\n    };\n    __module__CapoHelpers__cctx_CharterInputType[]__Input____new = (datum_1, utxo_2) -> {\n        __core__constrData(2, __core__mkCons(__module__CapoHelpers__CapoDatum[]__CharterData____to_data(datum_1), __core__mkCons(__helios__txinput____to_data(utxo_2), __core__mkNilData(()))))\n    };\n    __module__CapoHelpers__CapoActivity[]__is_valid_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data) -> {\n        (data_247) -> {\n            __core__ifThenElse(\n                __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data(data_247),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data(data_247),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data(data_247),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data(data_247),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data(data_247),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data(data_247),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__CapoHelpers__CapoActivity[]__from_data = (__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1) -> {\n        (data_248) -> {\n            ignore_17 = __core__ifThenElse(\n                __module__CapoHelpers__CapoActivity[]__is_valid_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_1, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_1)(data_248),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid CapoActivity data\", ())\n                }\n            )();\n            data_248\n        }\n    };\n    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is = (data_249) -> {\n        __helios__common__enum_tag_equals(data_249, 0)\n    };\n    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2 = (data_250) -> {\n        __core__chooseData(data_250, () -> {\n            pair_70 = __core__unConstrData__safe(data_250);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_70), 0),\n                () -> {\n                    data_251 = __core__listData(__core__sndPair(pair_70));\n                    __core__chooseData(data_251, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_149 = __core__unListData__safe(data_251);\n                        __core__chooseList(fields_149, () -> {\n                            false\n                        }, () -> {\n                            head_91 = __core__headList__safe(fields_149);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_91),\n                                () -> {\n                                    fields_150 = __core__tailList__safe(fields_149);\n                                    __core__chooseList(fields_150, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity = (self_173) -> {\n        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_173))\n    };\n    __module__CapoHelpers__CapoActivity[]__usingAuthority____is = (data_252) -> {\n        __helios__common__enum_tag_equals(data_252, 1)\n    };\n    __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2 = (data_253) -> {\n        __core__chooseData(data_253, () -> {\n            pair_71 = __core__unConstrData__safe(data_253);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_71), 1),\n                () -> {\n                    data_254 = __core__listData(__core__sndPair(pair_71));\n                    __core__chooseData(data_254, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_151 = __core__unListData__safe(data_254);\n                        __core__chooseList(fields_151, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoActivity[]__usingAuthority____new = () -> {\n        __core__constrData(1, __core__mkNilData(()))\n    };\n    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is = (data_255) -> {\n        __helios__common__enum_tag_equals(data_255, 2)\n    };\n    __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2 = (data_256) -> {\n        __core__chooseData(data_256, () -> {\n            pair_72 = __core__unConstrData__safe(data_256);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_72), 2),\n                () -> {\n                    data_257 = __core__listData(__core__sndPair(pair_72));\n                    __core__chooseData(data_257, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_152 = __core__unListData__safe(data_257);\n                        __core__chooseList(fields_152, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is = (data_258) -> {\n        __helios__common__enum_tag_equals(data_258, 3)\n    };\n    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2 = (data_259) -> {\n        __core__chooseData(data_259, () -> {\n            pair_73 = __core__unConstrData__safe(data_259);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_73), 3),\n                () -> {\n                    data_260 = __core__listData(__core__sndPair(pair_73));\n                    __core__chooseData(data_260, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_153 = __core__unListData__safe(data_260);\n                        __core__chooseList(fields_153, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is = (data_261) -> {\n        __helios__common__enum_tag_equals(data_261, 4)\n    };\n    __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2 = (data_262) -> {\n        __core__chooseData(data_262, () -> {\n            pair_74 = __core__unConstrData__safe(data_262);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_74), 4),\n                () -> {\n                    data_263 = __core__listData(__core__sndPair(pair_74));\n                    __core__chooseData(data_263, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_154 = __core__unListData__safe(data_263);\n                        __core__chooseList(fields_154, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__CapoActivity[]__updatingCharter____is = (data_264) -> {\n        __helios__common__enum_tag_equals(data_264, 5)\n    };\n    __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2 = (data_265) -> {\n        __core__chooseData(data_265, () -> {\n            pair_75 = __core__unConstrData__safe(data_265);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_75), 5),\n                () -> {\n                    data_266 = __core__listData(__core__sndPair(pair_75));\n                    __core__chooseData(data_266, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_155 = __core__unListData__safe(data_266);\n                        __core__chooseList(fields_155, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__getRefCharterUtxo = (mph_16) -> {\n        charterAc = __helios__assetclass__new(mph_16, __helios__string__encode_utf8(\"charter\")());\n        hasCharter = (txin) -> {\n            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin))(charterAc), 0)\n        };\n        __core__chooseUnit(__helios__print(\"  -- getting ref_input for charter\"), (charterUtxo) -> {\n            charterUtxo\n        }(__cond_12 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter);\n        __core__ifThenElse(\n            __helios__option[__helios__txinput]__some____is(__cond_12),\n            () -> {\n                (__lhs_0_20) -> {\n                    ch = __helios__option[__helios__txinput]__some__some(__lhs_0_20);\n                    ch\n                }\n            },\n            () -> {\n                (__lhs_0_19) -> {\n                    __helios__error(\"Missing charter in required ref_inputs (use tcxWithCharterRef(tcx) in txn building functions)\")\n                }\n            }\n        )()(__cond_12)))\n    };\n    __module__CapoHelpers__getTxCharterData = (mph_17, __useopt__refInputs, refInputs) -> {\n        refInputs_1 = __core__ifThenElse(\n            __useopt__refInputs,\n            () -> {\n                refInputs\n            },\n            () -> {\n                __helios__tx__ref_inputs(__helios__scriptcontext__tx)\n            }\n        )();\n        charterAc_1 = __helios__assetclass__new(mph_17, __helios__string__encode_utf8(\"charter\")());\n        hasCharter_1 = (txin_1) -> {\n            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_1))(charterAc_1), 0)\n        };\n        (charterUtxo_1) -> {\n            ctd = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_1))), 0);\n            ctd\n        }(__cond_13 = __helios__list[__helios__txinput]__find_safe(refInputs_1)(hasCharter_1);\n        __core__ifThenElse(\n            __helios__option[__helios__txinput]__some____is(__cond_13),\n            () -> {\n                (__lhs_0_24) -> {\n                    ch_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_24);\n                    ch_2\n                }\n            },\n            () -> {\n                (__lhs_0_21) -> {\n                    __cond_14 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_1);\n                    __core__ifThenElse(\n                        __helios__option[__helios__txinput]__some____is(__cond_14),\n                        () -> {\n                            (__lhs_0_23) -> {\n                                ch_1 = __helios__option[__helios__txinput]__some__some(__lhs_0_23);\n                                ch_1\n                            }\n                        },\n                        () -> {\n                            (__lhs_0_22) -> {\n                                __helios__error(\"Missing charter inputs / ref_inputs\")\n                            }\n                        }\n                    )()(__cond_14)\n                }\n            }\n        )()(__cond_13))\n    };\n    __helios__option[__helios__string]__is_valid_data = (data_267) -> {\n        __core__chooseData(data_267, () -> {\n            pair_76 = __core__unConstrData__safe(data_267);\n            index_11 = __core__fstPair(pair_76);\n            fields_156 = __core__sndPair(pair_76);\n            __core__ifThenElse(\n                __core__equalsInteger(index_11, 0),\n                () -> {\n                    __core__chooseList(fields_156, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_156), () -> {\n                            __helios__string__is_valid_data(__core__headList__safe(fields_156))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_11, 1),\n                        () -> {\n                            __core__chooseList(fields_156, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__option[__helios__txinput]__is_valid_data = (data_268) -> {\n        __core__chooseData(data_268, () -> {\n            pair_77 = __core__unConstrData__safe(data_268);\n            index_12 = __core__fstPair(pair_77);\n            fields_157 = __core__sndPair(pair_77);\n            __core__ifThenElse(\n                __core__equalsInteger(index_12, 0),\n                () -> {\n                    __core__chooseList(fields_157, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_157), () -> {\n                            __helios__txinput__is_valid_data(__core__headList__safe(fields_157))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_12, 1),\n                        () -> {\n                            __core__chooseList(fields_157, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__CapoHelpers__DelegateInput[]__serialize = __helios__struct__serialize;\n    __module__CapoHelpers__DelegateInput[]__link = (self_174) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__struct_field_0(self_174))\n    };\n    __module__CapoHelpers__DelegateInput[]__role = (self_175) -> {\n        __module__CapoDelegateHelpers__DelegateRole[]__from_data(__module__CapoDelegateHelpers__DelegateRole[]__MintDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt__is_valid_data_2, __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly__is_valid_data_2)(__helios__common__struct_field_1(self_175))\n    };\n    __helios__option[__helios__string]__from_data = (data_269) -> {\n        __14 = __core__ifThenElse(\n            __helios__option[__helios__string]__is_valid_data(data_269),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid option data\", ())\n            }\n        )();\n        data_269\n    };\n    __module__CapoHelpers__DelegateInput[]__idPrefix = (self_176) -> {\n        __helios__option[__helios__string]__from_data(__helios__common__struct_field_2(self_176))\n    };\n    __helios__option[__helios__txinput]__from_data = (data_270) -> {\n        __15 = __core__ifThenElse(\n            __helios__option[__helios__txinput]__is_valid_data(data_270),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid option data\", ())\n            }\n        )();\n        data_270\n    };\n    __module__CapoHelpers__DelegateInput[]__input = (self_177) -> {\n        __helios__option[__helios__txinput]__from_data(__helios__common__struct_field_3(self_177))\n    };\n    __module__CapoHelpers__DelegateInput[]__mph = (self_178) -> {\n        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_4(self_178))\n    };\n    __helios__option[__helios__string]____to_data = __helios__common__identity;\n    __helios__option[__helios__txinput]____to_data = __helios__common__identity;\n    __module__CapoHelpers__DelegateInput[]____new = (link, role, idPrefix, input, mph_18) -> {\n        __core__mkCons(__module__CapoDelegateHelpers__RelativeDelegateLink[]____to_data(link), __core__mkCons(__module__CapoDelegateHelpers__DelegateRole[]____to_data(role), __core__mkCons(__helios__option[__helios__string]____to_data(idPrefix), __core__mkCons(__helios__option[__helios__txinput]____to_data(input), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_18), __core__mkNilData(()))))))\n    };\n    __helios__option[__helios__txinput]__unwrap = (self_179) -> {\n        () -> {\n            __helios__txinput__from_data(__helios__common__enum_field_0(self_179))\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData = (self_180) -> {\n        () -> {\n            i_8 = __helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_180))();\n            inputData = __module__StellarHeliosHelpers__mustFindInputRedeemer(i_8);\n            __core__chooseUnit(__cond_15 = inputData;\n            __core__ifThenElse(\n                __helios__data__constrdata____is(__cond_15),\n                () -> {\n                    (__lhs_0_25) -> {\n                        index_13 = __helios__data__constrdata__tag(__lhs_0_25);\n                        fields_158 = __helios__data__constrdata__fields(__lhs_0_25);\n                        __core__chooseUnit(__helios__print(__helios__string____add(\"  --🐞 generic delegate activity at index \", __helios__int__show(index_13)())), __cond_16 = __helios__list[__helios__data]__head(fields_158);\n                        __core__ifThenElse(\n                            __helios__data__constrdata____is(__cond_16),\n                            () -> {\n                                (__lhs_0_26) -> {\n                                    index2 = __helios__data__constrdata__tag(__lhs_0_26);\n                                    __helios__print(__helios__string____add(\"  --🐞 nested activity at index \", __helios__int__show(index2)()))\n                                }\n                            },\n                            () -> {\n                                (__17) -> {\n                                    ()\n                                }\n                            }\n                        )()(__cond_16))\n                    }\n                },\n                () -> {\n                    (__16) -> {\n                        ()\n                    }\n                }\n            )()(__cond_15), inputData)\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1 = (__module__CapoHelpers__DelegateInput[]__genericDelegateActivity) -> {\n        (self_181) -> {\n            () -> {\n                __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(__module__CapoHelpers__DelegateInput[]__genericDelegateActivityAsData(self_181)())\n            }\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__assert = (__module__CapoHelpers__DelegateInput[]__error) -> {\n        (self_182) -> {\n            (assertionOk, msg_3) -> {\n                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                    true\n                }, () -> {\n                    __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_182)(), __module__CapoHelpers__DelegateInput[]__serialize(self_182)())\n                }), msg_3), __core__ifThenElse(\n                    assertionOk,\n                    () -> {\n                        __helios__assert(true, \"\")\n                    },\n                    () -> {\n                        () -> {\n                            __module__CapoHelpers__DelegateInput[]__error(self_182)(msg_3)\n                        }()\n                    }\n                )())\n            }\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__error_1 = (self_183) -> {\n        (msg_4) -> {\n            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                true\n            }, () -> {\n                __helios__bytearray____eq(__module__CapoHelpers__DelegateInput[]__serialize(self_183)(), __module__CapoHelpers__DelegateInput[]__serialize(self_183)())\n            }), msg_4), __core__chooseUnit(__helios__print(__helios__string____add(\"⚠️ ⚠️ ⚠️ error executing policy for dgTkn: \", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__module__CapoHelpers__DelegateInput[]__link(self_183)))), __core__chooseUnit(__helios__print(__helios__string____add(\"  ---- with input value: \", __helios__value__show(__helios__txinput__value(__helios__option[__helios__txinput]__unwrap(__module__CapoHelpers__DelegateInput[]__input(self_183))()))(false, ()))), __core__chooseUnit(__helios__print(\"\n\"), __helios__assert(false, msg_4)))))\n        }\n    };\n    __helios__list[__helios__data]__get = (self_184) -> {\n        (index_14) -> {\n            recurse_91 = (recurse_90, self_185, i_9) -> {\n                __core__chooseList(self_185, () -> {\n                    __helios__error(\"index out of range\")\n                }, () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_14, i_9),\n                        () -> {\n                            __core__headList__safe(self_185)\n                        },\n                        () -> {\n                            recurse_90(recurse_90, __core__tailList__safe(self_185), __core__addInteger(i_9, 1))\n                        }\n                    )()\n                })()\n            };\n            recurse_91(recurse_91, self_184, 0)\n        }\n    };\n    __helios__list[__helios__data]__length = __helios__common__length;\n    __helios__list[__helios__data]__filter = (self_186) -> {\n        (fn_20) -> {\n            __helios__common__filter_list(self_186, (item_11) -> {\n                fn_20(__helios__data__from_data(item_11))\n            })\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged) -> {\n        (self_187) -> {\n            (seed) -> {\n                __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(\"\", false, ()), __core__chooseUnit(__helios__print(\"-- ensures the delegate is unchanged, so callers needn't.\"), (result_4) -> {\n                    __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, \"✅ unique seeded mint ok!\"), result_4)\n                }(__cond_17 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_187)();\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_17),\n                    () -> {\n                        (__lhs_0_30) -> {\n                            ma_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_30);\n                            __core__chooseUnit(__cond_20 = ma_1;\n                            __core__ifThenElse(\n                                __helios__data__constrdata____is(__cond_20),\n                                () -> {\n                                    (__lhs_0_31) -> {\n                                        fields_160 = __helios__data__constrdata__fields(__lhs_0_31);\n                                        __helios__assert(__helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__get(fields_160)(0))), \"seed mismatch\")\n                                    }\n                                },\n                                () -> {\n                                    (__21) -> {\n                                        __helios__error(\"no way\")\n                                    }\n                                }\n                            )()(__cond_20), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_187)())\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_17),\n                            () -> {\n                                (__lhs_0_27) -> {\n                                    activities = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_27);\n                                    __core__chooseUnit(__helios__print(\"-- the delegated-data policy is triggered with a multi-activity\"), __core__chooseUnit(__helios__assert(__helios__int____gt(__helios__list[__helios__data]__length(activities), 0), \"no minting activities found\"), foundWithThisSeed = __helios__list[__helios__data]__filter(activities)((a_14) -> {\n                                        __cond_18 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(a_14);\n                                        __core__ifThenElse(\n                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities____is(__cond_18),\n                                            () -> {\n                                                (__lhs_0_28) -> {\n                                                    ma = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__activity(__lhs_0_28);\n                                                    __cond_19 = ma;\n                                                    __core__ifThenElse(\n                                                        __helios__data__constrdata____is(__cond_19),\n                                                        () -> {\n                                                            (__lhs_0_29) -> {\n                                                                fields_159 = __helios__data__constrdata__fields(__lhs_0_29);\n                                                                __helios__bool__and(() -> {\n                                                                    __helios__txoutputid____eq(seed, __helios__txoutputid__from_data(__helios__list[__helios__data]__head(fields_159)))\n                                                                }, () -> {\n                                                                    true\n                                                                })\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__20) -> {\n                                                                __helios__error(\"no way d\")\n                                                            }\n                                                        }\n                                                    )()(__cond_19)\n                                                }\n                                            },\n                                            () -> {\n                                                (__19) -> {\n                                                    false\n                                                }\n                                            }\n                                        )()(__cond_18)\n                                    });\n                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"one of the delegate multi-activities must be minting with this seed\", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_187)(__helios__int____gt(__helios__list[__helios__data]__length(foundWithThisSeed), 0), \"no minting activity found for seed!\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"only one of a multi-activity for a given seed is allowed\", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_187)(__helios__int____eq(__helios__list[__helios__data]__length(foundWithThisSeed), 1), \"multiple minting activities found for seed\"), __module__CapoHelpers__DelegateInput[]__delegateUnchanged(self_187)()))))))\n                                }\n                            },\n                            () -> {\n                                (__18) -> {\n                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_187)(\"non-mint activity!\"), __helios__error(\"\"))\n                                }\n                            }\n                        )()\n                    }\n                )()(__cond_17))))\n            }\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity = (__module__CapoHelpers__DelegateInput[]__delegateUnchanged_1) -> {\n        (self_188) -> {\n            (recId) -> {\n                strId = __helios__bytearray__decode_utf8_safe(recId)();\n                __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(__cond_25 = __module__CapoHelpers__DelegateInput[]__role(self_188);\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_25),\n                    () -> {\n                        (__lhs_0_41) -> {\n                            \"finding unique spending activity for a delegated-data policy\"\n                        }\n                    },\n                    () -> {\n                        (__26) -> {\n                            __helios__error(\"withUniqueDDSpendingActivity: only valid for DgDataPolicy\")\n                        }\n                    }\n                )()(__cond_25), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"ensures the delegated-data controller's is spending recId\", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add(\"  -- recId: \", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"TEST THIS v\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"spendDgt must be acting on the matching record-id\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"ensures the delegate is unchanged, so callers needn't also check that\", false, (), false, (), false, ()), (result_5) -> {\n                    __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(false, ()), result_5)\n                }(__cond_21 = __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(self_188)();\n                __core__ifThenElse(\n                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_21),\n                    () -> {\n                        (__lhs_0_39) -> {\n                            sa_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_39);\n                            __core__chooseUnit(__cond_24 = sa_1;\n                            __core__ifThenElse(\n                                __helios__data__constrdata____is(__cond_24),\n                                () -> {\n                                    (__lhs_0_40) -> {\n                                        index_16 = __helios__data__constrdata__tag(__lhs_0_40);\n                                        fields_162 = __helios__data__constrdata__fields(__lhs_0_40);\n                                        __core__chooseUnit(__helios__assert(__helios__int____eq(index_16, index_16), \"no way e\"), foundRecId_1 = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_162));\n                                        __core__ifThenElse(\n                                            __helios__bytearray____neq(recId, foundRecId_1),\n                                            () -> {\n                                                __core__chooseUnit(__helios__print(__helios__string____add(\"  -- expected: Spending:\", strId)), __core__chooseUnit(__helios__print(__helios__string____add(\"  -- actual: Spending:\", __helios__bytearray__show(foundRecId_1)())), __module__CapoHelpers__DelegateInput[]__error_1(self_188)(\"recId mismatch\")))\n                                            },\n                                            () -> {\n                                                () -> {\n                                                    __helios__print(__helios__string____add(\"  -- ok: DD controller spending activity for \", strId))\n                                                }()\n                                            }\n                                        )())\n                                    }\n                                },\n                                () -> {\n                                    (__25) -> {\n                                        __helios__error(\"no way f\")\n                                    }\n                                }\n                            )()(__cond_24), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_188)())\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities____is(__cond_21),\n                            () -> {\n                                (__lhs_0_38) -> {\n                                    __helios__error(\"expected spending activity for the recId, got OtherActivities\")\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities____is(__cond_21),\n                                    () -> {\n                                        (__lhs_0_32) -> {\n                                            activities_1 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__activities(__lhs_0_32);\n                                            __core__chooseUnit(__helios__print(\"    -- multiple activities found\"), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_188)(__helios__int____gt(__helios__list[__helios__data]__length(activities_1), 0), \"no spending activities found\"), actsOnThisRecord = __helios__list[__helios__data]__filter(activities_1)((a_15) -> {\n                                                __cond_22 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(a_15);\n                                                __core__ifThenElse(\n                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData____is(__cond_22),\n                                                    () -> {\n                                                        (__lhs_0_37) -> {\n                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_188)(\"dgInput: withSpendingActivity: CreatingDelegatedData invalid\"), __helios__error(\"\"))\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData____is(__cond_22),\n                                                            () -> {\n                                                                (__lhs_0_36) -> {\n                                                                    __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_188)(\"dgInput: withSpendingActivity: UpdatingDgData invalid; use a Spending variant in the delegated-data policy\"), __helios__error(\"\"))\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData____is(__cond_22),\n                                                                    () -> {\n                                                                        (__lhs_0_35) -> {\n                                                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_188)(\"dgInput: withSpendingActivity: DeletingDelegatedData invalid\"), __helios__error(\"\"))\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities____is(__cond_22),\n                                                                            () -> {\n                                                                                (__lhs_0_33) -> {\n                                                                                    sa = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__activity(__lhs_0_33);\n                                                                                    __cond_23 = sa;\n                                                                                    __core__ifThenElse(\n                                                                                        __helios__data__constrdata____is(__cond_23),\n                                                                                        () -> {\n                                                                                            (__lhs_0_34) -> {\n                                                                                                index_15 = __helios__data__constrdata__tag(__lhs_0_34);\n                                                                                                fields_161 = __helios__data__constrdata__fields(__lhs_0_34);\n                                                                                                __core__chooseUnit(__helios__assert(__helios__int____eq(index_15, index_15), \"no way h\"), foundRecId = __helios__bytearray__from_data(__helios__list[__helios__data]__head(fields_161));\n                                                                                                __core__ifThenElse(\n                                                                                                    __helios__bytearray____neq(recId, foundRecId),\n                                                                                                    () -> {\n                                                                                                        actualIdStr = __helios__bytearray__decode_utf8_safe(foundRecId)();\n                                                                                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_188)(__helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add(\"recId mismatch: found \", actualIdStr), \" (expected \"), strId), \")\")), __helios__error(\"\"))\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        () -> {\n                                                                                                            __core__chooseUnit(__helios__print(\"  -- matched recId\"), true)\n                                                                                                        }()\n                                                                                                    }\n                                                                                                )())\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__24) -> {\n                                                                                                __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_188)(\"wrong structure for spending activity\"), __helios__error(\"\"))\n                                                                                            }\n                                                                                        }\n                                                                                    )()(__cond_23)\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__23) -> {\n                                                                                    false\n                                                                                }\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(__cond_22)\n                                            });\n                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"one of the delegate data-controller multi-activities must treat this recId\", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_188)(__helios__bool__trace(__helios__int____gt(__helios__list[__helios__data]__length(actsOnThisRecord), 0))(\"dgt acting on this recId? \"), __helios__string____add(\"no spending activity found for recId: \", strId)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"only one of a multi-activity for a given recId is allowed\", false, (), false, (), false, ()), __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_188)(__helios__bool__trace(__helios__int____eq(__helios__list[__helios__data]__length(actsOnThisRecord), 1))(\"exactly one activity? \"), __helios__string____add(\"multiple spending activities found for recId: \", strId)), __module__CapoHelpers__DelegateInput[]__delegateUnchanged_1(self_188)()))))))\n                                        }\n                                    },\n                                    () -> {\n                                        (__22) -> {\n                                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_188)(\"non-spend activity!\"), __helios__error(\"\"))\n                                        }\n                                    }\n                                )()\n                            }\n                        )()\n                    }\n                )()(__cond_21))))))))\n            }\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__delegateUnchanged_2 = (self_189) -> {\n        () -> {\n            __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupUnit(\"the delegate must be unchanged\", true, true, () -> {\n                __lhs_0_42 = self_189;\n                link_1 = __module__CapoHelpers__DelegateInput[]__link(__lhs_0_42);\n                input_1 = __module__CapoHelpers__DelegateInput[]__input(__lhs_0_42);\n                mph_19 = __module__CapoHelpers__DelegateInput[]__mph(__lhs_0_42);\n                __lhs_0_43 = link_1;\n                uut_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(__lhs_0_43);\n                validatorHash_1 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__delegateValidatorHash(__lhs_0_43);\n                targetValue = __module__CapoDelegateHelpers__RelativeDelegateLink[]__tvAuthorityToken(link_1)(mph_19);\n                (returnedUnchanged) -> {\n                    __core__chooseUnit(__helios__assert(returnedUnchanged, \"no\"), __helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(link_1)(mph_19, false, (), false, ()), \"no\"))\n                }(__cond_26 = validatorHash_1;\n                __core__ifThenElse(\n                    __helios__option[__helios__validatorhash]__some____is(__cond_26),\n                    () -> {\n                        (__lhs_0_45) -> {\n                            vh_4 = __helios__option[__helios__validatorhash]__some__some(__lhs_0_45);\n                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__assert(__module__CapoHelpers__DelegateInput[]__error_1)(self_189)(__helios__value__contains(__helios__tx__value_locked_by(__helios__scriptcontext__tx)(vh_4))(targetValue), __helios__string____add(\"dgTkn not returned: \", uut_1)), __cond_27 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((o_1) -> {\n                                __helios__bytearray____eq(__helios__txoutputdatum__serialize(__helios__txoutput__datum(o_1))(), __helios__txoutputdatum__serialize(__helios__txinput__datum(__helios__option[__helios__txinput]__unwrap(input_1)()))())\n                            });\n                            __core__ifThenElse(\n                                __helios__option[__helios__txoutput]__some____is(__cond_27),\n                                () -> {\n                                    (__lhs_0_47) -> {\n                                        __core__chooseUnit(__helios__print(__helios__string____add(\"ok: the dgTkn is unchanged: \", uut_1)), true)\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_46) -> {\n                                        __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)(\"The delegate's dgTkn datum MUST NOT be modified!\"), __helios__error(\"\"))\n                                    }\n                                }\n                            )()(__cond_27))\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_44) -> {\n                            __core__chooseUnit(__module__CapoHelpers__DelegateInput[]__error_1(self_189)(\"unchOut - no vh\"), __helios__error(\"\"))\n                        }\n                    }\n                )()(__cond_26))\n            }), self_189)\n        }\n    };\n    __module__CapoHelpers__DelegateInput[]__orFail = (self_190) -> {\n        () -> {\n            __lhs_0_48 = self_190;\n            true\n        }\n    };\n    __module__CapoHelpers__DgDataDetails[]__dataSrc = (self_191) -> {\n        __module__CapoHelpers__dgd_DataSrc[]__from_data(__module__CapoHelpers__dgd_DataSrc[]__Unk__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Input__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Output__is_valid_data_2, __module__CapoHelpers__dgd_DataSrc[]__Both__is_valid_data_2)(__helios__common__struct_field_0(self_191))\n    };\n    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]____to_data = __helios__common__identity;\n    __module__CapoHelpers__DgDataDetails[]____new = (dataSrc, id_1, type, mph_20, activity) -> {\n        __core__mkCons(__module__CapoHelpers__dgd_DataSrc[]____to_data(dataSrc), __core__mkCons(__helios__bytearray____to_data(id_1), __core__mkCons(__helios__string____to_data(type), __core__mkCons(__helios__mintingpolicyhash____to_data(mph_20), __core__mkCons(__helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]____to_data(activity), __core__mkNilData(()))))))\n    };\n    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__none____new = () -> {\n        __helios__option__NONE\n    };\n    __module__CapoHelpers__DgDataDetails[]__updating = (id_2, input_2, output_1, mph_21, __useopt__activity, activity_1) -> {\n        activity_2 = __core__ifThenElse(\n            __useopt__activity,\n            () -> {\n                activity_1\n            },\n            () -> {\n                __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__none____new()\n            }\n        )();\n        __module__CapoHelpers__DgDataDetails[]____new(__module__CapoHelpers__dgd_DataSrc[]__Both____new(input_2, output_1), id_2, \"\", mph_21, activity_2)\n    };\n    __module__CapoHelpers__DgDataDetails[]__creating = (id_3, output_2, mph_22, __useopt__activity_1, activity_3) -> {\n        activity_4 = __core__ifThenElse(\n            __useopt__activity_1,\n            () -> {\n                activity_3\n            },\n            () -> {\n                __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__none____new()\n            }\n        )();\n        __module__CapoHelpers__DgDataDetails[]____new(__module__CapoHelpers__dgd_DataSrc[]__Output____new(output_2), id_3, \"\", mph_22, activity_4)\n    };\n    __module__CapoHelpers__DgDataDetails[]__input = (self_192) -> {\n        () -> {\n            __cond_28 = __module__CapoHelpers__DgDataDetails[]__dataSrc(self_192);\n            __core__ifThenElse(\n                __module__CapoHelpers__dgd_DataSrc[]__Input____is(__cond_28),\n                () -> {\n                    (__lhs_0_50) -> {\n                        utxo_4 = __module__CapoHelpers__dgd_DataSrc[]__Input__utxo(__lhs_0_50);\n                        utxo_4\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__dgd_DataSrc[]__Both____is(__cond_28),\n                        () -> {\n                            (__lhs_0_49) -> {\n                                utxo_3 = __module__CapoHelpers__dgd_DataSrc[]__Both__utxo(__lhs_0_49);\n                                utxo_3\n                            }\n                        },\n                        () -> {\n                            (__27) -> {\n                                __helios__error(\"no input data; use findInput() first\")\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_28)\n        }\n    };\n    __module__CapoHelpers__DgDataDetails[]__output = (self_193) -> {\n        () -> {\n            __cond_29 = __module__CapoHelpers__DgDataDetails[]__dataSrc(self_193);\n            __core__ifThenElse(\n                __module__CapoHelpers__dgd_DataSrc[]__Output____is(__cond_29),\n                () -> {\n                    (__lhs_0_52) -> {\n                        txo_2 = __module__CapoHelpers__dgd_DataSrc[]__Output__txo(__lhs_0_52);\n                        txo_2\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__dgd_DataSrc[]__Both____is(__cond_29),\n                        () -> {\n                            (__lhs_0_51) -> {\n                                txo_1 = __module__CapoHelpers__dgd_DataSrc[]__Both__txo(__lhs_0_51);\n                                txo_1\n                            }\n                        },\n                        () -> {\n                            (__28) -> {\n                                __helios__error(\"no output data\")\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_29)\n        }\n    };\n    __module__CapoHelpers__DgDataDetails[]__inputData = (self_194) -> {\n        () -> {\n            __cond_30 = __helios__txoutputdatum__inline(__helios__txinput__datum(__module__CapoHelpers__DgDataDetails[]__input(self_194)()));\n            __core__ifThenElse(\n                __helios__data__constrdata____is(__cond_30),\n                () -> {\n                    (__lhs_0_53) -> {\n                        fields_163 = __helios__data__constrdata__fields(__lhs_0_53);\n                        __helios__list[__helios__data]__head(fields_163)\n                    }\n                },\n                () -> {\n                    (__29) -> {\n                        __helios__error(\"expected ConstrData{mStruct} for DgData input\")\n                    }\n                }\n            )()(__cond_30)\n        }\n    };\n    __module__CapoHelpers__DgDataDetails[]__outputData = (self_195) -> {\n        () -> {\n            __cond_31 = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__DgDataDetails[]__output(self_195)()));\n            __core__ifThenElse(\n                __helios__data__constrdata____is(__cond_31),\n                () -> {\n                    (__lhs_0_54) -> {\n                        fields_164 = __helios__data__constrdata__fields(__lhs_0_54);\n                        __helios__list[__helios__data]__head(fields_164)\n                    }\n                },\n                () -> {\n                    (__30) -> {\n                        __helios__error(\"expected ConstrData{mStruct} for DgData output\")\n                    }\n                }\n            )()(__cond_31)\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]____eq = __helios__struct____eq;\n    __module__CapoHelpers__CapoCtx[]__mph = (self_196) -> {\n        __helios__mintingpolicyhash__from_data(__helios__common__struct_field_0(self_196))\n    };\n    __module__CapoHelpers__CapoCtx[]__charter = (self_197) -> {\n        __module__CapoHelpers__cctx_CharterInputType[]__from_data(__module__CapoHelpers__cctx_CharterInputType[]__Unk__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__RefInput__is_valid_data_2, __module__CapoHelpers__cctx_CharterInputType[]__Input__is_valid_data_2)(__helios__common__struct_field_1(self_197))\n    };\n    __module__CapoHelpers__CapoCtx[]____new = (mph_23, charter) -> {\n        __core__mkCons(__helios__mintingpolicyhash____to_data(mph_23), __core__mkCons(__module__CapoHelpers__cctx_CharterInputType[]____to_data(charter), __core__mkNilData(())))\n    };\n    __helios__map[__helios__bytearray@__helios__int]__show = (self_198) -> {\n        () -> {\n            recurse_93 = (recurse_92, self_199, first) -> {\n                __core__chooseList(self_199, () -> {\n                    \"\"\n                }, () -> {\n                    __core__appendString(__core__ifThenElse(\n                        first,\n                        \"\",\n                        \",\"\n                    ), head_92 = __core__headList__safe(self_199);\n                    key_data = __core__fstPair(head_92);\n                    key_16 = __helios__bytearray__from_data_safe(key_data);\n                    value_data = __core__sndPair(head_92);\n                    value_8 = __helios__int__from_data_safe(value_data);\n                    __core__appendString(__core__appendString(__core__appendString(key_16((valid_7, key_17) -> {\n                        __core__ifThenElse(\n                            valid_7,\n                            () -> {\n                                __helios__bytearray__show(key_17)()\n                            },\n                            () -> {\n                                __helios__data__show(key_data)()\n                            }\n                        )()\n                    }), \":\"), value_8((valid_6, value_9) -> {\n                        __core__ifThenElse(\n                            valid_6,\n                            () -> {\n                                __helios__int__show(value_9)()\n                            },\n                            () -> {\n                                __helios__data__show(value_data)()\n                            }\n                        )()\n                    })), recurse_92(recurse_92, __core__tailList__safe(self_199), false)))\n                })()\n            };\n            __core__appendString(\"{\", __core__appendString(recurse_93(recurse_93, self_198, true), \"}\"))\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__creatingDgData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo, __module__CapoHelpers__CapoCtx[]__address, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput) -> {\n        (self_200) -> {\n            (__useopt__recId, recId_1, __useopt__recIdBytes, recIdBytes, __useopt__reqt, reqt_5) -> {\n                recId_2 = __core__ifThenElse(\n                    __useopt__recId,\n                    () -> {\n                        recId_1\n                    },\n                    () -> {\n                        \"\"\n                    }\n                )();\n                recIdBytes_1 = __core__ifThenElse(\n                    __useopt__recIdBytes,\n                    () -> {\n                        recIdBytes\n                    },\n                    () -> {\n                        __helios__string__encode_utf8(recId_2)()\n                    }\n                )();\n                reqt_6 = __core__ifThenElse(\n                    __useopt__reqt,\n                    () -> {\n                        reqt_5\n                    },\n                    () -> {\n                        \"the delegated-data record must be created\"\n                    }\n                )();\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupStart(reqt_6, true, true), output_3 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput(self_200)(recIdBytes_1);\n                recIdAssetClass = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_200), recIdBytes_1);\n                minted = __helios__value__get_safe(__helios__tx__minted(__helios__scriptcontext__tx))(recIdAssetClass);\n                __core__chooseUnit(__core__ifThenElse(\n                    __helios__int____eq(minted, 1),\n                    () -> {\n                        __module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add(\"✅ creating: \", __helios__bytearray__decode_utf8_safe(recIdBytes_1)()))\n                    },\n                    () -> {\n                        () -> {\n                            __core__chooseUnit(__core__ifThenElse(\n                                __helios__value__contains_policy(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoHelpers__CapoCtx[]__mph(self_200)),\n                                () -> {\n                                    __helios__print(__helios__string____add(\"  -- policy mint: \", __helios__map[__helios__bytearray@__helios__int]__show(__helios__value__get_policy(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoHelpers__CapoCtx[]__mph(self_200)))()))\n                                },\n                                () -> {\n                                    () -> {\n                                        __helios__print(\"  -- no mint in this policy\")\n                                    }()\n                                }\n                            )(), __helios__error(__helios__string____add(\"creatingDgData(): required record not minted: \", __helios__bytearray__decode_utf8_safe(recIdBytes_1)())))\n                        }()\n                    }\n                )(), __module__CapoHelpers__DgDataDetails[]__creating(recIdBytes_1, output_3, __module__CapoHelpers__CapoCtx[]__mph(self_200), false, ())))\n            }\n        }\n    };\n    __helios__option[__helios__string]__some____is = (data_271) -> {\n        __helios__common__enum_tag_equals(data_271, 0)\n    };\n    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__some____new = (some_2) -> {\n        __core__constrData(0, __helios__common__list_1(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]____to_data(some_2)))\n    };\n    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__some__new = __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__some____new;\n    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__none__new = __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__none____new;\n    __helios__option[__helios__string]__map[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]] = (self_201) -> {\n        (fn_21) -> {\n            pair_78 = __core__unConstrData(self_201);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_78), 0),\n                () -> {\n                    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__some__new(fn_21(__helios__string__from_data(__core__headList(__core__sndPair(pair_78)))))\n                },\n                () -> {\n                    __helios__option[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]]__none__new()\n                }\n            )()\n        }\n    };\n    __helios__option[__helios__string]__none____new = () -> {\n        __helios__option__NONE\n    };\n    __module__CapoHelpers__CapoCtx[]__updatingDgData = (__module__CapoHelpers__CapoCtx[]__findModelActivity, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput, __module__CapoHelpers__CapoCtx[]__getCharterData, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_1, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput, __module__CapoHelpers__CapoCtx[]__address_1, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1) -> {\n        (self_202) -> {\n            (__useopt__recId_1, recId_3, __useopt__recIdBytes_1, recIdBytes_2, __useopt__withActivity, withActivity, __useopt__reqt_1, reqt_7) -> {\n                recId_4 = __core__ifThenElse(\n                    __useopt__recId_1,\n                    () -> {\n                        recId_3\n                    },\n                    () -> {\n                        \"\"\n                    }\n                )();\n                recIdBytes_3 = __core__ifThenElse(\n                    __useopt__recIdBytes_1,\n                    () -> {\n                        recIdBytes_2\n                    },\n                    () -> {\n                        __helios__string__encode_utf8(recId_4)()\n                    }\n                )();\n                withActivity_1 = __core__ifThenElse(\n                    __useopt__withActivity,\n                    () -> {\n                        withActivity\n                    },\n                    () -> {\n                        __helios__option[__helios__string]__none____new()\n                    }\n                )();\n                reqt_8 = __core__ifThenElse(\n                    __useopt__reqt_1,\n                    () -> {\n                        reqt_7\n                    },\n                    () -> {\n                        \"updates the delegated-data record\"\n                    }\n                )();\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupStart(reqt_8, true, __cond_32 = withActivity_1;\n                __core__ifThenElse(\n                    __helios__option[__helios__string]__some____is(__cond_32),\n                    () -> {\n                        (__lhs_0_56) -> {\n                            false\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_55) -> {\n                            true\n                        }\n                    }\n                )()(__cond_32)), input_3 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate)(self_202)(recIdBytes_3, false, ());\n                output_4 = __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_1(self_202)(recIdBytes_3);\n                activity_5 = __helios__option[__helios__string]__map[__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]](withActivity_1)(__module__CapoHelpers__CapoCtx[]__findModelActivity(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput, __module__CapoHelpers__CapoCtx[]__getCharterData, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput)(self_202));\n                __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add(\"✅ updating: \", __helios__bytearray__decode_utf8_safe(recIdBytes_3)())), __module__CapoHelpers__DgDataDetails[]__updating(recIdBytes_3, input_3, output_4, __module__CapoHelpers__CapoCtx[]__mph(self_202), true, activity_5)))\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__findModelActivity_1 = (__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_1, __module__CapoHelpers__CapoCtx[]__getCharterData_1, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1) -> {\n        (self_203) -> {\n            (modelName) -> {\n                delegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_1(__module__CapoHelpers__CapoCtx[]__getCharterData_1, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_1)(self_203)(modelName, false, (), false, ());\n                __module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1(__module__CapoHelpers__DelegateInput[]__genericDelegateActivity_1)(delegateInput)()\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterRedeemer = (self_204) -> {\n        () -> {\n            e = \"requires charter as input\";\n            __cond_33 = __module__CapoHelpers__CapoCtx[]__charter(self_204);\n            __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__Unk____is(__cond_33),\n                () -> {\n                    (__lhs_0_65) -> {\n                        __helios__error(e)\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_33),\n                        () -> {\n                            (__lhs_0_64) -> {\n                                __helios__error(e)\n                            }\n                        },\n                        () -> {\n                            (__lhs_0_57) -> {\n                                utxo_5 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_57);\n                                activity_6 = __module__CapoHelpers__CapoActivity[]__from_data(__module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__usingAuthority__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__retiringRefScript__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__addingSpendInvariant__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum__is_valid_data_2, __module__CapoHelpers__CapoActivity[]__updatingCharter__is_valid_data_2)(__module__StellarHeliosHelpers__mustFindInputRedeemer(utxo_5));\n                                wrongActivity = () -> {\n                                    __core__ifThenElse(\n                                        true,\n                                        () -> {\n                                            __helios__error(\"non-CharterData activity\")\n                                        },\n                                        () -> {\n                                            () -> {\n                                                __module__CapoHelpers__CapoActivity[]__usingAuthority____new()\n                                            }()\n                                        }\n                                    )()\n                                };\n                                __cond_34 = activity_6;\n                                __core__ifThenElse(\n                                    __module__CapoHelpers__CapoActivity[]__retiringRefScript____is(__cond_34),\n                                    () -> {\n                                        (__lhs_0_63) -> {\n                                            wrongActivity()\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __module__CapoHelpers__CapoActivity[]__spendingDelegatedDatum____is(__cond_34),\n                                            () -> {\n                                                (__lhs_0_62) -> {\n                                                    wrongActivity()\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __module__CapoHelpers__CapoActivity[]__usingAuthority____is(__cond_34),\n                                                    () -> {\n                                                        (__lhs_0_61) -> {\n                                                            activity_6\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_34),\n                                                            () -> {\n                                                                (__lhs_0_60) -> {\n                                                                    activity_6\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __module__CapoHelpers__CapoActivity[]__addingSpendInvariant____is(__cond_34),\n                                                                    () -> {\n                                                                        (__lhs_0_59) -> {\n                                                                            activity_6\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__lhs_0_58) -> {\n                                                                            activity_6\n                                                                        }\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()(__cond_34)\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_33)\n        }\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe = (self_205) -> {\n        (key_18) -> {\n            __helios__common__map_get(self_205, __helios__string____to_data(key_18), (x_5) -> {\n                __core__constrData(0, __helios__common__list_1(x_5))\n            }, () -> {\n                __core__constrData(1, __helios__common__list_0)\n            })\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__findManifestEntry = (__module__CapoHelpers__CapoCtx[]__getCharterData_2) -> {\n        (self_206) -> {\n            (key_19) -> {\n                __core__chooseUnit(__helios__print(__helios__string____add(\"    -- looking for capo's manifest entry: \", key_19)), charterData = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_2(self_206)(), 0);\n                __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData))(key_19))\n            }\n        }\n    };\n    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is = (data_272) -> {\n        __helios__common__enum_tag_equals(data_272, 0)\n    };\n    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some = (self_207) -> {\n        __module__CapoHelpers__CapoManifestEntry[]__from_data(__helios__common__enum_field_0(self_207))\n    };\n    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is = (data_273) -> {\n        __helios__common__enum_tag_equals(data_273, 1)\n    };\n    __helios__option[__helios__bytearray]__none____new = () -> {\n        __helios__option__NONE\n    };\n    __helios__option[__helios__bytearray]__some____new = (some_3) -> {\n        __core__constrData(0, __helios__common__list_1(__helios__bytearray____to_data(some_3)))\n    };\n    __module__CapoHelpers__CapoCtx[]__findManifestTokenName = (__module__CapoHelpers__CapoCtx[]__getCharterData_3) -> {\n        (self_208) -> {\n            (key_20, __useopt__required_2, required_4) -> {\n                required_5 = __core__ifThenElse(\n                    __useopt__required_2,\n                    () -> {\n                        required_4\n                    },\n                    () -> {\n                        true\n                    }\n                )();\n                oe = __module__CapoHelpers__CapoCtx[]__findManifestEntry(__module__CapoHelpers__CapoCtx[]__getCharterData_3)(self_208)(key_20);\n                __cond_35 = oe;\n                __core__ifThenElse(\n                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_35),\n                    () -> {\n                        (__lhs_0_67) -> {\n                            __core__chooseUnit(__helios__assert(__helios__bool____not(required_5), __helios__string____add(\"missing required manifest entry: \", key_20)), __helios__option[__helios__bytearray]__none____new())\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_66) -> {\n                            e_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_66);\n                            __helios__option[__helios__bytearray]__some____new(__module__CapoHelpers__CapoManifestEntry[]__tokenName(e_1))\n                        }\n                    }\n                )()(__cond_35)\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__getSettingsId = (__module__CapoHelpers__CapoCtx[]__getCharterData_4) -> {\n        (self_209) -> {\n            (__useopt__required_3, required_6) -> {\n                required_7 = __core__ifThenElse(\n                    __useopt__required_3,\n                    () -> {\n                        required_6\n                    },\n                    () -> {\n                        true\n                    }\n                )();\n                __module__CapoHelpers__CapoCtx[]__findManifestTokenName(__module__CapoHelpers__CapoCtx[]__getCharterData_4)(self_209)(\"currentSettings\", true, required_7)\n            }\n        }\n    };\n    __helios__option[__helios__txoutput]__some__some = (self_210) -> {\n        __helios__txoutput__from_data(__helios__common__enum_field_0(self_210))\n    };\n    __module__StellarHeliosHelpers__REQTgroup[__module__CapoHelpers__CapoCtx[]] = (reqt_9, __useopt__collapsed_6, collapsed_12, callback_13) -> {\n        collapsed_13 = __core__ifThenElse(\n            __useopt__collapsed_6,\n            () -> {\n                collapsed_12\n            },\n            () -> {\n                false\n            }\n        )();\n        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupStart(__helios__string____add(\"❗\", reqt_9), true, collapsed_13), result_6 = callback_13();\n        __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, \"✅\"), result_6))\n    };\n    __module__CapoHelpers__CapoCtx[]__requiresGovAuthority = (__module__CapoHelpers__CapoCtx[]__getCharterData_5) -> {\n        (self_211) -> {\n            () -> {\n                __module__StellarHeliosHelpers__REQTgroup[__module__CapoHelpers__CapoCtx[]](\"MUST have the Capo's govAuthority approval\", true, true, () -> {\n                    __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(__module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__module__CapoHelpers__CapoCtx[]__getCharterData_5(self_211)()))(__module__CapoHelpers__CapoCtx[]__mph(self_211), false, (), false, ()), \"^ that fails, this can't\"), __core__chooseUnit(__helios__print(\"✅ govAuthority ok!\"), self_211))\n                })\n            }\n        }\n    };\n    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is = (data_274) -> {\n        __helios__common__enum_tag_equals(data_274, 1)\n    };\n    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some = (self_212) -> {\n        __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_212))\n    };\n    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe = (self_213) -> {\n        (key_21) -> {\n            __helios__common__map_get(self_213, __helios__string____to_data(key_21), (x_6) -> {\n                __core__constrData(0, __helios__common__list_1(x_6))\n            }, () -> {\n                __core__constrData(1, __helios__common__list_0)\n            })\n        }\n    };\n    __helios__option[__helios__string]__some____new = (some_4) -> {\n        __core__constrData(0, __helios__common__list_1(__helios__string____to_data(some_4)))\n    };\n    __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2 = (__module__CapoHelpers__CapoCtx[]__getCharterData_6, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_2) -> {\n        (self_214) -> {\n            (typeName, __useopt__required_4, required_8, __useopt__message, message) -> {\n                required_9 = __core__ifThenElse(\n                    __useopt__required_4,\n                    () -> {\n                        required_8\n                    },\n                    () -> {\n                        true\n                    }\n                )();\n                message_1 = __core__ifThenElse(\n                    __useopt__message,\n                    () -> {\n                        message\n                    },\n                    () -> {\n                        \"\"\n                    }\n                )();\n                __core__chooseUnit(__core__ifThenElse(\n                    required_9,\n                    () -> {\n                        __core__ifThenElse(\n                            __helios__int____gt(__helios__bytearray__length(__helios__string__encode_utf8(message_1)()), 0),\n                            () -> {\n                                __module__StellarHeliosHelpers__REQTgroupStart(message_1, true, true)\n                            },\n                            () -> {\n                                () -> {\n                                    __module__StellarHeliosHelpers__REQTgroupStart(__helios__string____add(\"MUST find the policy for record-type \", typeName), true, true)\n                                }()\n                            }\n                        )()\n                    },\n                    () -> {\n                        () -> {\n                            __core__ifThenElse(\n                                __helios__int____gt(__helios__bytearray__length(__helios__string__encode_utf8(message_1)()), 0),\n                                () -> {\n                                    __module__StellarHeliosHelpers__logGroupStart(message_1, true, false)\n                                },\n                                () -> {\n                                    () -> {\n                                        __module__StellarHeliosHelpers__logGroupStart(__helios__string____add(\"trying to find the policy for record-type \", typeName), true, false)\n                                    }()\n                                }\n                            )()\n                        }()\n                    }\n                )(), __core__chooseUnit(__helios__print(\"     -- locates the needed policy through the Capo manifest\"), (result_7) -> {\n                    __core__chooseUnit(__core__ifThenElse(\n                        __helios__bool__or(() -> {\n                            required_9\n                        }, () -> {\n                            __cond_38 = __module__CapoHelpers__DelegateInput[]__input(result_7);\n                            __core__ifThenElse(\n                                __helios__option[__helios__txinput]__some____is(__cond_38),\n                                () -> {\n                                    (__lhs_0_72) -> {\n                                        true\n                                    }\n                                },\n                                () -> {\n                                    (__lhs_0_71) -> {\n                                        false\n                                    }\n                                }\n                            )()(__cond_38)\n                        }),\n                        () -> {\n                            __module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add(\"✅ dgData policy found: \", typeName))\n                        },\n                        () -> {\n                            () -> {\n                                __module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add(\"✅ dgData policy found: \", typeName))\n                            }()\n                        }\n                    )(), result_7)\n                }(__cond_36 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_6(self_214)()))(typeName);\n                __core__ifThenElse(\n                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_36),\n                    () -> {\n                        (__lhs_0_70) -> {\n                            __helios__error(__helios__string____add(__helios__string____add(\"missing data-policy manifest for record-type '\", typeName), \"'\"))\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_68) -> {\n                            entry = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_68);\n                            __cond_37 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry);\n                            __core__ifThenElse(\n                                __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_37),\n                                () -> {\n                                    (__lhs_0_69) -> {\n                                        policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_69);\n                                        idPrefix_2 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_69);\n                                        (callback_14) -> {\n                                            callback_14(policyLink, idPrefix_2)\n                                        }\n                                    }\n                                },\n                                () -> {\n                                    (__31) -> {\n                                        __helios__error(__helios__string____add(\"manifest entry is not a data policy: \", typeName))\n                                    }\n                                }\n                            )()(__cond_37)((dgtLink, idPrefix_1) -> {\n                                __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_2(self_214)(dgtLink, __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____new(typeName), true, required_9, true, __helios__option[__helios__string]__some____new(idPrefix_1))\n                            })\n                        }\n                    }\n                )()(__cond_36))))\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_7) -> {\n        (self_215) -> {\n            (__useopt__required_5, required_10) -> {\n                required_11 = __core__ifThenElse(\n                    __useopt__required_5,\n                    () -> {\n                        required_10\n                    },\n                    () -> {\n                        true\n                    }\n                )();\n                input_4 = __helios__scriptcontext__get_current_input();\n                acMintDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_7(self_215)()))(__module__CapoHelpers__CapoCtx[]__mph(self_215));\n                isUsingMintDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_4))(acMintDgt), 0))(\"    -- acting on mintDgt-* token right now? \");\n                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                    isUsingMintDgt\n                }, () -> {\n                    __helios__bool____not(required_11)\n                }), \"not acting as mint delegate!\"), isUsingMintDgt)\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt = (__module__CapoHelpers__CapoCtx[]__getCharterData_8) -> {\n        (self_216) -> {\n            (__useopt__required_6, required_12) -> {\n                required_13 = __core__ifThenElse(\n                    __useopt__required_6,\n                    () -> {\n                        required_12\n                    },\n                    () -> {\n                        true\n                    }\n                )();\n                input_5 = __helios__scriptcontext__get_current_input();\n                acSpendDgt = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(__module__CapoHelpers__CapoCtx[]__getCharterData_8(self_216)()))(__module__CapoHelpers__CapoCtx[]__mph(self_216));\n                isUsingSpendDgt = __helios__bool__trace(__helios__int____gt(__helios__value__get_safe(__helios__txinput__value(input_5))(acSpendDgt), 0))(\"    -- acting on spendDgt-* token right now? \");\n                __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                    isUsingSpendDgt\n                }, () -> {\n                    __helios__bool____not(required_13)\n                }), \"not acting as spend delegate!\"), isUsingSpendDgt)\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__getCharterData_9 = (self_217) -> {\n        () -> {\n            __cond_39 = __module__CapoHelpers__CapoCtx[]__charter(self_217);\n            __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_39),\n                () -> {\n                    (__lhs_0_74) -> {\n                        datum_3 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__datum(__lhs_0_74);\n                        datum_3\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_39),\n                        () -> {\n                            (__lhs_0_73) -> {\n                                datum_2 = __module__CapoHelpers__cctx_CharterInputType[]__Input__datum(__lhs_0_73);\n                                datum_2\n                            }\n                        },\n                        () -> {\n                            (__32) -> {\n                                __helios__error(\"CapoCtx.getCharterData(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter datum first\")\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_39)\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__getNextCharterData = (__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_2, __module__CapoHelpers__CapoCtx[]__address_2) -> {\n        (self_218) -> {\n            () -> {\n                charterAc_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_218), __helios__string__encode_utf8(\"charter\")());\n                capoAddr = __module__CapoHelpers__CapoCtx[]__address_2(self_218)();\n                __cond_40 = __module__CapoHelpers__CapoCtx[]__charter(self_218);\n                __core__ifThenElse(\n                    __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_40),\n                    () -> {\n                        (__lhs_0_75) -> {\n                            charterData_1 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(__helios__txoutputdatum__inline(__helios__txoutput__datum(__helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))((txo_3) -> {\n                                __helios__bool__and(() -> {\n                                    __helios__address____eq(__helios__txoutput__address(txo_3), capoAddr)\n                                }, () -> {\n                                    __helios__int____gt(__helios__value__get_safe(__helios__txoutput__value(txo_3))(charterAc_2), 0)\n                                })\n                            })))), 0);\n                            charterData_1\n                        }\n                    },\n                    () -> {\n                        (__33) -> {\n                            __helios__error(\"CapoCtx.getNextCharterData(): invalid except with charter strategy Input\")\n                        }\n                    }\n                )()(__cond_40)\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3 = (self_219) -> {\n        () -> {\n            __cond_41 = __module__CapoHelpers__CapoCtx[]__charter(self_219);\n            __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_41),\n                () -> {\n                    (__lhs_0_77) -> {\n                        utxo_7 = __module__CapoHelpers__cctx_CharterInputType[]__RefInput__utxo(__lhs_0_77);\n                        utxo_7\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_41),\n                        () -> {\n                            (__lhs_0_76) -> {\n                                utxo_6 = __module__CapoHelpers__cctx_CharterInputType[]__Input__utxo(__lhs_0_76);\n                                utxo_6\n                            }\n                        },\n                        () -> {\n                            (__34) -> {\n                                __helios__error(\"CapoCtx.resolveCharterUtxo(): unknown charter strategy; use result of withCharterInput(), withCharterRef(), or needsCharter() to resolve charter utxo first\")\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_41)\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3 = (self_220) -> {\n        (dgtLink_1, role_1, __useopt__required_7, required_14, __useopt__idPrefix, idPrefix_3) -> {\n            required_15 = __core__ifThenElse(\n                __useopt__required_7,\n                () -> {\n                    required_14\n                },\n                () -> {\n                    true\n                }\n            )();\n            idPrefix_4 = __core__ifThenElse(\n                __useopt__idPrefix,\n                () -> {\n                    idPrefix_3\n                },\n                () -> {\n                    __helios__option[__helios__string]__none____new()\n                }\n            )();\n            __module__CapoHelpers__DelegateInput[]____new(dgtLink_1, role_1, idPrefix_4, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1(dgtLink_1)(__helios__tx__inputs(__helios__scriptcontext__tx), __module__CapoHelpers__CapoCtx[]__mph(self_220), true, required_15), __module__CapoHelpers__CapoCtx[]__mph(self_220))\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__address_3 = (self_221) -> {\n        () -> {\n            addr = __helios__txinput__address(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3(self_221)());\n            addr\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__delegatedDataRef = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1) -> {\n        (self_222) -> {\n            (__useopt__recId_2, recId_5, __useopt__recIdBytes_2, recIdBytes_4) -> {\n                recId_6 = __core__ifThenElse(\n                    __useopt__recId_2,\n                    () -> {\n                        recId_5\n                    },\n                    () -> {\n                        \"\"\n                    }\n                )();\n                recIdBytes_5 = __core__ifThenElse(\n                    __useopt__recIdBytes_2,\n                    () -> {\n                        recIdBytes_4\n                    },\n                    () -> {\n                        __helios__string__encode_utf8(recId_6)()\n                    }\n                )();\n                hasDD = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_1(self_222)(false, (), true, recIdBytes_5);\n                recIdStr = __helios__bytearray__decode_utf8_safe(recIdBytes_5)();\n                __cond_42 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasDD);\n                __core__ifThenElse(\n                    __helios__option[__helios__txinput]__none____is(__cond_42),\n                    () -> {\n                        (__lhs_0_79) -> {\n                            __helios__error(__helios__string____add(\"❌❌ 📎 input: delegated-data ref not found: \", recIdStr))\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_78) -> {\n                            txin_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_78);\n                            txin_2\n                        }\n                    }\n                )()(__cond_42)\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1 = (__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2) -> {\n        (self_223) -> {\n            (recIdBytes_6, __useopt__reqt_2, reqt_10) -> {\n                reqt_11 = __core__ifThenElse(\n                    __useopt__reqt_2,\n                    () -> {\n                        reqt_10\n                    },\n                    () -> {\n                        \"MUST have the input data record\"\n                    }\n                )();\n                hasDD_1 = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_2(self_223)(false, (), true, recIdBytes_6);\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupStart(reqt_11, true, true), recIdStr_1 = __helios__bytearray__decode_utf8_safe(recIdBytes_6)();\n                __cond_43 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasDD_1);\n                __core__ifThenElse(\n                    __helios__option[__helios__txinput]__none____is(__cond_43),\n                    () -> {\n                        (__lhs_0_81) -> {\n                            __helios__error(__helios__string____add(\"❌❌ 📎 input: delegated-data record: not found: \", recIdStr_1))\n                        }\n                    },\n                    () -> {\n                        (__lhs_0_80) -> {\n                            txin_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_80);\n                            __core__chooseUnit(__module__StellarHeliosHelpers__logGroupEnd(true, __helios__string____add(\"✅ 📎 input: delegated-data record: ok: \", recIdStr_1)), txin_3)\n                        }\n                    }\n                )()(__cond_43))\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3 = (self_224) -> {\n        (__useopt__typeName, typeName_1, __useopt__id, id_4) -> {\n            typeName_2 = __core__ifThenElse(\n                __useopt__typeName,\n                () -> {\n                    typeName_1\n                },\n                () -> {\n                    \"\"\n                }\n            )();\n            id_5 = __core__ifThenElse(\n                __useopt__id,\n                () -> {\n                    id_4\n                },\n                () -> {\n                    #\n                }\n            )();\n            capoAddr_1 = __module__CapoHelpers__CapoCtx[]__address_3(self_224)();\n            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                __helios__int____gt(__helios__bytearray__length(id_5), 0)\n            }, () -> {\n                __helios__int____gt(__helios__bytearray__length(__helios__string__serialize(typeName_2)()), 0)\n            }), \"data predicate must have id or typeName\"), (txin_4) -> {\n                __core__ifThenElse(\n                    __helios__address____eq(__helios__txinput__address(txin_4), capoAddr_1),\n                    () -> {\n                        data_275 = __helios__txoutputdatum__inline(__helios__txinput__datum(txin_4));\n                        __cond_44 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_275);\n                        __core__ifThenElse(\n                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_44),\n                            () -> {\n                                (__lhs_0_82) -> {\n                                    x_7 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_275));\n                                    __helios__bool__and(() -> {\n                                        __helios__bool__and(() -> {\n                                            true\n                                        }, () -> {\n                                            __helios__bool__or(() -> {\n                                                __helios__string____eq(typeName_2, \"\")\n                                            }, () -> {\n                                                __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_7), typeName_2)\n                                            })\n                                        })\n                                    }, () -> {\n                                        __helios__bool__or(() -> {\n                                            __helios__bytearray____eq(id_5, #)\n                                        }, () -> {\n                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_7), id_5)\n                                        })\n                                    })\n                                }\n                            },\n                            () -> {\n                                (__35) -> {\n                                    false\n                                }\n                            }\n                        )()(__cond_44)\n                    },\n                    () -> {\n                        () -> {\n                            false\n                        }()\n                    }\n                )()\n            })\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate = (self_225) -> {\n        (typeName_3, __useopt__id_1, id_6) -> {\n            id_7 = __core__ifThenElse(\n                __useopt__id_1,\n                () -> {\n                    id_6\n                },\n                () -> {\n                    #\n                }\n            )();\n            capoAddr_2 = __module__CapoHelpers__CapoCtx[]__address_3(self_225)();\n            (txo_4) -> {\n                __core__ifThenElse(\n                    __helios__address____eq(__helios__txoutput__address(txo_4), capoAddr_2),\n                    () -> {\n                        data_276 = __helios__txoutputdatum__inline(__helios__txoutput__datum(txo_4));\n                        __cond_45 = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(data_276);\n                        __core__ifThenElse(\n                            __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_45),\n                            () -> {\n                                (__lhs_0_83) -> {\n                                    x_8 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(data_276));\n                                    __helios__bool__and(() -> {\n                                        __helios__string____eq(__module__StellarHeliosHelpers__AnyData[]__type(x_8), typeName_3)\n                                    }, () -> {\n                                        __helios__bool__or(() -> {\n                                            __helios__bytearray____eq(id_7, #)\n                                        }, () -> {\n                                            __helios__bytearray____eq(__module__StellarHeliosHelpers__AnyData[]__id(x_8), id_7)\n                                        })\n                                    })\n                                }\n                            },\n                            () -> {\n                                (__36) -> {\n                                    false\n                                }\n                            }\n                        )()(__cond_45)\n                    },\n                    () -> {\n                        () -> {\n                            false\n                        }()\n                    }\n                )()\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData = (__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2) -> {\n        (self_226) -> {\n            (newDataId, dataTypePurpose) -> {\n                __module__StellarHeliosHelpers__bREQTgroup(\"The new record MUST be saved in the Capo address\", true, true, () -> {\n                    dgData = __helios__txoutputdatum__inline(__helios__txoutput__datum(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_2(self_226)(newDataId)));\n                    dgDatum = __module__CapoHelpers__CapoDatum[]__from_data(__module__CapoHelpers__CapoDatum[]__CharterData__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__ScriptReference__is_valid_data_2, __module__CapoHelpers__CapoDatum[]__DelegatedData__is_valid_data_2)(dgData);\n                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the new record must match type-name in dgDataPolicy manifest\", false, (), false, (), false, ()), __cond_46 = dgDatum;\n                    __core__ifThenElse(\n                        __module__CapoHelpers__CapoDatum[]__DelegatedData____is(__cond_46),\n                        () -> {\n                            (__lhs_0_84) -> {\n                                data_277 = __module__StellarHeliosHelpers__AnyData[]__from_data(__module__StellarHeliosHelpers__fromCip68Wrapper(dgData));\n                                recIdStr_2 = __helios__bytearray__decode_utf8_safe(newDataId)();\n                                __core__ifThenElse(\n                                    __helios__bytearray____neq(__module__StellarHeliosHelpers__AnyData[]__id(data_277), newDataId),\n                                    () -> {\n                                        actualIdStr_1 = __helios__bytearray__decode_utf8_safe(__module__StellarHeliosHelpers__AnyData[]__id(data_277))();\n                                        __helios__error(__helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add(\"❌❌ 📎 outDD: wrong id: \", actualIdStr_1), \" (expected \"), recIdStr_2), \")\"))\n                                    },\n                                    () -> {\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __helios__string____neq(__module__StellarHeliosHelpers__AnyData[]__type(data_277), dataTypePurpose),\n                                                () -> {\n                                                    __helios__error(__helios__string____add(__helios__string____add(__helios__string____add(__helios__string____add(\"❌❌ 📎 outDD: bad type: \", __module__StellarHeliosHelpers__AnyData[]__type(data_277)), \" (expected \"), dataTypePurpose), \")\"))\n                                                },\n                                                () -> {\n                                                    () -> {\n                                                        true\n                                                    }()\n                                                }\n                                            )()\n                                        }()\n                                    }\n                                )()\n                            }\n                        },\n                        () -> {\n                            (__37) -> {\n                                __helios__error(\"output not delegated data\")\n                            }\n                        }\n                    )()(__cond_46))\n                })\n            }\n        }\n    };\n    __helios__option[__helios__txoutput]__none____is = (data_278) -> {\n        __helios__common__enum_tag_equals(data_278, 1)\n    };\n    __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3 = (self_227) -> {\n        (recId_7) -> {\n            recIdStr_3 = __helios__bytearray__decode_utf8_safe(recId_7)();\n            ac_2 = __helios__assetclass__new(__module__CapoHelpers__CapoCtx[]__mph(self_227), recId_7);\n            capoAddr_3 = __module__CapoHelpers__CapoCtx[]__address_3(self_227)();\n            __cond_47 = __helios__list[__helios__txoutput]__find_safe(__helios__tx__outputs(__helios__scriptcontext__tx))((txout) -> {\n                __helios__bool__and(() -> {\n                    __helios__bool__and(() -> {\n                        true\n                    }, () -> {\n                        __helios__int____eq(__helios__value__get_safe(__helios__txoutput__value(txout))(ac_2), 1)\n                    })\n                }, () -> {\n                    __helios__bool__trace(__helios__address____eq(__helios__txoutput__address(txout), capoAddr_3))(\"output found!  ... at the right capoAddr? \")\n                })\n            });\n            __core__ifThenElse(\n                __helios__option[__helios__txoutput]__none____is(__cond_47),\n                () -> {\n                    (__lhs_0_86) -> {\n                        __helios__error(__helios__string____add(\"❌❌ 📎 delegated-data output: not found: \", recIdStr_3))\n                    }\n                },\n                () -> {\n                    (__lhs_0_85) -> {\n                        txout_1 = __helios__option[__helios__txoutput]__some__some(__lhs_0_85);\n                        __core__chooseUnit(__helios__print(__helios__string____add(\"✅ 📎 delegated-data output: found \", recIdStr_3)), txout_1)\n                    }\n                }\n            )()(__cond_47)\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__needsCharter = (__module__CapoHelpers__CapoCtx[]__withCharterInput) -> {\n        (self_228) -> {\n            () -> {\n                charter_1 = __module__CapoHelpers__CapoCtx[]__charter(self_228);\n                __cond_48 = charter_1;\n                __core__ifThenElse(\n                    __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_48),\n                    () -> {\n                        (__lhs_0_92) -> {\n                            __core__chooseUnit(__helios__print(\"      -- needs charter, anywhere in the tx (already found as ref : )\"), self_228)\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_48),\n                            () -> {\n                                (__lhs_0_91) -> {\n                                    __core__chooseUnit(__helios__print(\"      -- needs charter, anywhere in the tx (already found as input : )\"), self_228)\n                                }\n                            },\n                            () -> {\n                                (__lhs_0_87) -> {\n                                    __lhs_0_88 = self_228;\n                                    mph_24 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_88);\n                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the charter to be available in the transaction (input or ref)\", false, (), false, (), false, ()), charterAc_3 = __helios__assetclass__new(mph_24, __helios__string__encode_utf8(\"charter\")());\n                                    hasCharter_2 = (txin_5) -> {\n                                        __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_5))(charterAc_3), 0)\n                                    };\n                                    __cond_49 = __helios__list[__helios__txinput]__find_safe(__helios__tx__ref_inputs(__helios__scriptcontext__tx))(hasCharter_2);\n                                    __core__ifThenElse(\n                                        __helios__option[__helios__txinput]__none____is(__cond_49),\n                                        () -> {\n                                            (__lhs_0_90) -> {\n                                                __core__chooseUnit(__helios__print(\"CapoCtx needsCharter(): no charter ref; must be in inputs...\"), __module__CapoHelpers__CapoCtx[]__withCharterInput(self_228)())\n                                            }\n                                        },\n                                        () -> {\n                                            (__lhs_0_89) -> {\n                                                charterUtxo_2 = __helios__option[__helios__txinput]__some__some(__lhs_0_89);\n                                                __core__chooseUnit(__helios__print(\"    -- CapoCtx needsCharter(): found charter ref\"), datum_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_2))), 0);\n                                                __module__CapoHelpers__CapoCtx[]____new(mph_24, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_4, charterUtxo_2)))\n                                            }\n                                        }\n                                    )()(__cond_49))\n                                }\n                            }\n                        )()\n                    }\n                )()(__cond_48)\n            }\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterInput_1 = (self_229) -> {\n        () -> {\n            charter_2 = __module__CapoHelpers__CapoCtx[]__charter(self_229);\n            __cond_50 = charter_2;\n            __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_50),\n                () -> {\n                    (__lhs_0_98) -> {\n                        __core__chooseUnit(__helios__print(\"      -- needs charter spent in inputs (already checked : )\"), self_229)\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_50),\n                        () -> {\n                            (__lhs_0_97) -> {\n                                __helios__error(\"CapoCtx.withCharterInput(): charter is from ref!\")\n                            }\n                        },\n                        () -> {\n                            (__lhs_0_93) -> {\n                                __lhs_0_94 = self_229;\n                                mph_25 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_94);\n                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the charter to be spent in the inputs\", false, (), false, (), false, ()), charterAc_4 = __helios__assetclass__new(mph_25, __helios__string__encode_utf8(\"charter\")());\n                                hasCharter_3 = (txin_6) -> {\n                                    __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(txin_6))(charterAc_4), 0)\n                                };\n                                __core__chooseUnit(__helios__print(\"    -- CapoCtx finding charter in inputs\"), (charterUtxo_3) -> {\n                                    datum_5 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(charterUtxo_3))), 0);\n                                    __module__CapoHelpers__CapoCtx[]____new(mph_25, __module__CapoHelpers__cctx_CharterInputType[]__Input____new(datum_5, charterUtxo_3))\n                                }(__cond_51 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))(hasCharter_3);\n                                __core__ifThenElse(\n                                    __helios__option[__helios__txinput]__some____is(__cond_51),\n                                    () -> {\n                                        (__lhs_0_96) -> {\n                                            ch_3 = __helios__option[__helios__txinput]__some__some(__lhs_0_96);\n                                            ch_3\n                                        }\n                                    },\n                                    () -> {\n                                        (__lhs_0_95) -> {\n                                            __helios__error(\"Missing required charter input\")\n                                        }\n                                    }\n                                )()(__cond_51))))\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_50)\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__withCharterRef = (self_230) -> {\n        () -> {\n            charter_3 = __module__CapoHelpers__CapoCtx[]__charter(self_230);\n            __cond_52 = charter_3;\n            __core__ifThenElse(\n                __module__CapoHelpers__cctx_CharterInputType[]__RefInput____is(__cond_52),\n                () -> {\n                    (__lhs_0_102) -> {\n                        __core__chooseUnit(__helios__print(\"      -- needs charter ref (already checked : )\"), self_230)\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoHelpers__cctx_CharterInputType[]__Input____is(__cond_52),\n                        () -> {\n                            (__lhs_0_101) -> {\n                                __helios__error(\"CapoCtx.withCharterRef(): charter is from inputs!\")\n                            }\n                        },\n                        () -> {\n                            (__lhs_0_99) -> {\n                                __lhs_0_100 = self_230;\n                                mph_26 = __module__CapoHelpers__CapoCtx[]__mph(__lhs_0_100);\n                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the charter to be referenced in the txn, but unspent\", false, (), false, (), false, ()), utxo_8 = __module__CapoHelpers__getRefCharterUtxo(mph_26);\n                                datum_6 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoDatum[]__CharterData__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_8))), 0);\n                                __module__CapoHelpers__CapoCtx[]____new(mph_26, __module__CapoHelpers__cctx_CharterInputType[]__RefInput____new(datum_6, utxo_8)))\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_52)\n        }\n    };\n    __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool] = (self_231) -> {\n        (fn_22, z_2) -> {\n            __helios__common__fold(self_231, (z_3, pair_79) -> {\n                fn_22(z_3, __helios__string__from_data(__core__fstPair(pair_79)), __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__core__sndPair(pair_79)))\n            }, z_2)\n        }\n    };\n    __helios__option[__helios__bool]__unwrap = (self_232) -> {\n        () -> {\n            __helios__bool__from_data(__helios__common__enum_field_0(self_232))\n        }\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all = (self_233) -> {\n        (fn_23) -> {\n            fn_24 = (pair_80) -> {\n                fn_23(__helios__string__from_data(__core__fstPair(pair_80)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(pair_80)))\n            };\n            __helios__common__all(self_233, fn_24)\n        }\n    };\n    __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all = (self_234) -> {\n        (fn_25) -> {\n            __helios__common__all(self_234, (item_12) -> {\n                fn_25(__module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(item_12))\n            })\n        }\n    };\n    __helios__option[__helios__bool]__some____is = (data_279) -> {\n        __helios__common__enum_tag_equals(data_279, 0)\n    };\n    __module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings = (self_235) -> {\n        () -> {\n            charterData_2 = __module__CapoHelpers__CapoCtx[]__getCharterData_9(self_235)();\n            mph_27 = __module__CapoHelpers__CapoCtx[]__mph(self_235);\n            __lhs_0_103 = __helios__common__assert_constr_index(charterData_2, 0);\n            spendInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__spendInvariants(__lhs_0_103);\n            otherNamedDelegates = __module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__lhs_0_103);\n            mintInvariants = __module__CapoHelpers__CapoDatum[]__CharterData__mintInvariants(__lhs_0_103);\n            govDelegate = __module__CapoHelpers__CapoDatum[]__CharterData__govAuthorityLink(__lhs_0_103);\n            manifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__lhs_0_103);\n            inputs_2 = __helios__tx__inputs(__helios__scriptcontext__tx);\n            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"   -- only the spend delegate calls this function\", false, (), false, (), false, ()), spendDelegateIsValidating = __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(self_235)(false, ());\n            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- spend delegate requires the other delegates validate (except mint delegate == same as spend delegate)\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"govDelegate MAY contribute to settings validation\", false, (), false, (), false, ()), (govDelegateMaybeValidating) -> {\n                checkOneInvariant = (oneDgt) -> {\n                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"invariant must validate settings\", false, (), false, (), false, ()), __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(oneDgt)(inputs_2, mph_27, true))())\n                };\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"spend invariants must validate settings\", false, (), false, (), false, ()), spendInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(spendInvariants)(checkOneInvariant);\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"mint invariants must validate settings\", false, (), false, (), false, ()), mintInvariantsAreValidating = __helios__list[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__all(mintInvariants)(checkOneInvariant);\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"dgDataControllers must validate settings\", false, (), false, (), false, ()), dgDataPoliciesAreValidating = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__all(manifest)((key_22, entry_1) -> {\n                    __cond_54 = __module__CapoHelpers__CapoManifestEntry[]__entryType(entry_1);\n                    __core__ifThenElse(\n                        __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_54),\n                        () -> {\n                            (__lhs_0_106) -> {\n                                policyLink_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_106);\n                                __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(policyLink_1)(inputs_2, mph_27, true))()\n                            }\n                        },\n                        () -> {\n                            (__38) -> {\n                                __core__chooseUnit(__helios__print(__helios__string____add(\"  -- ignoring manifest entry (not a data policy): \", key_22)), true)\n                            }\n                        }\n                    )()(__cond_54)\n                });\n                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"named delegates must validate settings\", false, (), false, (), false, ()), namedDelegatesAreValidating = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__fold[__helios__bool](otherNamedDelegates)(__core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  - each other-named-delegate must validate settings\", false, (), false, (), false, ()), (ok, key_23, dgt) -> {\n                    __core__chooseUnit(__helios__print(__helios__string____add(\"  - other-named-delegate: \", key_23)), __core__chooseUnit(__helios__print(\"\n\"), __helios__bool__and(() -> {\n                        ok\n                    }, () -> {\n                        __helios__option[__helios__bool]__unwrap(__module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(dgt)(inputs_2, mph_27, true))()\n                    })))\n                }), true);\n                __helios__bool__and(() -> {\n                    __helios__bool__and(() -> {\n                        __helios__bool__and(() -> {\n                            __helios__bool__and(() -> {\n                                __helios__bool__and(() -> {\n                                    dgDataPoliciesAreValidating\n                                }, () -> {\n                                    spendDelegateIsValidating\n                                })\n                            }, () -> {\n                                govDelegateMaybeValidating\n                            })\n                        }, () -> {\n                            spendInvariantsAreValidating\n                        })\n                    }, () -> {\n                        mintInvariantsAreValidating\n                    })\n                }, () -> {\n                    namedDelegatesAreValidating\n                })))))\n            }(__cond_53 = __module__CapoDelegateHelpers__RelativeDelegateLink[]__validatesUpdatedSettings(__module__CapoDelegateHelpers__RelativeDelegateLink[]__hasDelegateInput_1, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1)(govDelegate)(inputs_2, mph_27, false);\n            __core__ifThenElse(\n                __helios__option[__helios__bool]__some____is(__cond_53),\n                () -> {\n                    (__lhs_0_105) -> {\n                        true\n                    }\n                },\n                () -> {\n                    (__lhs_0_104) -> {\n                        __core__chooseUnit(__helios__print(\"  -- govAuthority isn't a script-based validator; doesn't validate new settings\"), true)\n                    }\n                }\n            )()(__cond_53)))))\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity = (self_236) -> {\n        (activity_7) -> {\n            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                true\n            }, () -> {\n                __module__CapoHelpers__CapoCtx[]____eq(self_236, self_236)\n            }), \"prevent unused var\"), __cond_55 = activity_7;\n            __core__ifThenElse(\n                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate____is(__cond_55),\n                () -> {\n                    (__lhs_0_113) -> {\n                        __helios__error(\"the forcingNewSpendDelegate escape-hatch activity is always handled directly by the Capo\")\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_55),\n                        () -> {\n                            (__lhs_0_112) -> {\n                                __helios__error(\"the forcingNewMintDelegate escape-hatch activity is always handled directly by the Capo\")\n                            }\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_55),\n                                () -> {\n                                    (__lhs_0_111) -> {\n                                        __core__chooseUnit(__helios__print(\"-- Updating the Capo manifest uses the spend delegate\"), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_55),\n                                        () -> {\n                                            (__lhs_0_110) -> {\n                                                __core__chooseUnit(__helios__print(\"-- Queuing a pending dgt-change uses the mint delegate\"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_55),\n                                                () -> {\n                                                    (__lhs_0_109) -> {\n                                                        __core__chooseUnit(__helios__print(\"-- Removing a pending dgt-change entry uses the spend delegate\"), __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new())\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_55),\n                                                        () -> {\n                                                            (__lhs_0_108) -> {\n                                                                __core__chooseUnit(__helios__print(\"-- Committing pending dgt-changes uses both the mint and spend delegates\"), __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____new())\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_107) -> {\n                                                                __core__chooseUnit(__helios__assert(false, \"Obsolete code path\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Creating a new delegate (deprecated path)...\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"deprecate use of CLA::CreatingDelegate\"), __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new())))\n                                                            }\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()(__cond_55))\n        }\n    };\n    __module__CapoHelpers__CapoCtx[]__orFail = (self_237) -> {\n        () -> {\n            __lhs_0_114 = self_237;\n            true\n        }\n    };\n    __module__CapoHelpers__mkCapoCtx = (mph_28) -> {\n        __module__CapoHelpers__CapoCtx[]____new(mph_28, __module__CapoHelpers__cctx_CharterInputType[]__Unk____new())\n    };\n    __module__CapoMintHelpers__hasSeedUtxo = (tx, seedUtxo, __useopt__reqt_3, reqt_12) -> {\n        reqt_13 = __core__ifThenElse(\n            __useopt__reqt_3,\n            () -> {\n                reqt_12\n            },\n            () -> {\n                \"the indicated seed UTXO must be spent\"\n            }\n        )();\n        __module__StellarHeliosHelpers__bREQTgroup(reqt_13, false, true, () -> {\n            __core__chooseUnit(__core__ifThenElse(\n                __helios__bool____not(__helios__list[__helios__txinput]__any(__helios__tx__inputs(tx))((input_6) -> {\n                    __helios__txoutputid____eq(__helios__txinput__output_id(input_6), seedUtxo)\n                })),\n                () -> {\n                    __core__chooseUnit(__helios__print(__helios__string____add(\"  -- seedUtxo: \", __helios__txoutputid__show(seedUtxo)())), __helios__error(\"missing expected seed input for minting\"))\n                },\n                () -> {\n                    () -> {\n                        ()\n                    }()\n                }\n            )(), __core__chooseUnit(__helios__print(__helios__string____add(\"✅ ok: seedUtxo: \", __helios__txoutputid__show(seedUtxo)())), true))\n        })\n    };\n    __module__CapoMintHelpers__noOtherActivitiesSupported = (__39) -> {\n        __core__chooseUnit(__helios__print(\"yikes, expected the delegate to use activity DelegateLifecycleActivities:ReplacingMe or authorizingDelegate...\n\"), __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(\"   -- note: for other cases, a context-specific check via validateUutMinting's (\n\", \"  ...\n  checkMintDgtActivity: (AbstractDelegateActivitiesEnum) -> Bool)\n\"), \") option can be used to steer around this failure.\n\")), __core__chooseUnit(__helios__assert(false, \"unexpected delegate activity\"), false)))\n    };\n    __helios__option[__helios__data]__none____is = (data_280) -> {\n        __helios__common__enum_tag_equals(data_280, 1)\n    };\n    __helios__option[__helios__data]__some__some = (self_238) -> {\n        __helios__data__from_data(__helios__common__enum_field_0(self_238))\n    };\n    __helios__map[__helios__scriptpurpose@__helios__data]__get_safe = (self_239) -> {\n        (key_24) -> {\n            __helios__common__map_get(self_239, __helios__scriptpurpose____to_data(key_24), (x_9) -> {\n                __core__constrData(0, __helios__common__list_1(x_9))\n            }, () -> {\n                __core__constrData(1, __helios__common__list_0)\n            })\n        }\n    };\n    __module__CapoMintHelpers__requiresDelegateAuthorizingMint = (delegateLink, mph_29, __useopt__extraMintDelegateRedeemerCheck, extraMintDelegateRedeemerCheck, __useopt__checkMintDgtActivity, checkMintDgtActivity) -> {\n        extraMintDelegateRedeemerCheck_1 = __core__ifThenElse(\n            __useopt__extraMintDelegateRedeemerCheck,\n            () -> {\n                extraMintDelegateRedeemerCheck\n            },\n            () -> {\n                true\n            }\n        )();\n        checkMintDgtActivity_1 = __core__ifThenElse(\n            __useopt__checkMintDgtActivity,\n            () -> {\n                checkMintDgtActivity\n            },\n            () -> {\n                __module__CapoMintHelpers__noOtherActivitiesSupported\n            }\n        )();\n        authzAc = __module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(delegateLink)(mph_29);\n        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the charter's mint-delegate to authorize this mint activity\", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add(\"  -- finding input dgTkn: \", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink))), (targetId_1) -> {\n            __core__chooseUnit(__helios__print(\"     ✅ ➡️  💁found dgTkn ^\"), spendsAuthorityUut = __helios__map[__helios__scriptpurpose@__helios__data]__find_key(__helios__tx__redeemers(__helios__scriptcontext__tx))((purpose_1) -> {\n                __cond_57 = purpose_1;\n                __core__ifThenElse(\n                    __helios__scriptpurpose__spending____is(__cond_57),\n                    () -> {\n                        (sp_1) -> {\n                            __helios__txoutputid____eq(__helios__scriptpurpose__spending__output_id(sp_1), targetId_1)\n                        }\n                    },\n                    () -> {\n                        (__40) -> {\n                            false\n                        }\n                    }\n                )()(__cond_57)\n            });\n            err = __helios__string____add(__helios__string____add(\"dgTkn \", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)), \" not being spent as expected\");\n            (maybeCheckedMintDelegateAuthority) -> {\n                delegateDidAuthorize = true;\n                __helios__bool__and(() -> {\n                    delegateDidAuthorize\n                }, () -> {\n                    maybeCheckedMintDelegateAuthority\n                })\n            }(__cond_58 = __helios__map[__helios__scriptpurpose@__helios__data]__get_safe(__helios__tx__redeemers(__helios__scriptcontext__tx))(spendsAuthorityUut);\n            __core__ifThenElse(\n                __helios__option[__helios__data]__none____is(__cond_58),\n                () -> {\n                    (__lhs_0_122) -> {\n                        __helios__error(err)\n                    }\n                },\n                () -> {\n                    (__lhs_0_117) -> {\n                        x_11 = __helios__option[__helios__data]__some__some(__lhs_0_117);\n                        activity_8 = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__from_data(__module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CapoLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__SpendingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MintingActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__BurningActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__CreatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__UpdatingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DeletingDelegatedData__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__MultipleDelegateActivities__is_valid_data_2, __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__OtherActivities__is_valid_data_2)(x_11);\n                        __cond_59 = activity_8;\n                        __core__ifThenElse(\n                            __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities____is(__cond_59),\n                            () -> {\n                                (__lhs_0_118) -> {\n                                    DLA = __module__CapoDelegateHelpers__AbstractDelegateActivitiesEnum[]__DelegateLifecycleActivities__activity(__lhs_0_118);\n                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"VERIFY we ---------------- don't need the funny redeemer-check skipping\"), __core__chooseUnit(__core__ifThenElse(\n                                        __helios__bool____not(extraMintDelegateRedeemerCheck_1),\n                                        () -> {\n                                            __core__chooseUnit(__helios__print(\" vvv wherever it is, probably best it uses the checkMintDgtActivity option\"), __helios__error(\"where is extraMintDelegateRedeemerCheck=false really needed?\"))\n                                        },\n                                        () -> {\n                                            () -> {\n                                                ()\n                                            }()\n                                        }\n                                    )(), __cond_60 = DLA;\n                                    __core__ifThenElse(\n                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_60),\n                                        () -> {\n                                            (__lhs_0_121) -> {\n                                                __core__chooseUnit(__helios__print(\"  -- ok, dgTkn spent\n\"), true)\n                                            }\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_60),\n                                                () -> {\n                                                    (__lhs_0_120) -> {\n                                                        __helios__error(\"DLA::Retiring can't mint!\")\n                                                    }\n                                                },\n                                                () -> {\n                                                    (__lhs_0_119) -> {\n                                                        __helios__error(\"DLA::ValidatingSettings can't mint!\")\n                                                    }\n                                                }\n                                            )()\n                                        }\n                                    )()(__cond_60)))\n                                }\n                            },\n                            () -> {\n                                (__41) -> {\n                                    checkMintDgtActivity_1(activity_8)\n                                }\n                            }\n                        )()(__cond_59)\n                    }\n                }\n            )()(__cond_58)))\n        }(__cond_56 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_10) -> {\n            __helios__int____gt(__helios__value__get_safe(__helios__txinput__value(i_10))(authzAc), 0)\n        });\n        __core__ifThenElse(\n            __helios__option[__helios__txinput]__some____is(__cond_56),\n            () -> {\n                (__lhs_0_116) -> {\n                    x_10 = __helios__option[__helios__txinput]__some__some(__lhs_0_116);\n                    __helios__txinput__output_id(x_10)\n                }\n            },\n            () -> {\n                (__lhs_0_115) -> {\n                    __helios__error(__helios__string____add(\"  ❌❌ missing dgTkn \", __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(delegateLink)))\n                }\n            }\n        )()(__cond_56))))\n    };\n    __module__CapoMintHelpers__mkUutTnFactory = (seed_1) -> {\n        seedTxId = __helios__txoutputid__tx_id(seed_1);\n        seedIdx = __helios__txoutputid__index(seed_1);\n        idxBytes = __helios__int__serialize(seedIdx)();\n        rawTxId = __helios__bytearray__slice(__helios__txid__serialize(seedTxId)())(5, 37);\n        txoInfo = __core__ifThenElse(\n            __helios__int____gt(__helios__bytearray__length(idxBytes), 9),\n            () -> {\n                __core__chooseUnit(__helios__assert(false, \"cbor(txoId) len > 9 !!\"), idxBytes)\n            },\n            () -> {\n                () -> {\n                    __helios__bytearray____add(__helios__bytearray____add(rawTxId, __helios__string__encode_utf8(\"@\")()), idxBytes)\n                }()\n            }\n        )();\n        miniHash = __helios__bytearray__slice(__helios__bytearray__blake2b(txoInfo)())(0, 6);\n        mhs = __helios__bytearray__show(miniHash)();\n        (p) -> {\n            __helios__string____add(__helios__string____add(p, \"-\"), mhs)\n        }\n    };\n    __module__CapoMintHelpers__sortPolicyValuesPredictably = (k1, _v1, k2, _v2) -> {\n        __helios__bytearray____lt(k1, k2)\n    };\n    __helios__map[__helios__bytearray@__helios__int]__for_each = (self_240) -> {\n        (fn_26) -> {\n            recurse_95 = (recurse_94, map_33) -> {\n                __core__chooseList(map_33, () -> {\n                    ()\n                }, () -> {\n                    head_93 = __core__headList__safe(map_33);\n                    __core__chooseUnit(fn_26(__helios__bytearray__from_data(__core__fstPair(head_93)), __helios__int__from_data(__core__sndPair(head_93))), recurse_94(recurse_94, __core__tailList__safe(map_33)))\n                })()\n            };\n            recurse_95(recurse_95, self_240)\n        }\n    };\n    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter = (self_241) -> {\n        (fn_27) -> {\n            __helios__common__filter_map(self_241, (pair_81) -> {\n                fn_27(__helios__mintingpolicyhash__from_data(__core__fstPair(pair_81)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(pair_81)))\n            })\n        }\n    };\n    __helios__list[__helios__string]__length = __helios__common__length;\n    __helios__list[__helios__string]__head = (self_242) -> {\n        __helios__string__from_data(__core__headList(self_242))\n    };\n    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each = (self_243) -> {\n        (fn_28) -> {\n            recurse_97 = (recurse_96, map_34) -> {\n                __core__chooseList(map_34, () -> {\n                    ()\n                }, () -> {\n                    head_94 = __core__headList__safe(map_34);\n                    __core__chooseUnit(fn_28(__helios__mintingpolicyhash__from_data(__core__fstPair(head_94)), __helios__map[__helios__bytearray@__helios__int]__from_data(__core__sndPair(head_94))), recurse_96(recurse_96, __core__tailList__safe(map_34)))\n                })()\n            };\n            recurse_97(recurse_97, self_243)\n        }\n    };\n    __helios__option[__helios__int]__none____is = (data_281) -> {\n        __helios__common__enum_tag_equals(data_281, 1)\n    };\n    __helios__option[__helios__int]__some__some = (self_244) -> {\n        __helios__int__from_data(__helios__common__enum_field_0(self_244))\n    };\n    __helios__map[__helios__bytearray@__helios__int]__get_safe = (self_245) -> {\n        (key_25) -> {\n            __helios__common__map_get(self_245, __helios__bytearray____to_data(key_25), (x_12) -> {\n                __core__constrData(0, __helios__common__list_1(x_12))\n            }, () -> {\n                __core__constrData(1, __helios__common__list_0)\n            })\n        }\n    };\n    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete = (self_246) -> {\n        (key_26) -> {\n            key_27 = __helios__mintingpolicyhash____to_data(key_26);\n            recurse_99 = (recurse_98, self_247) -> {\n                __core__chooseList(self_247, () -> {\n                    self_247\n                }, () -> {\n                    head_95 = __core__headList__safe(self_247);\n                    tail_5 = __core__tailList__safe(self_247);\n                    __core__ifThenElse(\n                        __core__equalsData(key_27, __core__fstPair(head_95)),\n                        () -> {\n                            recurse_98(recurse_98, tail_5)\n                        },\n                        () -> {\n                            __core__mkCons(head_95, recurse_98(recurse_98, tail_5))\n                        }\n                    )()\n                })()\n            };\n            recurse_99(recurse_99, self_246)\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]____to_data = __core__mapData;\n    __helios__map[__helios__bytearray@__helios__int]____eq = (self_248, other_4) -> {\n        __core__equalsData(__helios__map[__helios__bytearray@__helios__int]____to_data(self_248), __helios__map[__helios__bytearray@__helios__int]____to_data(other_4))\n    };\n    __helios__map[__helios__bytearray@__helios__int]__sort = (self_249) -> {\n        (comp_4) -> {\n            __helios__common__sort(self_249, (a_16, b_14) -> {\n                comp_4(__helios__bytearray__from_data(__core__fstPair(a_16)), __helios__int__from_data(__core__sndPair(a_16)), __helios__bytearray__from_data(__core__fstPair(b_14)), __helios__int__from_data(__core__sndPair(b_14)))\n            })\n        }\n    };\n    __helios__value__sum[__helios__value] = (self_250) -> {\n        recurse_101 = (recurse_100, lst_25) -> {\n            __core__chooseList(lst_25, () -> {\n                __helios__value__ZERO\n            }, () -> {\n                __helios__value____add(__helios__value__value(__helios__value__from_data(__core__headList__safe(lst_25))), recurse_100(recurse_100, __core__tailList__safe(lst_25)))\n            })()\n        };\n        recurse_101(recurse_101, self_250)\n    };\n    __helios__list[__helios__string]__map[__helios__value] = (self_251) -> {\n        (fn_29) -> {\n            __helios__common__map(self_251, (item_13) -> {\n                __helios__value____to_data(fn_29(__helios__string__from_data(item_13)))\n            }, __core__mkNilData(()))\n        }\n    };\n    __helios__list[__helios__string]__map[__helios__string] = (self_252) -> {\n        (fn_30) -> {\n            __helios__common__map(self_252, (item_14) -> {\n                __helios__string____to_data(fn_30(__helios__string__from_data(item_14)))\n            }, __core__mkNilData(()))\n        }\n    };\n    __module__CapoMintHelpers__validateUutMinting = (mph_30, seed_2, purposes, __useopt__mkTokenName, mkTokenName, __useopt__bootstrapCharter, bootstrapCharter, __useopt__otherMintedValue, otherMintedValue, __useopt__needsMintDelegateApproval, needsMintDelegateApproval, __useopt__extraMintDelegateRedeemerCheck_1, extraMintDelegateRedeemerCheck_2, __useopt__checkMintDgtActivity_1, checkMintDgtActivity_2) -> {\n        mkTokenName_1 = __core__ifThenElse(\n            __useopt__mkTokenName,\n            () -> {\n                mkTokenName\n            },\n            () -> {\n                __module__CapoMintHelpers__mkUutTnFactory(seed_2)\n            }\n        )();\n        bootstrapCharter_1 = __core__ifThenElse(\n            __useopt__bootstrapCharter,\n            () -> {\n                bootstrapCharter\n            },\n            () -> {\n                __helios__value__ZERO\n            }\n        )();\n        otherMintedValue_1 = __core__ifThenElse(\n            __useopt__otherMintedValue,\n            () -> {\n                otherMintedValue\n            },\n            () -> {\n                __helios__value__ZERO\n            }\n        )();\n        needsMintDelegateApproval_1 = __core__ifThenElse(\n            __useopt__needsMintDelegateApproval,\n            () -> {\n                needsMintDelegateApproval\n            },\n            () -> {\n                true\n            }\n        )();\n        extraMintDelegateRedeemerCheck_3 = __core__ifThenElse(\n            __useopt__extraMintDelegateRedeemerCheck_1,\n            () -> {\n                extraMintDelegateRedeemerCheck_2\n            },\n            () -> {\n                true\n            }\n        )();\n        checkMintDgtActivity_3 = __core__ifThenElse(\n            __useopt__checkMintDgtActivity_1,\n            () -> {\n                checkMintDgtActivity_2\n            },\n            () -> {\n                __module__CapoMintHelpers__noOtherActivitiesSupported\n            }\n        )();\n        __module__StellarHeliosHelpers__bREQTgroup(\"checks that the UUTs are minted correctly\", true, true, () -> {\n            __core__chooseUnit(__helios__print(__helios__string____add(\"-- uut purposes: \", __helios__list[__helios__string]__join(purposes)(true, \", \"))), isBootstrapping = __helios__bool____not(__helios__value__is_zero(bootstrapCharter_1)());\n            delegateApproval = __core__ifThenElse(\n                isBootstrapping,\n                () -> {\n                    __core__chooseUnit(__helios__print(\"  -- bootstrapping; no delegate approval required\"), true)\n                },\n                () -> {\n                    () -> {\n                        __core__chooseUnit(__helios__print(\"  -- not bootstrapping; must honor the mintDelegate's authority\"), __lhs_0_123 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(mph_30, false, ()), 0);\n                        mintDgt = __module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(__lhs_0_123);\n                        __core__ifThenElse(\n                            needsMintDelegateApproval_1,\n                            () -> {\n                                __core__chooseUnit(__helios__print(\"  -- checking mintDelegate's authority\"), __module__CapoMintHelpers__requiresDelegateAuthorizingMint(mintDgt, mph_30, true, extraMintDelegateRedeemerCheck_3, true, checkMintDgtActivity_3))\n                            },\n                            () -> {\n                                () -> {\n                                    true\n                                }()\n                            }\n                        )())\n                    }()\n                }\n            )();\n            valueMinted = __helios__tx__minted(__helios__scriptcontext__tx);\n            tokenNames = __helios__list[__helios__string]__map[__helios__string](purposes)(mkTokenName_1);\n            expectedValue = __helios__value____add(__helios__value____add(bootstrapCharter_1, otherMintedValue_1), __helios__value__sum[__helios__value](__helios__list[__helios__string]__map[__helios__value](tokenNames)((tn_2) -> {\n                __module__StellarHeliosHelpers__mkTv(mph_30, true, tn_2, false, (), false, ())\n            })));\n            __core__chooseUnit(__core__ifThenElse(\n                __helios__bool____not(__helios__value__contains_policy(valueMinted)(mph_30)),\n                () -> {\n                    mphStr = __helios__mintingpolicyhash__show(mph_30)();\n                    valStr = __helios__value__show(valueMinted)(false, ());\n                    __core__chooseUnit(__helios__print(__helios__string____add(\"  -- no mint from our policy \", mphStr)), __core__chooseUnit(__helios__print(valStr), __core__chooseUnit(__helios__print(\"^^  value minted\"), __helios__error(\"❌❌ validateUutMinting(): no mint from our policy\"))))\n                },\n                () -> {\n                    () -> {\n                        ()\n                    }()\n                }\n            )(), expectedValuesSorted = __helios__map[__helios__bytearray@__helios__int]__sort(__helios__value__get_policy(expectedValue)(mph_30))(__module__CapoMintHelpers__sortPolicyValuesPredictably);\n            __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(expectedValuesSorted)((tn_4, i_12) -> {\n                tnStr_1 = __helios__bytearray__decode_utf8_safe(tn_4)();\n                __helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"    ℹ️ 🐞 expected: \", __helios__int__show(i_12)()), \"x \"), tnStr_1))\n            }), actualThisPolicyMint = __helios__value__get_policy(valueMinted)(mph_30);\n            actualThisPolicyMintSorted = __helios__map[__helios__bytearray@__helios__int]__sort(actualThisPolicyMint)(__module__CapoMintHelpers__sortPolicyValuesPredictably);\n            __core__chooseUnit(__core__ifThenElse(\n                true,\n                () -> {\n                    __core__chooseUnit(__helios__map[__helios__bytearray@__helios__int]__for_each(actualThisPolicyMintSorted)((tn_3, i_11) -> {\n                        tnStr = __helios__bytearray__decode_utf8_safe(tn_3)();\n                        __helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"    ℹ️ 🐞   actual: \", __helios__int__show(i_11)()), \"x \"), tnStr))\n                    }), filteredOtherMint = __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__filter(__helios__value__to_map(valueMinted)())((b_15, __42) -> {\n                        __helios__mintingpolicyhash____neq(b_15, mph_30)\n                    }));\n                    __core__ifThenElse(\n                        __helios__bool____not(__helios__value__is_zero(filteredOtherMint)()),\n                        () -> {\n                            __core__chooseUnit(__helios__print(\"other policy values minted: \n\"), __helios__print(__helios__value__show(__helios__value__get_assets(filteredOtherMint)())(false, ())))\n                        },\n                        () -> {\n                            () -> {\n                                ()\n                            }()\n                        }\n                    )())\n                },\n                () -> {\n                    () -> {\n                        ()\n                    }()\n                }\n            )(), thisPolicyMintOK = __module__StellarHeliosHelpers__bREQTgroup(\"Ensures the mint for this policy-id is exactly the expected value\", true, true, () -> {\n                __core__chooseUnit(__helios__assert(__helios__map[__helios__bytearray@__helios__int]____eq(actualThisPolicyMintSorted, expectedValuesSorted), \"❌❌ validateUutMinting(): mismatch in UUT mint\"), __core__chooseUnit(__helios__assert(__module__CapoMintHelpers__hasSeedUtxo(__helios__scriptcontext__tx, seed_2, false, ()), \"❌❌ validateUutMinting(): no seed\"), __core__chooseUnit(__helios__print(\"✅ ok: this-policy mint value matches\"), true)))\n            });\n            otherPoliciesMintOk = __core__ifThenElse(\n                __helios__bool____not(__helios__value__is_zero(otherMintedValue_1)()),\n                () -> {\n                    true\n                },\n                () -> {\n                    () -> {\n                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... with an additional mint-value indicated\", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add(\"  -- other-minted-value: \", __helios__value__show(otherMintedValue_1)(false, ()))), remainingExpectedMint = __core__ifThenElse(\n                            __helios__value__contains_policy(expectedValue)(mph_30),\n                            () -> {\n                                __helios__value__from_map(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__delete(__helios__value__to_map(expectedValue)())(mph_30))\n                            },\n                            () -> {\n                                () -> {\n                                    expectedValue\n                                }()\n                            }\n                        )();\n                        __core__ifThenElse(\n                            __helios__value__is_zero(remainingExpectedMint)(),\n                            () -> {\n                                true\n                            },\n                            () -> {\n                                () -> {\n                                    __module__StellarHeliosHelpers__bREQTgroup(\"...with other-policy values expected: \", false, true, () -> {\n                                        __core__chooseUnit(__helios__print(__helios__string____add(\"  -- expecting other-mint value: \", __helios__value__show(remainingExpectedMint)(false, ()))), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"It should mint exactly the indicated token names\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Doesn't constrain any mentioned policy's minting of any other tokens\", false, (), false, (), false, ()), __core__chooseUnit(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__for_each(__helios__value__to_map(remainingExpectedMint)())((otherMph, expectedTokensThisPolicy) -> {\n                                            mintedThisPolicy = __helios__value__get_policy(valueMinted)(otherMph);\n                                            __helios__map[__helios__bytearray@__helios__int]__for_each(expectedTokensThisPolicy)((tokenName_3, expectedCount) -> {\n                                                __core__ifThenElse(\n                                                    __helios__bool____not(__cond_61 = __helios__map[__helios__bytearray@__helios__int]__get_safe(mintedThisPolicy)(tokenName_3);\n                                                    __core__ifThenElse(\n                                                        __helios__option[__helios__int]__none____is(__cond_61),\n                                                        () -> {\n                                                            (__lhs_0_125) -> {\n                                                                false\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_124) -> {\n                                                                actualCount = __helios__option[__helios__int]__some__some(__lhs_0_124);\n                                                                __helios__int____eq(actualCount, expectedCount)\n                                                            }\n                                                        }\n                                                    )()(__cond_61)),\n                                                    () -> {\n                                                        tnString = __helios__bytearray__decode_utf8_safe(tokenName_3)();\n                                                        __helios__error(__helios__string____add(__helios__string____add(__helios__string____add(\"❌❌ validateUutMinting(): wrong mint for \", __helios__mintingpolicyhash__show(otherMph)()), \":\"), tnString))\n                                                    },\n                                                    () -> {\n                                                        () -> {\n                                                            ()\n                                                        }()\n                                                    }\n                                                )()\n                                            })\n                                        }), true))))\n                                    })\n                                }()\n                            }\n                        )()))\n                    }()\n                }\n            )();\n            __core__chooseUnit(__helios__assert(__helios__bool__trace(otherPoliciesMintOk)(\"  -- other-expected-mints ok? \"), \"unreachable exception: otherPoliciesMintOk\"), __core__chooseUnit(__core__ifThenElse(\n                __helios__int____gt(__helios__list[__helios__string]__length(purposes), 1),\n                () -> {\n                    __helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"✅ ok: minted uuts: {\", __helios__list[__helios__string]__join(purposes)(true, \", \")), \"}\"), mkTokenName_1(\"\")))\n                },\n                () -> {\n                    () -> {\n                        __helios__print(__helios__string____add(\"✅ ok: minted uut: \", __helios__list[__helios__string]__head(tokenNames)))\n                    }()\n                }\n            )(), __helios__bool__and(() -> {\n                __helios__bool__and(() -> {\n                    delegateApproval\n                }, () -> {\n                    thisPolicyMintOK\n                })\n            }, () -> {\n                otherPoliciesMintOk\n            })))))))\n        })\n    };\n    __module__VxfProtocol__VxfExpectedActivity[]__is_valid_data = (__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer__is_valid_data, __module__VxfProtocol__VxfExpectedActivity[]__VxfStorage__is_valid_data, __module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId__is_valid_data, __module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer__is_valid_data) -> {\n        (data_282) -> {\n            __core__ifThenElse(\n                __module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer__is_valid_data(data_282),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId__is_valid_data(data_282),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__VxfProtocol__VxfExpectedActivity[]__VxfStorage__is_valid_data(data_282),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer__is_valid_data(data_282),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            false\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __helios__option[__helios__data]__is_valid_data = (data_283) -> {\n        __core__chooseData(data_283, () -> {\n            pair_82 = __core__unConstrData__safe(data_283);\n            index_17 = __core__fstPair(pair_82);\n            fields_165 = __core__sndPair(pair_82);\n            __core__ifThenElse(\n                __core__equalsInteger(index_17, 0),\n                () -> {\n                    __core__chooseList(fields_165, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_165), () -> {\n                            __helios__data__is_valid_data(__core__headList__safe(fields_165))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_17, 1),\n                        () -> {\n                            __core__chooseList(fields_165, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer__is_valid_data_1 = (data_284) -> {\n        __core__chooseData(data_284, () -> {\n            pair_83 = __core__unConstrData__safe(data_284);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_83), 22104),\n                () -> {\n                    data_285 = __core__listData(__core__sndPair(pair_83));\n                    __core__chooseData(data_285, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_166 = __core__unListData__safe(data_285);\n                        __core__chooseList(fields_166, () -> {\n                            false\n                        }, () -> {\n                            head_96 = __core__headList__safe(fields_166);\n                            __core__ifThenElse(\n                                __helios__option[__helios__data]__is_valid_data(head_96),\n                                () -> {\n                                    fields_167 = __core__tailList__safe(fields_166);\n                                    __core__chooseList(fields_167, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfExpectedActivity[]__VxfStorage__is_valid_data_1 = (data_286) -> {\n        __core__chooseData(data_286, () -> {\n            pair_84 = __core__unConstrData__safe(data_286);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_84), 22106),\n                () -> {\n                    data_287 = __core__listData(__core__sndPair(pair_84));\n                    __core__chooseData(data_287, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_168 = __core__unListData__safe(data_287);\n                        __core__chooseList(fields_168, () -> {\n                            false\n                        }, () -> {\n                            head_97 = __core__headList__safe(fields_168);\n                            __core__ifThenElse(\n                                __helios__option[__helios__data]__is_valid_data(head_97),\n                                () -> {\n                                    fields_169 = __core__tailList__safe(fields_168);\n                                    __core__chooseList(fields_169, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId__is_valid_data_1 = (data_288) -> {\n        __core__chooseData(data_288, () -> {\n            pair_85 = __core__unConstrData__safe(data_288);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_85), 22107),\n                () -> {\n                    data_289 = __core__listData(__core__sndPair(pair_85));\n                    __core__chooseData(data_289, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_170 = __core__unListData__safe(data_289);\n                        __core__chooseList(fields_170, () -> {\n                            false\n                        }, () -> {\n                            head_98 = __core__headList__safe(fields_170);\n                            __core__ifThenElse(\n                                __helios__int__is_valid_data(head_98),\n                                () -> {\n                                    fields_171 = __core__tailList__safe(fields_170);\n                                    __core__chooseList(fields_171, () -> {\n                                        false\n                                    }, () -> {\n                                        head_99 = __core__headList__safe(fields_171);\n                                        __core__ifThenElse(\n                                            __helios__bool__is_valid_data(head_99),\n                                            () -> {\n                                                fields_172 = __core__tailList__safe(fields_171);\n                                                __core__chooseList(fields_172, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_100 = __core__headList__safe(fields_172);\n                                                    __core__ifThenElse(\n                                                        __helios__option[__helios__int]__is_valid_data(head_100),\n                                                        () -> {\n                                                            fields_173 = __core__tailList__safe(fields_172);\n                                                            __core__chooseList(fields_173, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_101 = __core__headList__safe(fields_173);\n                                                                __core__ifThenElse(\n                                                                    __helios__option[__helios__data]__is_valid_data(head_101),\n                                                                    () -> {\n                                                                        fields_174 = __core__tailList__safe(fields_173);\n                                                                        __core__chooseList(fields_174, true, false)\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer__is_valid_data_1 = (data_290) -> {\n        __core__chooseData(data_290, () -> {\n            pair_86 = __core__unConstrData__safe(data_290);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_86), 22108),\n                () -> {\n                    data_291 = __core__listData(__core__sndPair(pair_86));\n                    __core__chooseData(data_291, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_175 = __core__unListData__safe(data_291);\n                        __core__chooseList(fields_175, () -> {\n                            false\n                        }, () -> {\n                            head_102 = __core__headList__safe(fields_175);\n                            __core__ifThenElse(\n                                __helios__int__is_valid_data(head_102),\n                                () -> {\n                                    fields_176 = __core__tailList__safe(fields_175);\n                                    __core__chooseList(fields_176, () -> {\n                                        false\n                                    }, () -> {\n                                        head_103 = __core__headList__safe(fields_176);\n                                        __core__ifThenElse(\n                                            __helios__bool__is_valid_data(head_103),\n                                            () -> {\n                                                fields_177 = __core__tailList__safe(fields_176);\n                                                __core__chooseList(fields_177, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_104 = __core__headList__safe(fields_177);\n                                                    __core__ifThenElse(\n                                                        __helios__option[__helios__data]__is_valid_data(head_104),\n                                                        () -> {\n                                                            fields_178 = __core__tailList__safe(fields_177);\n                                                            __core__chooseList(fields_178, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__is_valid_data = (__module__VxfProtocol__VxfDestination[]__RelativeLink__is_valid_data, __module__VxfProtocol__VxfDestination[]__AnyTokenHolder__is_valid_data, __module__VxfProtocol__VxfDestination[]__PubKey__is_valid_data, __module__VxfProtocol__VxfDestination[]__Anywhere__is_valid_data, __module__VxfProtocol__VxfDestination[]__NotYetDefined__is_valid_data) -> {\n        (data_292) -> {\n            __core__ifThenElse(\n                __module__VxfProtocol__VxfDestination[]__NotYetDefined__is_valid_data(data_292),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__VxfProtocol__VxfDestination[]__Anywhere__is_valid_data(data_292),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__VxfProtocol__VxfDestination[]__PubKey__is_valid_data(data_292),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__VxfProtocol__VxfDestination[]__AnyTokenHolder__is_valid_data(data_292),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__VxfProtocol__VxfDestination[]__RelativeLink__is_valid_data(data_292),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __helios__option[__module__VxfProtocol__VxfExpectedActivity[]]__is_valid_data = (data_293) -> {\n        __core__chooseData(data_293, () -> {\n            pair_87 = __core__unConstrData__safe(data_293);\n            index_18 = __core__fstPair(pair_87);\n            fields_179 = __core__sndPair(pair_87);\n            __core__ifThenElse(\n                __core__equalsInteger(index_18, 0),\n                () -> {\n                    __core__chooseList(fields_179, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_179), () -> {\n                            __module__VxfProtocol__VxfExpectedActivity[]__is_valid_data(__module__VxfProtocol__VxfExpectedActivity[]__VxfTransfer__is_valid_data_1, __module__VxfProtocol__VxfExpectedActivity[]__VxfStorage__is_valid_data_1, __module__VxfProtocol__VxfExpectedActivity[]__SpecificRedeemerId__is_valid_data_1, __module__VxfProtocol__VxfExpectedActivity[]__TaggedRedeemer__is_valid_data_1)(__core__headList__safe(fields_179))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_18, 1),\n                        () -> {\n                            __core__chooseList(fields_179, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__RelativeLink__is_valid_data_1 = (data_294) -> {\n        __core__chooseData(data_294, () -> {\n            pair_88 = __core__unConstrData__safe(data_294);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_88), 0),\n                () -> {\n                    data_295 = __core__listData(__core__sndPair(pair_88));\n                    __core__chooseData(data_295, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_180 = __core__unListData__safe(data_295);\n                        __core__chooseList(fields_180, () -> {\n                            false\n                        }, () -> {\n                            head_105 = __core__headList__safe(fields_180);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__RelativeDelegateLink[]__is_valid_data(head_105),\n                                () -> {\n                                    fields_181 = __core__tailList__safe(fields_180);\n                                    __core__chooseList(fields_181, () -> {\n                                        false\n                                    }, () -> {\n                                        head_106 = __core__headList__safe(fields_181);\n                                        __core__ifThenElse(\n                                            __helios__option[__module__VxfProtocol__VxfExpectedActivity[]]__is_valid_data(head_106),\n                                            () -> {\n                                                fields_182 = __core__tailList__safe(fields_181);\n                                                __core__chooseList(fields_182, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__AnyTokenHolder__is_valid_data_1 = (data_296) -> {\n        __core__chooseData(data_296, () -> {\n            pair_89 = __core__unConstrData__safe(data_296);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_89), 1),\n                () -> {\n                    data_297 = __core__listData(__core__sndPair(pair_89));\n                    __core__chooseData(data_297, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_183 = __core__unListData__safe(data_297);\n                        __core__chooseList(fields_183, () -> {\n                            false\n                        }, () -> {\n                            head_107 = __core__headList__safe(fields_183);\n                            __core__ifThenElse(\n                                __helios__mintingpolicyhash__is_valid_data(head_107),\n                                () -> {\n                                    fields_184 = __core__tailList__safe(fields_183);\n                                    __core__chooseList(fields_184, () -> {\n                                        false\n                                    }, () -> {\n                                        head_108 = __core__headList__safe(fields_184);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_108),\n                                            () -> {\n                                                fields_185 = __core__tailList__safe(fields_184);\n                                                __core__chooseList(fields_185, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__PubKey__is_valid_data_1 = (data_298) -> {\n        __core__chooseData(data_298, () -> {\n            pair_90 = __core__unConstrData__safe(data_298);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_90), 2),\n                () -> {\n                    data_299 = __core__listData(__core__sndPair(pair_90));\n                    __core__chooseData(data_299, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_186 = __core__unListData__safe(data_299);\n                        __core__chooseList(fields_186, () -> {\n                            false\n                        }, () -> {\n                            head_109 = __core__headList__safe(fields_186);\n                            __core__ifThenElse(\n                                __helios__pubkeyhash__is_valid_data(head_109),\n                                () -> {\n                                    fields_187 = __core__tailList__safe(fields_186);\n                                    __core__chooseList(fields_187, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__Anywhere__is_valid_data_1 = (data_300) -> {\n        __core__chooseData(data_300, () -> {\n            pair_91 = __core__unConstrData__safe(data_300);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_91), 98),\n                () -> {\n                    data_301 = __core__listData(__core__sndPair(pair_91));\n                    __core__chooseData(data_301, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_188 = __core__unListData__safe(data_301);\n                        __core__chooseList(fields_188, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VxfProtocol__VxfDestination[]__NotYetDefined__is_valid_data_1 = (data_302) -> {\n        __core__chooseData(data_302, () -> {\n            pair_92 = __core__unConstrData__safe(data_302);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_92), 99),\n                () -> {\n                    data_303 = __core__listData(__core__sndPair(pair_92));\n                    __core__chooseData(data_303, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_189 = __core__unListData__safe(data_303);\n                        __core__chooseList(fields_189, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingState[]____eq = __helios__common____eq;\n    __module__VestingData__VestingState[]__is_valid_data = (__module__VestingData__VestingState[]__Initializing__is_valid_data, __module__VestingData__VestingState[]__VerifyingBeneficiary__is_valid_data, __module__VestingData__VestingState[]__Active__is_valid_data, __module__VestingData__VestingState[]__Paused__is_valid_data, __module__VestingData__VestingState[]__Closed__is_valid_data) -> {\n        (data_304) -> {\n            __core__ifThenElse(\n                __module__VestingData__VestingState[]__Closed__is_valid_data(data_304),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__VestingData__VestingState[]__Paused__is_valid_data(data_304),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__VestingData__VestingState[]__Active__is_valid_data(data_304),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__VestingData__VestingState[]__VerifyingBeneficiary__is_valid_data(data_304),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__VestingData__VestingState[]__Initializing__is_valid_data(data_304),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    false\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__VestingData__VestingState[]__from_data = (__module__VestingData__VestingState[]__Initializing__is_valid_data_1, __module__VestingData__VestingState[]__VerifyingBeneficiary__is_valid_data_1, __module__VestingData__VestingState[]__Active__is_valid_data_1, __module__VestingData__VestingState[]__Paused__is_valid_data_1, __module__VestingData__VestingState[]__Closed__is_valid_data_1) -> {\n        (data_305) -> {\n            ignore_18 = __core__ifThenElse(\n                __module__VestingData__VestingState[]__is_valid_data(__module__VestingData__VestingState[]__Initializing__is_valid_data_1, __module__VestingData__VestingState[]__VerifyingBeneficiary__is_valid_data_1, __module__VestingData__VestingState[]__Active__is_valid_data_1, __module__VestingData__VestingState[]__Paused__is_valid_data_1, __module__VestingData__VestingState[]__Closed__is_valid_data_1)(data_305),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid VestingState data\", ())\n                }\n            )();\n            data_305\n        }\n    };\n    __module__VestingData__VestingState[]__Initializing__is_valid_data_2 = (data_306) -> {\n        __core__chooseData(data_306, () -> {\n            pair_93 = __core__unConstrData__safe(data_306);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_93), 0),\n                () -> {\n                    data_307 = __core__listData(__core__sndPair(pair_93));\n                    __core__chooseData(data_307, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_190 = __core__unListData__safe(data_307);\n                        __core__chooseList(fields_190, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingState[]__Initializing____new = () -> {\n        __core__constrData(0, __core__mkNilData(()))\n    };\n    __module__VestingData__VestingState[]__VerifyingBeneficiary__is_valid_data_2 = (data_308) -> {\n        __core__chooseData(data_308, () -> {\n            pair_94 = __core__unConstrData__safe(data_308);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_94), 1),\n                () -> {\n                    data_309 = __core__listData(__core__sndPair(pair_94));\n                    __core__chooseData(data_309, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_191 = __core__unListData__safe(data_309);\n                        __core__chooseList(fields_191, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingState[]__Active__is_valid_data_2 = (data_310) -> {\n        __core__chooseData(data_310, () -> {\n            pair_95 = __core__unConstrData__safe(data_310);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_95), 2),\n                () -> {\n                    data_311 = __core__listData(__core__sndPair(pair_95));\n                    __core__chooseData(data_311, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_192 = __core__unListData__safe(data_311);\n                        __core__chooseList(fields_192, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__option[__helios__assetclass]__is_valid_data = (data_312) -> {\n        __core__chooseData(data_312, () -> {\n            pair_96 = __core__unConstrData__safe(data_312);\n            index_19 = __core__fstPair(pair_96);\n            fields_193 = __core__sndPair(pair_96);\n            __core__ifThenElse(\n                __core__equalsInteger(index_19, 0),\n                () -> {\n                    __core__chooseList(fields_193, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_193), () -> {\n                            __helios__assetclass__is_valid_data(__core__headList__safe(fields_193))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_19, 1),\n                        () -> {\n                            __core__chooseList(fields_193, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingState[]__Paused__is_valid_data_2 = (data_313) -> {\n        __core__chooseData(data_313, () -> {\n            pair_97 = __core__unConstrData__safe(data_313);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_97), 3),\n                () -> {\n                    data_314 = __core__listData(__core__sndPair(pair_97));\n                    __core__chooseData(data_314, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_194 = __core__unListData__safe(data_314);\n                        __core__chooseList(fields_194, () -> {\n                            false\n                        }, () -> {\n                            head_110 = __core__headList__safe(fields_194);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_110),\n                                () -> {\n                                    fields_195 = __core__tailList__safe(fields_194);\n                                    __core__chooseList(fields_195, () -> {\n                                        false\n                                    }, () -> {\n                                        head_111 = __core__headList__safe(fields_195);\n                                        __core__ifThenElse(\n                                            __helios__option[__helios__assetclass]__is_valid_data(head_111),\n                                            () -> {\n                                                fields_196 = __core__tailList__safe(fields_195);\n                                                __core__chooseList(fields_196, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingState[]__Closed__is_valid_data_2 = (data_315) -> {\n        __core__chooseData(data_315, () -> {\n            pair_98 = __core__unConstrData__safe(data_315);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_98), 4),\n                () -> {\n                    data_316 = __core__listData(__core__sndPair(pair_98));\n                    __core__chooseData(data_316, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_197 = __core__unListData__safe(data_316);\n                        __core__chooseList(fields_197, () -> {\n                            false\n                        }, () -> {\n                            head_112 = __core__headList__safe(fields_197);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_112),\n                                () -> {\n                                    fields_198 = __core__tailList__safe(fields_197);\n                                    __core__chooseList(fields_198, () -> {\n                                        false\n                                    }, () -> {\n                                        head_113 = __core__headList__safe(fields_198);\n                                        __core__ifThenElse(\n                                            __helios__option[__helios__assetclass]__is_valid_data(head_113),\n                                            () -> {\n                                                fields_199 = __core__tailList__safe(fields_198);\n                                                __core__chooseList(fields_199, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingFrequency[]__is_valid_data = (__module__VestingData__VestingFrequency[]__Interval__is_valid_data, __module__VestingData__VestingFrequency[]__Continuous__is_valid_data) -> {\n        (data_317) -> {\n            __core__ifThenElse(\n                __module__VestingData__VestingFrequency[]__Continuous__is_valid_data(data_317),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__VestingData__VestingFrequency[]__Interval__is_valid_data(data_317),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__VestingData__VestingFrequency[]__Interval__is_valid_data_1 = (data_318) -> {\n        __core__chooseData(data_318, () -> {\n            pair_99 = __core__unConstrData__safe(data_318);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_99), 0),\n                () -> {\n                    data_319 = __core__listData(__core__sndPair(pair_99));\n                    __core__chooseData(data_319, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_200 = __core__unListData__safe(data_319);\n                        __core__chooseList(fields_200, () -> {\n                            false\n                        }, () -> {\n                            head_114 = __core__headList__safe(fields_200);\n                            __core__ifThenElse(\n                                __helios__duration__is_valid_data(head_114),\n                                () -> {\n                                    fields_201 = __core__tailList__safe(fields_200);\n                                    __core__chooseList(fields_201, () -> {\n                                        false\n                                    }, () -> {\n                                        head_115 = __core__headList__safe(fields_201);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_115),\n                                            () -> {\n                                                fields_202 = __core__tailList__safe(fields_201);\n                                                __core__chooseList(fields_202, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingFrequency[]__Continuous__is_valid_data_1 = (data_320) -> {\n        __core__chooseData(data_320, () -> {\n            pair_100 = __core__unConstrData__safe(data_320);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_100), 1),\n                () -> {\n                    data_321 = __core__listData(__core__sndPair(pair_100));\n                    __core__chooseData(data_321, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_203 = __core__unListData__safe(data_321);\n                        __core__chooseList(fields_203, true, false)\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingProgress[]__is_valid_data = (data_322) -> {\n        __core__chooseData(data_322, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            fields_204 = __core__unListData__safe(data_322);\n            __core__chooseList(fields_204, () -> {\n                false\n            }, () -> {\n                head_116 = __core__headList__safe(fields_204);\n                __core__ifThenElse(\n                    __helios__time__is_valid_data(head_116),\n                    () -> {\n                        fields_205 = __core__tailList__safe(fields_204);\n                        __core__chooseList(fields_205, () -> {\n                            false\n                        }, () -> {\n                            head_117 = __core__headList__safe(fields_205);\n                            __core__ifThenElse(\n                                __helios__value__is_valid_data(head_117),\n                                () -> {\n                                    fields_206 = __core__tailList__safe(fields_205);\n                                    __core__chooseList(fields_206, () -> {\n                                        false\n                                    }, () -> {\n                                        head_118 = __core__headList__safe(fields_206);\n                                        __core__ifThenElse(\n                                            __helios__real__is_valid_data(head_118),\n                                            () -> {\n                                                fields_207 = __core__tailList__safe(fields_206);\n                                                __core__chooseList(fields_207, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            })()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingProgress[]__from_data = (data_323) -> {\n        ignore_19 = __core__ifThenElse(\n            __module__VestingData__VestingProgress[]__is_valid_data(data_323),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid VestingProgress data\", ())\n            }\n        )();\n        __core__unListData(data_323)\n    };\n    __module__VestingData__VestingProgress[]__lastPartialMaturity = (self_253) -> {\n        __helios__time__from_data(__helios__common__struct_field_0(self_253))\n    };\n    __module__VestingData__VestingProgress[]__vestedValue = (self_254) -> {\n        __helios__value__from_data(__helios__common__struct_field_1(self_254))\n    };\n    __module__VestingData__VestingProgress[]__vestedFreqUnits = (self_255) -> {\n        __helios__real__from_data(__helios__common__struct_field_2(self_255))\n    };\n    __module__VestingData__VestingProgress[]__isEmpty = (self_256) -> {\n        () -> {\n            __helios__bool__and(() -> {\n                __helios__bool__and(() -> {\n                    __helios__time____eq(__module__VestingData__VestingProgress[]__lastPartialMaturity(self_256), __helios__time__new(0))\n                }, () -> {\n                    __helios__value__is_zero(__module__VestingData__VestingProgress[]__vestedValue(self_256))()\n                })\n            }, () -> {\n                __helios__real____eq(__module__VestingData__VestingProgress[]__vestedFreqUnits(self_256), 0)\n            })\n        }\n    };\n    __module__VestingData__VestingDetails[]__is_valid_data = (__module__VestingData__VestingDetails[]__Once__is_valid_data, __module__VestingData__VestingDetails[]__StraightLine__is_valid_data, __module__VestingData__VestingDetails[]__SimpleContingency__is_valid_data) -> {\n        (data_324) -> {\n            __core__ifThenElse(\n                __module__VestingData__VestingDetails[]__SimpleContingency__is_valid_data(data_324),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__VestingData__VestingDetails[]__StraightLine__is_valid_data(data_324),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__VestingData__VestingDetails[]__Once__is_valid_data(data_324),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__VestingData__VestingDetails[]__from_data = (__module__VestingData__VestingDetails[]__Once__is_valid_data_1, __module__VestingData__VestingDetails[]__StraightLine__is_valid_data_1, __module__VestingData__VestingDetails[]__SimpleContingency__is_valid_data_1) -> {\n        (data_325) -> {\n            ignore_20 = __core__ifThenElse(\n                __module__VestingData__VestingDetails[]__is_valid_data(__module__VestingData__VestingDetails[]__Once__is_valid_data_1, __module__VestingData__VestingDetails[]__StraightLine__is_valid_data_1, __module__VestingData__VestingDetails[]__SimpleContingency__is_valid_data_1)(data_325),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid VestingDetails data\", ())\n                }\n            )();\n            data_325\n        }\n    };\n    __module__VestingData__VestingDetails[]__Once____is = (data_326) -> {\n        __helios__common__enum_tag_equals(data_326, 0)\n    };\n    __module__VestingData__VestingDetails[]__Once__is_valid_data_2 = (data_327) -> {\n        __core__chooseData(data_327, () -> {\n            pair_101 = __core__unConstrData__safe(data_327);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_101), 0),\n                () -> {\n                    data_328 = __core__listData(__core__sndPair(pair_101));\n                    __core__chooseData(data_328, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_208 = __core__unListData__safe(data_328);\n                        __core__chooseList(fields_208, () -> {\n                            false\n                        }, () -> {\n                            head_119 = __core__headList__safe(fields_208);\n                            __core__ifThenElse(\n                                __helios__value__is_valid_data(head_119),\n                                () -> {\n                                    fields_209 = __core__tailList__safe(fields_208);\n                                    __core__chooseList(fields_209, () -> {\n                                        false\n                                    }, () -> {\n                                        head_120 = __core__headList__safe(fields_209);\n                                        __core__ifThenElse(\n                                            __helios__time__is_valid_data(head_120),\n                                            () -> {\n                                                fields_210 = __core__tailList__safe(fields_209);\n                                                __core__chooseList(fields_210, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingDetails[]__StraightLine__is_valid_data_2 = (data_329) -> {\n        __core__chooseData(data_329, () -> {\n            pair_102 = __core__unConstrData__safe(data_329);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_102), 1),\n                () -> {\n                    data_330 = __core__listData(__core__sndPair(pair_102));\n                    __core__chooseData(data_330, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_211 = __core__unListData__safe(data_330);\n                        __core__chooseList(fields_211, () -> {\n                            false\n                        }, () -> {\n                            head_121 = __core__headList__safe(fields_211);\n                            __core__ifThenElse(\n                                __helios__value__is_valid_data(head_121),\n                                () -> {\n                                    fields_212 = __core__tailList__safe(fields_211);\n                                    __core__chooseList(fields_212, () -> {\n                                        false\n                                    }, () -> {\n                                        head_122 = __core__headList__safe(fields_212);\n                                        __core__ifThenElse(\n                                            __helios__time__is_valid_data(head_122),\n                                            () -> {\n                                                fields_213 = __core__tailList__safe(fields_212);\n                                                __core__chooseList(fields_213, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_123 = __core__headList__safe(fields_213);\n                                                    __core__ifThenElse(\n                                                        __helios__time__is_valid_data(head_123),\n                                                        () -> {\n                                                            fields_214 = __core__tailList__safe(fields_213);\n                                                            __core__chooseList(fields_214, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_124 = __core__headList__safe(fields_214);\n                                                                __core__ifThenElse(\n                                                                    __module__VestingData__VestingFrequency[]__is_valid_data(__module__VestingData__VestingFrequency[]__Interval__is_valid_data_1, __module__VestingData__VestingFrequency[]__Continuous__is_valid_data_1)(head_124),\n                                                                    () -> {\n                                                                        fields_215 = __core__tailList__safe(fields_214);\n                                                                        __core__chooseList(fields_215, () -> {\n                                                                            false\n                                                                        }, () -> {\n                                                                            head_125 = __core__headList__safe(fields_215);\n                                                                            __core__ifThenElse(\n                                                                                __module__VestingData__VestingProgress[]__is_valid_data(head_125),\n                                                                                () -> {\n                                                                                    fields_216 = __core__tailList__safe(fields_215);\n                                                                                    __core__chooseList(fields_216, true, false)\n                                                                                },\n                                                                                () -> {\n                                                                                    false\n                                                                                }\n                                                                            )()\n                                                                        })()\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingDetails[]__StraightLine__vestingProgress = (self_257) -> {\n        __module__VestingData__VestingProgress[]__from_data(__helios__common__enum_field_4(self_257))\n    };\n    __module__VestingData__VestingDetails[]__SimpleContingency____is = (data_331) -> {\n        __helios__common__enum_tag_equals(data_331, 2)\n    };\n    __helios__option[__helios__time]__is_valid_data = (data_332) -> {\n        __core__chooseData(data_332, () -> {\n            pair_103 = __core__unConstrData__safe(data_332);\n            index_20 = __core__fstPair(pair_103);\n            fields_217 = __core__sndPair(pair_103);\n            __core__ifThenElse(\n                __core__equalsInteger(index_20, 0),\n                () -> {\n                    __core__chooseList(fields_217, () -> {\n                        false\n                    }, () -> {\n                        __core__chooseList(__core__tailList__safe(fields_217), () -> {\n                            __helios__time__is_valid_data(__core__headList__safe(fields_217))\n                        }, () -> {\n                            false\n                        })()\n                    })()\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __core__equalsInteger(index_20, 1),\n                        () -> {\n                            __core__chooseList(fields_217, true, false)\n                        },\n                        () -> {\n                            false\n                        }\n                    )()\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingDetails[]__SimpleContingency__is_valid_data_2 = (data_333) -> {\n        __core__chooseData(data_333, () -> {\n            pair_104 = __core__unConstrData__safe(data_333);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_104), 2),\n                () -> {\n                    data_334 = __core__listData(__core__sndPair(pair_104));\n                    __core__chooseData(data_334, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_218 = __core__unListData__safe(data_334);\n                        __core__chooseList(fields_218, () -> {\n                            false\n                        }, () -> {\n                            head_126 = __core__headList__safe(fields_218);\n                            __core__ifThenElse(\n                                __helios__value__is_valid_data(head_126),\n                                () -> {\n                                    fields_219 = __core__tailList__safe(fields_218);\n                                    __core__chooseList(fields_219, () -> {\n                                        false\n                                    }, () -> {\n                                        head_127 = __core__headList__safe(fields_219);\n                                        __core__ifThenElse(\n                                            __helios__option[__helios__time]__is_valid_data(head_127),\n                                            () -> {\n                                                fields_220 = __core__tailList__safe(fields_219);\n                                                __core__chooseList(fields_220, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_128 = __core__headList__safe(fields_220);\n                                                    __core__ifThenElse(\n                                                        __helios__string__is_valid_data(head_128),\n                                                        () -> {\n                                                            fields_221 = __core__tailList__safe(fields_220);\n                                                            __core__chooseList(fields_221, () -> {\n                                                                false\n                                                            }, () -> {\n                                                                head_129 = __core__headList__safe(fields_221);\n                                                                __core__ifThenElse(\n                                                                    __helios__bool__is_valid_data(head_129),\n                                                                    () -> {\n                                                                        fields_222 = __core__tailList__safe(fields_221);\n                                                                        __core__chooseList(fields_222, true, false)\n                                                                    },\n                                                                    () -> {\n                                                                        false\n                                                                    }\n                                                                )()\n                                                            })()\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingData__VestingData[]__is_valid_data = (data_335) -> {\n        __core__ifThenElse(\n            __helios__common__test_mStruct_field(data_335, __core__bData(#64746c73), __module__VestingData__VestingDetails[]__is_valid_data(__module__VestingData__VestingDetails[]__Once__is_valid_data_2, __module__VestingData__VestingDetails[]__StraightLine__is_valid_data_2, __module__VestingData__VestingDetails[]__SimpleContingency__is_valid_data_2)),\n            () -> {\n                __core__ifThenElse(\n                    __helios__common__test_mStruct_field(data_335, __core__bData(#7374617465), __module__VestingData__VestingState[]__is_valid_data(__module__VestingData__VestingState[]__Initializing__is_valid_data_2, __module__VestingData__VestingState[]__VerifyingBeneficiary__is_valid_data_2, __module__VestingData__VestingState[]__Active__is_valid_data_2, __module__VestingData__VestingState[]__Paused__is_valid_data_2, __module__VestingData__VestingState[]__Closed__is_valid_data_2)),\n                    () -> {\n                        __core__ifThenElse(\n                            __helios__common__test_mStruct_field(data_335, __core__bData(#7678447374), __module__VxfProtocol__VxfDestination[]__is_valid_data(__module__VxfProtocol__VxfDestination[]__RelativeLink__is_valid_data_1, __module__VxfProtocol__VxfDestination[]__AnyTokenHolder__is_valid_data_1, __module__VxfProtocol__VxfDestination[]__PubKey__is_valid_data_1, __module__VxfProtocol__VxfDestination[]__Anywhere__is_valid_data_1, __module__VxfProtocol__VxfDestination[]__NotYetDefined__is_valid_data_1)),\n                            () -> {\n                                __core__ifThenElse(\n                                    __helios__common__test_mStruct_field(data_335, __core__bData(#6f6e72546b6e), __helios__bytearray__is_valid_data),\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __helios__common__test_mStruct_field(data_335, __core__bData(#747065), __helios__string__is_valid_data),\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __helios__common__test_mStruct_field(data_335, __core__bData(#406964), __helios__bytearray__is_valid_data),\n                                                    () -> {\n                                                        true\n                                                    },\n                                                    () -> {\n                                                        __core__trace(\"Warning: invalid data in VestingData.@id\", () -> {\n                                                            false\n                                                        })()\n                                                    }\n                                                )()\n                                            },\n                                            () -> {\n                                                __core__trace(\"Warning: invalid data in VestingData.tpe\", () -> {\n                                                    false\n                                                })()\n                                            }\n                                        )()\n                                    },\n                                    () -> {\n                                        __core__trace(\"Warning: invalid data in VestingData.onrTkn\", () -> {\n                                            false\n                                        })()\n                                    }\n                                )()\n                            },\n                            () -> {\n                                __core__trace(\"Warning: invalid data in VestingData.vxDst\", () -> {\n                                    false\n                                })()\n                            }\n                        )()\n                    },\n                    () -> {\n                        __core__trace(\"Warning: invalid data in VestingData.state\", () -> {\n                            false\n                        })()\n                    }\n                )()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid data in VestingData.dtls\", () -> {\n                    false\n                })()\n            }\n        )()\n    };\n    __module__VestingData__VestingData[]____eq = (a_17, b_16) -> {\n        aFields = __core__unMapData(a_17);\n        bFields = __core__unMapData(b_16);\n        __core__ifThenElse(\n            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #406964), __helios__common__mStruct_field_internal(bFields, #406964)),\n            () -> {\n                __core__ifThenElse(\n                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #747065), __helios__common__mStruct_field_internal(bFields, #747065)),\n                    () -> {\n                        __core__ifThenElse(\n                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #6f6e72546b6e), __helios__common__mStruct_field_internal(bFields, #6f6e72546b6e)),\n                            () -> {\n                                __core__ifThenElse(\n                                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #7678447374), __helios__common__mStruct_field_internal(bFields, #7678447374)),\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __core__equalsData(__helios__common__mStruct_field_internal(aFields, #7374617465), __helios__common__mStruct_field_internal(bFields, #7374617465)),\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __core__equalsData(__helios__common__mStruct_field_internal(aFields, #64746c73), __helios__common__mStruct_field_internal(bFields, #64746c73)),\n                                                    () -> {\n                                                        true\n                                                    },\n                                                    () -> {\n                                                        false\n                                                    }\n                                                )()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    },\n                                    () -> {\n                                        false\n                                    }\n                                )()\n                            },\n                            () -> {\n                                false\n                            }\n                        )()\n                    },\n                    () -> {\n                        false\n                    }\n                )()\n            },\n            () -> {\n                false\n            }\n        )()\n    };\n    __module__VestingData__VestingData[]__from_data = (data_336) -> {\n        ignore_21 = __core__ifThenElse(\n            __module__VestingData__VestingData[]__is_valid_data(data_336),\n            () -> {\n                ()\n            },\n            () -> {\n                __core__trace(\"Warning: invalid VestingData data\", ())\n            }\n        )();\n        data_336\n    };\n    __module__VestingData__VestingData[]__ownerToken = (self_258) -> {\n        __helios__bytearray__from_data(__helios__common__mStruct_field(self_258, #6f6e72546b6e))\n    };\n    __module__VestingData__VestingData[]__state = (self_259) -> {\n        __module__VestingData__VestingState[]__from_data(__module__VestingData__VestingState[]__Initializing__is_valid_data_2, __module__VestingData__VestingState[]__VerifyingBeneficiary__is_valid_data_2, __module__VestingData__VestingState[]__Active__is_valid_data_2, __module__VestingData__VestingState[]__Paused__is_valid_data_2, __module__VestingData__VestingState[]__Closed__is_valid_data_2)(__helios__common__mStruct_field(self_259, #7374617465))\n    };\n    __module__VestingData__VestingData[]__vestingDetails = (self_260) -> {\n        __module__VestingData__VestingDetails[]__from_data(__module__VestingData__VestingDetails[]__Once__is_valid_data_2, __module__VestingData__VestingDetails[]__StraightLine__is_valid_data_2, __module__VestingData__VestingDetails[]__SimpleContingency__is_valid_data_2)(__helios__common__mStruct_field(self_260, #64746c73))\n    };\n    __module__VestingData__VestingData[]__validate = (self_261) -> {\n        () -> {\n            __core__chooseUnit(__helios__assert(__helios__bool__or(() -> {\n                true\n            }, () -> {\n                __module__VestingData__VestingData[]____eq(self_261, self_261)\n            }), \"no way\"), true)\n        }\n    };\n    __module__VestingData__VestingData[]__validateCreated = (self_262) -> {\n        () -> {\n            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the vesting instance is created in Initializing state\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__module__VestingData__VestingState[]____eq(__module__VestingData__VestingData[]__state(self_262), __module__VestingData__VestingState[]__Initializing____new()), \"vesting instance is not in Initializing state\"), __helios__bool__and(() -> {\n                __module__StellarHeliosHelpers__bREQT(\"the vesting-progress must be empty\", false, (), false, (), false, ())\n            }, () -> {\n                __cond_62 = __module__VestingData__VestingData[]__vestingDetails(self_262);\n                __core__ifThenElse(\n                    __module__VestingData__VestingDetails[]__Once____is(__cond_62),\n                    () -> {\n                        (__lhs_0_128) -> {\n                            true\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __module__VestingData__VestingDetails[]__SimpleContingency____is(__cond_62),\n                            () -> {\n                                (__lhs_0_127) -> {\n                                    true\n                                }\n                            },\n                            () -> {\n                                (__lhs_0_126) -> {\n                                    vestingProgress = __module__VestingData__VestingDetails[]__StraightLine__vestingProgress(__lhs_0_126);\n                                    __helios__bool__trace(__module__VestingData__VestingProgress[]__isEmpty(vestingProgress)())(\"empty vestingProgress? \")\n                                }\n                            }\n                        )()\n                    }\n                )()(__cond_62)\n            })))\n        }\n    };\n    __module__VestingData__VestingData[]__previous = (ddd) -> {\n        __module__VestingData__VestingData[]__from_data(__module__CapoHelpers__DgDataDetails[]__inputData(ddd)())\n    };\n    __module__VestingData__VestingData[]__updated = (ddd_1) -> {\n        __module__VestingData__VestingData[]__from_data(__module__CapoHelpers__DgDataDetails[]__outputData(ddd_1)())\n    };\n    __module__VestingPolicy__DelegateDatum[]__is_valid_data = (__module__VestingPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data, __module__VestingPolicy__DelegateDatum[]__IsDelegation__is_valid_data, __module__VestingPolicy__DelegateDatum[]__capoStoredData__is_valid_data) -> {\n        (data_337) -> {\n            __core__ifThenElse(\n                __module__VestingPolicy__DelegateDatum[]__capoStoredData__is_valid_data(data_337),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__VestingPolicy__DelegateDatum[]__IsDelegation__is_valid_data(data_337),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__VestingPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data(data_337),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__VestingPolicy__DelegateDatum[]__from_data = (__module__VestingPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__VestingPolicy__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__VestingPolicy__DelegateDatum[]__capoStoredData__is_valid_data_1) -> {\n        (data_338) -> {\n            ignore_22 = __core__ifThenElse(\n                __module__VestingPolicy__DelegateDatum[]__is_valid_data(__module__VestingPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_1, __module__VestingPolicy__DelegateDatum[]__IsDelegation__is_valid_data_1, __module__VestingPolicy__DelegateDatum[]__capoStoredData__is_valid_data_1)(data_338),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid DelegateDatum data\", ())\n                }\n            )();\n            data_338\n        }\n    };\n    __module__VestingPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2 = (data_339) -> {\n        __core__chooseData(data_339, () -> {\n            pair_105 = __core__unConstrData__safe(data_339);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_105), 0),\n                () -> {\n                    data_340 = __core__listData(__core__sndPair(pair_105));\n                    __core__chooseData(data_340, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_223 = __core__unListData__safe(data_340);\n                        __core__chooseList(fields_223, () -> {\n                            false\n                        }, () -> {\n                            head_130 = __core__headList__safe(fields_223);\n                            __core__ifThenElse(\n                                __module__StellarHeliosHelpers__AnyData[]__is_valid_data(head_130),\n                                () -> {\n                                    fields_224 = __core__tailList__safe(fields_223);\n                                    __core__chooseList(fields_224, () -> {\n                                        false\n                                    }, () -> {\n                                        head_131 = __core__headList__safe(fields_224);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_131),\n                                            () -> {\n                                                fields_225 = __core__tailList__safe(fields_224);\n                                                __core__chooseList(fields_225, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_132 = __core__headList__safe(fields_225);\n                                                    __core__ifThenElse(\n                                                        __helios__data__is_valid_data(head_132),\n                                                        () -> {\n                                                            fields_226 = __core__tailList__safe(fields_225);\n                                                            __core__chooseList(fields_226, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__DelegateDatum[]__IsDelegation__serialize = __helios__common__serialize;\n    __module__VestingPolicy__DelegateDatum[]__IsDelegation____is = (data_341) -> {\n        __helios__common__enum_tag_equals(data_341, 1)\n    };\n    __module__VestingPolicy__DelegateDatum[]__IsDelegation__is_valid_data_2 = (data_342) -> {\n        __core__chooseData(data_342, () -> {\n            pair_106 = __core__unConstrData__safe(data_342);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_106), 1),\n                () -> {\n                    data_343 = __core__listData(__core__sndPair(pair_106));\n                    __core__chooseData(data_343, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_227 = __core__unListData__safe(data_343);\n                        __core__chooseList(fields_227, () -> {\n                            false\n                        }, () -> {\n                            head_133 = __core__headList__safe(fields_227);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegationDetail[]__is_valid_data(head_133),\n                                () -> {\n                                    fields_228 = __core__tailList__safe(fields_227);\n                                    __core__chooseList(fields_228, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__DelegateDatum[]__IsDelegation__dd = (self_263) -> {\n        __module__CapoDelegateHelpers__DelegationDetail[]__from_data(__helios__common__enum_field_0(self_263))\n    };\n    __module__VestingPolicy__DelegateDatum[]__capoStoredData____is = (data_344) -> {\n        __helios__common__enum_tag_equals(data_344, 2)\n    };\n    __module__VestingPolicy__DelegateDatum[]__capoStoredData__is_valid_data_2 = (data_345) -> {\n        __core__chooseData(data_345, () -> {\n            pair_107 = __core__unConstrData__safe(data_345);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_107), 2),\n                () -> {\n                    data_346 = __core__listData(__core__sndPair(pair_107));\n                    __core__chooseData(data_346, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_229 = __core__unListData__safe(data_346);\n                        __core__chooseList(fields_229, () -> {\n                            false\n                        }, () -> {\n                            head_134 = __core__headList__safe(fields_229);\n                            __core__ifThenElse(\n                                __module__VestingData__VestingData[]__is_valid_data(head_134),\n                                () -> {\n                                    fields_230 = __core__tailList__safe(fields_229);\n                                    __core__chooseList(fields_230, () -> {\n                                        false\n                                    }, () -> {\n                                        head_135 = __core__headList__safe(fields_230);\n                                        __core__ifThenElse(\n                                            __helios__int__is_valid_data(head_135),\n                                            () -> {\n                                                fields_231 = __core__tailList__safe(fields_230);\n                                                __core__chooseList(fields_231, () -> {\n                                                    false\n                                                }, () -> {\n                                                    head_136 = __core__headList__safe(fields_231);\n                                                    __core__ifThenElse(\n                                                        __helios__data__is_valid_data(head_136),\n                                                        () -> {\n                                                            fields_232 = __core__tailList__safe(fields_231);\n                                                            __core__chooseList(fields_232, true, false)\n                                                        },\n                                                        () -> {\n                                                            false\n                                                        }\n                                                    )()\n                                                })()\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__MintingActivity[]__is_valid_data = (__module__VestingPolicy__MintingActivity[]__CreatingRecord__is_valid_data) -> {\n        (data_347) -> {\n            __core__ifThenElse(\n                __module__VestingPolicy__MintingActivity[]__CreatingRecord__is_valid_data(data_347),\n                () -> {\n                    true\n                },\n                () -> {\n                    false\n                }\n            )()\n        }\n    };\n    __module__VestingPolicy__MintingActivity[]__from_data = (__module__VestingPolicy__MintingActivity[]__CreatingRecord__is_valid_data_1) -> {\n        (data_348) -> {\n            ignore_23 = __core__ifThenElse(\n                __module__VestingPolicy__MintingActivity[]__is_valid_data(__module__VestingPolicy__MintingActivity[]__CreatingRecord__is_valid_data_1)(data_348),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid MintingActivity data\", ())\n                }\n            )();\n            data_348\n        }\n    };\n    __module__VestingPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2 = (data_349) -> {\n        __core__chooseData(data_349, () -> {\n            pair_108 = __core__unConstrData__safe(data_349);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_108), 0),\n                () -> {\n                    data_350 = __core__listData(__core__sndPair(pair_108));\n                    __core__chooseData(data_350, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_233 = __core__unListData__safe(data_350);\n                        __core__chooseList(fields_233, () -> {\n                            false\n                        }, () -> {\n                            head_137 = __core__headList__safe(fields_233);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_137),\n                                () -> {\n                                    fields_234 = __core__tailList__safe(fields_233);\n                                    __core__chooseList(fields_234, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__MintingActivity[]__CreatingRecord__seed = (self_264) -> {\n        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_264))\n    };\n    __module__VestingPolicy__SpendingActivity[]__is_valid_data = (__module__VestingPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data, __module__VestingPolicy__SpendingActivity[]__SwitchToVerifying__is_valid_data, __module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary__is_valid_data, __module__VestingPolicy__SpendingActivity[]__Activating__is_valid_data, __module__VestingPolicy__SpendingActivity[]__Withdrawing__is_valid_data, __module__VestingPolicy__SpendingActivity[]__Pausing__is_valid_data, __module__VestingPolicy__SpendingActivity[]__Resuming__is_valid_data, __module__VestingPolicy__SpendingActivity[]__Closing__is_valid_data) -> {\n        (data_351) -> {\n            __core__ifThenElse(\n                __module__VestingPolicy__SpendingActivity[]__Closing__is_valid_data(data_351),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__VestingPolicy__SpendingActivity[]__Resuming__is_valid_data(data_351),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__VestingPolicy__SpendingActivity[]__Pausing__is_valid_data(data_351),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__VestingPolicy__SpendingActivity[]__Withdrawing__is_valid_data(data_351),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__VestingPolicy__SpendingActivity[]__Activating__is_valid_data(data_351),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary__is_valid_data(data_351),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__VestingPolicy__SpendingActivity[]__SwitchToVerifying__is_valid_data(data_351),\n                                                                () -> {\n                                                                    true\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__VestingPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data(data_351),\n                                                                        () -> {\n                                                                            true\n                                                                        },\n                                                                        () -> {\n                                                                            false\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__VestingPolicy__SpendingActivity[]__from_data = (__module__VestingPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__SwitchToVerifying__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__Activating__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__Withdrawing__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__Pausing__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__Resuming__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__Closing__is_valid_data_1) -> {\n        (data_352) -> {\n            ignore_24 = __core__ifThenElse(\n                __module__VestingPolicy__SpendingActivity[]__is_valid_data(__module__VestingPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__SwitchToVerifying__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__Activating__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__Withdrawing__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__Pausing__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__Resuming__is_valid_data_1, __module__VestingPolicy__SpendingActivity[]__Closing__is_valid_data_1)(data_352),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid SpendingActivity data\", ())\n                }\n            )();\n            data_352\n        }\n    };\n    __module__VestingPolicy__SpendingActivity[]__UpdatingRecord____is = (data_353) -> {\n        __helios__common__enum_tag_equals(data_353, 0)\n    };\n    __module__VestingPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2 = (data_354) -> {\n        __core__chooseData(data_354, () -> {\n            pair_109 = __core__unConstrData__safe(data_354);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_109), 0),\n                () -> {\n                    data_355 = __core__listData(__core__sndPair(pair_109));\n                    __core__chooseData(data_355, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_235 = __core__unListData__safe(data_355);\n                        __core__chooseList(fields_235, () -> {\n                            false\n                        }, () -> {\n                            head_138 = __core__headList__safe(fields_235);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_138),\n                                () -> {\n                                    fields_236 = __core__tailList__safe(fields_235);\n                                    __core__chooseList(fields_236, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__SpendingActivity[]__UpdatingRecord__id = (self_265) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_0(self_265))\n    };\n    __module__VestingPolicy__SpendingActivity[]__SwitchToVerifying____is = (data_356) -> {\n        __helios__common__enum_tag_equals(data_356, 1)\n    };\n    __module__VestingPolicy__SpendingActivity[]__SwitchToVerifying__is_valid_data_2 = (data_357) -> {\n        __core__chooseData(data_357, () -> {\n            pair_110 = __core__unConstrData__safe(data_357);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_110), 1),\n                () -> {\n                    data_358 = __core__listData(__core__sndPair(pair_110));\n                    __core__chooseData(data_358, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_237 = __core__unListData__safe(data_358);\n                        __core__chooseList(fields_237, () -> {\n                            false\n                        }, () -> {\n                            head_139 = __core__headList__safe(fields_237);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_139),\n                                () -> {\n                                    fields_238 = __core__tailList__safe(fields_237);\n                                    __core__chooseList(fields_238, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__SpendingActivity[]__SwitchToVerifying__id = (self_266) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_0(self_266))\n    };\n    __module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary____is = (data_359) -> {\n        __helios__common__enum_tag_equals(data_359, 2)\n    };\n    __module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary__is_valid_data_2 = (data_360) -> {\n        __core__chooseData(data_360, () -> {\n            pair_111 = __core__unConstrData__safe(data_360);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_111), 2),\n                () -> {\n                    data_361 = __core__listData(__core__sndPair(pair_111));\n                    __core__chooseData(data_361, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_239 = __core__unListData__safe(data_361);\n                        __core__chooseList(fields_239, () -> {\n                            false\n                        }, () -> {\n                            head_140 = __core__headList__safe(fields_239);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_140),\n                                () -> {\n                                    fields_240 = __core__tailList__safe(fields_239);\n                                    __core__chooseList(fields_240, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary__id = (self_267) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_0(self_267))\n    };\n    __module__VestingPolicy__SpendingActivity[]__Activating____is = (data_362) -> {\n        __helios__common__enum_tag_equals(data_362, 3)\n    };\n    __module__VestingPolicy__SpendingActivity[]__Activating__is_valid_data_2 = (data_363) -> {\n        __core__chooseData(data_363, () -> {\n            pair_112 = __core__unConstrData__safe(data_363);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_112), 3),\n                () -> {\n                    data_364 = __core__listData(__core__sndPair(pair_112));\n                    __core__chooseData(data_364, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_241 = __core__unListData__safe(data_364);\n                        __core__chooseList(fields_241, () -> {\n                            false\n                        }, () -> {\n                            head_141 = __core__headList__safe(fields_241);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_141),\n                                () -> {\n                                    fields_242 = __core__tailList__safe(fields_241);\n                                    __core__chooseList(fields_242, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__SpendingActivity[]__Activating__id = (self_268) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_0(self_268))\n    };\n    __module__VestingPolicy__SpendingActivity[]__Withdrawing____is = (data_365) -> {\n        __helios__common__enum_tag_equals(data_365, 4)\n    };\n    __module__VestingPolicy__SpendingActivity[]__Withdrawing__is_valid_data_2 = (data_366) -> {\n        __core__chooseData(data_366, () -> {\n            pair_113 = __core__unConstrData__safe(data_366);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_113), 4),\n                () -> {\n                    data_367 = __core__listData(__core__sndPair(pair_113));\n                    __core__chooseData(data_367, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_243 = __core__unListData__safe(data_367);\n                        __core__chooseList(fields_243, () -> {\n                            false\n                        }, () -> {\n                            head_142 = __core__headList__safe(fields_243);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_142),\n                                () -> {\n                                    fields_244 = __core__tailList__safe(fields_243);\n                                    __core__chooseList(fields_244, () -> {\n                                        false\n                                    }, () -> {\n                                        head_143 = __core__headList__safe(fields_244);\n                                        __core__ifThenElse(\n                                            __helios__value__is_valid_data(head_143),\n                                            () -> {\n                                                fields_245 = __core__tailList__safe(fields_244);\n                                                __core__chooseList(fields_245, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__SpendingActivity[]__Withdrawing__id = (self_269) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_0(self_269))\n    };\n    __module__VestingPolicy__SpendingActivity[]__Pausing____is = (data_368) -> {\n        __helios__common__enum_tag_equals(data_368, 5)\n    };\n    __module__VestingPolicy__SpendingActivity[]__Pausing__is_valid_data_2 = (data_369) -> {\n        __core__chooseData(data_369, () -> {\n            pair_114 = __core__unConstrData__safe(data_369);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_114), 5),\n                () -> {\n                    data_370 = __core__listData(__core__sndPair(pair_114));\n                    __core__chooseData(data_370, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_246 = __core__unListData__safe(data_370);\n                        __core__chooseList(fields_246, () -> {\n                            false\n                        }, () -> {\n                            head_144 = __core__headList__safe(fields_246);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_144),\n                                () -> {\n                                    fields_247 = __core__tailList__safe(fields_246);\n                                    __core__chooseList(fields_247, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__SpendingActivity[]__Pausing__id = (self_270) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_0(self_270))\n    };\n    __module__VestingPolicy__SpendingActivity[]__Resuming____is = (data_371) -> {\n        __helios__common__enum_tag_equals(data_371, 6)\n    };\n    __module__VestingPolicy__SpendingActivity[]__Resuming__is_valid_data_2 = (data_372) -> {\n        __core__chooseData(data_372, () -> {\n            pair_115 = __core__unConstrData__safe(data_372);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_115), 6),\n                () -> {\n                    data_373 = __core__listData(__core__sndPair(pair_115));\n                    __core__chooseData(data_373, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_248 = __core__unListData__safe(data_373);\n                        __core__chooseList(fields_248, () -> {\n                            false\n                        }, () -> {\n                            head_145 = __core__headList__safe(fields_248);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_145),\n                                () -> {\n                                    fields_249 = __core__tailList__safe(fields_248);\n                                    __core__chooseList(fields_249, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__SpendingActivity[]__Resuming__id = (self_271) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_0(self_271))\n    };\n    __module__VestingPolicy__SpendingActivity[]__Closing__is_valid_data_2 = (data_374) -> {\n        __core__chooseData(data_374, () -> {\n            pair_116 = __core__unConstrData__safe(data_374);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_116), 7),\n                () -> {\n                    data_375 = __core__listData(__core__sndPair(pair_116));\n                    __core__chooseData(data_375, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_250 = __core__unListData__safe(data_375);\n                        __core__chooseList(fields_250, () -> {\n                            false\n                        }, () -> {\n                            head_146 = __core__headList__safe(fields_250);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_146),\n                                () -> {\n                                    fields_251 = __core__tailList__safe(fields_250);\n                                    __core__chooseList(fields_251, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__SpendingActivity[]__Closing__id = (self_272) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_0(self_272))\n    };\n    __module__VestingPolicy__BurningActivity[]__is_valid_data = (__module__VestingPolicy__BurningActivity[]__DeletingRecord__is_valid_data) -> {\n        (data_376) -> {\n            __core__ifThenElse(\n                __module__VestingPolicy__BurningActivity[]__DeletingRecord__is_valid_data(data_376),\n                () -> {\n                    true\n                },\n                () -> {\n                    false\n                }\n            )()\n        }\n    };\n    __module__VestingPolicy__BurningActivity[]__DeletingRecord__is_valid_data_1 = (data_377) -> {\n        __core__chooseData(data_377, () -> {\n            pair_117 = __core__unConstrData__safe(data_377);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_117), 0),\n                () -> {\n                    data_378 = __core__listData(__core__sndPair(pair_117));\n                    __core__chooseData(data_378, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_252 = __core__unListData__safe(data_378);\n                        __core__chooseList(fields_252, () -> {\n                            false\n                        }, () -> {\n                            head_147 = __core__headList__safe(fields_252);\n                            __core__ifThenElse(\n                                __helios__bytearray__is_valid_data(head_147),\n                                () -> {\n                                    fields_253 = __core__tailList__safe(fields_252);\n                                    __core__chooseList(fields_253, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__DelegateActivity[]__is_valid_data = (__module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data, __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data, __module__VestingPolicy__DelegateActivity[]__SpendingActivities__is_valid_data, __module__VestingPolicy__DelegateActivity[]__MintingActivities__is_valid_data, __module__VestingPolicy__DelegateActivity[]__BurningActivities__is_valid_data, __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data, __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data, __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data, __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data, __module__VestingPolicy__DelegateActivity[]__OtherActivities__is_valid_data) -> {\n        (data_379) -> {\n            __core__ifThenElse(\n                __module__VestingPolicy__DelegateActivity[]__OtherActivities__is_valid_data(data_379),\n                () -> {\n                    true\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data(data_379),\n                        () -> {\n                            true\n                        },\n                        () -> {\n                            __core__ifThenElse(\n                                __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data(data_379),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data(data_379),\n                                        () -> {\n                                            true\n                                        },\n                                        () -> {\n                                            __core__ifThenElse(\n                                                __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data(data_379),\n                                                () -> {\n                                                    true\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__VestingPolicy__DelegateActivity[]__BurningActivities__is_valid_data(data_379),\n                                                        () -> {\n                                                            true\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__VestingPolicy__DelegateActivity[]__MintingActivities__is_valid_data(data_379),\n                                                                () -> {\n                                                                    true\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__VestingPolicy__DelegateActivity[]__SpendingActivities__is_valid_data(data_379),\n                                                                        () -> {\n                                                                            true\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data(data_379),\n                                                                                () -> {\n                                                                                    true\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data(data_379),\n                                                                                        () -> {\n                                                                                            true\n                                                                                        },\n                                                                                        () -> {\n                                                                                            false\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()\n                                        }\n                                    )()\n                                }\n                            )()\n                        }\n                    )()\n                }\n            )()\n        }\n    };\n    __module__VestingPolicy__DelegateActivity[]__from_data = (__module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__OtherActivities__is_valid_data_1) -> {\n        (data_380) -> {\n            ignore_25 = __core__ifThenElse(\n                __module__VestingPolicy__DelegateActivity[]__is_valid_data(__module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__MintingActivities__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__BurningActivities__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_1, __module__VestingPolicy__DelegateActivity[]__OtherActivities__is_valid_data_1)(data_380),\n                () -> {\n                    ()\n                },\n                () -> {\n                    __core__trace(\"Warning: invalid DelegateActivity data\", ())\n                }\n            )();\n            data_380\n        }\n    };\n    __module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities____is = (data_381) -> {\n        __helios__common__enum_tag_equals(data_381, 0)\n    };\n    __module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2 = (data_382) -> {\n        __core__chooseData(data_382, () -> {\n            pair_118 = __core__unConstrData__safe(data_382);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_118), 0),\n                () -> {\n                    data_383 = __core__listData(__core__sndPair(pair_118));\n                    __core__chooseData(data_383, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_254 = __core__unListData__safe(data_383);\n                        __core__chooseList(fields_254, () -> {\n                            false\n                        }, () -> {\n                            head_148 = __core__headList__safe(fields_254);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(head_148),\n                                () -> {\n                                    fields_255 = __core__tailList__safe(fields_254);\n                                    __core__chooseList(fields_255, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities__activity = (self_273) -> {\n        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewSpendDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate__is_valid_data_2, __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__is_valid_data_2)(__helios__common__enum_field_0(self_273))\n    };\n    __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities____is = (data_384) -> {\n        __helios__common__enum_tag_equals(data_384, 1)\n    };\n    __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2 = (data_385) -> {\n        __core__chooseData(data_385, () -> {\n            pair_119 = __core__unConstrData__safe(data_385);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_119), 1),\n                () -> {\n                    data_386 = __core__listData(__core__sndPair(pair_119));\n                    __core__chooseData(data_386, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_256 = __core__unListData__safe(data_386);\n                        __core__chooseList(fields_256, () -> {\n                            false\n                        }, () -> {\n                            head_149 = __core__headList__safe(fields_256);\n                            __core__ifThenElse(\n                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__is_valid_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(head_149),\n                                () -> {\n                                    fields_257 = __core__tailList__safe(fields_256);\n                                    __core__chooseList(fields_257, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity = (self_274) -> {\n        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__from_data(__module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring__is_valid_data_2, __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ValidatingSettings__is_valid_data_2)(__helios__common__enum_field_0(self_274))\n    };\n    __module__VestingPolicy__DelegateActivity[]__SpendingActivities____is = (data_387) -> {\n        __helios__common__enum_tag_equals(data_387, 2)\n    };\n    __module__VestingPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2 = (data_388) -> {\n        __core__chooseData(data_388, () -> {\n            pair_120 = __core__unConstrData__safe(data_388);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_120), 2),\n                () -> {\n                    data_389 = __core__listData(__core__sndPair(pair_120));\n                    __core__chooseData(data_389, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_258 = __core__unListData__safe(data_389);\n                        __core__chooseList(fields_258, () -> {\n                            false\n                        }, () -> {\n                            head_150 = __core__headList__safe(fields_258);\n                            __core__ifThenElse(\n                                __module__VestingPolicy__SpendingActivity[]__is_valid_data(__module__VestingPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__SwitchToVerifying__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__Activating__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__Withdrawing__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__Pausing__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__Resuming__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__Closing__is_valid_data_2)(head_150),\n                                () -> {\n                                    fields_259 = __core__tailList__safe(fields_258);\n                                    __core__chooseList(fields_259, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__DelegateActivity[]__SpendingActivities__activity = (self_275) -> {\n        __module__VestingPolicy__SpendingActivity[]__from_data(__module__VestingPolicy__SpendingActivity[]__UpdatingRecord__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__SwitchToVerifying__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__Activating__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__Withdrawing__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__Pausing__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__Resuming__is_valid_data_2, __module__VestingPolicy__SpendingActivity[]__Closing__is_valid_data_2)(__helios__common__enum_field_0(self_275))\n    };\n    __module__VestingPolicy__DelegateActivity[]__MintingActivities____is = (data_390) -> {\n        __helios__common__enum_tag_equals(data_390, 3)\n    };\n    __module__VestingPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2 = (data_391) -> {\n        __core__chooseData(data_391, () -> {\n            pair_121 = __core__unConstrData__safe(data_391);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_121), 3),\n                () -> {\n                    data_392 = __core__listData(__core__sndPair(pair_121));\n                    __core__chooseData(data_392, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_260 = __core__unListData__safe(data_392);\n                        __core__chooseList(fields_260, () -> {\n                            false\n                        }, () -> {\n                            head_151 = __core__headList__safe(fields_260);\n                            __core__ifThenElse(\n                                __module__VestingPolicy__MintingActivity[]__is_valid_data(__module__VestingPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2)(head_151),\n                                () -> {\n                                    fields_261 = __core__tailList__safe(fields_260);\n                                    __core__chooseList(fields_261, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__DelegateActivity[]__MintingActivities__activity = (self_276) -> {\n        __module__VestingPolicy__MintingActivity[]__from_data(__module__VestingPolicy__MintingActivity[]__CreatingRecord__is_valid_data_2)(__helios__common__enum_field_0(self_276))\n    };\n    __module__VestingPolicy__DelegateActivity[]__BurningActivities____is = (data_393) -> {\n        __helios__common__enum_tag_equals(data_393, 4)\n    };\n    __module__VestingPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2 = (data_394) -> {\n        __core__chooseData(data_394, () -> {\n            pair_122 = __core__unConstrData__safe(data_394);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_122), 4),\n                () -> {\n                    data_395 = __core__listData(__core__sndPair(pair_122));\n                    __core__chooseData(data_395, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_262 = __core__unListData__safe(data_395);\n                        __core__chooseList(fields_262, () -> {\n                            false\n                        }, () -> {\n                            head_152 = __core__headList__safe(fields_262);\n                            __core__ifThenElse(\n                                __module__VestingPolicy__BurningActivity[]__is_valid_data(__module__VestingPolicy__BurningActivity[]__DeletingRecord__is_valid_data_1)(head_152),\n                                () -> {\n                                    fields_263 = __core__tailList__safe(fields_262);\n                                    __core__chooseList(fields_263, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData____is = (data_396) -> {\n        __helios__common__enum_tag_equals(data_396, 5)\n    };\n    __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2 = (data_397) -> {\n        __core__chooseData(data_397, () -> {\n            pair_123 = __core__unConstrData__safe(data_397);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_123), 5),\n                () -> {\n                    data_398 = __core__listData(__core__sndPair(pair_123));\n                    __core__chooseData(data_398, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_264 = __core__unListData__safe(data_398);\n                        __core__chooseList(fields_264, () -> {\n                            false\n                        }, () -> {\n                            head_153 = __core__headList__safe(fields_264);\n                            __core__ifThenElse(\n                                __helios__txoutputid__is_valid_data(head_153),\n                                () -> {\n                                    fields_265 = __core__tailList__safe(fields_264);\n                                    __core__chooseList(fields_265, () -> {\n                                        false\n                                    }, () -> {\n                                        head_154 = __core__headList__safe(fields_265);\n                                        __core__ifThenElse(\n                                            __helios__string__is_valid_data(head_154),\n                                            () -> {\n                                                fields_266 = __core__tailList__safe(fields_265);\n                                                __core__chooseList(fields_266, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__seed = (self_277) -> {\n        __helios__txoutputid__from_data(__helios__common__enum_field_0(self_277))\n    };\n    __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__dataType = (self_278) -> {\n        __helios__string__from_data(__helios__common__enum_field_1(self_278))\n    };\n    __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData____is = (data_399) -> {\n        __helios__common__enum_tag_equals(data_399, 6)\n    };\n    __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2 = (data_400) -> {\n        __core__chooseData(data_400, () -> {\n            pair_124 = __core__unConstrData__safe(data_400);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_124), 6),\n                () -> {\n                    data_401 = __core__listData(__core__sndPair(pair_124));\n                    __core__chooseData(data_401, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_267 = __core__unListData__safe(data_401);\n                        __core__chooseList(fields_267, () -> {\n                            false\n                        }, () -> {\n                            head_155 = __core__headList__safe(fields_267);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_155),\n                                () -> {\n                                    fields_268 = __core__tailList__safe(fields_267);\n                                    __core__chooseList(fields_268, () -> {\n                                        false\n                                    }, () -> {\n                                        head_156 = __core__headList__safe(fields_268);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_156),\n                                            () -> {\n                                                fields_269 = __core__tailList__safe(fields_268);\n                                                __core__chooseList(fields_269, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType = (self_279) -> {\n        __helios__string__from_data(__helios__common__enum_field_0(self_279))\n    };\n    __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__recId = (self_280) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_1(self_280))\n    };\n    __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData____is = (data_402) -> {\n        __helios__common__enum_tag_equals(data_402, 7)\n    };\n    __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2 = (data_403) -> {\n        __core__chooseData(data_403, () -> {\n            pair_125 = __core__unConstrData__safe(data_403);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_125), 7),\n                () -> {\n                    data_404 = __core__listData(__core__sndPair(pair_125));\n                    __core__chooseData(data_404, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_270 = __core__unListData__safe(data_404);\n                        __core__chooseList(fields_270, () -> {\n                            false\n                        }, () -> {\n                            head_157 = __core__headList__safe(fields_270);\n                            __core__ifThenElse(\n                                __helios__string__is_valid_data(head_157),\n                                () -> {\n                                    fields_271 = __core__tailList__safe(fields_270);\n                                    __core__chooseList(fields_271, () -> {\n                                        false\n                                    }, () -> {\n                                        head_158 = __core__headList__safe(fields_271);\n                                        __core__ifThenElse(\n                                            __helios__bytearray__is_valid_data(head_158),\n                                            () -> {\n                                                fields_272 = __core__tailList__safe(fields_271);\n                                                __core__chooseList(fields_272, true, false)\n                                            },\n                                            () -> {\n                                                false\n                                            }\n                                        )()\n                                    })()\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData__recId = (self_281) -> {\n        __helios__bytearray__from_data(__helios__common__enum_field_1(self_281))\n    };\n    __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities____is = (data_405) -> {\n        __helios__common__enum_tag_equals(data_405, 8)\n    };\n    __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2 = (data_406) -> {\n        __core__chooseData(data_406, () -> {\n            pair_126 = __core__unConstrData__safe(data_406);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_126), 8),\n                () -> {\n                    data_407 = __core__listData(__core__sndPair(pair_126));\n                    __core__chooseData(data_407, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_273 = __core__unListData__safe(data_407);\n                        __core__chooseList(fields_273, () -> {\n                            false\n                        }, () -> {\n                            head_159 = __core__headList__safe(fields_273);\n                            __core__ifThenElse(\n                                __helios__list[__helios__data]__is_valid_data(head_159),\n                                () -> {\n                                    fields_274 = __core__tailList__safe(fields_273);\n                                    __core__chooseList(fields_274, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities__activities = (self_282) -> {\n        __helios__list[__helios__data]__from_data(__helios__common__enum_field_0(self_282))\n    };\n    __module__VestingPolicy__DelegateActivity[]__OtherActivities____is = (data_408) -> {\n        __helios__common__enum_tag_equals(data_408, 9)\n    };\n    __module__VestingPolicy__DelegateActivity[]__OtherActivities__is_valid_data_2 = (data_409) -> {\n        __core__chooseData(data_409, () -> {\n            pair_127 = __core__unConstrData__safe(data_409);\n            __core__ifThenElse(\n                __core__equalsInteger(__core__fstPair(pair_127), 9),\n                () -> {\n                    data_410 = __core__listData(__core__sndPair(pair_127));\n                    __core__chooseData(data_410, () -> {\n                        false\n                    }, () -> {\n                        false\n                    }, () -> {\n                        fields_275 = __core__unListData__safe(data_410);\n                        __core__chooseList(fields_275, () -> {\n                            false\n                        }, () -> {\n                            head_160 = __core__headList__safe(fields_275);\n                            __core__ifThenElse(\n                                __helios__data__is_valid_data(head_160),\n                                () -> {\n                                    fields_276 = __core__tailList__safe(fields_275);\n                                    __core__chooseList(fields_276, true, false)\n                                },\n                                () -> {\n                                    false\n                                }\n                            )()\n                        })()\n                    }, () -> {\n                        false\n                    }, () -> {\n                        false\n                    })()\n                },\n                () -> {\n                    false\n                }\n            )()\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        }, () -> {\n            false\n        })()\n    };\n    __helios__list[__helios__txinput]__for_each = (self_283) -> {\n        (fn_31) -> {\n            recurse_103 = (recurse_102, lst_26) -> {\n                __core__chooseList(lst_26, () -> {\n                    ()\n                }, () -> {\n                    __core__chooseUnit(fn_31(__helios__txinput__from_data(__core__headList__safe(lst_26))), recurse_102(recurse_102, __core__tailList__safe(lst_26)))\n                })()\n            };\n            recurse_103(recurse_103, self_283)\n        }\n    };\n    __helios__list[__helios__txinput]__filter = (self_284) -> {\n        (fn_32) -> {\n            __helios__common__filter_list(self_284, (item_15) -> {\n                fn_32(__helios__txinput__from_data(item_15))\n            })\n        }\n    };\n    __module__VestingPolicy__DelegateActivity[]__additionalDelegateValidation = (self_285) -> {\n        (priorMddd, cctx) -> {\n            __core__chooseUnit(__helios__print(\"  -- addl dgt val \"), __helios__bool__or(() -> {\n                __cond_63 = self_285;\n                __core__ifThenElse(\n                    __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_63),\n                    () -> {\n                        (__lhs_0_162) -> {\n                            true\n                        }\n                    },\n                    () -> {\n                        __core__ifThenElse(\n                            __module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_63),\n                            () -> {\n                                (__lhs_0_161) -> {\n                                    __helios__error(\"unreachable in a dgDataPolicy\")\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __module__VestingPolicy__DelegateActivity[]__MintingActivities____is(__cond_63),\n                                    () -> {\n                                        (__lhs_0_156) -> {\n                                            ma_2 = __module__VestingPolicy__DelegateActivity[]__MintingActivities__activity(__lhs_0_156);\n                                            __cond_65 = ma_2;\n                                            __lhs_0_157 = __cond_65;\n                                            seed_3 = __module__VestingPolicy__MintingActivity[]__CreatingRecord__seed(__lhs_0_157);\n                                            __core__chooseUnit(__helios__print(\"registering a new vesting instance...\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the operator must provide a valid minting seed\", false, (), false, (), false, ()), mkTn = __module__CapoMintHelpers__mkUutTnFactory(seed_3);\n                                            mintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__VestingPolicy__DelegateDatum[]__IsDelegation__dd(priorMddd)), seed_3, __core__mkCons(__helios__string____to_data(\"vest\"), __core__mkNilData(())), true, mkTn, false, (), false, (), true, false, false, (), false, ());\n                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), \"no charter ref\"), newRecData = __module__CapoHelpers__CapoCtx[]__creatingDgData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(true, mkTn(\"vest\"), false, (), false, ());\n                                            __lhs_0_158 = __module__CapoHelpers__DgDataDetails[]__output(newRecData)();\n                                            rec = __module__VestingData__VestingData[]__from_data(__module__CapoHelpers__DgDataDetails[]__outputData(newRecData)());\n                                            __core__chooseUnit(__helios__assert(__helios__duration____leq(__helios__time____sub(__helios__timerange__end(__helios__tx__time_range(__helios__scriptcontext__tx)), __helios__timerange__start(__helios__tx__time_range(__helios__scriptcontext__tx))), __helios__duration__HOUR), \"txn duration err\"), ownerToken = __module__VestingData__VestingData[]__ownerToken(rec);\n                                            ownerTokenAc = __helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(__module__VestingPolicy__DelegateDatum[]__IsDelegation__dd(priorMddd)), ownerToken);\n                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"verifies the owner-token's presence in the txn\", false, (), false, (), false, ()), __helios__bool__and(() -> {\n                                                __helios__bool__and(() -> {\n                                                    __helios__bool__and(() -> {\n                                                        __helios__bool__and(() -> {\n                                                            __helios__bool__and(() -> {\n                                                                __cond_66 = __helios__list[__helios__txinput]__find_safe(__helios__tx__inputs(__helios__scriptcontext__tx))((i_13) -> {\n                                                                    __helios__int____eq(__helios__value__get_safe(__helios__txinput__value(i_13))(ownerTokenAc), 1)\n                                                                });\n                                                                __core__ifThenElse(\n                                                                    __helios__option[__helios__txinput]__none____is(__cond_66),\n                                                                    () -> {\n                                                                        (__lhs_0_160) -> {\n                                                                            __helios__error(\"missing owner token\")\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        (__lhs_0_159) -> {\n                                                                            true\n                                                                        }\n                                                                    }\n                                                                )()(__cond_66)\n                                                            }, () -> {\n                                                                __module__StellarHeliosHelpers__bREQT(\"verifies creation-details\", false, (), false, (), false, ())\n                                                            })\n                                                        }, () -> {\n                                                            __helios__bool__trace(__module__VestingData__VestingData[]__validateCreated(rec)())(\"creation ok? \")\n                                                        })\n                                                    }, () -> {\n                                                        __module__StellarHeliosHelpers__bREQT(\"verifies the vesting instance's overall validity\", false, (), false, (), false, ())\n                                                    })\n                                                }, () -> {\n                                                    __helios__bool__trace(__module__VestingData__VestingData[]__validate(rec)())(\"verify ok? \")\n                                                })\n                                            }, () -> {\n                                                mintingOk\n                                            }))))))\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __module__VestingPolicy__DelegateActivity[]__SpendingActivities____is(__cond_63),\n                                            () -> {\n                                                (__lhs_0_131) -> {\n                                                    x_13 = __module__VestingPolicy__DelegateActivity[]__SpendingActivities__activity(__lhs_0_131);\n                                                    __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__withCharterRef(cctx)())(), \"no charter ref\"), __cond_64 = x_13;\n                                                    __core__ifThenElse(\n                                                        __module__VestingPolicy__SpendingActivity[]__UpdatingRecord____is(__cond_64),\n                                                        () -> {\n                                                            (__lhs_0_153) -> {\n                                                                recId_15 = __module__VestingPolicy__SpendingActivity[]__UpdatingRecord__id(__lhs_0_153);\n                                                                __core__chooseUnit(__helios__print(\"updating the details for a vesting instance...\"), vestingDD_7 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__findModelActivity_1, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2, __module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(false, (), true, recId_15, false, (), false, ());\n                                                                __lhs_0_154 = __module__VestingData__VestingData[]__previous(vestingDD_7);\n                                                                __lhs_0_155 = __module__VestingData__VestingData[]__updated(vestingDD_7);\n                                                                hasRecInput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3(cctx)(true, \"vest\", true, recId_15);\n                                                                hasRecOutput = __module__CapoHelpers__CapoCtx[]__mkDelegatedDataOutputPredicate(cctx)(\"vest\", true, recId_15);\n                                                                __core__chooseUnit(__helios__list[__helios__txinput]__for_each(__helios__list[__helios__txinput]__filter(__helios__tx__inputs(__helios__scriptcontext__tx))(hasRecInput))((utxo_9) -> {\n                                                                    inputData_1 = __module__VestingData__VestingData[]__from_data(__helios__txoutputdatum__inline(__helios__txinput__datum(utxo_9)));\n                                                                    __core__chooseUnit(__helios__assert(__module__VestingData__VestingState[]____eq(__module__VestingData__VestingData[]__state(inputData_1), __module__VestingData__VestingState[]__Initializing____new()), \"update requires state=Initializing\"), updatedUtxo = __helios__list[__helios__txoutput]__find(__helios__tx__outputs(__helios__scriptcontext__tx))(hasRecOutput);\n                                                                    updatedData = __module__VestingData__VestingData[]__from_data(__helios__txoutputdatum__inline(__helios__txoutput__datum(updatedUtxo)));\n                                                                    __core__chooseUnit(__helios__assert(__module__VestingData__VestingData[]__validate(updatedData)(), \"<-- that throws; this can't.\"), ()))\n                                                                }), true))\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__VestingPolicy__SpendingActivity[]__SwitchToVerifying____is(__cond_64),\n                                                                () -> {\n                                                                    (__lhs_0_150) -> {\n                                                                        recId_14 = __module__VestingPolicy__SpendingActivity[]__SwitchToVerifying__id(__lhs_0_150);\n                                                                        vestingDD_6 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__findModelActivity_1, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2, __module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(false, (), true, recId_14, false, (), false, ());\n                                                                        __lhs_0_151 = __module__VestingData__VestingData[]__previous(vestingDD_6);\n                                                                        __lhs_0_152 = __module__VestingData__VestingData[]__updated(vestingDD_6);\n                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"switches the vesting instance to verifying mode\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the owner-token's presence in the txn\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't change any details of the vesting data\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"^^^\"), false))))\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary____is(__cond_64),\n                                                                        () -> {\n                                                                            (__lhs_0_147) -> {\n                                                                                recId_13 = __module__VestingPolicy__SpendingActivity[]__VerifyingBeneficiary__id(__lhs_0_147);\n                                                                                vestingDD_5 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__findModelActivity_1, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2, __module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(false, (), true, recId_13, false, (), false, ());\n                                                                                __lhs_0_148 = __module__VestingData__VestingData[]__previous(vestingDD_5);\n                                                                                __lhs_0_149 = __module__VestingData__VestingData[]__updated(vestingDD_5);\n                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"verifies the beneficiary-token's presence in the txn\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"^^^\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires that the beneficiary-token is not changed\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"implement this!\"), false))))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__VestingPolicy__SpendingActivity[]__Activating____is(__cond_64),\n                                                                                () -> {\n                                                                                    (__lhs_0_144) -> {\n                                                                                        recId_12 = __module__VestingPolicy__SpendingActivity[]__Activating__id(__lhs_0_144);\n                                                                                        vestingDD_4 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__findModelActivity_1, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2, __module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(false, (), true, recId_12, false, (), false, ());\n                                                                                        __lhs_0_145 = __module__VestingData__VestingData[]__previous(vestingDD_4);\n                                                                                        __lhs_0_146 = __module__VestingData__VestingData[]__updated(vestingDD_4);\n                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"activates the vesting instance\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"verifies the owner-token's presence in the txn\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't change any details of the vesting data\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires that the indicated totalAmount is deposited\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"verifies the beneficiary-token's presence in the txn\"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"implement this!\"), false))))))\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __module__VestingPolicy__SpendingActivity[]__Withdrawing____is(__cond_64),\n                                                                                        () -> {\n                                                                                            (__lhs_0_141) -> {\n                                                                                                recId_11 = __module__VestingPolicy__SpendingActivity[]__Withdrawing__id(__lhs_0_141);\n                                                                                                vestingDD_3 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__findModelActivity_1, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2, __module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(false, (), true, recId_11, false, (), false, ());\n                                                                                                __lhs_0_142 = __module__VestingData__VestingData[]__previous(vestingDD_3);\n                                                                                                __lhs_0_143 = __module__VestingData__VestingData[]__updated(vestingDD_3);\n                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"StraighLine is supported\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Once is NOT supported\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"SimpleContingency is NOT supported\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"withdraws the vesting instance\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"fails if the vesting instance is not Active\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the beneficiary-token's presence in the txn\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires that the correct funds are withdrawn\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't change any details of the vesting data\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"updates the lastPartialMaturity to fit the configured vesting frequency\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... on the last vesting period:\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"   -- last vesting: no funds may remain\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"   -- last vesting: the state must be Closed 'complete'\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"implement this!\"), false)))))))))))))\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __module__VestingPolicy__SpendingActivity[]__Pausing____is(__cond_64),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_138) -> {\n                                                                                                        recId_10 = __module__VestingPolicy__SpendingActivity[]__Pausing__id(__lhs_0_138);\n                                                                                                        vestingDD_2 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__findModelActivity_1, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2, __module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(false, (), true, recId_10, false, (), false, ());\n                                                                                                        __lhs_0_139 = __module__VestingData__VestingData[]__previous(vestingDD_2);\n                                                                                                        __lhs_0_140 = __module__VestingData__VestingData[]__updated(vestingDD_2);\n                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"pauses the vesting instance\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the owner-token's presence in the txn\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires a Pause reason\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't change any details of the vesting data\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"implement this!\"), false)))))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __module__VestingPolicy__SpendingActivity[]__Resuming____is(__cond_64),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_135) -> {\n                                                                                                                recId_9 = __module__VestingPolicy__SpendingActivity[]__Resuming__id(__lhs_0_135);\n                                                                                                                vestingDD_1 = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__findModelActivity_1, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2, __module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(false, (), true, recId_9, false, (), false, ());\n                                                                                                                __lhs_0_136 = __module__VestingData__VestingData[]__previous(vestingDD_1);\n                                                                                                                __lhs_0_137 = __module__VestingData__VestingData[]__updated(vestingDD_1);\n                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"resumes the vesting instance\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the owner-token's presence in the txn\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't change any details of the vesting data\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"implement this!\"), false))))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_132) -> {\n                                                                                                                recId_8 = __module__VestingPolicy__SpendingActivity[]__Closing__id(__lhs_0_132);\n                                                                                                                vestingDD = __module__CapoHelpers__CapoCtx[]__updatingDgData(__module__CapoHelpers__CapoCtx[]__findModelActivity_1, __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2, __module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3, __module__CapoHelpers__CapoCtx[]__address_3, __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1, __module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3, __module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx)(false, (), true, recId_8, false, (), false, ());\n                                                                                                                __lhs_0_133 = __module__VestingData__VestingData[]__previous(vestingDD);\n                                                                                                                __lhs_0_134 = __module__VestingData__VestingData[]__updated(vestingDD);\n                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"closes the vesting instance\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the owner-token's presence in the txn\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires a Close reason\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't change any details of the vesting data\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"withdraws any remaining funds to a destination specified by the owner\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"implement this!\"), false))))))\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()(__cond_64))\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __module__VestingPolicy__DelegateActivity[]__BurningActivities____is(__cond_63),\n                                                    () -> {\n                                                        (__lhs_0_130) -> {\n                                                            __helios__error(\"no burn activity here yet\")\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __module__VestingPolicy__DelegateActivity[]__OtherActivities____is(__cond_63),\n                                                            () -> {\n                                                                (__lhs_0_129) -> {\n                                                                    __helios__error(\"no other activities exist in this delegate\")\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__43) -> {\n                                                                    false\n                                                                }\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()\n                    }\n                )()(__cond_63)\n            }, () -> {\n                __helios__bytearray____eq(__helios__tx__serialize(__helios__scriptcontext__tx)(), __module__VestingPolicy__DelegateDatum[]__IsDelegation__serialize(priorMddd)())\n            }))\n        }\n    };\n    __module__VestingPolicy__DelegateActivity[]__otherDatumValidation = (self_286) -> {\n        (_priorMdd) -> {\n            neverTriggered = () -> {\n                __helios__error(\"never called\")\n            };\n            __cond_67 = self_286;\n            __core__ifThenElse(\n                __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_67),\n                () -> {\n                    (__lhs_0_164) -> {\n                        neverTriggered()\n                    }\n                },\n                () -> {\n                    __core__ifThenElse(\n                        __module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_67),\n                        () -> {\n                            (__lhs_0_163) -> {\n                                neverTriggered()\n                            }\n                        },\n                        () -> {\n                            (__44) -> {\n                                false\n                            }\n                        }\n                    )()\n                }\n            )()(__cond_67)\n        }\n    };\n    __module__BasicDelegate__rev = __helios__int__from_data(__core__iData(1));\n    __module__BasicDelegate__instance = #67656e6572616c;\n    __module__BasicDelegate__delegateName = __helios__string__from_data(__core__bData(#56657374696e67506f6c696379));\n    __module__BasicDelegate__isMintDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));\n    __module__BasicDelegate__isSpendDelegate = __helios__bool__from_data(__core__constrData(0, __core__mkNilData(())));\n    __module__BasicDelegate__isDgDataPolicy = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));\n    __module__BasicDelegate__requiresGovAuthority = __helios__bool__from_data(__core__constrData(1, __core__mkNilData(())));\n    __helios__list[__helios__data]__all = (self_287) -> {\n        (fn_33) -> {\n            __helios__common__all(self_287, (item_16) -> {\n                fn_33(__helios__data__from_data(item_16))\n            })\n        }\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq = (self_288, other_5) -> {\n        __core__equalsData(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(self_288), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____to_data(other_5))\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail = __core__tailList;\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length = __helios__common__length;\n    __helios__option[__helios__assetclass]__unwrap = (self_289) -> {\n        () -> {\n            __helios__assetclass__from_data(__helios__common__enum_field_0(self_289))\n        }\n    };\n    __helios__option[__helios__assetclass]__some____new = (some_5) -> {\n        __core__constrData(0, __helios__common__list_1(__helios__assetclass____to_data(some_5)))\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all = (self_290) -> {\n        (fn_34) -> {\n            __helios__common__all(self_290, (item_17) -> {\n                fn_34(__module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_17))\n            })\n        }\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head = (self_291) -> {\n        __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(__core__headList(self_291))\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]] = (self_292) -> {\n        (fn_35, a0) -> {\n            __helios__common__fold(self_292, (prev_4, item_18) -> {\n                fn_35(prev_4, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_18))\n            }, a0)\n        }\n    };\n    __helios__map[__helios__bytearray@__helios__int]__delete = (self_293) -> {\n        (key_28) -> {\n            key_29 = __helios__bytearray____to_data(key_28);\n            recurse_105 = (recurse_104, self_294) -> {\n                __core__chooseList(self_294, () -> {\n                    self_294\n                }, () -> {\n                    head_161 = __core__headList__safe(self_294);\n                    tail_6 = __core__tailList__safe(self_294);\n                    __core__ifThenElse(\n                        __core__equalsData(key_29, __core__fstPair(head_161)),\n                        () -> {\n                            recurse_104(recurse_104, tail_6)\n                        },\n                        () -> {\n                            __core__mkCons(head_161, recurse_104(recurse_104, tail_6))\n                        }\n                    )()\n                })()\n            };\n            recurse_105(recurse_105, self_293)\n        }\n    };\n    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is = (data_411) -> {\n        __helios__common__enum_tag_equals(data_411, 0)\n    };\n    __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some = (self_295) -> {\n        __helios__map[__helios__bytearray@__helios__int]__from_data(__helios__common__enum_field_0(self_295))\n    };\n    __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe = (self_296) -> {\n        (key_30) -> {\n            __helios__common__map_get(self_296, __helios__mintingpolicyhash____to_data(key_30), (x_14) -> {\n                __core__constrData(0, __helios__common__list_1(x_14))\n            }, () -> {\n                __core__constrData(1, __helios__common__list_0)\n            })\n        }\n    };\n    __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]] = (self_297) -> {\n        (fn_36, a0_1, b0_1) -> {\n            __helios__common__fold(self_297, (prev_5, item_19) -> {\n                prev_5((a_18, b_17) -> {\n                    fn_36(a_18, b_17, __module__CapoDelegateHelpers__PendingCharterChange[]__from_data(__module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__is_valid_data_2, __module__CapoDelegateHelpers__PendingCharterChange[]__otherManifestChange__is_valid_data_2)(item_19))\n                })\n            }, (callback_15) -> {\n                callback_15(a0_1, b0_1)\n            })\n        }\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length = (self_298) -> {\n        __helios__common__length(self_298)\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head = (self_299) -> {\n        head_162 = __core__headList(self_299);\n        (callback_16) -> {\n            callback_16(__helios__string__from_data(__core__fstPair(head_162)), __module__CapoHelpers__CapoManifestEntry[]__from_data(__core__sndPair(head_162)))\n        }\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail = __core__tailList;\n    __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap = (self_300) -> {\n        () -> {\n            __module__CapoDelegateHelpers__RelativeDelegateLink[]__from_data(__helios__common__enum_field_0(self_300))\n        }\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete = (self_301) -> {\n        (key_31) -> {\n            key_32 = __helios__string____to_data(key_31);\n            recurse_107 = (recurse_106, self_302) -> {\n                __core__chooseList(self_302, () -> {\n                    self_302\n                }, () -> {\n                    head_163 = __core__headList__safe(self_302);\n                    tail_7 = __core__tailList__safe(self_302);\n                    __core__ifThenElse(\n                        __core__equalsData(key_32, __core__fstPair(head_163)),\n                        () -> {\n                            recurse_106(recurse_106, tail_7)\n                        },\n                        () -> {\n                            __core__mkCons(head_163, recurse_106(recurse_106, tail_7))\n                        }\n                    )()\n                })()\n            };\n            recurse_107(recurse_107, self_301)\n        }\n    };\n    __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq = (self_303, other_6) -> {\n        __core__equalsData(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(self_303), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____to_data(other_6))\n    };\n    __helios__option[__helios__string]__unwrap = (self_304) -> {\n        () -> {\n            __helios__string__from_data(__helios__common__enum_field_0(self_304))\n        }\n    };\n    __helios__option[__helios__bytearray]__unwrap = (self_305) -> {\n        () -> {\n            __helios__bytearray__from_data(__helios__common__enum_field_0(self_305))\n        }\n    };\n    __module__BasicDelegate__checkOneActivity_1 = (__module__BasicDelegate__checkOneActivity) -> {\n        (dgtionDatum, activity_9, __useopt__dd, dd, __useopt__baseCctx, baseCctx, __useopt__desc, desc) -> {\n            dd_1 = __core__ifThenElse(\n                __useopt__dd,\n                () -> {\n                    dd\n                },\n                () -> {\n                    __module__VestingPolicy__DelegateDatum[]__IsDelegation__dd(dgtionDatum)\n                }\n            )();\n            baseCctx_1 = __core__ifThenElse(\n                __useopt__baseCctx,\n                () -> {\n                    baseCctx\n                },\n                () -> {\n                    __module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1))\n                }\n            )();\n            desc_1 = __core__ifThenElse(\n                __useopt__desc,\n                () -> {\n                    desc\n                },\n                () -> {\n                    \"‹unspecified›\"\n                }\n            )();\n            __module__StellarHeliosHelpers__logGroup_1(__module__StellarHeliosHelpers__logGroup_1)(__helios__string____add(\"🏒 checking activity: \", desc_1), false, true, () -> {\n                result_8 = __core__ifThenElse(\n                    true,\n                    () -> {\n                        (checkNonDelegatedActivities) -> {\n                            __core__chooseUnit(__helios__assert(checkNonDelegatedActivities, \"checkNonDelegatedActivities failed\"), __module__StellarHeliosHelpers__bREQTgroup(__core__ifThenElse(\n                                __helios__bool__and(() -> {\n                                    __module__BasicDelegate__isMintDelegate\n                                }, () -> {\n                                    __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(baseCctx_1)(true, false)\n                                }),\n                                () -> {\n                                    __helios__string____add(\"mintDgt: additionalDelegateValidation in \", __module__BasicDelegate__delegateName)\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __helios__bool__and(() -> {\n                                            __module__BasicDelegate__isSpendDelegate\n                                        }, () -> {\n                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(baseCctx_1)(true, false)\n                                        }),\n                                        () -> {\n                                            __helios__string____add(\"spendDgt: additionalDelegateValidation in \", __module__BasicDelegate__delegateName)\n                                        },\n                                        () -> {\n                                            () -> {\n                                                __helios__string____add(__module__BasicDelegate__delegateName, \": additionalDelegateValidation()\")\n                                            }()\n                                        }\n                                    )()\n                                }\n                            )(), false, true, () -> {\n                                __module__VestingPolicy__DelegateActivity[]__additionalDelegateValidation(activity_9)(dgtionDatum, __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(baseCctx_1)())\n                            }))\n                        }(__cond_68 = activity_9;\n                        __core__ifThenElse(\n                            __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_68),\n                            () -> {\n                                (__lhs_0_278) -> {\n                                    activities_2 = __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities__activities(__lhs_0_278);\n                                    cctx_6 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();\n                                    actingAsMintDgt = __helios__bool__and(() -> {\n                                        __helios__bool__and(() -> {\n                                            __module__BasicDelegate__isMintDelegate\n                                        }, () -> {\n                                            __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_6)(true, false)\n                                        })\n                                    }, () -> {\n                                        __module__StellarHeliosHelpers__bREQT(\"Mint delegate: checks that all the indicated create/remove activities are valid\", false, (), false, (), false, ())\n                                    });\n                                    actingAsSpendDgt = __helios__bool__and(() -> {\n                                        __helios__bool__and(() -> {\n                                            __helios__bool__and(() -> {\n                                                __helios__bool____not(actingAsMintDgt)\n                                            }, () -> {\n                                                __module__BasicDelegate__isSpendDelegate\n                                            })\n                                        }, () -> {\n                                            __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_6)(true, false)\n                                        })\n                                    }, () -> {\n                                        __module__StellarHeliosHelpers__bREQT(\"Spend delegate: checks that all the indicated record-update activities are valid\", false, (), false, (), false, ())\n                                    });\n                                    notMintDgt = __helios__bool____not(actingAsMintDgt);\n                                    notSpendDgt = __helios__bool____not(actingAsSpendDgt);\n                                    mintDgtCheck_1 = __helios__bool__or(() -> {\n                                        notMintDgt\n                                    }, () -> {\n                                        __helios__list[__helios__data]__all(activities_2)((rawActivity) -> {\n                                            a_19 = __module__VestingPolicy__DelegateActivity[]__from_data(__module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__OtherActivities__is_valid_data_2)(rawActivity);\n                                            __core__chooseUnit(__helios__print(\"  -- mintDgt checking multi-activity\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"    -- validates nested activities: in the mint delegate, only {Create,Delete}DelegatedData activities are valid in multi-activities\", false, (), false, (), false, ()), __cond_117 = a_19;\n                                            __core__ifThenElse(\n                                                __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_117),\n                                                () -> {\n                                                    (__lhs_0_284) -> {\n                                                        __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_19, true, dd_1, true, cctx_6, true, \"one create is properly delegated\")\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_117),\n                                                        () -> {\n                                                            (__lhs_0_283) -> {\n                                                                __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_19, true, dd_1, true, cctx_6, true, \"one delete is properly delegated\")\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_117),\n                                                                () -> {\n                                                                    (__lhs_0_282) -> {\n                                                                        __helios__error(\"UpdatingDelegatedData only ok at level-1 spendDgt\")\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_117),\n                                                                        () -> {\n                                                                            (__lhs_0_281) -> {\n                                                                                __helios__error(\"multi:DelegateLifecycleActivities not ok\")\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_117),\n                                                                                () -> {\n                                                                                    (__lhs_0_280) -> {\n                                                                                        __helios__error(\"multi:CapoLifecycleActivities not ok\")\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_117),\n                                                                                        () -> {\n                                                                                            (__lhs_0_279) -> {\n                                                                                                __helios__error(\"multi:multi: nesting not ok\")\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__78) -> {\n                                                                                                __helios__error(\"multi:non-minting activities are invalid for mintDgt\")\n                                                                                            }\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()\n                                                }\n                                            )()(__cond_117)))\n                                        })\n                                    });\n                                    spendDgtCheck_1 = __helios__bool__or(() -> {\n                                        notSpendDgt\n                                    }, () -> {\n                                        __module__StellarHeliosHelpers__bREQTgroup(\"validates nested activities: in the spend delegate, only {Updating,Deleting}DelegatedData activities are valid in multi-activities\", false, true, () -> {\n                                            __helios__list[__helios__data]__all(activities_2)((rawActivity_1) -> {\n                                                a_20 = __module__VestingPolicy__DelegateActivity[]__from_data(__module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__OtherActivities__is_valid_data_2)(rawActivity_1);\n                                                __core__chooseUnit(__helios__print(\"  -- spendDgt checking multi-activity\"), __cond_118 = a_20;\n                                                __core__ifThenElse(\n                                                    __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_118),\n                                                    () -> {\n                                                        (__lhs_0_290) -> {\n                                                            __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {\n                                                                __module__BasicDelegate__isSpendDelegate\n                                                            }, () -> {\n                                                                __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_6)(false, ())\n                                                            }), \"UpdatingDelegatedData only ok at level-1 spendDgt\"), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_20, true, dd_1, true, cctx_6, true, \"one update is properly delegated\"))\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_118),\n                                                            () -> {\n                                                                (__lhs_0_289) -> {\n                                                                    __helios__error(\"CreatingDelegatedData only ok in mintDgt\")\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_118),\n                                                                    () -> {\n                                                                        (__lhs_0_288) -> {\n                                                                            __helios__error(\"TODO: validate spending the datum for burn\")\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_118),\n                                                                            () -> {\n                                                                                (__lhs_0_287) -> {\n                                                                                    __helios__error(\"multi:DelegateLifecycleActivities not ok\")\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_118),\n                                                                                    () -> {\n                                                                                        (__lhs_0_286) -> {\n                                                                                            __helios__error(\"multi:CapoLifecycleActivities not ok\")\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities____is(__cond_118),\n                                                                                            () -> {\n                                                                                                (__lhs_0_285) -> {\n                                                                                                    __helios__error(\"multi:multi: nesting not ok\")\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__79) -> {\n                                                                                                    __helios__error(\"multi: non-spending activities are invalid for spendDgt\")\n                                                                                                }\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()(__cond_118))\n                                            })\n                                        })\n                                    });\n                                    dgDataPolicyCheck = __core__ifThenElse(\n                                        __helios__bool__or(() -> {\n                                            __module__BasicDelegate__isMintDelegate\n                                        }, () -> {\n                                            __module__BasicDelegate__isSpendDelegate\n                                        }),\n                                        () -> {\n                                            __core__chooseUnit(__helios__assert(__helios__bool____not(__module__BasicDelegate__isDgDataPolicy), \"ack! mint/spend delegate can't be a delegated-data policy!\"), true)\n                                        },\n                                        () -> {\n                                            () -> {\n                                                __module__StellarHeliosHelpers__bREQTgroup(\"multi-activity: in DgDataPolicy, only Minting/Burning/Spending activities are valid\", false, true, () -> {\n                                                    __helios__list[__helios__data]__all(activities_2)((rawActivity_2) -> {\n                                                        a_21 = __module__VestingPolicy__DelegateActivity[]__from_data(__module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__OtherActivities__is_valid_data_2)(rawActivity_2);\n                                                        __cond_119 = a_21;\n                                                        __core__ifThenElse(\n                                                            __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_119),\n                                                            () -> {\n                                                                (__lhs_0_300) -> {\n                                                                    __helios__error(\"UpdatingDelegatedData only ok at level-1 spendDgt (use a SpendingActivity in dgDataPolicy)\")\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_119),\n                                                                    () -> {\n                                                                        (__lhs_0_299) -> {\n                                                                            __helios__error(\"CreatingDelegatedData only ok in mintDgt (use a MintingActivity in dgDataPolicy)\")\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_119),\n                                                                            () -> {\n                                                                                (__lhs_0_298) -> {\n                                                                                    __helios__error(\"DeletingDelegatedData only ok at mint/spend dgt (use BurningActivity in dgDataPolicy)\")\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __module__VestingPolicy__DelegateActivity[]__SpendingActivities____is(__cond_119),\n                                                                                    () -> {\n                                                                                        (__lhs_0_297) -> {\n                                                                                            __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_21, true, dd_1, true, cctx_6, true, \"biz-logic for one record update\")\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __module__VestingPolicy__DelegateActivity[]__MintingActivities____is(__cond_119),\n                                                                                            () -> {\n                                                                                                (__lhs_0_296) -> {\n                                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_21, true, dd_1, true, cctx_6, true, \"biz-logic for one record create\")\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __module__VestingPolicy__DelegateActivity[]__BurningActivities____is(__cond_119),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_295) -> {\n                                                                                                            __core__chooseUnit(__helios__assert(false, \"TODO: support multi:BurningActivities for dgDataPolicy or other delegate\"), __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_21, true, dd_1, true, cctx_6, true, \"biz-logic for one record delete\"))\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __module__VestingPolicy__DelegateActivity[]__OtherActivities____is(__cond_119),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_294) -> {\n                                                                                                                    __module__BasicDelegate__checkOneActivity(__module__BasicDelegate__checkOneActivity)(dgtionDatum, a_21, true, dd_1, true, cctx_6, true, \"biz-logic for OtherActivities \")\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_119),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_293) -> {\n                                                                                                                            __helios__error(\"multi:DelegateLifecycleActivities not ok\")\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_119),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_292) -> {\n                                                                                                                                    __helios__error(\"multi:CapoLifecycleActivities not ok\")\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_291) -> {\n                                                                                                                                    __helios__error(\"multi:multi: nesting not ok\")\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()(__cond_119)\n                                                    })\n                                                })\n                                            }()\n                                        }\n                                    )();\n                                    __helios__bool__and(() -> {\n                                        __helios__bool__and(() -> {\n                                            mintDgtCheck_1\n                                        }, () -> {\n                                            spendDgtCheck_1\n                                        })\n                                    }, () -> {\n                                        dgDataPolicyCheck\n                                    })\n                                }\n                            },\n                            () -> {\n                                __core__ifThenElse(\n                                    __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_68),\n                                    () -> {\n                                        (__lhs_0_272) -> {\n                                            innerActivity = __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities__activity(__lhs_0_272);\n                                            __cond_115 = innerActivity;\n                                            __core__ifThenElse(\n                                                __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe____is(__cond_115),\n                                                () -> {\n                                                    (__lhs_0_276) -> {\n                                                        seed_9 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__seed(__lhs_0_276);\n                                                        purpose_7 = __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__ReplacingMe__purpose(__lhs_0_276);\n                                                        BURNED = __helios__int____neg(1);\n                                                        otherMintedValue_2 = __helios__value__new(__helios__assetclass__new(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), __module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_1)), BURNED);\n                                                        tnStr_3 = __helios__bytearray__decode_utf8_safe(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_1))();\n                                                        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"checking ReplacingMe on \", purpose_7), \": \"), tnStr_3)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"needs the charter to be approving the the new mint-delegate\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"  ^^^ should queue the new delegate in pendingChanges\"), cctx_5 = __module__CapoHelpers__CapoCtx[]__withCharterInput_1(baseCctx_1)();\n                                                        (isUpdatingCharter) -> {\n                                                            isMintingOk = __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_9, __core__mkCons(__helios__string____to_data(purpose_7), __core__mkNilData(())), false, (), false, (), true, otherMintedValue_2, true, false, true, false, false, ());\n                                                            __helios__bool__and(() -> {\n                                                                isMintingOk\n                                                            }, () -> {\n                                                                isUpdatingCharter\n                                                            })\n                                                        }(__cond_116 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_5)();\n                                                        __core__ifThenElse(\n                                                            __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_116),\n                                                            () -> {\n                                                                (__lhs_0_277) -> {\n                                                                    true\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                (__77) -> {\n                                                                    false\n                                                                }\n                                                            }\n                                                        )()(__cond_116)))))\n                                                    }\n                                                },\n                                                () -> {\n                                                    __core__ifThenElse(\n                                                        __module__CapoDelegateHelpers__DelegateLifecycleActivity[]__Retiring____is(__cond_115),\n                                                        () -> {\n                                                            (__lhs_0_275) -> {\n                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... Retiring delegate authority token\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"   -- must burn the indicated authority token\", false, (), false, (), false, ()), __helios__int____eq(__helios__value__get(__helios__tx__minted(__helios__scriptcontext__tx))(__module__CapoDelegateHelpers__DelegationDetail[]__acAuthorityToken(dd_1)()), __helios__int____neg(1))))\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            (__lhs_0_273) -> {\n                                                                __lhs_0_274 = __helios__common__assert_constr_index(__module__CapoHelpers__getTxCharterData(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), false, ()), 0);\n                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"import settings from delegate and validate them\"), __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {\n                                                                    false\n                                                                }, () -> {\n                                                                    true\n                                                                }), \"ValidateSettings temporarily disabled\"), false))\n                                                            }\n                                                        }\n                                                    )()\n                                                }\n                                            )()(__cond_115)\n                                        }\n                                    },\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_68),\n                                            () -> {\n                                                (__lhs_0_173) -> {\n                                                    dCLA = __module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities__activity(__lhs_0_173);\n                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... with any CapoLifecycle activity: \", false, (), false, (), false, ()), cctx_4 = __module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(__module__CapoHelpers__CapoCtx[]__withCharterInput_1(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))())();\n                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires the Capo's CharterData activity to match this delegate's activity\", false, (), false, (), false, ()), __core__chooseUnit(__cond_113 = __module__CapoHelpers__CapoCtx[]__getCharterRedeemer(cctx_4)();\n                                                    __core__ifThenElse(\n                                                        __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity____is(__cond_113),\n                                                        () -> {\n                                                            (__lhs_0_271) -> {\n                                                                cCLA = __module__CapoHelpers__CapoActivity[]__capoLifecycleActivity__activity(__lhs_0_271);\n                                                                __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__CapoLifecycleActivity[]____eq(cCLA, dCLA), \"activity mismatch with Capo's CharterData activity\"), __helios__print(\"  -- ok, CharterData capoLifecycleActivity matches ours\n\"))\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__CapoHelpers__CapoActivity[]__updatingCharter____is(__cond_113),\n                                                                () -> {\n                                                                    (__lhs_0_269) -> {\n                                                                        __cond_114 = dCLA;\n                                                                        __core__ifThenElse(\n                                                                            __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_114),\n                                                                            () -> {\n                                                                                (__lhs_0_270) -> {\n                                                                                    __helios__print(\"ok, Capo:updatingCharter works for now with CreatingDelegate\n\")\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__76) -> {\n                                                                                    __helios__error(\"when Capo is UpdatingCharter, the mintDelegate must be CreatingDelegate\")\n                                                                                }\n                                                                            }\n                                                                        )()(__cond_114)\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    (__75) -> {\n                                                                        __helios__error(\"this activity must match the capo's own CharterData activity\")\n                                                                    }\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()(__cond_113), neededRole = __module__CapoHelpers__CapoCtx[]__dgtRolesForLifecycleActivity(cctx_4)(dCLA);\n                                                    (myCurrentRole) -> {\n                                                        __helios__bool__and(() -> {\n                                                            __cond_70 = dCLA;\n                                                            __core__ifThenElse(\n                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate____is(__cond_70),\n                                                                () -> {\n                                                                    (__lhs_0_265) -> {\n                                                                        seed_8 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__seed(__lhs_0_265);\n                                                                        purpose_6 = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__CreatingDelegate__purpose(__lhs_0_265);\n                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"XXX it should output the new delegate token to the Capo as a PendingDelegate datum\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... here in the MintDgt: validates creation of UUT for the new delegate, aligned to the purpose indicated\", false, (), false, (), false, ()), mkTn_1 = __module__CapoMintHelpers__mkUutTnFactory(seed_8);\n                                                                        __cond_111 = myCurrentRole;\n                                                                        __core__ifThenElse(\n                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_111),\n                                                                            () -> {\n                                                                                (__lhs_0_266) -> {\n                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"validates the new delegate's UUT is minted\", false, (), false, (), false, ()), __core__chooseUnit(__core__ifThenElse(\n                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_8, __core__mkCons(__helios__string____to_data(purpose_6), __core__mkNilData(())), true, mkTn_1, false, (), false, (), true, false, false, (), false, ()),\n                                                                                        () -> {\n                                                                                            __helios__print(\"  -- ok, minted the new delegate's UUT\n\")\n                                                                                        },\n                                                                                        () -> {\n                                                                                            () -> {\n                                                                                                ()\n                                                                                            }()\n                                                                                        }\n                                                                                    )(), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the UUT must have the right disposition (is it checked somewhere else?!?)\", false, (), false, (), false, ()), __cond_112 = __helios__map[__helios__string@__module__CapoDelegateHelpers__RelativeDelegateLink[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__otherNamedDelegates(__module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__address_3)(cctx_4)()))(purpose_6);\n                                                                                    __core__ifThenElse(\n                                                                                        __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_112),\n                                                                                        () -> {\n                                                                                            (__lhs_0_268) -> {\n                                                                                                __helios__error(\"the new delegate is not present in the Capo's named-delegates list\")\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            (__lhs_0_267) -> {\n                                                                                                dgtLink_3 = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_267);\n                                                                                                __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_3), mkTn_1(purpose_6)), \"uutName mismatch\"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_3)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()))\n                                                                                            }\n                                                                                        }\n                                                                                    )()(__cond_112))))\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                (__74) -> {\n                                                                                    __helios__error(\"unreachable wrong role for CreatingDelegate\")\n                                                                                }\n                                                                            }\n                                                                        )()(__cond_111)))\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__queuePendingChange____is(__cond_70),\n                                                                        () -> {\n                                                                            (__lhs_0_213) -> {\n                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... for the addingPendingDgt activity:\", false, (), false, (), false, ()), charterData_4 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_9(cctx_4)(), 0);\n                                                                                nextCharterData_2 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__address_3)(cctx_4)();\n                                                                                oldPendingChanges = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4);\n                                                                                nextChangeList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_2);\n                                                                                newChange = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__head(nextChangeList);\n                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"support otherManifestChange here\"), __lhs_0_214 = __helios__common__assert_constr_index(newChange, 0);\n                                                                                __lhs_0_0_2 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_214);\n                                                                                action = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(__lhs_0_0_2);\n                                                                                role_2 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_2);\n                                                                                OdgtLink = __module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(__lhs_0_0_2);\n                                                                                (newDgtRoleName) -> {\n                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQTgroupUnit(\"The new pending-delegate action must be found at the head of the new change-list\", false, true, () -> {\n                                                                                        __cond_109 = action;\n                                                                                        __core__ifThenElse(\n                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_109),\n                                                                                            () -> {\n                                                                                                (__lhs_0_263) -> {\n                                                                                                    __core__chooseUnit(__helios__print(\"   -- another delegate-role check would be redundant.\"), __cond_110 = myCurrentRole;\n                                                                                                    __core__ifThenElse(\n                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_110),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_264) -> {\n                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"verifies that the delegate queued for removal is present in the Capo's charterData\", false, (), false, (), false, ()), __helios__error(\"implement me\"))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__73) -> {\n                                                                                                                __helios__error(\"unreachable\")\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()(__cond_110))\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__72) -> {\n                                                                                                    __helios__assert(true, \"no way l\")\n                                                                                                }\n                                                                                            }\n                                                                                        )()(__cond_109)\n                                                                                    }), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the remainder of the change-list should be unchanged\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__tail(nextChangeList), oldPendingChanges), \"invalid update of pendingChanges; the new action must be prepended to the existing list.\"), __cond_108 = action;\n                                                                                    __core__ifThenElse(\n                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_108),\n                                                                                        () -> {\n                                                                                            (__lhs_0_262) -> {\n                                                                                                __helios__error(\"unreachable\")\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_108),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_261) -> {\n                                                                                                        seed_7 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__seed(__lhs_0_261);\n                                                                                                        purpose_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__purpose(__lhs_0_261);\n                                                                                                        idPrefix_9 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_261);\n                                                                                                        (callback_20) -> {\n                                                                                                            callback_20(seed_7, purpose_5, idPrefix_9)\n                                                                                                        }\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    (__lhs_0_260) -> {\n                                                                                                        seed_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__seed(__lhs_0_260);\n                                                                                                        purpose_4 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__purpose(__lhs_0_260);\n                                                                                                        idPrefix_8 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_260);\n                                                                                                        (callback_19) -> {\n                                                                                                            callback_19(seed_6, purpose_4, idPrefix_8)\n                                                                                                        }\n                                                                                                    }\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()(__cond_108)((seed_5, purpose_3, pendingActionIdPrefix) -> {\n                                                                                        (possibleMintDgtVerifications) -> {\n                                                                                            (otherPossibleVerifications) -> {\n                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"TEMPORARY: only one pending change is allowed\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(oldPendingChanges), 0), \"only one pending change is allowed for now (avoids resource-exhaustion)\"), __helios__bool__and(() -> {\n                                                                                                    __helios__bool__and(() -> {\n                                                                                                        true\n                                                                                                    }, () -> {\n                                                                                                        possibleMintDgtVerifications\n                                                                                                    })\n                                                                                                }, () -> {\n                                                                                                    otherPossibleVerifications\n                                                                                                })))\n                                                                                            }(__cond_97 = myCurrentRole;\n                                                                                            __core__ifThenElse(\n                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_97),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_259) -> {\n                                                                                                        __helios__error(__helios__string____add(__helios__string____add(\"this block had been run by spendDgt, but\n\", \"... it's much cheaper to let the MintDgt do it ...\n\"), \"... since it's already involved anyway\"))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_97),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_233) -> {\n                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't allow a queued change to duplicate any other pending entry for the same delegate name\", false, (), false, (), false, ()), isNotADuplicate = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__all(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(charterData_4))((pdChange_2) -> {\n                                                                                                                    __cond_98 = pdChange_2;\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_98),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_234) -> {\n                                                                                                                                __lhs_0_0_3 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_234);\n                                                                                                                                pendingRole = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(__lhs_0_0_3);\n                                                                                                                                __cond_99 = pendingRole;\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_99),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_235) -> {\n                                                                                                                                            changingDgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_235);\n                                                                                                                                            __helios__string____neq(changingDgtName, newDgtRoleName)\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__66) -> {\n                                                                                                                                            __helios__error(\"only DgDataPolicy is yet supported in queuePendingChange\")\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(__cond_99)\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__65) -> {\n                                                                                                                                __helios__error(\"otherManifestChange not yet supported\")\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(__cond_98)\n                                                                                                                });\n                                                                                                                __core__chooseUnit(__helios__assert(isNotADuplicate, __helios__string____add(\"already has a pending change for this delegate: \", newDgtRoleName)), existingRoleEntryMaybe = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);\n                                                                                                                (possibleReplacementIsCorrect) -> {\n                                                                                                                    __helios__bool__and(() -> {\n                                                                                                                        __helios__bool__and(() -> {\n                                                                                                                            true\n                                                                                                                        }, () -> {\n                                                                                                                            isNotADuplicate\n                                                                                                                        })\n                                                                                                                    }, () -> {\n                                                                                                                        possibleReplacementIsCorrect\n                                                                                                                    })\n                                                                                                                }(__cond_100 = action;\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_100),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_257) -> {\n                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't allow an Add for an existing policy name\", false, (), false, (), false, ()), __core__chooseUnit(__cond_107 = existingRoleEntryMaybe;\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_107),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_258) -> {\n                                                                                                                                        __helios__error(__helios__string____add(\"queuing Add failed: already has a delegate for policy name: \", newDgtRoleName))\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__71) -> {\n                                                                                                                                        ()\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(__cond_107), true))\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_100),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_238) -> {\n                                                                                                                                    replacesDgt = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__replacesDgt(__lhs_0_238);\n                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"For Replace on an existing delegate... \", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- Replace: invariants cannot be replaced\", false, (), false, (), false, ()), __core__chooseUnit(__cond_106 = role_2;\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_106),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_256) -> {\n                                                                                                                                                __helios__error(\"cannot Replace role: MintInvariant\")\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_106),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_255) -> {\n                                                                                                                                                        __helios__error(\"cannot Replace role: SpendInvariant\")\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_106),\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__lhs_0_254) -> {\n                                                                                                                                                                __helios__error(\"HandledByCapoOnly role is not applicable in delegate context\")\n                                                                                                                                                            }\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__70) -> {\n                                                                                                                                                                __helios__print(\"  -- ok (not trying to replace an invariant)\")\n                                                                                                                                                            }\n                                                                                                                                                        }\n                                                                                                                                                    )()\n                                                                                                                                                }\n                                                                                                                                            )()\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_106), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- doesn't allow a Replace if the policy-name doesn't already exist\", false, (), false, (), false, ()), (existingDgtLink_1) -> {\n                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- Replace: the PendingDelegateAction's role + replacesDgt must match the existing delegate's authority token\", false, (), false, (), false, ()), (existingDgTkn) -> {\n                                                                                                                                            __core__chooseUnit(__helios__assert(__helios__assetclass____eq(replacesDgt, __helios__option[__helios__assetclass]__unwrap(existingDgTkn)()), __helios__string____add(__helios__string____add(__helios__string____add(\"the current \", __cond_105 = role_2;\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_105),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_253) -> {\n                                                                                                                                                        \"mint\"\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_105),\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__lhs_0_252) -> {\n                                                                                                                                                                \"spend\"\n                                                                                                                                                            }\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_105),\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__lhs_0_251) -> {\n                                                                                                                                                                        \"dgDataPolicy\"\n                                                                                                                                                                    }\n                                                                                                                                                                },\n                                                                                                                                                                () -> {\n                                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_105),\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            (__lhs_0_250) -> {\n                                                                                                                                                                                \"named\"\n                                                                                                                                                                            }\n                                                                                                                                                                        },\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            (__69) -> {\n                                                                                                                                                                                \"‹incontheeiieivable›\"\n                                                                                                                                                                            }\n                                                                                                                                                                        }\n                                                                                                                                                                    )()\n                                                                                                                                                                }\n                                                                                                                                                            )()\n                                                                                                                                                        }\n                                                                                                                                                    )()\n                                                                                                                                                }\n                                                                                                                                            )()(__cond_105)), \" delegate's authority token doesn't match the queued action's token name \"), __helios__assetclass__show(replacesDgt)())), true)\n                                                                                                                                        }(__cond_104 = role_2;\n                                                                                                                                        __core__ifThenElse(\n                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_104),\n                                                                                                                                            () -> {\n                                                                                                                                                (__lhs_0_249) -> {\n                                                                                                                                                    __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__mintDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))\n                                                                                                                                                }\n                                                                                                                                            },\n                                                                                                                                            () -> {\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_104),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_248) -> {\n                                                                                                                                                            __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(__module__CapoHelpers__CapoDatum[]__CharterData__spendDelegateLink(charterData_4))(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1)))\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_104),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_247) -> {\n                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- Replace: dgDataPolicy: the named policy must be present in the Capo manifest\", false, (), false, (), false, ()), __helios__option[__helios__assetclass]__some____new(__module__CapoDelegateHelpers__RelativeDelegateLink[]__acAuthorityToken(existingDgtLink_1)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1))))\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_104),\n                                                                                                                                                                    () -> {\n                                                                                                                                                                        (__lhs_0_246) -> {\n                                                                                                                                                                            __helios__error(\"unreachable: OtherNamedDgt deprecated\")\n                                                                                                                                                                        }\n                                                                                                                                                                    },\n                                                                                                                                                                    () -> {\n                                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_104),\n                                                                                                                                                                            () -> {\n                                                                                                                                                                                (__lhs_0_245) -> {\n                                                                                                                                                                                    __helios__error(\"DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity\")\n                                                                                                                                                                                }\n                                                                                                                                                                            },\n                                                                                                                                                                            () -> {\n                                                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_104),\n                                                                                                                                                                                    () -> {\n                                                                                                                                                                                        (__lhs_0_244) -> {\n                                                                                                                                                                                            __helios__error(\"unreachable\")\n                                                                                                                                                                                        }\n                                                                                                                                                                                    },\n                                                                                                                                                                                    () -> {\n                                                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_104),\n                                                                                                                                                                                            () -> {\n                                                                                                                                                                                                (__lhs_0_243) -> {\n                                                                                                                                                                                                    __helios__error(\"unreachable\")\n                                                                                                                                                                                                }\n                                                                                                                                                                                            },\n                                                                                                                                                                                            () -> {\n                                                                                                                                                                                                (__lhs_0_242) -> {\n                                                                                                                                                                                                    __helios__error(\"unreachable\")\n                                                                                                                                                                                                }\n                                                                                                                                                                                            }\n                                                                                                                                                                                        )()\n                                                                                                                                                                                    }\n                                                                                                                                                                                )()\n                                                                                                                                                                            }\n                                                                                                                                                                        )()\n                                                                                                                                                                    }\n                                                                                                                                                                )()\n                                                                                                                                                            }\n                                                                                                                                                        )()\n                                                                                                                                                    }\n                                                                                                                                                )()\n                                                                                                                                            }\n                                                                                                                                        )()(__cond_104)))\n                                                                                                                                    }(__cond_102 = existingRoleEntryMaybe;\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_102),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_241) -> {\n                                                                                                                                                __helios__error(__helios__string____add(\"queuing Replace failed: the policy-name doesn't exist: \", newDgtRoleName))\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_239) -> {\n                                                                                                                                                __lhs_0_0_4 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_239);\n                                                                                                                                                entryType_2 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_4);\n                                                                                                                                                __cond_103 = entryType_2;\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_103),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_240) -> {\n                                                                                                                                                            existingDgtLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_240);\n                                                                                                                                                            existingDgtLink\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__68) -> {\n                                                                                                                                                            __helios__error(__helios__string____add(__helios__string____add(\"invalid Replace; the matching manifest entry for '\", newDgtRoleName), \"' isn't a DgDataPolicy.\"))\n                                                                                                                                                        }\n                                                                                                                                                    }\n                                                                                                                                                )()(__cond_103)\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_102))))))\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_236) -> {\n                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't allow a Remove if the policy-name doesn't already exist\", false, (), false, (), false, ()), __core__chooseUnit(__cond_101 = existingRoleEntryMaybe;\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_101),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_237) -> {\n                                                                                                                                                __helios__error(__helios__string____add(\"queuing Remove failed: the policy-name doesn't exist: \", newDgtRoleName))\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__67) -> {\n                                                                                                                                                ()\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_101), __helios__error(\"unreachable: Remove not yet supported\")))\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()(__cond_100))))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__64) -> {\n                                                                                                                __helios__error(\"unreachable\")\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()(__cond_97))\n                                                                                        }(__cond_90 = myCurrentRole;\n                                                                                        __core__ifThenElse(\n                                                                                            __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_90),\n                                                                                            () -> {\n                                                                                                (__lhs_0_232) -> {\n                                                                                                    true\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_90),\n                                                                                                    () -> {\n                                                                                                        (__lhs_0_216) -> {\n                                                                                                            __helios__bool__and(() -> {\n                                                                                                                __module__StellarHeliosHelpers__bREQT(\"(general) the mintDgt checks everything about the mint\", false, (), false, (), false, ())\n                                                                                                            }, () -> {\n                                                                                                                __cond_91 = action;\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_91),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_224) -> {\n                                                                                                                            __core__chooseUnit(__cond_96 = role_2;\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_96),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_231) -> {\n                                                                                                                                        __helios__error(\"cannot Remove role: MintDgt\")\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_96),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_230) -> {\n                                                                                                                                                __helios__error(\"cannot Remove role: SpendDgt\")\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintInvariant____is(__cond_96),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_229) -> {\n                                                                                                                                                        __helios__error(\"cannot Remove role: MintInvariant\")\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendInvariant____is(__cond_96),\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__lhs_0_228) -> {\n                                                                                                                                                                __helios__error(\"cannot Remove role: SpendInvariant\")\n                                                                                                                                                            }\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_96),\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__lhs_0_227) -> {\n                                                                                                                                                                        __helios__assert(false, \"todo\")\n                                                                                                                                                                    }\n                                                                                                                                                                },\n                                                                                                                                                                () -> {\n                                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__OtherNamedDgt____is(__cond_96),\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            (__lhs_0_226) -> {\n                                                                                                                                                                                __helios__assert(false, \"todo\")\n                                                                                                                                                                            }\n                                                                                                                                                                        },\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_96),\n                                                                                                                                                                                () -> {\n                                                                                                                                                                                    (__lhs_0_225) -> {\n                                                                                                                                                                                        __helios__error(\"DelegateRole::BothMintAndSpend not applicable in queuePendingChange activity\")\n                                                                                                                                                                                    }\n                                                                                                                                                                                },\n                                                                                                                                                                                () -> {\n                                                                                                                                                                                    (__63) -> {\n                                                                                                                                                                                        ()\n                                                                                                                                                                                    }\n                                                                                                                                                                                }\n                                                                                                                                                                            )()\n                                                                                                                                                                        }\n                                                                                                                                                                    )()\n                                                                                                                                                                }\n                                                                                                                                                            )()\n                                                                                                                                                        }\n                                                                                                                                                    )()\n                                                                                                                                                }\n                                                                                                                                            )()\n                                                                                                                                        }\n                                                                                                                                    )()\n                                                                                                                                }\n                                                                                                                            )()(__cond_96), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't allow a Remove to duplicate an Add or Replace or Remove entry\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"^^^\"), __core__chooseUnit(__helios__assert(false, \"what else should be checked here?\"), false))))\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        (__60) -> {\n                                                                                                                            __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                false,\n                                                                                                                                () -> {\n                                                                                                                                    __helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(false, ()), \"<----- that can fail, this can't\")\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    () -> {\n                                                                                                                                        ()\n                                                                                                                                    }()\n                                                                                                                                }\n                                                                                                                            )(), mkTokenName_2 = __module__CapoMintHelpers__mkUutTnFactory(seed_5);\n                                                                                                                            dgTknName = mkTokenName_2(purpose_3);\n                                                                                                                            mintedDgTkn = __helios__bool__and(() -> {\n                                                                                                                                __module__StellarHeliosHelpers__bREQT(\"the new delegate is created with the indicated authority token\", false, (), false, (), false, ())\n                                                                                                                            }, () -> {\n                                                                                                                                __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_5, __core__mkCons(__helios__string____to_data(purpose_3), __core__mkNilData(())), true, __module__CapoMintHelpers__mkUutTnFactory(seed_5), false, (), false, (), true, false, false, (), false, ())\n                                                                                                                            });\n                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"The new policy-token must match the seed\", false, (), false, (), false, ()), (dgtLink_2) -> {\n                                                                                                                                __core__chooseUnit(__helios__assert(__helios__string____eq(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2), dgTknName), __helios__string____add(__helios__string____add(__helios__string____add(\"uutName mismatch; expected \", dgTknName), \" but found \"), __module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(dgtLink_2))), delegateTakesOwnership = __module__StellarHeliosHelpers__bREQT(\"the new policy-delegate-script must take ownership of the dgTkn\", true, __module__CapoDelegateHelpers__RelativeDelegateLink[]__hasValidOutput_1(dgtLink_2)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), true, true, true, __module__CapoDelegateHelpers__DgTknDisposition[]__Created____new()), false, (), false, ());\n                                                                                                                                (possibleExtraReplacementCheck) -> {\n                                                                                                                                    __helios__bool__and(() -> {\n                                                                                                                                        __helios__bool__and(() -> {\n                                                                                                                                            mintedDgTkn\n                                                                                                                                        }, () -> {\n                                                                                                                                            delegateTakesOwnership\n                                                                                                                                        })\n                                                                                                                                    }, () -> {\n                                                                                                                                        possibleExtraReplacementCheck\n                                                                                                                                    })\n                                                                                                                                }(__cond_93 = action;\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_93),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_219) -> {\n                                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"Replace: the queued change must match the idPrefix of the current delegate \", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"VALIDATE this through a unit-test ^\"), __core__chooseUnit(__cond_94 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_4))(newDgtRoleName);\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_94),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_221) -> {\n                                                                                                                                                        dde = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_221);\n                                                                                                                                                        __lhs_0_222 = dde;\n                                                                                                                                                        entryType_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_222);\n                                                                                                                                                        __cond_95 = entryType_1;\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy____is(__cond_95),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_223) -> {\n                                                                                                                                                                    idPrefix_7 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_223);\n                                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"expects the queued idPrefix to match the existing policy's idPrefix\", false, (), false, (), false, ()), __core__chooseUnit(__helios__print(__helios__string____add(\"   -- expected: \", idPrefix_7)), __core__chooseUnit(__helios__print(__helios__string____add(\"   --   actual: \", pendingActionIdPrefix)), __helios__assert(__helios__string____eq(idPrefix_7, pendingActionIdPrefix), \"idPrefix mismatch\"))))\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__62) -> {\n                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add(\"invalid Replace; the matching manifest entry for '\", newDgtRoleName), \"' isn't a DgDataPolicy.\"))\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()(__cond_95)\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_220) -> {\n                                                                                                                                                        __helios__error(__helios__string____add(\"no existing dgDataPolicy found with key: \", newDgtRoleName))\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            )()(__cond_94), true)))\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__61) -> {\n                                                                                                                                            true\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(__cond_93)))\n                                                                                                                            }(__cond_92 = OdgtLink;\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__none____is(__cond_92),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_218) -> {\n                                                                                                                                        __helios__error(\"missing required delegate link in pending dgt change\")\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_217) -> {\n                                                                                                                                        dl = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__some__some(__lhs_0_217);\n                                                                                                                                        dl\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(__cond_92))))\n                                                                                                                        }\n                                                                                                                    }\n                                                                                                                )()(__cond_91)\n                                                                                                            })\n                                                                                                        }\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        (__59) -> {\n                                                                                                            __helios__error(\"unreachable\")\n                                                                                                        }\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )()(__cond_90))\n                                                                                    }))))\n                                                                                }(__cond_89 = role_2;\n                                                                                __core__ifThenElse(\n                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_89),\n                                                                                    () -> {\n                                                                                        (__lhs_0_215) -> {\n                                                                                            dgtName = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_215);\n                                                                                            dgtName\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        (__58) -> {\n                                                                                            __helios__error(\"only DgDataPolicy is yet supported in queuePendingChange\")\n                                                                                        }\n                                                                                    }\n                                                                                )()(__cond_89))))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__removePendingChange____is(__cond_70),\n                                                                                () -> {\n                                                                                    (__lhs_0_212) -> {\n                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"implement removePendDgt\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"allows the removal of a queued pending-delegate-change that can't be completed\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(false, \"not yet implemented\"), false)))\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    __core__ifThenElse(\n                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__commitPendingChanges____is(__cond_70),\n                                                                                        () -> {\n                                                                                            (__lhs_0_189) -> {\n                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... To commit pending changes:\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"invariants cannot be replaced\", false, (), false, (), false, ()), pendingChangesList = __module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(__module__CapoHelpers__CapoCtx[]__getCharterData_9(cctx_4)());\n                                                                                                previousManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(__module__CapoHelpers__CapoCtx[]__getCharterData_9(cctx_4)());\n                                                                                                nextCharterData_1 = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__address_3)(cctx_4)();\n                                                                                                nextManifest = __module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData_1);\n                                                                                                __core__chooseUnit(__helios__assert(__helios__bool__and(() -> {\n                                                                                                    __module__StellarHeliosHelpers__bREQT(\"the next-changes list must be empty\", false, (), false, (), false, ())\n                                                                                                }, () -> {\n                                                                                                    __helios__int____eq(__helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__length(__module__CapoHelpers__CapoDatum[]__CharterData__pendingChanges(nextCharterData_1)), 0)\n                                                                                                }), \"pendingChanges must be emptied\"), spendDgtCheck = __core__ifThenElse(\n                                                                                                    __helios__bool____not(__module__BasicDelegate__isSpendDelegate),\n                                                                                                    () -> {\n                                                                                                        true\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        () -> {\n                                                                                                            __core__ifThenElse(\n                                                                                                                __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(true, false)),\n                                                                                                                () -> {\n                                                                                                                    true\n                                                                                                                },\n                                                                                                                () -> {\n                                                                                                                    () -> {\n                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"...spendDgt: validates that all the pending delegates are installed\", false, (), false, (), false, ()), __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold2[__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]@__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]](pendingChangesList)((prevManifestRemainder_1, nextCMEs, pcChange) -> {\n                                                                                                                            (pdChange) -> {\n                                                                                                                                (pendingTypeName) -> {\n                                                                                                                                    __core__chooseUnit(__cond_78 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Remove____is(__cond_78),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_198) -> {\n                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- Remove: verifies that the delegate queued for removal is now removed from the Capo manifest\", false, (), false, (), false, ()), __cond_81 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(nextCMEs)(pendingTypeName);\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_81),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_199) -> {\n                                                                                                                                                            __helios__error(__helios__string____add(\"queued Remove failed: name still present in next-manifest item: \", pendingTypeName))\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__54) -> {\n                                                                                                                                                            ()\n                                                                                                                                                        }\n                                                                                                                                                    }\n                                                                                                                                                )()(__cond_81))\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__51) -> {\n                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"   -- verifies that added & replaced entries are present in the updated map (at its next position)\", false, (), false, (), false, ()), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                    __helios__int____eq(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__length(nextCMEs), 0),\n                                                                                                                                                    () -> {\n                                                                                                                                                        __helios__error(\"queued Add/Replace failed: no more items in next-manifest map\")\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        () -> {\n                                                                                                                                                            ()\n                                                                                                                                                        }()\n                                                                                                                                                    }\n                                                                                                                                                )(), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__head(nextCMEs)((CME_key, __lhs_1) -> {\n                                                                                                                                                    ME_type = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_1);\n                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add(\"vv @CME entry: \", CME_key)), __lhs_0_194 = __helios__common__assert_constr_index(ME_type, 1);\n                                                                                                                                                    ME_policyLink = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__policyLink(__lhs_0_194);\n                                                                                                                                                    ME_idPrefix = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__idPrefix(__lhs_0_194);\n                                                                                                                                                    refCount = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_194);\n                                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"support minting multiple threads of a dgDataPolicy\"), __core__chooseUnit(__helios__assert(__helios__int____eq(refCount, 1), \"refCount must be 1 when adding a new dgDataPolicy\"), __core__chooseUnit(__helios__assert(__helios__string____eq(pendingTypeName, CME_key), \"queued change: name mismatch with next-manifest item\"), ME_name = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(ME_policyLink))();\n                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add(\"    -- ME policy link \", ME_name)), pendingLink = __helios__option[__module__CapoDelegateHelpers__RelativeDelegateLink[]]__unwrap(__module__CapoDelegateHelpers__PendingDelegateChange[]__dgtLink(pdChange))();\n                                                                                                                                                    pendingName = __helios__string__show(__module__CapoDelegateHelpers__RelativeDelegateLink[]__uutName(pendingLink))();\n                                                                                                                                                    __core__chooseUnit(__helios__print(__helios__string____add(\"    -- pdChange policy link \", pendingName)), __core__chooseUnit(__helios__assert(__module__CapoDelegateHelpers__RelativeDelegateLink[]____eq(ME_policyLink, pendingLink), \"queued change: policyLink mismatch with next-manifest item\"), (nextIdPrefix) -> {\n                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"    -- @each manifest entry: next-manifest's idPrefix must match the queued change\", false, (), false, (), false, ()), __helios__assert(__helios__string____eq(nextIdPrefix, ME_idPrefix), \"idPrefix mismatch with next-manifest's dgDataPolicy\"))\n                                                                                                                                                    }(__cond_79 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);\n                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace____is(__cond_79),\n                                                                                                                                                        () -> {\n                                                                                                                                                            (__lhs_0_196) -> {\n                                                                                                                                                                idPrefix_6 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Replace__idPrefix(__lhs_0_196);\n                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"    -- Replace: verifies that the next-manifest no longer has the replaced entry\", false, (), false, (), false, ()), __core__chooseUnit(__cond_80 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))(pendingTypeName);\n                                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                                    __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some____is(__cond_80),\n                                                                                                                                                                    () -> {\n                                                                                                                                                                        (__lhs_0_197) -> {\n                                                                                                                                                                            __helios__error(__helios__string____add(\"queued Replace failed: duplicate name remaining in next-manifest map: \", pendingTypeName))\n                                                                                                                                                                        }\n                                                                                                                                                                    },\n                                                                                                                                                                    () -> {\n                                                                                                                                                                        (__53) -> {\n                                                                                                                                                                            ()\n                                                                                                                                                                        }\n                                                                                                                                                                    }\n                                                                                                                                                                )()(__cond_80), idPrefix_6))\n                                                                                                                                                            }\n                                                                                                                                                        },\n                                                                                                                                                        () -> {\n                                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_79),\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__lhs_0_195) -> {\n                                                                                                                                                                        idPrefix_5 = __module__CapoDelegateHelpers__PendingDelegateAction[]__Add__idPrefix(__lhs_0_195);\n                                                                                                                                                                        idPrefix_5\n                                                                                                                                                                    }\n                                                                                                                                                                },\n                                                                                                                                                                () -> {\n                                                                                                                                                                    (__52) -> {\n                                                                                                                                                                        __helios__error(\"unreachable\")\n                                                                                                                                                                    }\n                                                                                                                                                                }\n                                                                                                                                                            )()\n                                                                                                                                                        }\n                                                                                                                                                    )()(__cond_79)))))))))\n                                                                                                                                                })))\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_78), __cond_77 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange);\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_77),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_193) -> {\n                                                                                                                                                (callback_18) -> {\n                                                                                                                                                    callback_18(prevManifestRemainder_1, __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))\n                                                                                                                                                }\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__50) -> {\n                                                                                                                                                (callback_17) -> {\n                                                                                                                                                    callback_17(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(prevManifestRemainder_1)(pendingTypeName), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__tail(nextCMEs))\n                                                                                                                                                }\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_77))\n                                                                                                                                }(__cond_76 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_76),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_192) -> {\n                                                                                                                                            typeName_4 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_192);\n                                                                                                                                            __core__chooseUnit(__helios__print(\"  -- ok: DgDataPolicy in commitPendingChanges\"), typeName_4)\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__49) -> {\n                                                                                                                                            __helios__error(\"invalid delegate-change role (for now) in commitPendingChanges\")\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(__cond_76))\n                                                                                                                            }(__cond_75 = pcChange;\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_75),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_191) -> {\n                                                                                                                                        dgtChange = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_191);\n                                                                                                                                        dgtChange\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_190) -> {\n                                                                                                                                        __helios__error(\"otherManifestChange not yet supported\")\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(__cond_75))\n                                                                                                                        }, previousManifest, nextManifest)((prevManifestRemainder, nextManifestRemainder) -> {\n                                                                                                                            __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(nextManifestRemainder, prevManifestRemainder)\n                                                                                                                        }))\n                                                                                                                    }()\n                                                                                                                }\n                                                                                                            )()\n                                                                                                        }()\n                                                                                                    }\n                                                                                                )();\n                                                                                                mintDgtCheck = __core__ifThenElse(\n                                                                                                    __helios__bool____not(__module__BasicDelegate__isMintDelegate),\n                                                                                                    () -> {\n                                                                                                        true\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        __core__ifThenElse(\n                                                                                                            __helios__bool____not(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(true, false)),\n                                                                                                            () -> {\n                                                                                                                true\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                () -> {\n                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... mintDgt: validates that all the removed dgTkns are burned\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the txn must have all the expected burns\", false, (), false, (), false, ()), mint = __helios__value__to_map(__helios__tx__minted(__helios__scriptcontext__tx))();\n                                                                                                                    mintThisPolicy = __helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__get_safe(mint)(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1));\n                                                                                                                    len = __helios__int____sub(__helios__map[__helios__mintingpolicyhash@__helios__map[__helios__bytearray@__helios__int]]__length(mint), 1);\n                                                                                                                    __core__chooseUnit(__core__ifThenElse(\n                                                                                                                        __helios__int____gt(len, 1),\n                                                                                                                        () -> {\n                                                                                                                            __core__chooseUnit(__helios__print(__helios__value__show(__helios__tx__minted(__helios__scriptcontext__tx))(false, ())), __helios__error(__helios__string____add(\"currently supporting only one minting policy being burned in the tx \", __helios__int__show(len)())))\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            () -> {\n                                                                                                                                ()\n                                                                                                                            }()\n                                                                                                                        }\n                                                                                                                    )(), (observedTokenBurn) -> {\n                                                                                                                        remainingMint = __helios__list[__module__CapoDelegateHelpers__PendingCharterChange[]]__fold[__helios__map[__helios__bytearray@__helios__int]](pendingChangesList)((foldingBurn, pcChange_1) -> {\n                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"EXPECTS the spendDgt to check details of Replace activities\", false, (), false, (), false, ()), (pdChange_1) -> {\n                                                                                                                                __cond_84 = __module__CapoDelegateHelpers__PendingDelegateChange[]__role(pdChange_1);\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy____is(__cond_84),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_204) -> {\n                                                                                                                                            typeName_5 = __module__CapoDelegateHelpers__DelegateRole[]__DgDataPolicy__name(__lhs_0_204);\n                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add(\"  -- ok: DgDataPolicy in commitPendingChanges: \", typeName_5)), __cond_85 = __module__CapoDelegateHelpers__PendingDelegateChange[]__action(pdChange_1);\n                                                                                                                                            __core__ifThenElse(\n                                                                                                                                                __module__CapoDelegateHelpers__PendingDelegateAction[]__Add____is(__cond_85),\n                                                                                                                                                () -> {\n                                                                                                                                                    (__lhs_0_211) -> {\n                                                                                                                                                        foldingBurn\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                () -> {\n                                                                                                                                                    (__56) -> {\n                                                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"verifies that a delegate queued for removal or replacement is burned\", false, (), false, (), false, ()), __cond_86 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(previousManifest)(typeName_5);\n                                                                                                                                                        __core__ifThenElse(\n                                                                                                                                                            __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_86),\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_210) -> {\n                                                                                                                                                                    __helios__error(__helios__string____add(\"queued Remove failed: not present in previous-manifest map: \", typeName_5))\n                                                                                                                                                                }\n                                                                                                                                                            },\n                                                                                                                                                            () -> {\n                                                                                                                                                                (__lhs_0_205) -> {\n                                                                                                                                                                    __lhs_0_0_1 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_205);\n                                                                                                                                                                    ME_type_1 = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0_1);\n                                                                                                                                                                    tn_6 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0_1);\n                                                                                                                                                                    mph_32 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0_1);\n                                                                                                                                                                    __cond_87 = mph_32;\n                                                                                                                                                                    __core__ifThenElse(\n                                                                                                                                                                        __helios__option[__helios__mintingpolicyhash]__some____is(__cond_87),\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            (__lhs_0_209) -> {\n                                                                                                                                                                                __core__chooseUnit(__helios__print(\"    -- TODO: manifest entry with other-mph: allow optional burn\"), foldingBurn)\n                                                                                                                                                                            }\n                                                                                                                                                                        },\n                                                                                                                                                                        () -> {\n                                                                                                                                                                            (__57) -> {\n                                                                                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"each pending change must have a name recognized by the manifest\", false, (), false, (), false, ()), __lhs_0_206 = __helios__common__assert_constr_index(ME_type_1, 1);\n                                                                                                                                                                                refCount_1 = __module__CapoHelpers__ManifestEntryType[]__DgDataPolicy__refCount(__lhs_0_206);\n                                                                                                                                                                                tnStr_2 = __helios__bytearray__decode_utf8_safe(tn_6)();\n                                                                                                                                                                                __cond_88 = __helios__map[__helios__bytearray@__helios__int]__get_safe(foldingBurn)(tn_6);\n                                                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                                                    __helios__option[__helios__int]__none____is(__cond_88),\n                                                                                                                                                                                    () -> {\n                                                                                                                                                                                        (__lhs_0_208) -> {\n                                                                                                                                                                                            __helios__error(__helios__string____add(\"queued Remove/Replace failed: no burn, or double-burn: \", tnStr_2))\n                                                                                                                                                                                        }\n                                                                                                                                                                                    },\n                                                                                                                                                                                    () -> {\n                                                                                                                                                                                        (__lhs_0_207) -> {\n                                                                                                                                                                                            burningCount = __helios__option[__helios__int]__some__some(__lhs_0_207);\n                                                                                                                                                                                            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"    -- ok: BURN 🔥\", __helios__int__show(burningCount)()), \"×💴 \"), tnStr_2)), __core__chooseUnit(__core__ifThenElse(\n                                                                                                                                                                                                __helios__int____neq(__helios__int____sub(0, refCount_1), burningCount),\n                                                                                                                                                                                                () -> {\n                                                                                                                                                                                                    __helios__error(__helios__string____add(__helios__string____add(__helios__string____add(\"queued Remove/Replace failed: expected burn of \", __helios__int__show(refCount_1)()), \"×💴 \"), tnStr_2))\n                                                                                                                                                                                                },\n                                                                                                                                                                                                () -> {\n                                                                                                                                                                                                    () -> {\n                                                                                                                                                                                                        ()\n                                                                                                                                                                                                    }()\n                                                                                                                                                                                                }\n                                                                                                                                                                                            )(), __helios__map[__helios__bytearray@__helios__int]__delete(foldingBurn)(tn_6)))\n                                                                                                                                                                                        }\n                                                                                                                                                                                    }\n                                                                                                                                                                                )()(__cond_88))\n                                                                                                                                                                            }\n                                                                                                                                                                        }\n                                                                                                                                                                    )()(__cond_87)\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        )()(__cond_86))\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            )()(__cond_85))\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__55) -> {\n                                                                                                                                            __helios__error(\"invalid delegate-change role (for now) in commitPendingChanges\")\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()(__cond_84)\n                                                                                                                            }(__cond_83 = pcChange_1;\n                                                                                                                            __core__ifThenElse(\n                                                                                                                                __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange____is(__cond_83),\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_203) -> {\n                                                                                                                                        dgtChange_1 = __module__CapoDelegateHelpers__PendingCharterChange[]__delegateChange__change(__lhs_0_203);\n                                                                                                                                        dgtChange_1\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                () -> {\n                                                                                                                                    (__lhs_0_202) -> {\n                                                                                                                                        __helios__error(\"otherManifestChange not yet supported\")\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            )()(__cond_83)))\n                                                                                                                        }, observedTokenBurn);\n                                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"requires all the burns of our policy-id to be accounted for\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__int____eq(__helios__map[__helios__bytearray@__helios__int]__length(remainingMint), 0), __helios__string____add(\"extra burns found in the transaction: \n\", __helios__map[__helios__bytearray@__helios__int]__show(remainingMint)())), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... -- end of commitPendingChanges\", false, (), false, (), false, ()), true)))\n                                                                                                                    }(__cond_82 = mintThisPolicy;\n                                                                                                                    __core__ifThenElse(\n                                                                                                                        __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some____is(__cond_82),\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_201) -> {\n                                                                                                                                minted_1 = __helios__option[__helios__map[__helios__bytearray@__helios__int]]__some__some(__lhs_0_201);\n                                                                                                                                minted_1\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        () -> {\n                                                                                                                            (__lhs_0_200) -> {\n                                                                                                                                __core__mkNilPairData(())\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    )()(__cond_82)))))\n                                                                                                                }()\n                                                                                                            }\n                                                                                                        )()\n                                                                                                    }\n                                                                                                )();\n                                                                                                __core__chooseUnit(__core__ifThenElse(\n                                                                                                    __helios__bool__and(() -> {\n                                                                                                        __helios__bool____not(__module__BasicDelegate__isMintDelegate)\n                                                                                                    }, () -> {\n                                                                                                        __helios__bool____not(__module__BasicDelegate__isSpendDelegate)\n                                                                                                    }),\n                                                                                                    () -> {\n                                                                                                        __helios__error(\"unreachable? not mintDgt or spendDgt\")\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        () -> {\n                                                                                                            ()\n                                                                                                        }()\n                                                                                                    }\n                                                                                                )(), __helios__bool__and(() -> {\n                                                                                                    mintDgtCheck\n                                                                                                }, () -> {\n                                                                                                    spendDgtCheck\n                                                                                                })))))\n                                                                                            }\n                                                                                        },\n                                                                                        () -> {\n                                                                                            __core__ifThenElse(\n                                                                                                __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest____is(__cond_70),\n                                                                                                () -> {\n                                                                                                    (__lhs_0_180) -> {\n                                                                                                        manifestActivity = __module__CapoDelegateHelpers__CapoLifecycleActivity[]__updatingManifest__activity(__lhs_0_180);\n                                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't allow updating anything except the manifest\", false, (), false, (), false, ()), __core__chooseUnit(__cond_71 = manifestActivity;\n                                                                                                        __core__ifThenElse(\n                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__retiringEntry____is(__cond_71),\n                                                                                                            () -> {\n                                                                                                                (__lhs_0_188) -> {\n                                                                                                                    __core__chooseUnit(__helios__assert(false, \"TODO: support retirement activity\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"doesn't remove a dgDataPolicy entry from the manifest (use queuePendingChange instead)\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"removes the indicated key from the manifest\", false, (), false, (), false, ()), __module__StellarHeliosHelpers__REQT(\"delegates MUST be allowed to validate that this doesn't drop something they need\", false, (), false, (), false, ()))))\n                                                                                                                }\n                                                                                                            },\n                                                                                                            () -> {\n                                                                                                                __core__ifThenElse(\n                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__updatingEntry____is(__cond_71),\n                                                                                                                    () -> {\n                                                                                                                        (__lhs_0_187) -> {\n                                                                                                                            __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"if delegates need a hook to validate that the updte is acceptable, that might be enforced here\"), __core__chooseUnit(__helios__assert(false, \"TODO: support updatingEntry activity\"), __module__StellarHeliosHelpers__REQT(\"the indicated token MUST be referenced in the transaction\", false, (), false, (), false, ())))\n                                                                                                                        }\n                                                                                                                    },\n                                                                                                                    () -> {\n                                                                                                                        __core__ifThenElse(\n                                                                                                                            __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry____is(__cond_71),\n                                                                                                                            () -> {\n                                                                                                                                (__lhs_0_182) -> {\n                                                                                                                                    key_33 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__key(__lhs_0_182);\n                                                                                                                                    tokenName_4 = __module__CapoDelegateHelpers__ManifestActivity[]__addingEntry__tokenName(__lhs_0_182);\n                                                                                                                                    charterData_3 = __helios__common__assert_constr_index(__module__CapoHelpers__CapoCtx[]__getCharterData_9(cctx_4)(), 0);\n                                                                                                                                    nextCharterData = __module__CapoHelpers__CapoCtx[]__getNextCharterData(__module__CapoHelpers__CapoCtx[]__resolveCharterUtxo_3, __module__CapoHelpers__CapoCtx[]__address_3)(cctx_4)();\n                                                                                                                                    __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the indicated token MUST be referenced in the transaction\", false, (), false, (), false, ()), refInput = __module__CapoHelpers__CapoCtx[]__delegatedDataRef(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3)(cctx_4)(false, (), true, tokenName_4);\n                                                                                                                                    __core__chooseUnit(__helios__assert(__helios__bool__trace(__helios__txinput____eq(refInput, refInput))(__helios__string____add(__helios__string____add(\"  -- found refInput: \", __helios__bytearray__decode_utf8_safe(tokenName_4)()), \"?\")), \"refInput must be found\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the new entry MUST be found in the new manifest\", false, (), false, (), false, ()), __core__chooseUnit(__cond_72 = __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__get_safe(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_33);\n                                                                                                                                    __core__ifThenElse(\n                                                                                                                                        __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__none____is(__cond_72),\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_186) -> {\n                                                                                                                                                __helios__error(__helios__string____add(\"the new manifest entry is missing: \", key_33))\n                                                                                                                                            }\n                                                                                                                                        },\n                                                                                                                                        () -> {\n                                                                                                                                            (__lhs_0_183) -> {\n                                                                                                                                                __lhs_0_0 = __helios__option[__module__CapoHelpers__CapoManifestEntry[]]__some__some(__lhs_0_183);\n                                                                                                                                                entryType = __module__CapoHelpers__CapoManifestEntry[]__entryType(__lhs_0_0);\n                                                                                                                                                tn_5 = __module__CapoHelpers__CapoManifestEntry[]__tokenName(__lhs_0_0);\n                                                                                                                                                mph_31 = __module__CapoHelpers__CapoManifestEntry[]__mph(__lhs_0_0);\n                                                                                                                                                __core__chooseUnit(__helios__print(__helios__string____add(\"   -- ok, found the manifest entry for \", key_33)), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the new entry must have the right token-name\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__bytearray____eq(tn_5, tokenName_4), \"token-name mismatch\"), __core__chooseUnit(__cond_74 = mph_31;\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __helios__option[__helios__mintingpolicyhash]__some____is(__cond_74),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_185) -> {\n                                                                                                                                                            __helios__error(\"other-mph not yet supported\")\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__48) -> {\n                                                                                                                                                            ()\n                                                                                                                                                        }\n                                                                                                                                                    }\n                                                                                                                                                )()(__cond_74), __cond_73 = entryType;\n                                                                                                                                                __core__ifThenElse(\n                                                                                                                                                    __module__CapoHelpers__ManifestEntryType[]__NamedTokenRef____is(__cond_73),\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__lhs_0_184) -> {\n                                                                                                                                                            __helios__print(\"   -- ok: matching name, with NamedTokenRef added in updatingManifest\")\n                                                                                                                                                        }\n                                                                                                                                                    },\n                                                                                                                                                    () -> {\n                                                                                                                                                        (__47) -> {\n                                                                                                                                                            __helios__error(\"addingEntry: the new manifest entry must be a NamedTokenRef for now\")\n                                                                                                                                                        }\n                                                                                                                                                    }\n                                                                                                                                                )()(__cond_73)))))\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    )()(__cond_72), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the remainder of the manifest must be unchanged\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]____eq(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(charterData_3), __helios__map[__helios__string@__module__CapoHelpers__CapoManifestEntry[]]__delete(__module__CapoHelpers__CapoDatum[]__CharterData__manifest(nextCharterData))(key_33)), \"manifest modified in an unexpected way\"), __helios__print(\"  -- ok! new manifest as expected\")))))))\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            () -> {\n                                                                                                                                __core__ifThenElse(\n                                                                                                                                    __module__CapoDelegateHelpers__ManifestActivity[]__forkingThreadToken____is(__cond_71),\n                                                                                                                                    () -> {\n                                                                                                                                        (__lhs_0_181) -> {\n                                                                                                                                            __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(false, ()), \"<----- that can fail, this can't\"), __core__chooseUnit(__helios__assert(false, \"TODO: support forkingThreadToken activity\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the indicated token MUST be referenced in the transaction\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"validates that another copy of the token name is minted\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"when the key is a DgDataPolicy, the existing manifest entry is updated\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"for mint/spend delegates and otherNamedDelegates, a new manifest entry is created with refCount=1+newThreadCount, if it doesn't exist\", false, (), false, (), false, ()), __module__StellarHeliosHelpers__REQT(\"when the manifest already has the entry, the refCount is incremented by newThreadCount\", false, (), false, (), false, ())))))))\n                                                                                                                                        }\n                                                                                                                                    },\n                                                                                                                                    () -> {\n                                                                                                                                        (__46) -> {\n                                                                                                                                            ()\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                )()\n                                                                                                                            }\n                                                                                                                        )()\n                                                                                                                    }\n                                                                                                                )()\n                                                                                                            }\n                                                                                                        )()(__cond_71), true))\n                                                                                                    }\n                                                                                                },\n                                                                                                () -> {\n                                                                                                    __core__ifThenElse(\n                                                                                                        __module__CapoDelegateHelpers__CapoLifecycleActivity[]__forcingNewMintDelegate____is(__cond_70),\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_179) -> {\n                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"a forced delegate change is an escape-hatch only involving the minter and the Capo\", false, (), false, (), false, ()), __helios__error(\"the mint/spend delegate never is involved when the minter is instructed to force a new delegate\"))\n                                                                                                            }\n                                                                                                        },\n                                                                                                        () -> {\n                                                                                                            (__lhs_0_178) -> {\n                                                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"a forced delegate change is an escape-hatch only involving the minter and the Capo\", false, (), false, (), false, ()), __helios__error(\"the mint/spend delegate never is involved when the spender is instructed to force a new delegate\"))\n                                                                                                            }\n                                                                                                        }\n                                                                                                    )()\n                                                                                                }\n                                                                                            )()\n                                                                                        }\n                                                                                    )()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()(__cond_70)\n                                                        }, () -> {\n                                                            __core__ifThenElse(\n                                                                true,\n                                                                () -> {\n                                                                    __core__chooseUnit(__helios__print(\"BasicDelegate harness deferring to specialization for CapoLifecycleActivities\n\"), true)\n                                                                },\n                                                                () -> {\n                                                                    () -> {\n                                                                        false\n                                                                    }()\n                                                                }\n                                                            )()\n                                                        })\n                                                    }(__cond_69 = neededRole;\n                                                    __core__ifThenElse(\n                                                        __module__CapoDelegateHelpers__DelegateRole[]__HandledByCapoOnly____is(__cond_69),\n                                                        () -> {\n                                                            (__lhs_0_177) -> {\n                                                                __helios__error(\"delegate invoked with invalid escape-hatch activity (always handled directly by the Capo)\")\n                                                            }\n                                                        },\n                                                        () -> {\n                                                            __core__ifThenElse(\n                                                                __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____is(__cond_69),\n                                                                () -> {\n                                                                    (__lhs_0_176) -> {\n                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... this Capo lifecycle activity is only valid on spend delegate\", true, __module__BasicDelegate__isSpendDelegate, false, (), false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(false, ()), \"<----- that can fail, this can't\"), __core__chooseUnit(__helios__print(\"  -- ok: spendDgt checking CapoLifecycleActivity\"), neededRole)))\n                                                                    }\n                                                                },\n                                                                () -> {\n                                                                    __core__ifThenElse(\n                                                                        __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____is(__cond_69),\n                                                                        () -> {\n                                                                            (__lhs_0_175) -> {\n                                                                                __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"... this Capo lifecycle activity is only valid on mint delegate\", true, __module__BasicDelegate__isMintDelegate, false, (), false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(false, ()), \"<----- that can fail, this can't\"), __core__chooseUnit(__helios__print(\"  -- ok: mintDgt checking CapoLifecycleActivity\"), neededRole)))\n                                                                            }\n                                                                        },\n                                                                        () -> {\n                                                                            __core__ifThenElse(\n                                                                                __module__CapoDelegateHelpers__DelegateRole[]__BothMintAndSpendDgt____is(__cond_69),\n                                                                                () -> {\n                                                                                    (__lhs_0_174) -> {\n                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"It EXPECTS the Capo to enforce the presence of the mintDgt (to check the right mint) and spendDgt (to validate the charter-update logic)\", false, (), false, (), false, ()), __core__ifThenElse(\n                                                                                            __module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(true, false),\n                                                                                            () -> {\n                                                                                                __module__CapoDelegateHelpers__DelegateRole[]__MintDgt____new()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_4)(true, false),\n                                                                                                    () -> {\n                                                                                                        __module__CapoDelegateHelpers__DelegateRole[]__SpendDgt____new()\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        () -> {\n                                                                                                            __helios__error(__helios__string____add(\"this Capo lifecycle activity is only valid on mint/spend delegate, not \", __module__BasicDelegate__delegateName))\n                                                                                                        }()\n                                                                                                    }\n                                                                                                )()\n                                                                                            }\n                                                                                        )())\n                                                                                    }\n                                                                                },\n                                                                                () -> {\n                                                                                    (__45) -> {\n                                                                                        __helios__error(\"no way k\")\n                                                                                    }\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            )()\n                                                        }\n                                                    )()(__cond_69)))))\n                                                }\n                                            },\n                                            () -> {\n                                                __core__ifThenElse(\n                                                    __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData____is(__cond_68),\n                                                    () -> {\n                                                        (__lhs_0_172) -> {\n                                                            seed_4 = __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__seed(__lhs_0_172);\n                                                            dDataTypeName_1 = __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__dataType(__lhs_0_172);\n                                                            __core__ifThenElse(\n                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),\n                                                                () -> {\n                                                                    __helios__error(\"CreatingDelegatedData activity is only allowed in the mint delegate\")\n                                                                },\n                                                                () -> {\n                                                                    () -> {\n                                                                        cctx_3 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();\n                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_3)(false, ()), \"<---- fails in there, not here\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"context: CreatingDelegatedData\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"  -- ensures the data-controller is invoked with its minting activity for the indicated recId\", false, (), false, (), false, ()), policyDelegateInput = __module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2(__module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3)(cctx_3)(dDataTypeName_1, false, (), false, ());\n                                                                        tnFactory = __module__CapoMintHelpers__mkUutTnFactory(seed_4);\n                                                                        purpose_2 = __helios__option[__helios__string]__unwrap(__module__CapoHelpers__DelegateInput[]__idPrefix(policyDelegateInput))();\n                                                                        newDataId_1 = __helios__string__encode_utf8(tnFactory(purpose_2))();\n                                                                        __helios__bool__and(() -> {\n                                                                            __helios__bool__and(() -> {\n                                                                                __helios__bool__and(() -> {\n                                                                                    __helios__bool__and(() -> {\n                                                                                        true\n                                                                                    }, () -> {\n                                                                                        __module__CapoMintHelpers__validateUutMinting(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_1), seed_4, __core__mkCons(__helios__string____to_data(purpose_2), __core__mkNilData(())), true, tnFactory, false, (), false, (), true, false, false, (), false, ())\n                                                                                    })\n                                                                                }, () -> {\n                                                                                    __module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx_3)(newDataId_1, dDataTypeName_1)\n                                                                                })\n                                                                            }, () -> {\n                                                                                __module__StellarHeliosHelpers__bREQT(\"ensures the data-controller is invoked with ONE minting activity for the indicated recId\", false, (), false, (), false, ())\n                                                                            })\n                                                                        }, () -> {\n                                                                            __module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueSeededMintingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(policyDelegateInput)(seed_4))()\n                                                                        }))))\n                                                                    }()\n                                                                }\n                                                            )()\n                                                        }\n                                                    },\n                                                    () -> {\n                                                        __core__ifThenElse(\n                                                            __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData____is(__cond_68),\n                                                            () -> {\n                                                                (__lhs_0_171) -> {\n                                                                    dDataTypeName = __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__dataType(__lhs_0_171);\n                                                                    recId_17 = __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__recId(__lhs_0_171);\n                                                                    __core__ifThenElse(\n                                                                        __helios__bool____not(__module__BasicDelegate__isSpendDelegate),\n                                                                        () -> {\n                                                                            __helios__error(\"UpdatingDelegatedData activity is only allowed in the spend delegate\")\n                                                                        },\n                                                                        () -> {\n                                                                            () -> {\n                                                                                cctx_2 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();\n                                                                                __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsSpendDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_2)(false, ()), \"<---- fails in there, not here\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"EXPECTS j6bmfv: all and ONLY DelegatedData datums must be spent with the Capo's spendingDelegatedData activity\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"implements a generic data-controller re-delegation convention based on the capo's manifest (those with type= DgDataPolicy)\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"ensures the data-controller is invoked with ONE spending activity for the indicated recId\", false, (), false, (), false, ()), __core__chooseUnit(__helios__assert(__module__CapoHelpers__DelegateInput[]__orFail(__module__CapoHelpers__DelegateInput[]__withUniqueDDSpendingActivity(__module__CapoHelpers__DelegateInput[]__delegateUnchanged_2)(__module__CapoHelpers__CapoCtx[]__requiresDgDataPolicyInput_2(__module__CapoHelpers__CapoCtx[]__getCharterData_9, __module__CapoHelpers__CapoCtx[]__requiresDelegateInput_3)(cctx_2)(dDataTypeName, false, (), false, ()))(recId_17))(), \"^^^ those can fail, this assert won't.\"), inputDD = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3)(cctx_2)(recId_17, false, ());\n                                                                                __core__chooseUnit(__helios__assert(__helios__txinput____eq(inputDD, inputDD), \"no way m\"), __core__chooseUnit(__core__ifThenElse(\n                                                                                    __helios__string____eq(\"settings\", dDataTypeName),\n                                                                                    () -> {\n                                                                                        curSettingsId = __helios__option[__helios__bytearray]__unwrap(__module__CapoHelpers__CapoCtx[]__getSettingsId(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_2)(true, true))();\n                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO(__helios__string____add(\"when updating the current Capo settings, the delegates must all \", \"have a chance to ensure the settings are valid for their needs\")), __core__ifThenElse(\n                                                                                            false,\n                                                                                            () -> {\n                                                                                                __core__ifThenElse(\n                                                                                                    __helios__bytearray____eq(curSettingsId, recId_17),\n                                                                                                    () -> {\n                                                                                                        __core__chooseUnit(__helios__print(\" -> \"), __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__allDelegatesAreValidatingSettings(cctx_2)(), \"no way jose\"), __helios__print(\" <- \")))\n                                                                                                    },\n                                                                                                    () -> {\n                                                                                                        () -> {\n                                                                                                            recIdStr_4 = __helios__bytearray__decode_utf8_safe(recId_17)();\n                                                                                                            curSettingsIdStr = __helios__bytearray__decode_utf8_safe(curSettingsId)();\n                                                                                                            __helios__print(__helios__string____add(__helios__string____add(__helios__string____add(\"  -- NOTE: updating \", recIdStr_4), \", which isn't currentSettings=\"), curSettingsIdStr))\n                                                                                                        }()\n                                                                                                    }\n                                                                                                )()\n                                                                                            },\n                                                                                            () -> {\n                                                                                                () -> {\n                                                                                                    ()\n                                                                                                }()\n                                                                                            }\n                                                                                        )())\n                                                                                    },\n                                                                                    () -> {\n                                                                                        () -> {\n                                                                                            ()\n                                                                                        }()\n                                                                                    }\n                                                                                )(), __helios__bool__and(() -> {\n                                                                                    __helios__bool__trace(__module__CapoHelpers__CapoCtx[]__mustOutputDelegatedData(__module__CapoHelpers__CapoCtx[]__delegatedTxOutput_3)(cctx_2)(recId_17, dDataTypeName))(\"  -- did output delegated data? \")\n                                                                                }, () -> {\n                                                                                    true\n                                                                                }))))))))\n                                                                            }()\n                                                                        }\n                                                                    )()\n                                                                }\n                                                            },\n                                                            () -> {\n                                                                __core__ifThenElse(\n                                                                    __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData____is(__cond_68),\n                                                                    () -> {\n                                                                        (__lhs_0_169) -> {\n                                                                            recId_16 = __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData__recId(__lhs_0_169);\n                                                                            __core__ifThenElse(\n                                                                                __helios__bool____not(__module__BasicDelegate__isMintDelegate),\n                                                                                () -> {\n                                                                                    __helios__error(\"DeletingDelegatedData activity is only allowed in the mint delegate\")\n                                                                                },\n                                                                                () -> {\n                                                                                    () -> {\n                                                                                        cctx_1 = __module__CapoHelpers__CapoCtx[]__withCharterRef(baseCctx_1)();\n                                                                                        __core__chooseUnit(__helios__assert(__module__CapoHelpers__CapoCtx[]__nowActingAsMintDgt(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_1)(false, ()), \"<---- fails in there, not here\"), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"this code is triggered by both the mintDgt and spendDgt, with each doing their parts of the job\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the spendDgt allows the spending of the utxo\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"the mintDgt requires the burning of its UUT\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"it must not delete a record that's still referenced by the Capo manifest\", false, (), false, (), false, ()), __core__chooseUnit(__module__StellarHeliosHelpers__REQT(\"a matching manifest entry has to be changed or removed prior to deletion\", false, (), false, (), false, ()), __lhs_0_170 = __module__CapoHelpers__CapoCtx[]__delegatedDataTxInput_1(__module__CapoHelpers__CapoCtx[]__mkDelegatedDataPredicate_3)(cctx_1)(recId_16, false, ());\n                                                                                        __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"verify the input was found ^\"), __core__chooseUnit(__helios__assert(false, \"Delete not supported yet\"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"implement the generic data-controller re-delegation convention here\"), __core__chooseUnit(__module__StellarHeliosHelpers__TODO(\"ensure that the right delegate is consulted with its BurningActivities.*\"), false))))))))))\n                                                                                    }()\n                                                                                }\n                                                                            )()\n                                                                        }\n                                                                    },\n                                                                    () -> {\n                                                                        __core__ifThenElse(\n                                                                            __module__VestingPolicy__DelegateActivity[]__SpendingActivities____is(__cond_68),\n                                                                            () -> {\n                                                                                (__lhs_0_168) -> {\n                                                                                    true\n                                                                                }\n                                                                            },\n                                                                            () -> {\n                                                                                __core__ifThenElse(\n                                                                                    __module__VestingPolicy__DelegateActivity[]__MintingActivities____is(__cond_68),\n                                                                                    () -> {\n                                                                                        (__lhs_0_167) -> {\n                                                                                            true\n                                                                                        }\n                                                                                    },\n                                                                                    () -> {\n                                                                                        __core__ifThenElse(\n                                                                                            __module__VestingPolicy__DelegateActivity[]__BurningActivities____is(__cond_68),\n                                                                                            () -> {\n                                                                                                (__lhs_0_166) -> {\n                                                                                                    true\n                                                                                                }\n                                                                                            },\n                                                                                            () -> {\n                                                                                                (__lhs_0_165) -> {\n                                                                                                    true\n                                                                                                }\n                                                                                            }\n                                                                                        )()\n                                                                                    }\n                                                                                )()\n                                                                            }\n                                                                        )()\n                                                                    }\n                                                                )()\n                                                            }\n                                                        )()\n                                                    }\n                                                )()\n                                            }\n                                        )()\n                                    }\n                                )()\n                            }\n                        )()(__cond_68))\n                    },\n                    () -> {\n                        () -> {\n                            false\n                        }()\n                    }\n                )();\n                result_8\n            })\n        }\n    };\n    __module__BasicDelegate__main = (mdd, activity_10) -> {\n        __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(\" 🚥❓delegate: \", __module__BasicDelegate__delegateName), \"\n\")), (result_9) -> {\n            __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(\"🚥🟢 delegate: \", __module__BasicDelegate__delegateName), \": ok!\n\")), result_9)\n        }(__cond_120 = mdd;\n        __core__ifThenElse(\n            __module__VestingPolicy__DelegateDatum[]__capoStoredData____is(__cond_120),\n            () -> {\n                (__lhs_0_303) -> {\n                    __helios__error(\"Data Delegates must never store the capoStoredData variant in the script; used only for data-structuring capo-stored utxo datum\")\n                }\n            },\n            () -> {\n                __core__ifThenElse(\n                    __module__VestingPolicy__DelegateDatum[]__IsDelegation____is(__cond_120),\n                    () -> {\n                        (isD) -> {\n                            dd_2 = __module__VestingPolicy__DelegateDatum[]__IsDelegation__dd(isD);\n                            __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __helios__int__serialize(__module__BasicDelegate__rev)()), \"param/script-hash uniqueness\"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __module__BasicDelegate__instance), \"param/script-hash uniqueness\"), __core__chooseUnit(__helios__assert(__helios__bytearray____neq(__module__CapoDelegateHelpers__DelegationDetail[]__tn(dd_2), __helios__string__encode_utf8(__module__BasicDelegate__delegateName)()), \"param/script-hash uniqueness\"), __core__chooseUnit(__module__StellarHeliosHelpers__logGroupUnit(\"delegate: spending dgTkn\", true, false, true, () -> {\n                                __helios__print(__helios__value__show(__helios__txinput__value(__helios__scriptcontext__get_current_input()))(false, ()))\n                            }), cctx_7 = __module__CapoHelpers__CapoCtx[]__needsCharter(__module__CapoHelpers__CapoCtx[]__withCharterInput_1)(__module__CapoHelpers__mkCapoCtx(__module__CapoDelegateHelpers__DelegationDetail[]__mph(dd_2)))();\n                            govAuthorityCheck = __core__ifThenElse(\n                                __helios__bool____not(__module__BasicDelegate__isDgDataPolicy),\n                                () -> {\n                                    true\n                                },\n                                () -> {\n                                    () -> {\n                                        __core__ifThenElse(\n                                            __helios__bool____not(__module__BasicDelegate__requiresGovAuthority),\n                                            () -> {\n                                                __core__chooseUnit(__helios__print(__helios__string____add(__helios__string____add(\"📝 \", __module__BasicDelegate__delegateName), \": requiresGovAuthority is overridden to false in the delegate's .hlb.ts\")), __core__chooseUnit(__helios__print(\"   -- the policy can still choose to situationally enforce gov-authority\"), true))\n                                            },\n                                            () -> {\n                                                () -> {\n                                                    __module__CapoHelpers__CapoCtx[]__orFail(__module__CapoHelpers__CapoCtx[]__requiresGovAuthority(__module__CapoHelpers__CapoCtx[]__getCharterData_9)(cctx_7)())()\n                                                }()\n                                            }\n                                        )()\n                                    }()\n                                }\n                            )();\n                            __helios__bool__and(() -> {\n                                govAuthorityCheck\n                            }, () -> {\n                                __module__BasicDelegate__checkOneActivity_1(__module__BasicDelegate__checkOneActivity_1)(isD, activity_10, true, dd_2, true, cctx_7, true, __helios__string____add(__helios__string____add(\"delegate \", __module__BasicDelegate__delegateName), \"'s overall policy\"))\n                            })))))\n                        }\n                    },\n                    () -> {\n                        (__80) -> {\n                            kaboomInvalidRedeemer = () -> {\n                                __helios__error(\"wrong Actvy/dtm\")\n                            };\n                            __cond_121 = activity_10;\n                            __core__ifThenElse(\n                                __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities____is(__cond_121),\n                                () -> {\n                                    (__lhs_0_302) -> {\n                                        kaboomInvalidRedeemer()\n                                    }\n                                },\n                                () -> {\n                                    __core__ifThenElse(\n                                        __module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities____is(__cond_121),\n                                        () -> {\n                                            (__lhs_0_301) -> {\n                                                kaboomInvalidRedeemer()\n                                            }\n                                        },\n                                        () -> {\n                                            (__81) -> {\n                                                __module__VestingPolicy__DelegateActivity[]__otherDatumValidation(activity_10)(mdd)\n                                            }\n                                        }\n                                    )()\n                                }\n                            )()(__cond_121)\n                        }\n                    }\n                )()\n            }\n        )()(__cond_120)))\n    };\n    __core__ifThenElse(\n        __module__BasicDelegate__main(__module__VestingPolicy__DelegateDatum[]__from_data(__module__VestingPolicy__DelegateDatum[]__Cip68RefToken__is_valid_data_2, __module__VestingPolicy__DelegateDatum[]__IsDelegation__is_valid_data_2, __module__VestingPolicy__DelegateDatum[]__capoStoredData__is_valid_data_2)(__DATUM), __module__VestingPolicy__DelegateActivity[]__from_data(__module__VestingPolicy__DelegateActivity[]__CapoLifecycleActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__DelegateLifecycleActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__SpendingActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__MintingActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__BurningActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__CreatingDelegatedData__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__UpdatingDelegatedData__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__DeletingDelegatedData__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__MultipleDelegateActivities__is_valid_data_2, __module__VestingPolicy__DelegateActivity[]__OtherActivities__is_valid_data_2)(__REDEEMER)),\n        () -> {\n            ()\n        },\n        () -> {\n            __helios__error(\"validation returned false\")\n        }\n    )()\n}",
        "optimizedSmap": {
            "sourceNames": [
                "src/CapoHelpers.hl",
                "src/delegation/BasicDelegate.hl",
                "src/Vesting/VestingPolicy.hl",
                "src/Vesting/VestingData.hl",
                "src/CapoMintHelpers.hl",
                "src/StellarHeliosHelpers.hl",
                "src/delegation/CapoDelegateHelpers.hl"
            ],
            "indices": "9f186b00190613081887011905c0041888011905c00419026902190150181b1903c503186a0c1903da021901701719040b0019049f1834190411001904aa09190423001904a9184d1904c6021901751719096f0119018b182119099901190184183319099f0119017e182b190b4c011901d214190ba201190230182d190bf1011902401846190c180119023d183b190c3a0119023d18241910be011902d41839191184011902b418311911f801190252182e1915df011901c91825191724041901741826191785041901d0182b191786041901d0182b19181f0419021d181a19183a041901f3182019184f041901f0183d19185d041901f9182f19190d041901f31841191a310518cb0e191a48041901ad181c191b02001901c0184b191b24001901c0184d191c0b0419012104191c0f0419012504191c1f041901420a191c200419013e181a191c4a0419013616191c51041901291822191d2b0019019e184b191d5c0019019e184d191d9f001907a510191e56001907a51847191e980019078110191f54001907811847191f650019072c181f191fb0001907321419209900190657101921a1001906040c1922070019057c182e192251001904d915192252001904d915192387001904bd1833192389001904c0101923aa001904c00c192494061901800c19259206190178181b1925aa061901680b192619051901370aff",
            "variableNames": "",
            "termDescriptions": "a6191c0b687365656454784964191c0f686964784279746573191d9f69636861727465724163191e9869636861727465724163192251683c7377697463683e192252683c7377697463683e"
        },
        "unoptimizedSmap": {
            "sourceNames": [
                "src/CapoHelpers.hl",
                "src/delegation/BasicDelegate.hl",
                "src/Vesting/VestingPolicy.hl",
                "src/Vesting/VestingData.hl",
                "src/CapoMintHelpers.hl",
                "src/StellarHeliosHelpers.hl",
                "src/delegation/CapoDelegateHelpers.hl"
            ],
            "indices": "9f19043d0019019d1832190471001903450b19047f001903e108190481001903e9081904cb001905fa081904cf0019061308190669011905c00419066a011905c0041906980119058102190699011905810219069c01190582182e19069d01190582182e19069e011905820919069f01190582041906a00119058218271906a20119058218271906a30119058218191906a50119058218191906a6011905820a1906b3011905be0a1906b6011905be18291906b7011905be181a1907c0011905b418221909cf01190128183e190b2e0118e8181b190b510118e3181b190be40119018b1821190c0e011901841833190c160119017e182b190c260119017a182c190c72011901a21839190c99011901a6184d190d28011901d214190da001190230182d190df6011902401846190e03011902431835190e110119023d1824190e190119023d183b1910a50119034e1853191347011902ad18481913d9011902d41839191465011902ca18351914b0011902b4183119150d01190252182e1915180119025118431915e8011903fc18281916210119040418201916300119040518251916470119040718761917090119042318601917fd0119040a182919180f01190404182a191aa501190459182a191af601190460182a191bf4011904701845191bf5011904701845191c19011904801862191c27011904671844191c5b011904861842191c6501190487182a191d5a01190201183b191d920119020a183a191df6011901c91825191e16011904ae183c191e37011904af1832191f02011904f7183c191f23011904f81833191f65011905001834191fb40119052c1841191ff401190522181c19201701190533183019202401190505184119203e0119053b183c19205f0119053c18321920d101190548181a1920ea01190544184219235d02190150181b1923e70219016e171923ee0219016e141924000219017017192407021901701419248302190175171924ba02190185183e1924fb02190183184019250602190180183a19252c0219017b184719258a0219019d181d1925af0219019618471925e9021901a7181d1925ea021901a7181d192626021901a118471926c3021901b418471927f1021901c71847192887021901de184719290a021901eb18471929a9021901f718471939360319010813193e6b0318680c193e7b03186a0c19499c04190174182619499e04190175182b1949db041901b7081949dd041901b808194a00041901b81821194a3c041901cf08194a45041901d0182b194a46041901d0182b194ac80419021d181a194acd0419021d12194aec041901f31820194afa041901f0183d194b2f041901f9182f194bad041902041841194bb20419020a181c194bbf0419020c1854194bc50419020a1827194bde041901f31841194c4d041901ad1824194c51041901ad181c194c8a0419018f182b194e750419012104194e790419012504194e7f0419013b04194e8b041901420a194e8c0419013e181a194eb3041901361828194ebe0419013611194ec00419013616194ec5041901291822194f0204184a04194fc4041860181b194fcd041852183e19501b04184c18181950be04182b081950bf04182b081950e2001908850819528e0019084b18191952b50019083618211952b80019083418181952f80019081f15195451001907a5101954a4001907a518471954fa00190781101955520019078118471955610019072b18271955630019072c181f1955ab00190732141955d50019070318581956120019070f141956230019071018331956610019071c1019570f001906651719571000190665182d1957a800190655181c1957b800190657101957e90019064f18241958020019063f181f19582b0019063f18201958360019063918281958370019063918411958520019062f1119589a00190612181c1958cd00190601181c19590f00190609181819591c001906040c195929001905f91818195965001905e10919596c001905df181d195985001905d618201959ab001905ce091959b2001905cc181b1959f1001905a4091959f5001905a21867195a170019059a1838195a230019059c1862195a4c001905a6184c195a55001905bb09195a5f001905b715195b4500190575181e195b4f0019057c182e195b680019057b14195b6b0019057e1827195b790518b21827195b870518b212195b8a0518b414195bd3001905070b195bd4001905070b195bda00190509184c195c2c001904f9183f195c2e001904f81821195c2f001904f81821195c62001904d7181c195c6c001904d915195c6d001904d915195d1b001904c7181c195d1c001904c71837195d39001904bb09195d57001904bd1833195d59001904c010195d5d001904c21841195d73001904c2182d195d8b001904c00c195d97001904bc181a195e150019049d182d195e200019049f1834195e26001904aa09195e43001904a9184d195e45001904a80d195e6b001904a51845195f6e0019045514195f940019044713195fba001903e810195feb001903dc0f19609b00190343101960a100190314181b1960a20019033f061960c10019033d18271960d70019033e0f1960eb00190329111961120019032e184119612000190332185619614b00190338182d196175001902960a1961840019029318211961850019029318211961970019029818491961aa0019029918241961b50019029b181b1961bc0019029c18411961cf0019029d18551961e4001902f9151961f50019029f18301961f60019029f18301961fe001902ae11196214001902a3183819622f001902a6184319623a001902a7184d19624a001902a7184519628d001902b3183b196294001902b518521962a6001902b518261962a8001902b7101962a9001902e818621962bc001902ec111962d7001902ed18511962ea001902f11119631c001902bc181d196334001902c2181d19634c001902ca181d196378001902d21844196395001902d618701963b8001902d918431963cd001902de18571963fe001902f518311964180019025b18191964230019025c184a19642c0019028c182f19644600190268111964880019026d185819648f0019026f184c19649d0019026f18211964a000190281185b1964b30019028218601964c60019028318501964d90019028418681965510019028818301965ad0019021f18561965af0019021e151965b00019021e151965b40019021f141965b90019021f0f1965c50019021f18441965c600190221184f1965c80019021f184e1965c90019021f184e1965d500190222184c1965ec00190222182b1965ed00190227131965fb00190214171965fc00190214171965fd0019021518561965ff00190214182b19660000190214182b1966040019021514196609001902150f19661500190215184419661a00190215184e19661b00190215184e19662d0019020a1821196649001901f5182719664c001902070819664e0019020609196664001901fb185119666f001901fb184919668b001901fe184819685a001901c41319686a001901c0184b19686f001901c01830196872001901c0184d1968bb0019019e184b1968c00019019e18301968c30019019e184d197e10061901800c197e2f061901871837197e43061901830c197e500619018d15197e530619018d1835197e550619018d1835197e560619018d1830197e590619018d1836197e86061901721834197eb8061901781829197eb906190178181b197ed5061901680b197ee7061901650a197f950619014616197fa80619014113197fae0619013c185a197fee061901170a19944306183104199893051901370a1998ba0519013a12199a5d0518cb0e199a7e0518c71819199ab10518a21835199ab30518a30a199ab60518a30b199ad705188a1822199b0d0518810f199b4e05187014199b590518710d199b6705187313199b6805187004199bd805183f04199bd905183f04199be205184111199bfd05184614199c180518310e199c1d0518310a199c2b05181e1822199c2c05181e1822199c370518230dff",
            "variableNames": "",
            "termDescriptions": "b833190698646d61696e190699646d61696e191621636c656e1949db666d70685374721949dd6676616c537472194bb268746e537472696e67194e75687365656454784964194e79686964784279746573194e7f686d696e6948617368194f02687461726765744964195451696368617274657241631954fa696368617274657241631955d578204361706f4374783a3a6d7573744f757470757444656c656761746564446174611956126b61637475616c49645374721958526473656c6619589a6473656c661958cd6473656c661959296473656c66195b456473656c66195bd3683c7377697463683e195bd4683c7377697463683e195c2e636b6579195c2f636b6579195c626473656c66195c6c683c7377697463683e195c6d683c7377697463683e195f6e6473656c66195f946473656c66195fba6473656c66195feb6473656c6619609b6473656c661960a16473656c66196184683c7377697463683e196185683c7377697463683e1961f5683c7377697463683e1961f6683c7377697463683e1962a870616374734f6e546869735265636f72641965af636d73671965b0636d73671965fb6b617373657274696f6e4f6b1965fc6b617373657274696f6e4f6b1965ff636d7367196600636d736719662d6473656c661966496473656c66199ab1683c61737369676e3e199ad769636f6c6c6170736564199bd86863616c6c6261636b199bd96863616c6c6261636b199c2b69636f6c6c6170736564199c2c69636f6c6c6170736564"
        }
    }
};
                    export default precompiled;
                    