{"version":3,"file":"StellarTokenomics.hlb.mjs","sources":["../../src/StellarTokenomics.hlb.ts"],"sourcesContent":["import { CapoHeliosBundle } from \"@donecollectively/stellar-contracts\"\nimport type { Source } from \"@helios-lang/compiler-utils\"\n\nimport TieredScaleModule from \"./TieredScale.hl\"\n\n/**\n * A CapoHeliosBundle subclass that can be used with generic UUTs.\n */\nexport default class StellarTokenomicsCapoBundle extends CapoHeliosBundle {\n    static isAbstract = true\n    /**\n     * Makes certain modules available on-demand for import by Capo plugins \n     * @remarks\n     * Only include modules here when they should force tightly-coupled \n     * collaborating modules to be updated at the same time.  When any of\n     * these modules are modified, it will cause all places where the imports\n     * are used to be recompiled and force on-chain scripts to receive updates.\n     * \n     * Generally, it's safer to explicitly import any dependency modules to the respective plugins,\n     * and to include only definitions here for data types that are not expected to require change.\n     */\n    get modules(): Source[] {  // optional\n        return [\n            ...super.modules,\n\n            TieredScaleModule,\n            \n            // MarketSaleData,            \n            // SaleStrategies,\n         ];\n    }\n}\n"],"names":["TieredScaleModule"],"mappings":";;;;;;;;;;;AAQA,MAAqB,oCAAoC,gBAAA,CAAiB;AAAA,EACtE,OAAO,UAAA,GAAa,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYpB,IAAI,OAAA,GAAoB;AACpB,IAAA,OAAO;AAAA,MACH,GAAG,KAAA,CAAM,OAAA;AAAA,MAETA;AAAA;AAAA;AAAA,KAIH;AAAA,EACL;AACJ;;;;"}