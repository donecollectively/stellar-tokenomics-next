{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.48.1",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "stellar-tokenomics!",
  "docComment": "",
  "name": "stellar-tokenomics",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "stellar-tokenomics!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~ActivityDelegateRoleHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ActivityDelegateRoleHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ActivityDelegateRoleHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~ActivityDelegateRoleHelperNested#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ActivityDelegateRoleHelperNested#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"***\n *\n * @remarks\n *\n * #### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~ActivityDelegateRoleHelperNested#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~ActivityDelegateRoleHelperNested#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~ActivityDelegateRoleHelperNested#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ActivityDelegateRoleHelperNested#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"***\n *\n * @remarks\n *\n * #### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~ActivityDelegateRoleHelperNested#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~ActivityDelegateRoleHelperNested#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~AnyData:interface",
          "docComment": "/**\n * A strong type for the canonical form of AnyData\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoAnyData instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AnyData "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "AnyData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~AnyData#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~AnyData#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~AnyDataLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of AnyData\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AnyDataLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "AnyDataLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~AnyDataLike#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~AnyDataLike#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~BurningActivity:type",
          "docComment": "/**\n * BurningActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the BurningActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `BurningActivityHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BurningActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    DeletingRecord: number[];\n} | {\n    JoiningWithParentChunk: "
            },
            {
              "kind": "Reference",
              "text": "BurningActivity$JoiningWithParentChunk",
              "canonicalReference": "stellar-tokenomics!~BurningActivity$JoiningWithParentChunk:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CleanupRetired: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "BurningActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~BurningActivity$Ergo$JoiningWithParentChunk:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of BurningActivity$JoiningWithParentChunk\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the BurningActivity$JoiningWithParentChunkLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BurningActivity$Ergo$JoiningWithParentChunk = "
            },
            {
              "kind": "Reference",
              "text": "BurningActivity$JoiningWithParentChunk",
              "canonicalReference": "stellar-tokenomics!~BurningActivity$JoiningWithParentChunk:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "BurningActivity$Ergo$JoiningWithParentChunk",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~BurningActivity$JoiningWithParentChunk:interface",
          "docComment": "/**\n * A strong type for the canonical form of BurningActivity$JoiningWithParentChunk\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see BurningActivity$Ergo$JoiningWithParentChunk instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BurningActivity$JoiningWithParentChunk "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "BurningActivity$JoiningWithParentChunk",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~BurningActivity$JoiningWithParentChunk#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~BurningActivity$JoiningWithParentChunk#parentChunkId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentChunkId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentChunkId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~BurningActivity$JoiningWithParentChunkLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of BurningActivity$JoiningWithParentChunk\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BurningActivity$JoiningWithParentChunkLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "BurningActivity$JoiningWithParentChunkLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~BurningActivity$JoiningWithParentChunkLike#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~BurningActivity$JoiningWithParentChunkLike#parentChunkId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentChunkId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentChunkId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~BurningActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***BurningActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BurningActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BurningActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~BurningActivityHelper#CleanupRetired:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::BurningActivity.CleanupRetired\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CleanupRetired(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CleanupRetired"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~BurningActivityHelper#DeletingRecord:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::BurningActivity.DeletingRecord\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingRecord"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~BurningActivityHelper#JoiningWithParentChunk:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::BurningActivity.JoiningWithParentChunk\"***\n *\n * @remarks\n *\n * - ***BurningActivity$JoiningWithParentChunkLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "JoiningWithParentChunk(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivity$JoiningWithParentChunkLike",
                  "canonicalReference": "stellar-tokenomics!~BurningActivity$JoiningWithParentChunkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        id: string;\n        parentChunkId: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "JoiningWithParentChunk"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~BurningActivityHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***BurningActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BurningActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BurningActivityHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~BurningActivityHelperNested#CleanupRetired:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::BurningActivity.CleanupRetired\"***\n *\n * @remarks\n *\n * #### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CleanupRetired(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CleanupRetired"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~BurningActivityHelperNested#DeletingRecord:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::BurningActivity.DeletingRecord\"***\n *\n * @remarks\n *\n * #### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingRecord"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~BurningActivityHelperNested#JoiningWithParentChunk:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::BurningActivity.JoiningWithParentChunk\"***\n *\n * @remarks\n *\n * - ***BurningActivity$JoiningWithParentChunkLike*** is the same as the expanded field-types. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "JoiningWithParentChunk(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivity$JoiningWithParentChunkLike",
                  "canonicalReference": "stellar-tokenomics!~BurningActivity$JoiningWithParentChunkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        id: string;\n        parentChunkId: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "JoiningWithParentChunk"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~BurningActivityLike:type",
          "docComment": "/**\n * BurningActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the BurningActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `BurningActivityHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BurningActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    DeletingRecord: number[];\n} | {\n    JoiningWithParentChunk: "
            },
            {
              "kind": "Reference",
              "text": "BurningActivity$JoiningWithParentChunkLike",
              "canonicalReference": "stellar-tokenomics!~BurningActivity$JoiningWithParentChunkLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CleanupRetired: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "BurningActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~CapoCtx:interface",
          "docComment": "/**\n * A strong type for the canonical form of CapoCtx\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoCapoCtx instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CapoCtx "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoCtx",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoCtx#charter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "charter: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType",
                  "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "charter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoCtx#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~CapoCtxLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of CapoCtx\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CapoCtxLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoCtxLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoCtxLike#charter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "charter: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputTypeLike",
                  "canonicalReference": "stellar-tokenomics!~cctx_CharterInputTypeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "charter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoCtxLike#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterData:interface",
          "docComment": "/**\n * A strong type for the canonical form of CapoDatum$CharterData\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see CapoDatum$Ergo$CharterData instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CapoDatum$CharterData "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$CharterData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterData#govAuthorityLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "govAuthorityLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "govAuthorityLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterData#manifest:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "manifest: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntry",
                  "canonicalReference": "stellar-tokenomics!~CapoManifestEntry:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "manifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterData#mintDelegateLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintDelegateLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintDelegateLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterData#mintInvariants:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintInvariants: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintInvariants",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterData#otherNamedDelegates:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "otherNamedDelegates: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "otherNamedDelegates",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterData#pendingChanges:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pendingChanges: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange",
                  "canonicalReference": "stellar-tokenomics!~PendingCharterChange:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pendingChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterData#spendDelegateLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "spendDelegateLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "spendDelegateLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterData#spendInvariants:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "spendInvariants: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "spendInvariants",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of CapoDatum$CharterData\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CapoDatum$CharterDataLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$CharterDataLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike#govAuthorityLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "govAuthorityLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "govAuthorityLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike#manifest:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "manifest: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntryLike",
                  "canonicalReference": "stellar-tokenomics!~CapoManifestEntryLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "manifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike#mintDelegateLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintDelegateLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintDelegateLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike#mintInvariants:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mintInvariants: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mintInvariants",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike#otherNamedDelegates:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "otherNamedDelegates: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "otherNamedDelegates",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike#pendingChanges:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pendingChanges: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChangeLike",
                  "canonicalReference": "stellar-tokenomics!~PendingCharterChangeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pendingChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike#spendDelegateLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "spendDelegateLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "spendDelegateLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike#spendInvariants:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "spendInvariants: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "spendInvariants",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~CapoDatum$Ergo$CharterData_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of CapoDatum$CharterData\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the CapoDatum$CharterDataLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$Ergo$CharterData = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoCapoManifestEntry",
              "canonicalReference": "stellar-tokenomics!~ErgoCapoManifestEntry_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingCharterChange",
              "canonicalReference": "stellar-tokenomics!~ErgoPendingCharterChange_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$Ergo$CharterData_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~CapoDatum$Ergo$CharterData:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of CapoDatum$CharterData\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the CapoDatum$CharterDataLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoDatum$Ergo$CharterData = "
            },
            {
              "kind": "Content",
              "text": "{\n    spendDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n    spendInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    otherNamedDelegates: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    mintDelegateLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mintInvariants: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    govAuthorityLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n    manifest: "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "ErgoCapoManifestEntry",
              "canonicalReference": "stellar-tokenomics!~ErgoCapoManifestEntry:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    pendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingCharterChange",
              "canonicalReference": "stellar-tokenomics!~ErgoPendingCharterChange:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoDatum$Ergo$CharterData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 28
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity:type",
          "docComment": "/**\n * CapoLifecycleActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **7 variant(s)** of the CapoLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `CapoLifecycleActivityHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegate",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$CreatingDelegate:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "stellar-tokenomics!~DelegateRole_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegate",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewSpendDelegate:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegate",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewMintDelegate:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$CreatingDelegate:interface",
          "docComment": "/**\n * A strong type for the canonical form of CapoLifecycleActivity$CreatingDelegate\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see CapoLifecycleActivity$Ergo$CreatingDelegate instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CapoLifecycleActivity$CreatingDelegate "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$CreatingDelegate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$CreatingDelegate#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$CreatingDelegate#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$CreatingDelegateLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of CapoLifecycleActivity$CreatingDelegate\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CapoLifecycleActivity$CreatingDelegateLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$CreatingDelegateLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$CreatingDelegateLike#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$CreatingDelegateLike#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$Ergo$CreatingDelegate:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of CapoLifecycleActivity$CreatingDelegate\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the CapoLifecycleActivity$CreatingDelegateLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$CreatingDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegate",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$CreatingDelegate:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$CreatingDelegate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$Ergo$forcingNewMintDelegate:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of CapoLifecycleActivity$forcingNewMintDelegate\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the CapoLifecycleActivity$forcingNewMintDelegateLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$forcingNewMintDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegate",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewMintDelegate:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$forcingNewMintDelegate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$Ergo$forcingNewSpendDelegate:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of CapoLifecycleActivity$forcingNewSpendDelegate\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the CapoLifecycleActivity$forcingNewSpendDelegateLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivity$Ergo$forcingNewSpendDelegate = "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegate",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewSpendDelegate:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$Ergo$forcingNewSpendDelegate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewMintDelegate:interface",
          "docComment": "/**\n * A strong type for the canonical form of CapoLifecycleActivity$forcingNewMintDelegate\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see CapoLifecycleActivity$Ergo$forcingNewMintDelegate instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CapoLifecycleActivity$forcingNewMintDelegate "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewMintDelegate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewMintDelegate#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewMintDelegate#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewMintDelegateLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of CapoLifecycleActivity$forcingNewMintDelegate\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CapoLifecycleActivity$forcingNewMintDelegateLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewMintDelegateLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewMintDelegateLike#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewMintDelegateLike#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewSpendDelegate:interface",
          "docComment": "/**\n * A strong type for the canonical form of CapoLifecycleActivity$forcingNewSpendDelegate\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see CapoLifecycleActivity$Ergo$forcingNewSpendDelegate instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CapoLifecycleActivity$forcingNewSpendDelegate "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewSpendDelegate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewSpendDelegate#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewSpendDelegate#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewSpendDelegateLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of CapoLifecycleActivity$forcingNewSpendDelegate\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CapoLifecycleActivity$forcingNewSpendDelegateLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewSpendDelegateLike#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewSpendDelegateLike#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***CapoLifecycleActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CapoLifecycleActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CapoLifecycleActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#$seeded$CreatingDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$CreatingDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#$seeded$forcingNewMintDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$forcingNewMintDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewMintDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewMintDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#$seeded$forcingNewSpendDelegate:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$forcingNewSpendDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewSpendDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewSpendDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#commitPendingChanges:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get commitPendingChanges(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commitPendingChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#CreatingDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#CreatingDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$CreatingDelegateLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#forcingNewMintDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewMintDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#forcingNewMintDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewMintDelegateLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#forcingNewSpendDelegate:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewSpendDelegate}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#forcingNewSpendDelegate:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewSpendDelegateLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#queuePendingChange:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get queuePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queuePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#removePendingChange:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get removePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleHelperNested",
                  "canonicalReference": "stellar-tokenomics!~DelegateRoleHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper#updatingManifest:member",
              "docComment": "/**\n * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get updatingManifest(): "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelperNested",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatingManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***CapoLifecycleActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CapoLifecycleActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CapoLifecycleActivityHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#$seeded$CreatingDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$CreatingDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#$seeded$forcingNewMintDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$forcingNewMintDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewMintDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewMintDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#$seeded$forcingNewSpendDelegate:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$forcingNewSpendDelegate({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$forcingNewSpendDelegate: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$forcingNewSpendDelegate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#commitPendingChanges:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.commitPendingChanges\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get commitPendingChanges(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "commitPendingChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#CreatingDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegate}` for use in a context providing an implicit seed utxo. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#CreatingDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.CreatingDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$CreatingDelegateLike",
                  "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$CreatingDelegateLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#forcingNewMintDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewMintDelegate}` for use in a context providing an implicit seed utxo. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#forcingNewMintDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewMintDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewMintDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
                  "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewMintDelegateLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#forcingNewSpendDelegate:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$forcingNewSpendDelegate}` for use in a context providing an implicit seed utxo. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#forcingNewSpendDelegate:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.forcingNewSpendDelegate\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forcingNewSpendDelegate(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
                  "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewSpendDelegateLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forcingNewSpendDelegate"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#queuePendingChange:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::CapoLifecycleActivity.queuePendingChange\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get queuePendingChange(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queuePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#removePendingChange:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateRole*** type needed for ***CapoLifecycleActivity:removePendingChange***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get removePendingChange(): "
                },
                {
                  "kind": "Reference",
                  "text": "ActivityDelegateRoleHelperNested",
                  "canonicalReference": "stellar-tokenomics!~ActivityDelegateRoleHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removePendingChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested#updatingManifest:member",
              "docComment": "/**\n * access to different variants of the ***nested ManifestActivity*** type needed for ***CapoLifecycleActivity:updatingManifest***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get updatingManifest(): "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelperNested",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatingManifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityLike:type",
          "docComment": "/**\n * CapoLifecycleActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **7 variant(s)** of the CapoLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `CapoLifecycleActivityHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CapoLifecycleActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$CreatingDelegateLike",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$CreatingDelegateLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "DelegateRoleLike",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewSpendDelegateLike",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewSpendDelegateLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$forcingNewMintDelegateLike",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$forcingNewMintDelegateLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivityLike",
              "canonicalReference": "stellar-tokenomics!~ManifestActivityLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoLifecycleActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~CapoManifestEntry:interface",
          "docComment": "/**\n * A strong type for the canonical form of CapoManifestEntry\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoCapoManifestEntry instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CapoManifestEntry "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoManifestEntry",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoManifestEntry#entryType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entryType: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType",
                  "canonicalReference": "stellar-tokenomics!~ManifestEntryType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entryType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoManifestEntry#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoManifestEntry#tokenName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~CapoManifestEntryLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of CapoManifestEntry\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CapoManifestEntryLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "CapoManifestEntryLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoManifestEntryLike#entryType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entryType: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryTypeLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestEntryTypeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entryType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoManifestEntryLike#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~CapoManifestEntryLike#tokenName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType:type",
          "docComment": "/**\n * cctx_CharterInputType enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the cctx_CharterInputType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `cctx_CharterInputTypeHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType = "
            },
            {
              "kind": "Content",
              "text": "{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$RefInput",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$RefInput:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Input",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$Input:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$Ergo$Input:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of cctx_CharterInputType$Input\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the cctx_CharterInputType$InputLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Ergo$Input = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$Ergo$CharterData",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$Ergo$CharterData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Ergo$Input",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$Ergo$RefInput:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of cctx_CharterInputType$RefInput\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the cctx_CharterInputType$RefInputLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputType$Ergo$RefInput = "
            },
            {
              "kind": "Content",
              "text": "{\n    datum: "
            },
            {
              "kind": "Reference",
              "text": "CapoDatum$Ergo$CharterData",
              "canonicalReference": "stellar-tokenomics!~CapoDatum$Ergo$CharterData_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    utxo: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Ergo$RefInput",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$Input:interface",
          "docComment": "/**\n * A strong type for the canonical form of cctx_CharterInputType$Input\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see cctx_CharterInputType$Ergo$Input instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface cctx_CharterInputType$Input "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$Input",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$Input#datum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterData",
                  "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$Input#utxo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "utxo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$InputLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of cctx_CharterInputType$Input\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface cctx_CharterInputType$InputLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$InputLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$InputLike#datum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterDataLike",
                  "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$InputLike#utxo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "utxo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$RefInput:interface",
          "docComment": "/**\n * A strong type for the canonical form of cctx_CharterInputType$RefInput\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see cctx_CharterInputType$Ergo$RefInput instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface cctx_CharterInputType$RefInput "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$RefInput",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$RefInput#datum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterData",
                  "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$RefInput#utxo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "utxo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$RefInputLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of cctx_CharterInputType$RefInput\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface cctx_CharterInputType$RefInputLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputType$RefInputLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$RefInputLike#datum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterDataLike",
                  "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$RefInputLike#utxo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "utxo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~cctx_CharterInputTypeHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***cctx_CharterInputType*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class cctx_CharterInputTypeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "cctx_CharterInputTypeHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputTypeHelper#Input:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::cctx_CharterInputType.Input\"***\n *\n * @remarks\n *\n * - ***cctx_CharterInputType$InputLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Input(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$InputLike",
                  "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$InputLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterDataLike",
                  "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Input"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputTypeHelper#RefInput:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::cctx_CharterInputType.RefInput\"***\n *\n * @remarks\n *\n * - ***cctx_CharterInputType$RefInputLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RefInput(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputType$RefInputLike",
                  "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$RefInputLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        datum: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$CharterDataLike",
                  "canonicalReference": "stellar-tokenomics!~CapoDatum$CharterDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RefInput"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputTypeHelper#Unk:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::cctx_CharterInputType.Unk\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Unk(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Unk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~cctx_CharterInputTypeLike:type",
          "docComment": "/**\n * cctx_CharterInputType enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the cctx_CharterInputType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `cctx_CharterInputTypeHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type cctx_CharterInputTypeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$RefInputLike",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$RefInputLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$InputLike",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$InputLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "cctx_CharterInputTypeLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~Constructor:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Constructor<T> = "
            },
            {
              "kind": "Content",
              "text": "new (...args: any[]) => T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/STokMintDelegate.hlb.ts",
          "releaseTag": "Public",
          "name": "Constructor",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateActivity:type",
          "docComment": "/**\n * DelegateActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **9 variant(s)** of the DelegateActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateActivityHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CapoLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "MintingActivity",
              "canonicalReference": "stellar-tokenomics!~MintingActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "BurningActivity",
              "canonicalReference": "stellar-tokenomics!~BurningActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CreatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$CreatingDelegatedData",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$CreatingDelegatedData:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    UpdatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$UpdatingDelegatedData",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$UpdatingDelegatedData:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DeletingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$DeletingDelegatedData",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$DeletingDelegatedData:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MultipleDelegateActivities: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 22
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegateActivity$CreatingDelegatedData:interface",
          "docComment": "/**\n * A strong type for the canonical form of DelegateActivity$CreatingDelegatedData\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see DelegateActivity$Ergo$CreatingDelegatedData instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateActivity$CreatingDelegatedData "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$CreatingDelegatedData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$CreatingDelegatedData#dataType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$CreatingDelegatedData#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegateActivity$CreatingDelegatedDataLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of DelegateActivity$CreatingDelegatedData\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateActivity$CreatingDelegatedDataLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$CreatingDelegatedDataLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$CreatingDelegatedDataLike#dataType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$CreatingDelegatedDataLike#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegateActivity$DeletingDelegatedData:interface",
          "docComment": "/**\n * A strong type for the canonical form of DelegateActivity$DeletingDelegatedData\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see DelegateActivity$Ergo$DeletingDelegatedData instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateActivity$DeletingDelegatedData "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$DeletingDelegatedData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$DeletingDelegatedData#dataType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$DeletingDelegatedData#recId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "recId: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "recId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegateActivity$DeletingDelegatedDataLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of DelegateActivity$DeletingDelegatedData\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateActivity$DeletingDelegatedDataLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$DeletingDelegatedDataLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$DeletingDelegatedDataLike#dataType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$DeletingDelegatedDataLike#recId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "recId: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "recId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateActivity$Ergo$CreatingDelegatedData:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of DelegateActivity$CreatingDelegatedData\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the DelegateActivity$CreatingDelegatedDataLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$CreatingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$CreatingDelegatedData",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$CreatingDelegatedData:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$CreatingDelegatedData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateActivity$Ergo$DeletingDelegatedData:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of DelegateActivity$DeletingDelegatedData\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the DelegateActivity$DeletingDelegatedDataLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$DeletingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$DeletingDelegatedData",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$DeletingDelegatedData:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$DeletingDelegatedData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateActivity$Ergo$UpdatingDelegatedData:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of DelegateActivity$UpdatingDelegatedData\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the DelegateActivity$UpdatingDelegatedDataLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateActivity$Ergo$UpdatingDelegatedData = "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$UpdatingDelegatedData",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$UpdatingDelegatedData:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$Ergo$UpdatingDelegatedData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegateActivity$UpdatingDelegatedData:interface",
          "docComment": "/**\n * A strong type for the canonical form of DelegateActivity$UpdatingDelegatedData\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see DelegateActivity$Ergo$UpdatingDelegatedData instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateActivity$UpdatingDelegatedData "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$UpdatingDelegatedData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$UpdatingDelegatedData#dataType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$UpdatingDelegatedData#recId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "recId: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "recId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegateActivity$UpdatingDelegatedDataLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of DelegateActivity$UpdatingDelegatedData\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateActivity$UpdatingDelegatedDataLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateActivity$UpdatingDelegatedDataLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$UpdatingDelegatedDataLike#dataType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$UpdatingDelegatedDataLike#recId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "recId: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "recId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper#$seeded$CreatingDelegatedData:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::DelegateActivity.CreatingDelegatedData\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$CreatingDelegatedData({ dataType })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ dataType: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$CreatingDelegatedData: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        dataType: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        dataType: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingDelegatedData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper#BurningActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested BurningActivity*** type needed for ***DelegateActivity:BurningActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BurningActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityHelperNested",
                  "canonicalReference": "stellar-tokenomics!~BurningActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BurningActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper#CapoLifecycleActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested CapoLifecycleActivity*** type needed for ***DelegateActivity:CapoLifecycleActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get CapoLifecycleActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityHelperNested",
                  "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "CapoLifecycleActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper#CreatingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::DelegateActivity.CreatingDelegatedData\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$CreatingDelegatedData}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegatedData(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        dataType: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegatedData"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper#CreatingDelegatedData:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::DelegateActivity.CreatingDelegatedData\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$CreatingDelegatedDataLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateActivity$CreatingDelegatedDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        dataType: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper#DelegateLifecycleActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested DelegateLifecycleActivity*** type needed for ***DelegateActivity:DelegateLifecycleActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get DelegateLifecycleActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityHelperNested",
                  "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateLifecycleActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper#DeletingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::DelegateActivity.DeletingDelegatedData\"***\n *\n * @remarks\n *\n * - ***DelegateActivity$DeletingDelegatedDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DeletingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$DeletingDelegatedDataLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateActivity$DeletingDelegatedDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        dataType: string;\n        recId: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DeletingDelegatedData"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper#MintingActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested MintingActivity*** type needed for ***DelegateActivity:MintingActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintingActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityHelperNested",
                  "canonicalReference": "stellar-tokenomics!~MintingActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintingActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper#MultipleDelegateActivities:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::DelegateActivity.MultipleDelegateActivities\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MultipleDelegateActivities(activities: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "activities",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MultipleDelegateActivities"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper#SpendingActivities:member",
              "docComment": "/**\n * access to different variants of the ***nested SpendingActivity*** type needed for ***DelegateActivity:SpendingActivities***.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendingActivities(): "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityHelperNested",
                  "canonicalReference": "stellar-tokenomics!~SpendingActivityHelperNested:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendingActivities",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper#UpdatingDelegatedData:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::DelegateActivity.UpdatingDelegatedData\"***\n *\n * @remarks\n *\n * - ***DelegateActivity$UpdatingDelegatedDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingDelegatedData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivity$UpdatingDelegatedDataLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateActivity$UpdatingDelegatedDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        dataType: string;\n        recId: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingDelegatedData"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateDatum:type",
          "docComment": "/**\n * DelegateDatum enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the DelegateDatum enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateDatumHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum = "
            },
            {
              "kind": "Content",
              "text": "{\n    Cip68RefToken: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Cip68RefToken",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$Cip68RefToken:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    IsDelegation: "
            },
            {
              "kind": "Reference",
              "text": "DelegationDetail",
              "canonicalReference": "stellar-tokenomics!~DelegationDetail:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    capoStoredData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$capoStoredData",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$capoStoredData:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegateDatum$capoStoredData:interface",
          "docComment": "/**\n * A strong type for the canonical form of DelegateDatum$capoStoredData\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see DelegateDatum$Ergo$capoStoredData instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateDatum$capoStoredData "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$capoStoredData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$capoStoredData#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$capoStoredData#otherDetails:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "otherDetails",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$capoStoredData#version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegateDatum$capoStoredDataLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of DelegateDatum$capoStoredData\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateDatum$capoStoredDataLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$capoStoredDataLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$capoStoredDataLike#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataLike",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$capoStoredDataLike#otherDetails:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "otherDetails",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$capoStoredDataLike#version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegateDatum$Cip68RefToken:interface",
          "docComment": "/**\n * A strong type for the canonical form of DelegateDatum$Cip68RefToken\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see DelegateDatum$Ergo$Cip68RefToken instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateDatum$Cip68RefToken "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Cip68RefToken",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$Cip68RefToken#cip68meta:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cip68meta: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyData",
                  "canonicalReference": "stellar-tokenomics!~AnyData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cip68meta",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$Cip68RefToken#cip68version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cip68version: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cip68version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$Cip68RefToken#otherDetails:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "otherDetails",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegateDatum$Cip68RefTokenLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of DelegateDatum$Cip68RefToken\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateDatum$Cip68RefTokenLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Cip68RefTokenLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$Cip68RefTokenLike#cip68meta:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cip68meta: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "stellar-tokenomics!~AnyDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cip68meta",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$Cip68RefTokenLike#cip68version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cip68version: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cip68version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$Cip68RefTokenLike#otherDetails:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "otherDetails",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateDatum$Ergo$capoStoredData:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of DelegateDatum$capoStoredData\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the DelegateDatum$capoStoredDataLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Ergo$capoStoredData = "
            },
            {
              "kind": "Content",
              "text": "{\n    data: "
            },
            {
              "kind": "Reference",
              "text": "ErgoMarketSaleData",
              "canonicalReference": "stellar-tokenomics!~ErgoMarketSaleData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Ergo$capoStoredData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateDatum$Ergo$Cip68RefToken:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of DelegateDatum$Cip68RefToken\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the DelegateDatum$Cip68RefTokenLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateDatum$Ergo$Cip68RefToken = "
            },
            {
              "kind": "Content",
              "text": "{\n    cip68meta: "
            },
            {
              "kind": "Reference",
              "text": "ErgoAnyData",
              "canonicalReference": "stellar-tokenomics!~ErgoAnyData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    cip68version: bigint;\n    otherDetails: "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateDatum$Ergo$Cip68RefToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~DelegateDatumHelper:class",
          "docComment": "/**\n * Helper class for generating InlineTxOutputDatum for variants of the ***DelegateDatum*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateDatumHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateDatumHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateDatumHelper#capoStoredData:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"MarketSalePolicy::DelegateDatum.capoStoredData\"***\n *\n * @remarks\n *\n * - ***DelegateDatum$capoStoredDataLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capoStoredData(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$capoStoredDataLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateDatum$capoStoredDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        data: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataLike",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        version: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "capoStoredData"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateDatumHelper#Cip68RefToken:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"MarketSalePolicy::DelegateDatum.Cip68RefToken\"***\n *\n * @remarks\n *\n * - ***DelegateDatum$Cip68RefTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Cip68RefToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Cip68RefTokenLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateDatum$Cip68RefTokenLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        cip68meta: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "stellar-tokenomics!~AnyDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cip68version: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        otherDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Cip68RefToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateDatumHelper#IsDelegation:member(1)",
              "docComment": "/**\n * generates InlineTxOutputDatum for ***\"MarketSalePolicy::DelegateDatum.IsDelegation\"***\n *\n * @remarks\n *\n * - ***DelegationDetailLike*** is the same as the expanded field-type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "IsDelegation(dd: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "stellar-tokenomics!~DelegationDetailLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        capoAddr: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tn: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "InlineTxOutputDatum",
                  "canonicalReference": "@helios-lang/ledger!InlineTxOutputDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dd",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "IsDelegation"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity:type",
          "docComment": "/**\n * DelegateLifecycleActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the DelegateLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateLifecycleActivityHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMe",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$ReplacingMe:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$Ergo$ReplacingMe:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of DelegateLifecycleActivity$ReplacingMe\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the DelegateLifecycleActivity$ReplacingMeLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivity$Ergo$ReplacingMe = "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMe",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$ReplacingMe:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$Ergo$ReplacingMe",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$ReplacingMe:interface",
          "docComment": "/**\n * A strong type for the canonical form of DelegateLifecycleActivity$ReplacingMe\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see DelegateLifecycleActivity$Ergo$ReplacingMe instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateLifecycleActivity$ReplacingMe "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$ReplacingMe",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$ReplacingMe#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$ReplacingMe#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$ReplacingMeLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of DelegateLifecycleActivity$ReplacingMe\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegateLifecycleActivity$ReplacingMeLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivity$ReplacingMeLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$ReplacingMeLike#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$ReplacingMeLike#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateLifecycleActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateLifecycleActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateLifecycleActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelper#$seeded$ReplacingMe:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$ReplacingMe({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$ReplacingMe: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$ReplacingMe",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelper#ReplacingMe:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$ReplacingMe}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelper#ReplacingMe:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$ReplacingMeLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelper#Retiring:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Retiring(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Retiring",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelper#ValidatingSettings:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ValidatingSettings(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ValidatingSettings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateLifecycleActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateLifecycleActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateLifecycleActivityHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelperNested#$seeded$ReplacingMe:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$ReplacingMe({ purpose })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ purpose: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$ReplacingMe: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$ReplacingMe",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelperNested#ReplacingMe:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$ReplacingMe}` for use in a context providing an implicit seed utxo. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelperNested#ReplacingMe:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ReplacingMe\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ReplacingMe(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivity$ReplacingMeLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$ReplacingMeLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ReplacingMe"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelperNested#Retiring:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.Retiring\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Retiring(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Retiring",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelperNested#ValidatingSettings:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateLifecycleActivity.ValidatingSettings\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get ValidatingSettings(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        redeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ValidatingSettings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityLike:type",
          "docComment": "/**\n * DelegateLifecycleActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the DelegateLifecycleActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateLifecycleActivityHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateLifecycleActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$ReplacingMeLike",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$ReplacingMeLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateLifecycleActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateRole_2:type",
          "docComment": "/**\n * DelegateRole enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **8 variant(s)** of the DelegateRole enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateRoleHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRole = "
            },
            {
              "kind": "Content",
              "text": "{\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: string;\n} | {\n    OtherNamedDgt: string;\n} | {\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateRole_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateRole:type",
          "docComment": "/**\n * DelegateRole enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **8 variant(s)** of the DelegateRole enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateRoleHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRole = "
            },
            {
              "kind": "Content",
              "text": "{\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: string;\n} | {\n    OtherNamedDgt: string;\n} | {\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateRole",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~DelegateRoleHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateRoleHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateRoleHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelper#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelper#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelper#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelper#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelper#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelper#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelper#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelper#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~DelegateRoleHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***DelegateRole*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DelegateRoleHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DelegateRoleHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelperNested#BothMintAndSpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.BothMintAndSpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#6***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get BothMintAndSpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "BothMintAndSpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelperNested#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.DgDataPolicy\"***\n *\n * @remarks\n *\n * #### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelperNested#HandledByCapoOnly:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.HandledByCapoOnly\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#7***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get HandledByCapoOnly(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "HandledByCapoOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelperNested#MintDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelperNested#MintInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.MintInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MintInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MintInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelperNested#OtherNamedDgt:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::DelegateRole.OtherNamedDgt\"***\n *\n * @remarks\n *\n * #### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherNamedDgt(name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherNamedDgt"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelperNested#SpendDgt:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendDgt\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendDgt(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~DelegateRoleHelperNested#SpendInvariant:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::DelegateRole.SpendInvariant\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SpendInvariant(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SpendInvariant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~DelegateRoleLike:type",
          "docComment": "/**\n * DelegateRole enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **8 variant(s)** of the DelegateRole enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `DelegateRoleHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DelegateRoleLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    MintDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendInvariant: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: string;\n} | {\n    OtherNamedDgt: string;\n} | {\n    BothMintAndSpendDgt: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    HandledByCapoOnly: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegateRoleLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegationDetail:interface",
          "docComment": "/**\n * A strong type for the canonical form of DelegationDetail\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoDelegationDetail instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegationDetail "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegationDetail",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegationDetail#capoAddr:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capoAddr: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capoAddr",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegationDetail#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegationDetail#tn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tn: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DelegationDetailLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of DelegationDetail\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DelegationDetailLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DelegationDetailLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegationDetailLike#capoAddr:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capoAddr: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capoAddr",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegationDetailLike#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DelegationDetailLike#tn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tn: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~dgd_DataSrc:type",
          "docComment": "/**\n * dgd_DataSrc enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **4 variant(s)** of the dgd_DataSrc enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `dgd_DataSrcHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrc = "
            },
            {
              "kind": "Content",
              "text": "{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Output: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Both: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$Both",
              "canonicalReference": "stellar-tokenomics!~dgd_DataSrc$Both:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrc",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~dgd_DataSrc$Both:interface",
          "docComment": "/**\n * A strong type for the canonical form of dgd_DataSrc$Both\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see dgd_DataSrc$Ergo$Both instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface dgd_DataSrc$Both "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrc$Both",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~dgd_DataSrc$Both#txo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "txo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~dgd_DataSrc$Both#utxo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "utxo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~dgd_DataSrc$BothLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of dgd_DataSrc$Both\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface dgd_DataSrc$BothLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrc$BothLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~dgd_DataSrc$BothLike#txo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "txo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~dgd_DataSrc$BothLike#utxo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "utxo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~dgd_DataSrc$Ergo$Both:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of dgd_DataSrc$Both\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the dgd_DataSrc$BothLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrc$Ergo$Both = "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$Both",
              "canonicalReference": "stellar-tokenomics!~dgd_DataSrc$Both:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrc$Ergo$Both",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~dgd_DataSrcHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***dgd_DataSrc*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class dgd_DataSrcHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "dgd_DataSrcHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~dgd_DataSrcHelper#Both:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::dgd_DataSrc.Both\"***\n *\n * @remarks\n *\n * - ***dgd_DataSrc$BothLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Both(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrc$BothLike",
                  "canonicalReference": "stellar-tokenomics!~dgd_DataSrc$BothLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        txo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Both"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~dgd_DataSrcHelper#Input:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::dgd_DataSrc.Input\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Input(utxo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "utxo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Input"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~dgd_DataSrcHelper#Output:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::dgd_DataSrc.Output\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Output(txo: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutput",
                  "canonicalReference": "@helios-lang/ledger!TxOutput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "txo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Output"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~dgd_DataSrcHelper#Unk:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::dgd_DataSrc.Unk\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Unk(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Unk",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~dgd_DataSrcLike:type",
          "docComment": "/**\n * dgd_DataSrc enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **4 variant(s)** of the dgd_DataSrc enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `dgd_DataSrcHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type dgd_DataSrcLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Output: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Both: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$BothLike",
              "canonicalReference": "stellar-tokenomics!~dgd_DataSrc$BothLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "dgd_DataSrcLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DgDataDetails:interface",
          "docComment": "/**\n * A strong type for the canonical form of DgDataDetails\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoDgDataDetails instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DgDataDetails "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DgDataDetails",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DgDataDetails#dataSrc:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataSrc: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrc",
                  "canonicalReference": "stellar-tokenomics!~dgd_DataSrc:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataSrc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DgDataDetails#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DgDataDetails#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DgDataDetails#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DgDataDetailsLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of DgDataDetails\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DgDataDetailsLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DgDataDetailsLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DgDataDetailsLike#dataSrc:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataSrc: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrcLike",
                  "canonicalReference": "stellar-tokenomics!~dgd_DataSrcLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataSrc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DgDataDetailsLike#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DgDataDetailsLike#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DgDataDetailsLike#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfo:interface",
          "docComment": "/**\n * A strong type for the canonical form of DTS_PurchaseInfo\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoDTS_PurchaseInfo instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DTS_PurchaseInfo "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DTS_PurchaseInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfo#hoursSinceLastPurchase:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hoursSinceLastPurchase: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hoursSinceLastPurchase",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfo#inferredPace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inferredPace: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inferredPace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfo#prevSalePace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prevSalePace: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prevSalePace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfo#purchaseTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purchaseTime: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purchaseTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfo#totalProgress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "totalProgress: "
                },
                {
                  "kind": "Reference",
                  "text": "SaleProgressDetails",
                  "canonicalReference": "stellar-tokenomics!~SaleProgressDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "totalProgress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfo#unitsPurchased:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unitsPurchased: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "unitsPurchased",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfoLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of DTS_PurchaseInfo\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DTS_PurchaseInfoLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DTS_PurchaseInfoLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfoLike#hoursSinceLastPurchase:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hoursSinceLastPurchase: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hoursSinceLastPurchase",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfoLike#inferredPace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inferredPace: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inferredPace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfoLike#prevSalePace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prevSalePace: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prevSalePace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfoLike#purchaseTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purchaseTime: "
                },
                {
                  "kind": "Reference",
                  "text": "TimeLike",
                  "canonicalReference": "stellar-tokenomics!~TimeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purchaseTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfoLike#totalProgress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "totalProgress: "
                },
                {
                  "kind": "Reference",
                  "text": "SaleProgressDetailsLike",
                  "canonicalReference": "stellar-tokenomics!~SaleProgressDetailsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "totalProgress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfoLike#unitsPurchased:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unitsPurchased: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "unitsPurchased",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DynamicSaleV1:interface",
          "docComment": "/**\n * A strong type for the canonical form of DynamicSaleV1\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoDynamicSaleV1 instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DynamicSaleV1 "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DynamicSaleV1",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1#purchase:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purchase: "
                },
                {
                  "kind": "Reference",
                  "text": "DTS_PurchaseInfo",
                  "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purchase",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1#sale:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sale: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1#settings:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "settings: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1Settings",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "settings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1#updatedSale:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatedSale: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatedSale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Like:interface",
          "docComment": "/**\n * A strong type for the permissive form of DynamicSaleV1\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DynamicSaleV1Like "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DynamicSaleV1Like",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Like#purchase:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purchase: "
                },
                {
                  "kind": "Reference",
                  "text": "DTS_PurchaseInfoLike",
                  "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfoLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purchase",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Like#sale:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sale: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataLike",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Like#settings:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "settings: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1SettingsLike",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "settings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Like#updatedSale:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatedSale: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataLike",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updatedSale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings:interface",
          "docComment": "/**\n * A strong type for the canonical form of DynamicSaleV1Settings\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoDynamicSaleV1Settings instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DynamicSaleV1Settings "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DynamicSaleV1Settings",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings#dynaPaceFasterSaleWeight:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dynaPaceFasterSaleWeight: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dynaPaceFasterSaleWeight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings#dynaPaceIdleDecayRate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dynaPaceIdleDecayRate: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dynaPaceIdleDecayRate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings#maxPrice:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxPrice: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxPrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings#minPrice:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minPrice: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minPrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings#pricingWeightDynaPace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pricingWeightDynaPace: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pricingWeightDynaPace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings#progressPricingDiscountFloorPoint:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "progressPricingDiscountFloorPoint: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "progressPricingDiscountFloorPoint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings#progressPricingDiscountWhenSlow:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "progressPricingDiscountWhenSlow: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "progressPricingDiscountWhenSlow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings#progressPricingExpansionWhenFast:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "progressPricingExpansionWhenFast: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "progressPricingExpansionWhenFast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings#targetedSellingTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "targetedSellingTime: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "targetedSellingTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings#targetPrice:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "targetPrice: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "targetPrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of DynamicSaleV1Settings\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DynamicSaleV1SettingsLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "DynamicSaleV1SettingsLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike#dynaPaceFasterSaleWeight:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dynaPaceFasterSaleWeight: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dynaPaceFasterSaleWeight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike#dynaPaceIdleDecayRate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dynaPaceIdleDecayRate: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dynaPaceIdleDecayRate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike#maxPrice:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "maxPrice: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxPrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike#minPrice:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minPrice: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minPrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike#pricingWeightDynaPace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pricingWeightDynaPace: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pricingWeightDynaPace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike#progressPricingDiscountFloorPoint:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "progressPricingDiscountFloorPoint: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "progressPricingDiscountFloorPoint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike#progressPricingDiscountWhenSlow:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "progressPricingDiscountWhenSlow: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "progressPricingDiscountWhenSlow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike#progressPricingExpansionWhenFast:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "progressPricingExpansionWhenFast: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "progressPricingExpansionWhenFast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike#targetedSellingTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "targetedSellingTime: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "targetedSellingTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike#targetPrice:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "targetPrice: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "targetPrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoAnyData:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of AnyData\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the AnyDataLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoAnyData = "
            },
            {
              "kind": "Reference",
              "text": "AnyData",
              "canonicalReference": "stellar-tokenomics!~AnyData:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoAnyData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoBurningActivity:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoBurningActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    DeletingRecord: number[];\n} | {\n    JoiningWithParentChunk: "
            },
            {
              "kind": "Reference",
              "text": "BurningActivity$Ergo$JoiningWithParentChunk",
              "canonicalReference": "stellar-tokenomics!~BurningActivity$Ergo$JoiningWithParentChunk:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CleanupRetired: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoBurningActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoCapoLifecycleActivity:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoLifecycleActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$CreatingDelegate",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$Ergo$CreatingDelegate:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    queuePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    removePendingChange: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "stellar-tokenomics!~ErgoDelegateRole_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    commitPendingChanges: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewSpendDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$forcingNewSpendDelegate",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$Ergo$forcingNewSpendDelegate:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forcingNewMintDelegate: "
            },
            {
              "kind": "Reference",
              "text": "CapoLifecycleActivity$Ergo$forcingNewMintDelegate",
              "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivity$Ergo$forcingNewMintDelegate:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    updatingManifest: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestActivity",
              "canonicalReference": "stellar-tokenomics!~ErgoManifestActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoLifecycleActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoCapoManifestEntry_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of CapoManifestEntry\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the CapoManifestEntryLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoManifestEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestEntryType",
              "canonicalReference": "stellar-tokenomics!~ErgoManifestEntryType_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoManifestEntry_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoCapoManifestEntry:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of CapoManifestEntry\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the CapoManifestEntryLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoCapoManifestEntry = "
            },
            {
              "kind": "Content",
              "text": "{\n    entryType: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestEntryType",
              "canonicalReference": "stellar-tokenomics!~ErgoManifestEntryType:type"
            },
            {
              "kind": "Content",
              "text": ";\n    tokenName: number[];\n    mph: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "MintingPolicyHash",
              "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoCapoManifestEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~Ergocctx_CharterInputType:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Ergocctx_CharterInputType = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    RefInput: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Ergo$RefInput",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$Ergo$RefInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "cctx_CharterInputType$Ergo$Input",
              "canonicalReference": "stellar-tokenomics!~cctx_CharterInputType$Ergo$Input:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "Ergocctx_CharterInputType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoDelegateActivity:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CapoLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoCapoLifecycleActivity",
              "canonicalReference": "stellar-tokenomics!~ErgoCapoLifecycleActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateLifecycleActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateLifecycleActivity",
              "canonicalReference": "stellar-tokenomics!~ErgoDelegateLifecycleActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SpendingActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoSpendingActivity",
              "canonicalReference": "stellar-tokenomics!~ErgoSpendingActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MintingActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoMintingActivity",
              "canonicalReference": "stellar-tokenomics!~ErgoMintingActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    BurningActivities: "
            },
            {
              "kind": "Reference",
              "text": "ErgoBurningActivity",
              "canonicalReference": "stellar-tokenomics!~ErgoBurningActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    CreatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$CreatingDelegatedData",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$Ergo$CreatingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    UpdatingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$UpdatingDelegatedData",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$Ergo$UpdatingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DeletingDelegatedData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateActivity$Ergo$DeletingDelegatedData",
              "canonicalReference": "stellar-tokenomics!~DelegateActivity$Ergo$DeletingDelegatedData:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MultipleDelegateActivities: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 23
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoDelegateDatum:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateDatum = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Cip68RefToken: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Ergo$Cip68RefToken",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$Ergo$Cip68RefToken:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    IsDelegation: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegationDetail",
              "canonicalReference": "stellar-tokenomics!~ErgoDelegationDetail:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    capoStoredData: "
            },
            {
              "kind": "Reference",
              "text": "DelegateDatum$Ergo$capoStoredData",
              "canonicalReference": "stellar-tokenomics!~DelegateDatum$Ergo$capoStoredData:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateDatum",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoDelegateLifecycleActivity:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateLifecycleActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    ReplacingMe: "
            },
            {
              "kind": "Reference",
              "text": "DelegateLifecycleActivity$Ergo$ReplacingMe",
              "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivity$Ergo$ReplacingMe:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    ValidatingSettings: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateLifecycleActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoDelegateRole_2:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateRole = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "stellar-tokenomics!~DelegateRole_2:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateRole_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoDelegateRole:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegateRole = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DelegateRole",
              "canonicalReference": "stellar-tokenomics!~DelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegateRole",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoDelegationDetail:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of DelegationDetail\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the DelegationDetailLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDelegationDetail = "
            },
            {
              "kind": "Reference",
              "text": "DelegationDetail",
              "canonicalReference": "stellar-tokenomics!~DelegationDetail:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoDelegationDetail",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~Ergodgd_DataSrc:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Ergodgd_DataSrc = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Unk: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Input: "
            },
            {
              "kind": "Reference",
              "text": "TxInput",
              "canonicalReference": "@helios-lang/ledger!TxInput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Output: "
            },
            {
              "kind": "Reference",
              "text": "TxOutput",
              "canonicalReference": "@helios-lang/ledger!TxOutput:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Both: "
            },
            {
              "kind": "Reference",
              "text": "dgd_DataSrc$Ergo$Both",
              "canonicalReference": "stellar-tokenomics!~dgd_DataSrc$Ergo$Both:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "Ergodgd_DataSrc",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoDynamicSaleV1Settings:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of DynamicSaleV1Settings\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the DynamicSaleV1SettingsLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoDynamicSaleV1Settings = "
            },
            {
              "kind": "Reference",
              "text": "DynamicSaleV1Settings",
              "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoDynamicSaleV1Settings",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoFixedSaleDetails:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of FixedSaleDetails\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the FixedSaleDetailsLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoFixedSaleDetails = "
            },
            {
              "kind": "Content",
              "text": "{\n    settings: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDynamicSaleV1Settings",
              "canonicalReference": "stellar-tokenomics!~ErgoDynamicSaleV1Settings:type"
            },
            {
              "kind": "Content",
              "text": ";\n    startAt: number;\n    vxfTokensTo: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ErgoVxfDestination",
              "canonicalReference": "stellar-tokenomics!~ErgoVxfDestination:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    vxfFundsTo: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ErgoVxfDestination",
              "canonicalReference": "stellar-tokenomics!~ErgoVxfDestination:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoFixedSaleDetails",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoManifestActivity_2:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$updatingEntry",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$updatingEntry_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$addingEntry",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$addingEntry_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$forkingThreadToken",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$forkingThreadToken_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$burningThreadToken",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$burningThreadToken_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestActivity_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoManifestActivity:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$updatingEntry",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$updatingEntry:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$addingEntry",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$addingEntry:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$forkingThreadToken",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$forkingThreadToken:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$Ergo$burningThreadToken",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$burningThreadToken:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoManifestEntryType_2:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestEntryType = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DgDataPolicy",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$Ergo$DgDataPolicy_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DelegateThreads",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$Ergo$DelegateThreads_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestEntryType_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoManifestEntryType:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoManifestEntryType = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DgDataPolicy",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$Ergo$DgDataPolicy:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$Ergo$DelegateThreads",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$Ergo$DelegateThreads:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoManifestEntryType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoMarketSaleData:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of MarketSaleData\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the MarketSaleDataLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoMarketSaleData = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: number[];\n    type: string;\n    name: string;\n    moreFields: "
            },
            {
              "kind": "Reference",
              "text": "ErgoMoreFields",
              "canonicalReference": "stellar-tokenomics!~ErgoMoreFields:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoMarketSaleData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoMarketSaleState:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoMarketSaleState = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MarketSaleState",
              "canonicalReference": "stellar-tokenomics!~MarketSaleState:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoMarketSaleState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoMintingActivity:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoMintingActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingRecord: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SplittingSaleChunkAndBuying: "
            },
            {
              "kind": "Reference",
              "text": "MintingActivity$Ergo$SplittingSaleChunkAndBuying",
              "canonicalReference": "stellar-tokenomics!~MintingActivity$Ergo$SplittingSaleChunkAndBuying:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoMintingActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoMoreFields:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of MoreFields\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the MoreFieldsLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoMoreFields = "
            },
            {
              "kind": "Content",
              "text": "{\n    saleState: "
            },
            {
              "kind": "Reference",
              "text": "ErgoOtherSaleState",
              "canonicalReference": "stellar-tokenomics!~ErgoOtherSaleState:type"
            },
            {
              "kind": "Content",
              "text": ";\n    fixedSaleDetails: "
            },
            {
              "kind": "Reference",
              "text": "ErgoFixedSaleDetails",
              "canonicalReference": "stellar-tokenomics!~ErgoFixedSaleDetails:type"
            },
            {
              "kind": "Content",
              "text": ";\n    saleAssets: "
            },
            {
              "kind": "Reference",
              "text": "ErgoSaleAssets",
              "canonicalReference": "stellar-tokenomics!~ErgoSaleAssets:type"
            },
            {
              "kind": "Content",
              "text": ";\n    threadInfo: "
            },
            {
              "kind": "Reference",
              "text": "ErgoThreadInfo",
              "canonicalReference": "stellar-tokenomics!~ErgoThreadInfo:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoMoreFields",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoOtherSaleState:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of OtherSaleState\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the OtherSaleStateLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoOtherSaleState = "
            },
            {
              "kind": "Content",
              "text": "{\n    progressDetails: "
            },
            {
              "kind": "Reference",
              "text": "ErgoSaleProgressDetails",
              "canonicalReference": "stellar-tokenomics!~ErgoSaleProgressDetails:type"
            },
            {
              "kind": "Content",
              "text": ";\n    salePace: number;\n    state: "
            },
            {
              "kind": "Reference",
              "text": "ErgoMarketSaleState",
              "canonicalReference": "stellar-tokenomics!~ErgoMarketSaleState:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoOtherSaleState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoPendingCharterChange_2:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingCharterChange = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateChange",
              "canonicalReference": "stellar-tokenomics!~ErgoPendingDelegateChange_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$Ergo$otherManifestChange",
              "canonicalReference": "stellar-tokenomics!~PendingCharterChange$Ergo$otherManifestChange_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingCharterChange_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoPendingCharterChange:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingCharterChange = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateChange",
              "canonicalReference": "stellar-tokenomics!~ErgoPendingDelegateChange:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$Ergo$otherManifestChange",
              "canonicalReference": "stellar-tokenomics!~PendingCharterChange$Ergo$otherManifestChange:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingCharterChange",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoPendingDelegateAction_2:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateAction = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Add",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Ergo$Add_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Replace",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Ergo$Replace_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateAction_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoPendingDelegateAction:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateAction = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Add",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Ergo$Add:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Ergo$Replace",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Ergo$Replace:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateAction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoPendingDelegateChange_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of PendingDelegateChange\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the PendingDelegateChangeLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateAction",
              "canonicalReference": "stellar-tokenomics!~ErgoPendingDelegateAction_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "stellar-tokenomics!~ErgoDelegateRole_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateChange_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoPendingDelegateChange:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of PendingDelegateChange\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the PendingDelegateChangeLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoPendingDelegateChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    action: "
            },
            {
              "kind": "Reference",
              "text": "ErgoPendingDelegateAction",
              "canonicalReference": "stellar-tokenomics!~ErgoPendingDelegateAction:type"
            },
            {
              "kind": "Content",
              "text": ";\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "stellar-tokenomics!~ErgoDelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dgtLink: /*minStructField*/ "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoPendingDelegateChange",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of RelativeDelegateLink\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the RelativeDelegateLinkLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoRelativeDelegateLink = "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoRelativeDelegateLink_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of RelativeDelegateLink\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the RelativeDelegateLinkLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoRelativeDelegateLink = "
            },
            {
              "kind": "Reference",
              "text": "RelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoRelativeDelegateLink",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoSaleAssets:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of SaleAssets\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the SaleAssetsLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoSaleAssets = "
            },
            {
              "kind": "Reference",
              "text": "SaleAssets",
              "canonicalReference": "stellar-tokenomics!~SaleAssets:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoSaleAssets",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoSaleProgressDetails:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of SaleProgressDetails\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the SaleProgressDetailsLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoSaleProgressDetails = "
            },
            {
              "kind": "Reference",
              "text": "SaleProgressDetails",
              "canonicalReference": "stellar-tokenomics!~SaleProgressDetails:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoSaleProgressDetails",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoSpendingActivity:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoSpendingActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    UpdatingRecord: number[];\n} | {\n    AddingToSale: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity$Ergo$AddingToSale",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$Ergo$AddingToSale:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Activating: number[];\n} | {\n    SellingTokens: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity$Ergo$SellingTokens",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$Ergo$SellingTokens:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MergingChildChunk: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity$Ergo$MergingChildChunk",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$Ergo$MergingChildChunk:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: number[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoSpendingActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoThreadInfo:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ThreadInfo\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ThreadInfoLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoThreadInfo = "
            },
            {
              "kind": "Reference",
              "text": "ThreadInfo",
              "canonicalReference": "stellar-tokenomics!~ThreadInfo:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoThreadInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoVxfDestination:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoVxfDestination = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    RelativeLink: "
            },
            {
              "kind": "Reference",
              "text": "VxfDestination$Ergo$RelativeLink",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$Ergo$RelativeLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    AnyTokenHolder: "
            },
            {
              "kind": "Reference",
              "text": "VxfDestination$Ergo$AnyTokenHolder",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$Ergo$AnyTokenHolder:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    PubKey: "
            },
            {
              "kind": "Reference",
              "text": "PubKeyHash",
              "canonicalReference": "@helios-lang/ledger!PubKeyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Anywhere: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    NotYetDefined: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoVxfDestination",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ErgoVxfExpectedActivity:type",
          "docComment": "/**\n * ergonomic type enabling easy access to values converted from the on-chain form\n *\n * @remarks\n *\n * The data will be expressed in canonical form, and enum variants are merged to a single type with optional fields. Nested enums are also merged in this ergonomic way.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ErgoVxfExpectedActivity = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    VxfTransfer: /* implied wrapper { appData: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n} | {\n    VxfStorage: /* implied wrapper { appData: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n} | {\n    SpecificRedeemerId: "
            },
            {
              "kind": "Reference",
              "text": "VxfExpectedActivity$Ergo$SpecificRedeemerId",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$Ergo$SpecificRedeemerId:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    TaggedRedeemer: "
            },
            {
              "kind": "Reference",
              "text": "VxfExpectedActivity$Ergo$TaggedRedeemer",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$Ergo$TaggedRedeemer:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ErgoVxfExpectedActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~FixedSaleDetails:interface",
          "docComment": "/**\n * A strong type for the canonical form of FixedSaleDetails\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoFixedSaleDetails instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FixedSaleDetails "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "FixedSaleDetails",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~FixedSaleDetails#settings:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "settings: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1Settings",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "settings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~FixedSaleDetails#startAt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startAt: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "startAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~FixedSaleDetails#vxfFundsTo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "vxfFundsTo: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "VxfDestination",
                  "canonicalReference": "stellar-tokenomics!~VxfDestination:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "vxfFundsTo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~FixedSaleDetails#vxfTokensTo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "vxfTokensTo: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "VxfDestination",
                  "canonicalReference": "stellar-tokenomics!~VxfDestination:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "vxfTokensTo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~FixedSaleDetailsLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of FixedSaleDetails\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FixedSaleDetailsLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "FixedSaleDetailsLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~FixedSaleDetailsLike#settings:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "settings: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1SettingsLike",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "settings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~FixedSaleDetailsLike#startAt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startAt: "
                },
                {
                  "kind": "Reference",
                  "text": "TimeLike",
                  "canonicalReference": "stellar-tokenomics!~TimeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "startAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~FixedSaleDetailsLike#vxfFundsTo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "vxfFundsTo: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "VxfDestinationLike",
                  "canonicalReference": "stellar-tokenomics!~VxfDestinationLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "vxfFundsTo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~FixedSaleDetailsLike#vxfTokensTo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "vxfTokensTo: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "VxfDestinationLike",
                  "canonicalReference": "stellar-tokenomics!~VxfDestinationLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "vxfTokensTo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!GenericTokenomicsFeatureFlags:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GenericTokenomicsFeatureFlags = "
            },
            {
              "kind": "Content",
              "text": "{\n    mktSale: boolean;\n    fundedPurpose: boolean;\n    vesting: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarTokenomicsCapo.ts",
          "releaseTag": "Public",
          "name": "GenericTokenomicsFeatureFlags",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!hasMemberToken:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type hasMemberToken = "
            },
            {
              "kind": "Reference",
              "text": "StellarTxnContext",
              "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "anyState",
              "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    memberToken: "
            },
            {
              "kind": "Reference",
              "text": "UutName",
              "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarTokenomicsCapo.ts",
          "releaseTag": "Public",
          "name": "hasMemberToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~IsStokMintDelegate:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type IsStokMintDelegate = "
            },
            {
              "kind": "Content",
              "text": "{\n    specializedDelegateModule: typeof "
            },
            {
              "kind": "Reference",
              "text": "tokenomicsBasicMintDelegate",
              "canonicalReference": "!value:var"
            },
            {
              "kind": "Content",
              "text": ";\n    requiresGovAuthority: true;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/STokMintDelegate.hlb.ts",
          "releaseTag": "Public",
          "name": "IsStokMintDelegate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "stellar-tokenomics!makeSTokMintDelegateBundle:function(1)",
          "docComment": "/**\n * Creates a typed helper class to use as a mint delegate for tokenomics subclasses\n *\n * ## Usage: In your `MyMintDelegate.hlb.ts`:\n * ```typescript\n *    export const MyMintDelegate = makeSTokMintDelegateBundle(MyCapoBundle, \"MyMintDelegate\")\n *    export default MyMintDelegate\n * ```\n *\n * This HLB file will be compiled to make `.bridge.ts` and `.typeInfo.d.ts` for your delegate. Import the DataBridge and make your `MySpendMintDelegate.ts`, extending `STokMintDelegate` and using:\n * ```typescript\n * export class MyMintSpendDelegate extends STokMintDelegate {\n *    get delegateName() {\n *        return \"MyMintSpendDelegate\";\n *    }\n *    dataBridgeClass = MyMintSpendDelegateDataBridge;\n *     scriptBundle(): CapoDelegateBundle {\n *        return MyMintSpendDelegateBundle.create();\n *     }\n * ```\n *\n * Use your Mint Delegate class in your Capo:\n * ```typescript\n * delegateRoles({\n *    spendDelegate: defineRole(\"spendDgt\", MyMintSpendDelegate, {}),\n *    mintDelegate: defineRole(\"mintDgt\", MyMintSpendDelegate, {}),\n * })\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function makeSTokMintDelegateBundle(capoBundle: "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "CapoHeliosBundle",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoHeliosBundle:class"
            },
            {
              "kind": "Content",
              "text": ", delegateName: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ConcreteCapoDelegateBundle",
              "canonicalReference": "@donecollectively/stellar-contracts!ConcreteCapoDelegateBundle:type"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "Constructor",
              "canonicalReference": "stellar-tokenomics!~Constructor:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "STokMintDelegateBundle",
              "canonicalReference": "stellar-tokenomics!~STokMintDelegateBundle:class"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "IsStokMintDelegate",
              "canonicalReference": "stellar-tokenomics!~IsStokMintDelegate:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/STokMintDelegate.hlb.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "capoBundle",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "delegateName",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "name": "makeSTokMintDelegateBundle"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity:type",
          "docComment": "/**\n * ManifestActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **5 variant(s)** of the ManifestActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestActivityHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntry_2:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntry_2:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadToken_2:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadToken_2:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntry_2:interface",
          "docComment": "/**\n * A strong type for the canonical form of ManifestActivity$addingEntry\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ManifestActivity$Ergo$addingEntry instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestActivity$addingEntry "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$addingEntry_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntry_2#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntry_2#tokenName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntry:interface",
          "docComment": "/**\n * A strong type for the canonical form of ManifestActivity$addingEntry\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ManifestActivity$Ergo$addingEntry instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestActivity$addingEntry "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$addingEntry",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntry#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntry#tokenName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntryLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of ManifestActivity$addingEntry\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestActivity$addingEntryLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$addingEntryLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntryLike#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntryLike#tokenName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadToken_2:interface",
          "docComment": "/**\n * A strong type for the canonical form of ManifestActivity$burningThreadToken\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ManifestActivity$Ergo$burningThreadToken instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestActivity$burningThreadToken "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$burningThreadToken_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadToken_2#burnedThreadCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burnedThreadCount: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "burnedThreadCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadToken_2#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadToken:interface",
          "docComment": "/**\n * A strong type for the canonical form of ManifestActivity$burningThreadToken\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ManifestActivity$Ergo$burningThreadToken instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestActivity$burningThreadToken "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$burningThreadToken",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadToken#burnedThreadCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burnedThreadCount: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "burnedThreadCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadToken#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadTokenLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of ManifestActivity$burningThreadToken\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestActivity$burningThreadTokenLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$burningThreadTokenLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadTokenLike#burnedThreadCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burnedThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "burnedThreadCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadTokenLike#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$addingEntry_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ManifestActivity$addingEntry\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ManifestActivity$addingEntryLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$addingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntry_2:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$addingEntry_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$addingEntry:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ManifestActivity$addingEntry\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ManifestActivity$addingEntryLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$addingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntry",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntry:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$addingEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$burningThreadToken_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ManifestActivity$burningThreadToken\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ManifestActivity$burningThreadTokenLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$burningThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadToken_2:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$burningThreadToken_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$burningThreadToken:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ManifestActivity$burningThreadToken\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ManifestActivity$burningThreadTokenLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$burningThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadToken",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadToken:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$burningThreadToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$forkingThreadToken_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ManifestActivity$forkingThreadToken\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ManifestActivity$forkingThreadTokenLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$forkingThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadToken_2:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$forkingThreadToken_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$forkingThreadToken:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ManifestActivity$forkingThreadToken\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ManifestActivity$forkingThreadTokenLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$forkingThreadToken = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadToken",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadToken:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$forkingThreadToken",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$updatingEntry_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ManifestActivity$updatingEntry\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ManifestActivity$updatingEntryLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$updatingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntry_2:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$updatingEntry_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$Ergo$updatingEntry:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ManifestActivity$updatingEntry\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ManifestActivity$updatingEntryLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivity$Ergo$updatingEntry = "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntry",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntry:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$Ergo$updatingEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadToken_2:interface",
          "docComment": "/**\n * A strong type for the canonical form of ManifestActivity$forkingThreadToken\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ManifestActivity$Ergo$forkingThreadToken instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestActivity$forkingThreadToken "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$forkingThreadToken_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadToken_2#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadToken_2#newThreadCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newThreadCount: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newThreadCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadToken:interface",
          "docComment": "/**\n * A strong type for the canonical form of ManifestActivity$forkingThreadToken\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ManifestActivity$Ergo$forkingThreadToken instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestActivity$forkingThreadToken "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$forkingThreadToken",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadToken#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadToken#newThreadCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newThreadCount: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newThreadCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadTokenLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of ManifestActivity$forkingThreadToken\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestActivity$forkingThreadTokenLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$forkingThreadTokenLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadTokenLike#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadTokenLike#newThreadCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newThreadCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntry_2:interface",
          "docComment": "/**\n * A strong type for the canonical form of ManifestActivity$updatingEntry\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ManifestActivity$Ergo$updatingEntry instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestActivity$updatingEntry "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$updatingEntry_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntry_2#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntry_2#tokenName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntry:interface",
          "docComment": "/**\n * A strong type for the canonical form of ManifestActivity$updatingEntry\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ManifestActivity$Ergo$updatingEntry instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestActivity$updatingEntry "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$updatingEntry",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntry#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntry#tokenName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntryLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of ManifestActivity$updatingEntry\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestActivity$updatingEntryLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivity$updatingEntryLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntryLike#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntryLike#tokenName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tokenName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~ManifestActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ManifestActivityHelper#addingEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.addingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntryLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addingEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ManifestActivityHelper#burningThreadToken:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.burningThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burningThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadTokenLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        burnedThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "burningThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ManifestActivityHelper#forkingThreadToken:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.forkingThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forkingThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadTokenLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        newThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forkingThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ManifestActivityHelper#retiringEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.retiringEntry\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retiringEntry(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "retiringEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ManifestActivityHelper#updatingEntry:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::ManifestActivity.updatingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntryLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatingEntry"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~ManifestActivityHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestActivityHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ManifestActivityHelperNested#addingEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.addingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$addingEntryLike*** is the same as the expanded field-types. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$addingEntryLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntryLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addingEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ManifestActivityHelperNested#burningThreadToken:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.burningThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$burningThreadTokenLike*** is the same as the expanded field-types. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "burningThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$burningThreadTokenLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadTokenLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        burnedThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "burningThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ManifestActivityHelperNested#forkingThreadToken:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.forkingThreadToken\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$forkingThreadTokenLike*** is the same as the expanded field-types. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forkingThreadToken(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$forkingThreadTokenLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadTokenLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        newThreadCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "forkingThreadToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ManifestActivityHelperNested#retiringEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.retiringEntry\"***\n *\n * @remarks\n *\n * #### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retiringEntry(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "retiringEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ManifestActivityHelperNested#updatingEntry:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"CapoDelegateHelpers::ManifestActivity.updatingEntry\"***\n *\n * @remarks\n *\n * - ***ManifestActivity$updatingEntryLike*** is the same as the expanded field-types. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatingEntry(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity$updatingEntryLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntryLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        key: string;\n        tokenName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatingEntry"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestActivityLike:type",
          "docComment": "/**\n * ManifestActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **5 variant(s)** of the ManifestActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestActivityHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    retiringEntry: string;\n} | {\n    updatingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$updatingEntryLike",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$updatingEntryLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    addingEntry: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$addingEntryLike",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$addingEntryLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    forkingThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$forkingThreadTokenLike",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$forkingThreadTokenLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    burningThreadToken: "
            },
            {
              "kind": "Reference",
              "text": "ManifestActivity$burningThreadTokenLike",
              "canonicalReference": "stellar-tokenomics!~ManifestActivity$burningThreadTokenLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestEntryType:type",
          "docComment": "/**\n * ManifestEntryType enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **5 variant(s)** of the ManifestEntryType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestEntryTypeHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType = "
            },
            {
              "kind": "Content",
              "text": "{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DgDataPolicy",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DgDataPolicy:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DelegateThreads",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DelegateThreads:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DelegateThreads:interface",
          "docComment": "/**\n * A strong type for the canonical form of ManifestEntryType$DelegateThreads\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ManifestEntryType$Ergo$DelegateThreads instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestEntryType$DelegateThreads "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DelegateThreads",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DelegateThreads#refCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refCount: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DelegateThreads#role:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "stellar-tokenomics!~DelegateRole_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DelegateThreadsLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of ManifestEntryType$DelegateThreads\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestEntryType$DelegateThreadsLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DelegateThreadsLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DelegateThreadsLike#refCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DelegateThreadsLike#role:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DgDataPolicy:interface",
          "docComment": "/**\n * A strong type for the canonical form of ManifestEntryType$DgDataPolicy\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ManifestEntryType$Ergo$DgDataPolicy instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestEntryType$DgDataPolicy "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DgDataPolicy",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DgDataPolicy#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DgDataPolicy#policyLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "policyLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "policyLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DgDataPolicy#refCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refCount: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DgDataPolicyLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of ManifestEntryType$DgDataPolicy\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ManifestEntryType$DgDataPolicyLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$DgDataPolicyLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DgDataPolicyLike#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DgDataPolicyLike#policyLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "policyLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "policyLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DgDataPolicyLike#refCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestEntryType$Ergo$DelegateThreads_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ManifestEntryType$DelegateThreads\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ManifestEntryType$DelegateThreadsLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DelegateThreads = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "stellar-tokenomics!~ErgoDelegateRole_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DelegateThreads_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestEntryType$Ergo$DelegateThreads:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ManifestEntryType$DelegateThreads\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ManifestEntryType$DelegateThreadsLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DelegateThreads = "
            },
            {
              "kind": "Content",
              "text": "{\n    role: "
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "stellar-tokenomics!~ErgoDelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ";\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DelegateThreads",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestEntryType$Ergo$DgDataPolicy_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ManifestEntryType$DgDataPolicy\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ManifestEntryType$DgDataPolicyLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DgDataPolicy = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DgDataPolicy_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestEntryType$Ergo$DgDataPolicy:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of ManifestEntryType$DgDataPolicy\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the ManifestEntryType$DgDataPolicyLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryType$Ergo$DgDataPolicy = "
            },
            {
              "kind": "Content",
              "text": "{\n    policyLink: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink:type"
            },
            {
              "kind": "Content",
              "text": ";\n    idPrefix: string;\n    refCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryType$Ergo$DgDataPolicy",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~ManifestEntryTypeHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***ManifestEntryType*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ManifestEntryTypeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ManifestEntryTypeHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryTypeHelper#DelegateThreads:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::ManifestEntryType.DelegateThreads\"***\n *\n * @remarks\n *\n * - ***ManifestEntryType$DelegateThreadsLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateThreads(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DelegateThreadsLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DelegateThreadsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        refCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateThreads"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryTypeHelper#DgDataPolicy:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoHelpers::ManifestEntryType.DgDataPolicy\"***\n *\n * @remarks\n *\n * - ***ManifestEntryType$DgDataPolicyLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataPolicy(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryType$DgDataPolicyLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DgDataPolicyLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        policyLink: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        idPrefix: string;\n        refCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataPolicy"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryTypeHelper#MerkleMembership:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.MerkleMembership\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MerkleMembership(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MerkleMembership",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryTypeHelper#MerkleStateRoot:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.MerkleStateRoot\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#4***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get MerkleStateRoot(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "MerkleStateRoot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryTypeHelper#NamedTokenRef:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoHelpers::ManifestEntryType.NamedTokenRef\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get NamedTokenRef(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "NamedTokenRef",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~ManifestEntryTypeLike:type",
          "docComment": "/**\n * ManifestEntryType enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **5 variant(s)** of the ManifestEntryType enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `ManifestEntryTypeHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ManifestEntryTypeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    NamedTokenRef: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DgDataPolicy: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DgDataPolicyLike",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DgDataPolicyLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    DelegateThreads: "
            },
            {
              "kind": "Reference",
              "text": "ManifestEntryType$DelegateThreadsLike",
              "canonicalReference": "stellar-tokenomics!~ManifestEntryType$DelegateThreadsLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleMembership: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MerkleStateRoot: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ManifestEntryTypeLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~MarketSaleBundle:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class MarketSaleBundle extends "
            },
            {
              "kind": "Reference",
              "text": "DelegatedDataBundle",
              "canonicalReference": "@donecollectively/stellar-contracts!DelegatedDataBundle:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSaleBundle.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MarketSaleBundle",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSaleBundle#modules:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get modules(): "
                },
                {
                  "kind": "Reference",
                  "text": "Source",
                  "canonicalReference": "@helios-lang/compiler-utils!Source:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "modules",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSaleBundle#requiresGovAuthority:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requiresGovAuthority: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "requiresGovAuthority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSaleBundle#specializedDelegateModule:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "specializedDelegateModule: "
                },
                {
                  "kind": "Reference",
                  "text": "Source",
                  "canonicalReference": "@helios-lang/compiler-utils!Source:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "specializedDelegateModule",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!MarketSaleController:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MarketSaleController extends "
            },
            {
              "kind": "Reference",
              "text": "WrappedDgDataContract",
              "canonicalReference": "@donecollectively/stellar-contracts!WrappedDgDataContract:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MarketSaleData",
              "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "MarketSaleDataLike",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "MarketSaleDataWrapper",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper:class"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSaleController.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MarketSaleController",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#abstractBundleClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get abstractBundleClass(): "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleBundle",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleBundle:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "abstractBundleClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#beforeCreate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "beforeCreate(data: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "beforeCreate"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#dataBridgeClass:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataBridgeClass: "
                },
                {
                  "kind": "Content",
                  "text": "typeof "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSalePolicyDataBridge",
                  "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dataBridgeClass",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#exampleData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exampleData(): "
                },
                {
                  "kind": "Reference",
                  "text": "minimalMarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~minimalMarketSaleData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "exampleData"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#findMarketSales:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findMarketSales({ saleId, parentId, isRoot, pending, active, retired, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        saleId?: string;\n        parentId?: string;\n        isRoot?: boolean;\n        pending?: boolean;\n        active?: boolean;\n        retired?: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ">[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ saleId, parentId, isRoot, pending, active, retired, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findMarketSales"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#getExpiry:member(1)",
              "docComment": "/**\n * returns a timestamp for expected expiration of the discount\n *\n * @param tcx - transaction context with settings\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getExpiry<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSettingsRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSettingsRef:type"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getExpiry"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get idPrefix(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#mkDataWrapper:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkDataWrapper(data: "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoMarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~ErgoMarketSaleData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataWrapper",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkDataWrapper"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#mkTxnActivateMarketSale:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnActivateMarketSale<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleController",
                  "canonicalReference": "stellar-tokenomics!MarketSaleController:class"
                },
                {
                  "kind": "Content",
                  "text": ", mktSale: "
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataWrapper",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", addedTokenValue: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", newAttrs: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataLike",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 24,
                "endIndex": 26
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mktSale",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 13
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "addedTokenValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 16
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "newAttrs",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 21
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 22,
                    "endIndex": 23
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnActivateMarketSale"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#mkTxnAddToMarketSale:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnAddToMarketSale<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleController",
                  "canonicalReference": "stellar-tokenomics!MarketSaleController:class"
                },
                {
                  "kind": "Content",
                  "text": ", mktSale: "
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", addedTokenMph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ", addedTokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ", addedTokenCount: "
                },
                {
                  "kind": "Content",
                  "text": "number | bigint"
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 20
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mktSale",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "addedTokenMph",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "addedTokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "addedTokenCount",
                  "parameterTypeTokenRange": {
                    "startIndex": 14,
                    "endIndex": 15
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 16,
                    "endIndex": 17
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnAddToMarketSale"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#mkTxnBuyFromMarketSale:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnBuyFromMarketSale<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(this: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleController",
                  "canonicalReference": "stellar-tokenomics!MarketSaleController:class"
                },
                {
                  "kind": "Content",
                  "text": ", mktSale: "
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataWrapper",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", { sellingUnitQuantity, delegateActivity, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        sellingUnitQuantity: number | bigint;\n        delegateActivity?: "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ", tcxIn?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 24
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "this",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "mktSale",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "{ sellingUnitQuantity, delegateActivity, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 15
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tcxIn",
                  "parameterTypeTokenRange": {
                    "startIndex": 16,
                    "endIndex": 17
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnBuyFromMarketSale"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#mkUpdatedDetails:member(1)",
              "docComment": "/**\n * mockable method for updating sale data, called during mkTxnBuyFromMarketSale\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkUpdatedDetails(msd: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ", pmsd: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "msd",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "pmsd",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkUpdatedDetails"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#mkUpdatedProgressDetails:member(1)",
              "docComment": "/**\n * mockable method for updating progress details for a sale, called during mkTxnBuyFromMarketSale\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkUpdatedProgressDetails({ lastPurchaseAt, prevPurchaseAt, chunkUnitCount, chunkUnitsSold, }: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": "[\"moreFields\"][\"saleState\"][\"progressDetails\"]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": "[\"moreFields\"][\"saleState\"][\"progressDetails\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ lastPurchaseAt, prevPurchaseAt, chunkUnitCount, chunkUnitsSold, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkUpdatedProgressDetails"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#recordTypeName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get recordTypeName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "recordTypeName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#requirements:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requirements(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "ReqtsMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"Governs the process of selling tokens to buyers\" | \"it's created with key details of a sale\" | \"Activity:AddTokens allows additional tokens to be added to a Pending mktSale\" | \"has a state machine for sale lifecycle\" | \"Will sell its tokens when conditions are right\" | \"updates appropriate sale details as a result of each sale\" | \"participates in the Txf protocol for getting paid\" | \"participates in the Txf protocol for distributing the tokens\" | \"Splits the sale into chunks for scaling\", never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "requirements"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#saleTokenValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "saleTokenValue(itemDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "FoundDatumUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundDatumUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", sellingUnitQuantity?: "
                },
                {
                  "kind": "Content",
                  "text": "number | bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "itemDetails",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "sellingUnitQuantity",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "saleTokenValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!MarketSaleController#scriptBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface",
          "docComment": "/**\n * A strong type for the canonical form of MarketSaleData\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoMarketSaleData instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MarketSaleData "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "MarketSaleData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MarketSaleData#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MarketSaleData#moreFields:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "moreFields: "
                },
                {
                  "kind": "Reference",
                  "text": "MoreFields",
                  "canonicalReference": "stellar-tokenomics!~MoreFields:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "moreFields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MarketSaleData#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MarketSaleData#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of MarketSaleData\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MarketSaleDataLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "MarketSaleDataLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike#moreFields:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "moreFields: "
                },
                {
                  "kind": "Reference",
                  "text": "MoreFieldsLike",
                  "canonicalReference": "stellar-tokenomics!~MoreFieldsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "moreFields",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MarketSaleDataWrapper "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSaleDataWrapper.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MarketSaleDataWrapper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MarketSaleDataWrapper` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(data: "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoMarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~ErgoMarketSaleData:type"
                },
                {
                  "kind": "Content",
                  "text": ", controller: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleController",
                  "canonicalReference": "stellar-tokenomics!MarketSaleController:class"
                },
                {
                  "kind": "Content",
                  "text": ", capo: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "controller",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "capo",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#actualSellingPace:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actualSellingPace(pCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseContext",
                  "canonicalReference": "stellar-tokenomics!PurchaseContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "actualSellingPace"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#capo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capo: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "capo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#computeNextSalePace:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "computeNextSalePace(pCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseContext",
                  "canonicalReference": "stellar-tokenomics!PurchaseContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "computeNextSalePace"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#controller:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "controller: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleController",
                  "canonicalReference": "stellar-tokenomics!MarketSaleController:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "controller",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoMarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~ErgoMarketSaleData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#elapsedSaleHours:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "elapsedSaleHours(pCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseContext",
                  "canonicalReference": "stellar-tokenomics!PurchaseContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "elapsedSaleHours"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#getDynamicUnitPrice:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDynamicUnitPrice(pCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseContext",
                  "canonicalReference": "stellar-tokenomics!PurchaseContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDynamicUnitPrice"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#getUnitPrice:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getUnitPrice(pCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseContext",
                  "canonicalReference": "stellar-tokenomics!PurchaseContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getUnitPrice"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#hoursSinceLastPurchase:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hoursSinceLastPurchase(pCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseContext",
                  "canonicalReference": "stellar-tokenomics!PurchaseContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hoursSinceLastPurchase"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#inferredPace:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inferredPace(pCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseContext",
                  "canonicalReference": "stellar-tokenomics!PurchaseContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "inferredPace"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#overallPaceIncludingThisPurchase:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overallPaceIncludingThisPurchase(pCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseContext",
                  "canonicalReference": "stellar-tokenomics!PurchaseContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "overallPaceIncludingThisPurchase"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#prevSalePace:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prevSalePace(pCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseContext",
                  "canonicalReference": "stellar-tokenomics!PurchaseContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "prevSalePace"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#priceExpansion:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "priceExpansion(overallPace: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", settings: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1Settings",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overallPace",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "settings",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "priceExpansion"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#pricingFactorDynamicPace:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pricingFactorDynamicPace(pCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseContext",
                  "canonicalReference": "stellar-tokenomics!PurchaseContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "pricingFactorDynamicPace"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#pricingFactorOverallProgress:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pricingFactorOverallProgress(pCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseContext",
                  "canonicalReference": "stellar-tokenomics!PurchaseContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "pricingFactorOverallProgress"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#progressPricingDiscountDepth:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "progressPricingDiscountDepth(overallPacingProgress: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", settings: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1Settings",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overallPacingProgress",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "settings",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "progressPricingDiscountDepth"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#targetSellingPace:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "targetSellingPace(pCtx: "
                },
                {
                  "kind": "Reference",
                  "text": "PurchaseContext",
                  "canonicalReference": "stellar-tokenomics!PurchaseContext:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pCtx",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "targetSellingPace"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper#unwrapData:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unwrapData(): "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataLike",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "unwrapData"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge:class",
          "docComment": "/**\n * GENERATED data bridge for **BasicDelegate** script (defined in class ***ConcreteMarketSaleBundle***) main: **src/delegation/BasicDelegate.hl**, project: **stellar-contracts**\n *\n * @remarks\n *\n * This class doesn't need to be used directly. Its methods are available through the ***contract's methods***: - `get mkDatum` - returns the datum-building bridge for the contract's datum type - `get activity` - returns an activity-building bridge for the contract's activity type - `get reader` - (advanced) returns a data-reader bridge for parsing CBOR/UPLC-encoded data of specific types - `get onchain` - (advanced) returns a data-encoding bridge for types defined in the contract's script The advanced methods are not typically needed - mkDatum and activity should normally provide all the type-safe data-encoding needed for the contract. For reading on-chain data, the Capo's `findDelegatedDataUtxos()` method is the normal way to locate and decode on-chain data without needing to explicitly use the data-bridge helper classes.\n *\n * ##### customizing the bridge class name Note that you may override `get bridgeClassName() { return \"...\" }` to customize the name of this bridge class\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MarketSalePolicyDataBridge extends "
            },
            {
              "kind": "Reference",
              "text": "ContractDataBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!ContractDataBridge:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MarketSalePolicyDataBridge",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#activity:member",
              "docComment": "/**\n * generates UplcData for the activity type (***DelegateActivity***) for the `BasicDelegate` script\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#datum:member",
              "docComment": "/**\n * Helper class for generating TxOutputDatum for the ***datum type (DelegateDatum)*** for this contract script.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "stellar-tokenomics!~DelegateDatumHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#DelegateActivity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateActivity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#DelegateDatum:member",
              "docComment": "/**\n * this is the specific type of datum for the `BasicDelegate` script\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "stellar-tokenomics!~DelegateDatumHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "DelegateDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge.isAbstract:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static isAbstract: "
                },
                {
                  "kind": "Content",
                  "text": "false"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAbstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#readDatum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readDatum: "
                },
                {
                  "kind": "Content",
                  "text": "(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateDatum",
                  "canonicalReference": "stellar-tokenomics!~ErgoDelegateDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readDatum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#reader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reader: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSalePolicyDataBridgeReader",
                  "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#types:member",
              "docComment": "/**\n * accessors for all the types defined in the `BasicDelegate` script\n *\n * @remarks\n *\n * - these accessors are used to generate UplcData for each type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "types: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        MarketSaleState: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleStateHelper",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleStateHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        VxfExpectedActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "VxfExpectedActivityHelper",
                  "canonicalReference": "stellar-tokenomics!~VxfExpectedActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        VxfDestination: "
                },
                {
                  "kind": "Reference",
                  "text": "VxfDestinationHelper",
                  "canonicalReference": "stellar-tokenomics!~VxfDestinationHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateDatum: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatumHelper",
                  "canonicalReference": "stellar-tokenomics!~DelegateDatumHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateRole: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleHelper",
                  "canonicalReference": "stellar-tokenomics!~DelegateRoleHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ManifestActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityHelper",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoLifecycleActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoLifecycleActivityHelper",
                  "canonicalReference": "stellar-tokenomics!~CapoLifecycleActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateLifecycleActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateLifecycleActivityHelper",
                  "canonicalReference": "stellar-tokenomics!~DelegateLifecycleActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SpendingActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivityHelper",
                  "canonicalReference": "stellar-tokenomics!~SpendingActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MintingActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivityHelper",
                  "canonicalReference": "stellar-tokenomics!~MintingActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        BurningActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "BurningActivityHelper",
                  "canonicalReference": "stellar-tokenomics!~BurningActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegateActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateActivityHelper",
                  "canonicalReference": "stellar-tokenomics!~DelegateActivityHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingDelegateAction: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionHelper",
                  "canonicalReference": "stellar-tokenomics!~PendingDelegateActionHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ManifestEntryType: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryTypeHelper",
                  "canonicalReference": "stellar-tokenomics!~ManifestEntryTypeHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingCharterChange: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChangeHelper",
                  "canonicalReference": "stellar-tokenomics!~PendingCharterChangeHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cctx_CharterInputType: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputTypeHelper",
                  "canonicalReference": "stellar-tokenomics!~cctx_CharterInputTypeHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        dgd_DataSrc: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrcHelper",
                  "canonicalReference": "stellar-tokenomics!~dgd_DataSrcHelper:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        AnyData: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "stellar-tokenomics!~AnyDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            id: number[];\n            type: string;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DelegationDetail: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "stellar-tokenomics!~DelegationDetailLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            capoAddr: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tn: number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SaleProgressDetails: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "SaleProgressDetailsLike",
                  "canonicalReference": "stellar-tokenomics!~SaleProgressDetailsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            lastPurchaseAt: "
                },
                {
                  "kind": "Reference",
                  "text": "TimeLike",
                  "canonicalReference": "stellar-tokenomics!~TimeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            prevPurchaseAt: "
                },
                {
                  "kind": "Reference",
                  "text": "TimeLike",
                  "canonicalReference": "stellar-tokenomics!~TimeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            chunkUnitCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            chunkUnitsSold: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        OtherSaleState: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "OtherSaleStateLike",
                  "canonicalReference": "stellar-tokenomics!~OtherSaleStateLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            progressDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "SaleProgressDetailsLike",
                  "canonicalReference": "stellar-tokenomics!~SaleProgressDetailsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n            salePace: number;\n            state: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleStateLike",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleStateLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DynamicSaleV1Settings: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1SettingsLike",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            targetPrice: number;\n            targetedSellingTime: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            minPrice: number;\n            maxPrice: number;\n            progressPricingDiscountFloorPoint: number;\n            progressPricingDiscountWhenSlow: number;\n            progressPricingExpansionWhenFast: number;\n            dynaPaceFasterSaleWeight: number;\n            dynaPaceIdleDecayRate: number;\n            pricingWeightDynaPace: number;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        RelativeDelegateLink: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            uutName: string;\n            delegateValidatorHash: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "ValidatorHash",
                  "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[] | undefined;\n            config: number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        FixedSaleDetails: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "FixedSaleDetailsLike",
                  "canonicalReference": "stellar-tokenomics!~FixedSaleDetailsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            settings: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1SettingsLike",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n            startAt: "
                },
                {
                  "kind": "Reference",
                  "text": "TimeLike",
                  "canonicalReference": "stellar-tokenomics!~TimeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            vxfTokensTo: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "VxfDestinationLike",
                  "canonicalReference": "stellar-tokenomics!~VxfDestinationLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n            vxfFundsTo: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "VxfDestinationLike",
                  "canonicalReference": "stellar-tokenomics!~VxfDestinationLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        SaleAssets: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "SaleAssetsLike",
                  "canonicalReference": "stellar-tokenomics!~SaleAssetsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            saleUnitAssets: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n                mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n                tokens: {\n                    name: number[] | string;\n                    qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n                }[];\n            }[];\n            singleBuyMaxUnits: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            primaryAssetMph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            primaryAssetName: number[];\n            primaryAssetTargetCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            totalSaleUnits: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        ThreadInfo: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "ThreadInfoLike",
                  "canonicalReference": "stellar-tokenomics!~ThreadInfoLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            nestedThreads: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            retiredThreads: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            parentChunkId: number[];\n            chunkForkedAt: "
                },
                {
                  "kind": "Reference",
                  "text": "TimeLike",
                  "canonicalReference": "stellar-tokenomics!~TimeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            saleId: number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MoreFields: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "MoreFieldsLike",
                  "canonicalReference": "stellar-tokenomics!~MoreFieldsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            saleState: "
                },
                {
                  "kind": "Reference",
                  "text": "OtherSaleStateLike",
                  "canonicalReference": "stellar-tokenomics!~OtherSaleStateLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n            fixedSaleDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "FixedSaleDetailsLike",
                  "canonicalReference": "stellar-tokenomics!~FixedSaleDetailsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n            saleAssets: "
                },
                {
                  "kind": "Reference",
                  "text": "SaleAssetsLike",
                  "canonicalReference": "stellar-tokenomics!~SaleAssetsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n            threadInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "ThreadInfoLike",
                  "canonicalReference": "stellar-tokenomics!~ThreadInfoLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        MarketSaleData: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataLike",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            id: number[];\n            type: string;\n            name: string;\n            moreFields: "
                },
                {
                  "kind": "Reference",
                  "text": "MoreFieldsLike",
                  "canonicalReference": "stellar-tokenomics!~MoreFieldsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        PendingDelegateChange: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "stellar-tokenomics!~PendingDelegateChangeLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            action: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionLike",
                  "canonicalReference": "stellar-tokenomics!~PendingDelegateActionLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            dgtLink: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoManifestEntry: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntryLike",
                  "canonicalReference": "stellar-tokenomics!~CapoManifestEntryLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            entryType: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestEntryTypeLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestEntryTypeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            tokenName: number[];\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[] | undefined;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        CapoCtx: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtxLike",
                  "canonicalReference": "stellar-tokenomics!~CapoCtxLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            charter: "
                },
                {
                  "kind": "Reference",
                  "text": "cctx_CharterInputTypeLike",
                  "canonicalReference": "stellar-tokenomics!~cctx_CharterInputTypeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DgDataDetails: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataDetailsLike",
                  "canonicalReference": "stellar-tokenomics!~DgDataDetailsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            dataSrc: "
                },
                {
                  "kind": "Reference",
                  "text": "dgd_DataSrcLike",
                  "canonicalReference": "stellar-tokenomics!~dgd_DataSrcLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            id: number[];\n            type: string;\n            mph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DTS_PurchaseInfo: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DTS_PurchaseInfoLike",
                  "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfoLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            inferredPace: number;\n            hoursSinceLastPurchase: number;\n            unitsPurchased: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            purchaseTime: "
                },
                {
                  "kind": "Reference",
                  "text": "TimeLike",
                  "canonicalReference": "stellar-tokenomics!~TimeLike_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            prevSalePace: number;\n            totalProgress: "
                },
                {
                  "kind": "Reference",
                  "text": "SaleProgressDetailsLike",
                  "canonicalReference": "stellar-tokenomics!~SaleProgressDetailsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        DynamicSaleV1: (fields: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1Like",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Like:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n            settings: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1SettingsLike",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n            purchase: "
                },
                {
                  "kind": "Reference",
                  "text": "DTS_PurchaseInfoLike",
                  "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfoLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n            sale: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataLike",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n            updatedSale: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataLike",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n        }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "types",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 198
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺAnyDataCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺAnyDataCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AnyData",
                  "canonicalReference": "stellar-tokenomics!~AnyData:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "AnyDataLike",
                  "canonicalReference": "stellar-tokenomics!~AnyDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺAnyDataCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺCapoCtxCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺCapoCtxCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtx",
                  "canonicalReference": "stellar-tokenomics!~CapoCtx:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtxLike",
                  "canonicalReference": "stellar-tokenomics!~CapoCtxLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺCapoCtxCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺCapoManifestEntryCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺCapoManifestEntryCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntry",
                  "canonicalReference": "stellar-tokenomics!~CapoManifestEntry:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntryLike",
                  "canonicalReference": "stellar-tokenomics!~CapoManifestEntryLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺCapoManifestEntryCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺDelegationDetailCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺDelegationDetailCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "stellar-tokenomics!~DelegationDetail:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetailLike",
                  "canonicalReference": "stellar-tokenomics!~DelegationDetailLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺDelegationDetailCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺDgDataDetailsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺDgDataDetailsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DgDataDetails",
                  "canonicalReference": "stellar-tokenomics!~DgDataDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataDetailsLike",
                  "canonicalReference": "stellar-tokenomics!~DgDataDetailsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺDgDataDetailsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺDTS_PurchaseInfoCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺDTS_PurchaseInfoCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DTS_PurchaseInfo",
                  "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "DTS_PurchaseInfoLike",
                  "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfoLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺDTS_PurchaseInfoCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺDynamicSaleV1Cast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺDynamicSaleV1Cast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1Like",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Like:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺDynamicSaleV1Cast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺDynamicSaleV1SettingsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺDynamicSaleV1SettingsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1Settings",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1SettingsLike",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1SettingsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺDynamicSaleV1SettingsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺFixedSaleDetailsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺFixedSaleDetailsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FixedSaleDetails",
                  "canonicalReference": "stellar-tokenomics!~FixedSaleDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "FixedSaleDetailsLike",
                  "canonicalReference": "stellar-tokenomics!~FixedSaleDetailsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺFixedSaleDetailsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺMarketSaleDataCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺMarketSaleDataCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleDataLike",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺMarketSaleDataCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺMoreFieldsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺMoreFieldsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MoreFields",
                  "canonicalReference": "stellar-tokenomics!~MoreFields:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "MoreFieldsLike",
                  "canonicalReference": "stellar-tokenomics!~MoreFieldsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺMoreFieldsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺOtherSaleStateCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺOtherSaleStateCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "OtherSaleState",
                  "canonicalReference": "stellar-tokenomics!~OtherSaleState:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "OtherSaleStateLike",
                  "canonicalReference": "stellar-tokenomics!~OtherSaleStateLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺOtherSaleStateCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺPendingDelegateChangeCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺPendingDelegateChangeCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChange",
                  "canonicalReference": "stellar-tokenomics!~PendingDelegateChange:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "stellar-tokenomics!~PendingDelegateChangeLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺPendingDelegateChangeCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺRelativeDelegateLinkCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺRelativeDelegateLinkCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺRelativeDelegateLinkCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺSaleAssetsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺSaleAssetsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SaleAssets",
                  "canonicalReference": "stellar-tokenomics!~SaleAssets:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "SaleAssetsLike",
                  "canonicalReference": "stellar-tokenomics!~SaleAssetsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺSaleAssetsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺSaleProgressDetailsCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺSaleProgressDetailsCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SaleProgressDetails",
                  "canonicalReference": "stellar-tokenomics!~SaleProgressDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "SaleProgressDetailsLike",
                  "canonicalReference": "stellar-tokenomics!~SaleProgressDetailsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺSaleProgressDetailsCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge#ᱺᱺThreadInfoCast:member",
              "docComment": "/**\n * uses unicode U+1c7a - sorts to the end\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ᱺᱺThreadInfoCast: "
                },
                {
                  "kind": "Reference",
                  "text": "Cast",
                  "canonicalReference": "@helios-lang/contract-utils!Cast:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ThreadInfo",
                  "canonicalReference": "stellar-tokenomics!~ThreadInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ThreadInfoLike",
                  "canonicalReference": "stellar-tokenomics!~ThreadInfoLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ᱺᱺThreadInfoCast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MarketSalePolicyDataBridgeReader extends "
            },
            {
              "kind": "Reference",
              "text": "DataBridgeReaderClass",
              "canonicalReference": "@donecollectively/stellar-contracts!DataBridgeReaderClass:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MarketSalePolicyDataBridgeReader",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `MarketSalePolicyDataBridgeReader` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(bridge: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSalePolicyDataBridge",
                  "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ", isMainnet: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "bridge",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isMainnet",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#AnyData:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **AnyData*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AnyData(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AnyData",
                  "canonicalReference": "stellar-tokenomics!~AnyData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AnyData"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#bridge:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bridge: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSalePolicyDataBridge",
                  "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridge:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bridge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#BurningActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **BurningActivity*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "BurningActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoBurningActivity",
                  "canonicalReference": "stellar-tokenomics!~ErgoBurningActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "BurningActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#CapoCtx:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoCtx*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoCtx(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoCtx",
                  "canonicalReference": "stellar-tokenomics!~CapoCtx:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoCtx"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#CapoLifecycleActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoLifecycleActivity*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoLifecycleActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoCapoLifecycleActivity",
                  "canonicalReference": "stellar-tokenomics!~ErgoCapoLifecycleActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoLifecycleActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#CapoManifestEntry:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **CapoManifestEntry*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CapoManifestEntry(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CapoManifestEntry",
                  "canonicalReference": "stellar-tokenomics!~CapoManifestEntry:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CapoManifestEntry"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#cctx_CharterInputType:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **cctx_CharterInputType*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cctx_CharterInputType(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Ergocctx_CharterInputType",
                  "canonicalReference": "stellar-tokenomics!~Ergocctx_CharterInputType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cctx_CharterInputType"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#datum:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "datum: "
                },
                {
                  "kind": "Content",
                  "text": "(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        Cip68RefToken: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Ergo$Cip68RefToken",
                  "canonicalReference": "stellar-tokenomics!~DelegateDatum$Ergo$Cip68RefToken:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        IsDelegation: "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegationDetail",
                  "canonicalReference": "stellar-tokenomics!~ErgoDelegationDetail:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        capoStoredData: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateDatum$Ergo$capoStoredData",
                  "canonicalReference": "stellar-tokenomics!~DelegateDatum$Ergo$capoStoredData:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "datum",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 12
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#DelegateActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateActivity*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateActivity",
                  "canonicalReference": "stellar-tokenomics!~ErgoDelegateActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#DelegateDatum:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateDatum*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateDatum(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateDatum",
                  "canonicalReference": "stellar-tokenomics!~ErgoDelegateDatum:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateDatum"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#DelegateLifecycleActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateLifecycleActivity*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateLifecycleActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateLifecycleActivity",
                  "canonicalReference": "stellar-tokenomics!~ErgoDelegateLifecycleActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateLifecycleActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#DelegateRole:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegateRole*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegateRole(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoDelegateRole",
                  "canonicalReference": "stellar-tokenomics!~ErgoDelegateRole_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegateRole"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#DelegationDetail:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DelegationDetail*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DelegationDetail(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DelegationDetail",
                  "canonicalReference": "stellar-tokenomics!~DelegationDetail:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DelegationDetail"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#dgd_DataSrc:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **dgd_DataSrc*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dgd_DataSrc(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Ergodgd_DataSrc",
                  "canonicalReference": "stellar-tokenomics!~Ergodgd_DataSrc:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "dgd_DataSrc"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#DgDataDetails:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DgDataDetails*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DgDataDetails(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DgDataDetails",
                  "canonicalReference": "stellar-tokenomics!~DgDataDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DgDataDetails"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#DTS_PurchaseInfo:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DTS_PurchaseInfo*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DTS_PurchaseInfo(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DTS_PurchaseInfo",
                  "canonicalReference": "stellar-tokenomics!~DTS_PurchaseInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DTS_PurchaseInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#DynamicSaleV1:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DynamicSaleV1*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DynamicSaleV1(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DynamicSaleV1"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#DynamicSaleV1Settings:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **DynamicSaleV1Settings*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DynamicSaleV1Settings(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicSaleV1Settings",
                  "canonicalReference": "stellar-tokenomics!~DynamicSaleV1Settings:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DynamicSaleV1Settings"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#FixedSaleDetails:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **FixedSaleDetails*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FixedSaleDetails(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "FixedSaleDetails",
                  "canonicalReference": "stellar-tokenomics!~FixedSaleDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "FixedSaleDetails"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#ManifestActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **ManifestActivity*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ManifestActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoManifestActivity",
                  "canonicalReference": "stellar-tokenomics!~ErgoManifestActivity_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ManifestActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#ManifestEntryType:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **ManifestEntryType*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ManifestEntryType(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoManifestEntryType",
                  "canonicalReference": "stellar-tokenomics!~ErgoManifestEntryType_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ManifestEntryType"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#MarketSaleData:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **MarketSaleData*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MarketSaleData(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleData",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MarketSaleData"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#MarketSaleState:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **MarketSaleState*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MarketSaleState(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoMarketSaleState",
                  "canonicalReference": "stellar-tokenomics!~ErgoMarketSaleState:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MarketSaleState"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#MintingActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **MintingActivity*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MintingActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoMintingActivity",
                  "canonicalReference": "stellar-tokenomics!~ErgoMintingActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MintingActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#MoreFields:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **MoreFields*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MoreFields(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MoreFields",
                  "canonicalReference": "stellar-tokenomics!~MoreFields:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MoreFields"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#OtherSaleState:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **OtherSaleState*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OtherSaleState(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "OtherSaleState",
                  "canonicalReference": "stellar-tokenomics!~OtherSaleState:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OtherSaleState"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#PendingCharterChange:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingCharterChange*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingCharterChange(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoPendingCharterChange",
                  "canonicalReference": "stellar-tokenomics!~ErgoPendingCharterChange_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingCharterChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#PendingDelegateAction:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingDelegateAction*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingDelegateAction(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoPendingDelegateAction",
                  "canonicalReference": "stellar-tokenomics!~ErgoPendingDelegateAction_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingDelegateAction"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#PendingDelegateChange:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **PendingDelegateChange*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PendingDelegateChange(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChange",
                  "canonicalReference": "stellar-tokenomics!~PendingDelegateChange:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PendingDelegateChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#RelativeDelegateLink:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **RelativeDelegateLink*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RelativeDelegateLink(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RelativeDelegateLink"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#SaleAssets:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **SaleAssets*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SaleAssets(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SaleAssets",
                  "canonicalReference": "stellar-tokenomics!~SaleAssets:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SaleAssets"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#SaleProgressDetails:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **SaleProgressDetails*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SaleProgressDetails(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SaleProgressDetails",
                  "canonicalReference": "stellar-tokenomics!~SaleProgressDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SaleProgressDetails"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#SpendingActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **SpendingActivity*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SpendingActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoSpendingActivity",
                  "canonicalReference": "stellar-tokenomics!~ErgoSpendingActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SpendingActivity"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#ThreadInfo:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **ThreadInfo*** struct type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ThreadInfo(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ThreadInfo",
                  "canonicalReference": "stellar-tokenomics!~ThreadInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ThreadInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#VxfDestination:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **VxfDestination*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "VxfDestination(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoVxfDestination",
                  "canonicalReference": "stellar-tokenomics!~ErgoVxfDestination:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "VxfDestination"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MarketSalePolicyDataBridgeReader#VxfExpectedActivity:member(1)",
              "docComment": "/**\n * reads UplcData *known to fit the **VxfExpectedActivity*** enum type, for the BasicDelegate script. #### Standard WARNING\n *\n * This is a low-level data-reader for use in ***advanced development scenarios***.\n *\n * Used correctly with data that matches the enum type, this reader returns strongly-typed data - your code using these types will be safe.\n *\n * On the other hand, reading non-matching data will not give you a valid result. It may throw an error, or it may throw no error, but return a value that causes some error later on in your code, when you try to use it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "VxfExpectedActivity(d: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ErgoVxfExpectedActivity",
                  "canonicalReference": "stellar-tokenomics!~ErgoVxfExpectedActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "VxfExpectedActivity"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~MarketSaleState:type",
          "docComment": "/**\n * MarketSaleState enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **4 variant(s)** of the MarketSaleState enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `MarketSaleStateHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MarketSaleState = "
            },
            {
              "kind": "Content",
              "text": "{\n    Pending: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Active: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retired: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SoldOut: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "MarketSaleState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~MarketSaleStateHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***MarketSaleState*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MarketSaleStateHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MarketSaleStateHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSaleStateHelper#Active:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"MarketSaleData::MarketSaleState.Active\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Active(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Active",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSaleStateHelper#Pending:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"MarketSaleData::MarketSaleState.Pending\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#0***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Pending(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Pending",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSaleStateHelper#Retired:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"MarketSaleData::MarketSaleState.Retired\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#2***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Retired(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Retired",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MarketSaleStateHelper#SoldOut:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"MarketSaleData::MarketSaleState.SoldOut\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#3***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get SoldOut(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "SoldOut",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~MarketSaleStateLike:type",
          "docComment": "/**\n * MarketSaleState enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **4 variant(s)** of the MarketSaleState enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `MarketSaleStateHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MarketSaleStateLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Pending: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Active: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retired: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SoldOut: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "MarketSaleStateLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~minimalMarketSaleData:type",
          "docComment": "/**\n * expresses the essential fields needed for initiating creation of a MarketSaleData\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type minimalMarketSaleData = "
            },
            {
              "kind": "Reference",
              "text": "minimalData",
              "canonicalReference": "@donecollectively/stellar-contracts!minimalData:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MarketSaleDataLike",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataLike:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "minimalMarketSaleData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~MintingActivity:type",
          "docComment": "/**\n * MintingActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **2 variant(s)** of the MintingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `MintingActivityHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintingActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    CreatingRecord: "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    SplittingSaleChunkAndBuying: "
            },
            {
              "kind": "Reference",
              "text": "MintingActivity$SplittingSaleChunkAndBuying",
              "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuying:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "MintingActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~MintingActivity$Ergo$SplittingSaleChunkAndBuying:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of MintingActivity$SplittingSaleChunkAndBuying\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the MintingActivity$SplittingSaleChunkAndBuyingLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintingActivity$Ergo$SplittingSaleChunkAndBuying = "
            },
            {
              "kind": "Reference",
              "text": "MintingActivity$SplittingSaleChunkAndBuying",
              "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuying:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "MintingActivity$Ergo$SplittingSaleChunkAndBuying",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuying:interface",
          "docComment": "/**\n * A strong type for the canonical form of MintingActivity$SplittingSaleChunkAndBuying\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see MintingActivity$Ergo$SplittingSaleChunkAndBuying instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MintingActivity$SplittingSaleChunkAndBuying "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "MintingActivity$SplittingSaleChunkAndBuying",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuying#buyingUnitQuantity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buyingUnitQuantity: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "buyingUnitQuantity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuying#parentChunkId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentChunkId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentChunkId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuying#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuyingLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of MintingActivity$SplittingSaleChunkAndBuying\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MintingActivity$SplittingSaleChunkAndBuyingLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "MintingActivity$SplittingSaleChunkAndBuyingLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuyingLike#buyingUnitQuantity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buyingUnitQuantity: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "buyingUnitQuantity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuyingLike#parentChunkId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentChunkId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentChunkId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuyingLike#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~MintingActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***MintingActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MintingActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MintingActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MintingActivityHelper#$seeded$CreatingRecord:member",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::MintingActivity.CreatingRecord\"***\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function. #### Usage Access the activity-creator as a getter: `$seeded$CreatingRecord`\n *\n * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity, ...})` method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get $seeded$CreatingRecord(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingRecord",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MintingActivityHelper#$seeded$SplittingSaleChunkAndBuying:member",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::MintingActivity.SplittingSaleChunkAndBuying\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$SplittingSaleChunkAndBuying({ parentChunkId, buyingUnitQuantity })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ parentChunkId: string, buyingUnitQuantity: IntLike \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$SplittingSaleChunkAndBuying: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        parentChunkId: string;\n        buyingUnitQuantity: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        parentChunkId: string;\n        buyingUnitQuantity: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$SplittingSaleChunkAndBuying",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 12
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MintingActivityHelper#CreatingRecord:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::MintingActivity.CreatingRecord\"***, given a transaction-context (or direct arg) with a ***seed utxo***\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. - to get a transaction context having the seed needed for this argument, see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass. - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId. - in a context providing an implicit seed utxo, use the `$seeded$CreatingRecord}` variant of this activity instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingRecord(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "thingWithSeed",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingRecord"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MintingActivityHelper#SplittingSaleChunkAndBuying:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::MintingActivity.SplittingSaleChunkAndBuying\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$SplittingSaleChunkAndBuying}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SplittingSaleChunkAndBuying(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        parentChunkId: string;\n        buyingUnitQuantity: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SplittingSaleChunkAndBuying"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MintingActivityHelper#SplittingSaleChunkAndBuying:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::MintingActivity.SplittingSaleChunkAndBuying\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SplittingSaleChunkAndBuying(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivity$SplittingSaleChunkAndBuyingLike",
                  "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuyingLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        parentChunkId: string;\n        buyingUnitQuantity: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SplittingSaleChunkAndBuying"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~MintingActivityHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***MintingActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MintingActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MintingActivityHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MintingActivityHelperNested#$seeded$CreatingRecord:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::MintingActivity.CreatingRecord\"***\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function. #### Usage Access the activity-creator as a getter: `$seeded$CreatingRecord`\n *\n * Use the resulting activity-creator in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity, ...})` method. #### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get $seeded$CreatingRecord(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$CreatingRecord",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~MintingActivityHelperNested#$seeded$SplittingSaleChunkAndBuying:member",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::MintingActivity.SplittingSaleChunkAndBuying\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$SplittingSaleChunkAndBuying({ parentChunkId, buyingUnitQuantity })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n *\n * @param fields - \\{ parentChunkId: string, buyingUnitQuantity: IntLike \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$SplittingSaleChunkAndBuying: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        parentChunkId: string;\n        buyingUnitQuantity: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        parentChunkId: string;\n        buyingUnitQuantity: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$SplittingSaleChunkAndBuying",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 12
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MintingActivityHelperNested#CreatingRecord:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::MintingActivity.CreatingRecord\"***, given a transaction-context (or direct arg) with a ***seed utxo***\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. - to get a transaction context having the seed needed for this argument, see the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass. - or see the {@link hasSeed} type for other ways to feed it with a TxOutputId. - in a context providing an implicit seed utxo, use the `$seeded$CreatingRecord}` variant of this activity instead\n *\n * ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CreatingRecord(thingWithSeed: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "thingWithSeed",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "CreatingRecord"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MintingActivityHelperNested#SplittingSaleChunkAndBuying:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::MintingActivity.SplittingSaleChunkAndBuying\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$SplittingSaleChunkAndBuying}` for use in a context providing an implicit seed utxo. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SplittingSaleChunkAndBuying(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        parentChunkId: string;\n        buyingUnitQuantity: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SplittingSaleChunkAndBuying"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~MintingActivityHelperNested#SplittingSaleChunkAndBuying:member(2)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::MintingActivity.SplittingSaleChunkAndBuying\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SplittingSaleChunkAndBuying(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingActivity$SplittingSaleChunkAndBuyingLike",
                  "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuyingLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        parentChunkId: string;\n        buyingUnitQuantity: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SplittingSaleChunkAndBuying"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~MintingActivityLike:type",
          "docComment": "/**\n * MintingActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **2 variant(s)** of the MintingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `MintingActivityHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MintingActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    CreatingRecord: /* implied wrapper { seed: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "TxOutputId",
              "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
            },
            {
              "kind": "Content",
              "text": " | string;\n} | {\n    SplittingSaleChunkAndBuying: "
            },
            {
              "kind": "Reference",
              "text": "MintingActivity$SplittingSaleChunkAndBuyingLike",
              "canonicalReference": "stellar-tokenomics!~MintingActivity$SplittingSaleChunkAndBuyingLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "MintingActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~MoreFields:interface",
          "docComment": "/**\n * A strong type for the canonical form of MoreFields\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoMoreFields instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MoreFields "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "MoreFields",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MoreFields#fixedSaleDetails:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fixedSaleDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "FixedSaleDetails",
                  "canonicalReference": "stellar-tokenomics!~FixedSaleDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fixedSaleDetails",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MoreFields#saleAssets:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "saleAssets: "
                },
                {
                  "kind": "Reference",
                  "text": "SaleAssets",
                  "canonicalReference": "stellar-tokenomics!~SaleAssets:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "saleAssets",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MoreFields#saleState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "saleState: "
                },
                {
                  "kind": "Reference",
                  "text": "OtherSaleState",
                  "canonicalReference": "stellar-tokenomics!~OtherSaleState:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "saleState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MoreFields#threadInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "threadInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "ThreadInfo",
                  "canonicalReference": "stellar-tokenomics!~ThreadInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "threadInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~MoreFieldsLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of MoreFields\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MoreFieldsLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "MoreFieldsLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MoreFieldsLike#fixedSaleDetails:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fixedSaleDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "FixedSaleDetailsLike",
                  "canonicalReference": "stellar-tokenomics!~FixedSaleDetailsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fixedSaleDetails",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MoreFieldsLike#saleAssets:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "saleAssets: "
                },
                {
                  "kind": "Reference",
                  "text": "SaleAssetsLike",
                  "canonicalReference": "stellar-tokenomics!~SaleAssetsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "saleAssets",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MoreFieldsLike#saleState:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "saleState: "
                },
                {
                  "kind": "Reference",
                  "text": "OtherSaleStateLike",
                  "canonicalReference": "stellar-tokenomics!~OtherSaleStateLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "saleState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~MoreFieldsLike#threadInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "threadInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "ThreadInfoLike",
                  "canonicalReference": "stellar-tokenomics!~ThreadInfoLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "threadInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!optionalMemberToken:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type optionalMemberToken<T extends "
            },
            {
              "kind": "Content",
              "text": "{\n    mbrTkn: string;\n} | {\n    memberToken: string;\n}"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<T, \"mbrTkn\" | \"memberToken\"> & (T extends {\n    mbrTkn: string;\n} ? {\n    mbrTkn?: string;\n} : {\n    memberToken?: string;\n})"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarTokenomicsCapo.ts",
          "releaseTag": "Public",
          "name": "optionalMemberToken",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~OtherSaleState:interface",
          "docComment": "/**\n * A strong type for the canonical form of OtherSaleState\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoOtherSaleState instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OtherSaleState "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "OtherSaleState",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~OtherSaleState#progressDetails:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "progressDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "SaleProgressDetails",
                  "canonicalReference": "stellar-tokenomics!~SaleProgressDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "progressDetails",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~OtherSaleState#salePace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "salePace: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "salePace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~OtherSaleState#state:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "state: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleState",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleState:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "state",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~OtherSaleStateLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of OtherSaleState\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OtherSaleStateLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "OtherSaleStateLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~OtherSaleStateLike#progressDetails:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "progressDetails: "
                },
                {
                  "kind": "Reference",
                  "text": "SaleProgressDetailsLike",
                  "canonicalReference": "stellar-tokenomics!~SaleProgressDetailsLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "progressDetails",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~OtherSaleStateLike#salePace:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "salePace: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "salePace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~OtherSaleStateLike#state:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "state: "
                },
                {
                  "kind": "Reference",
                  "text": "MarketSaleStateLike",
                  "canonicalReference": "stellar-tokenomics!~MarketSaleStateLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "state",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~PendingCharterChange:type",
          "docComment": "/**\n * PendingCharterChange enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **2 variant(s)** of the PendingCharterChange enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingCharterChangeHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateChange",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateChange:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$otherManifestChange",
              "canonicalReference": "stellar-tokenomics!~PendingCharterChange$otherManifestChange:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~PendingCharterChange$Ergo$otherManifestChange_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of PendingCharterChange$otherManifestChange\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the PendingCharterChange$otherManifestChangeLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$Ergo$otherManifestChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestActivity",
              "canonicalReference": "stellar-tokenomics!~ErgoManifestActivity_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "stellar-tokenomics!~ErgoDelegateRole_2:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$Ergo$otherManifestChange_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~PendingCharterChange$Ergo$otherManifestChange:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of PendingCharterChange$otherManifestChange\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the PendingCharterChange$otherManifestChangeLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChange$Ergo$otherManifestChange = "
            },
            {
              "kind": "Content",
              "text": "{\n    activity: "
            },
            {
              "kind": "Reference",
              "text": "ErgoManifestActivity",
              "canonicalReference": "stellar-tokenomics!~ErgoManifestActivity:type"
            },
            {
              "kind": "Content",
              "text": ";\n    remainingDelegateValidations: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErgoDelegateRole",
              "canonicalReference": "stellar-tokenomics!~ErgoDelegateRole:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$Ergo$otherManifestChange",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~PendingCharterChange$otherManifestChange:interface",
          "docComment": "/**\n * A strong type for the canonical form of PendingCharterChange$otherManifestChange\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see PendingCharterChange$Ergo$otherManifestChange instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PendingCharterChange$otherManifestChange "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$otherManifestChange",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingCharterChange$otherManifestChange#activity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activity: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivity",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingCharterChange$otherManifestChange#remainingDelegateValidations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remainingDelegateValidations: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "stellar-tokenomics!~DelegateRole_2:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "remainingDelegateValidations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~PendingCharterChange$otherManifestChangeLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of PendingCharterChange$otherManifestChange\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PendingCharterChange$otherManifestChangeLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChange$otherManifestChangeLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingCharterChange$otherManifestChangeLike#activity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activity: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivityLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "activity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingCharterChange$otherManifestChangeLike#remainingDelegateValidations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "remainingDelegateValidations: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "remainingDelegateValidations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~PendingCharterChangeHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***PendingCharterChange*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PendingCharterChangeHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PendingCharterChangeHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~PendingCharterChangeHelper#delegateChange:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingCharterChange.delegateChange\"***\n *\n * @remarks\n *\n * - ***PendingDelegateChangeLike*** is the same as the expanded field-type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateChange(change: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateChangeLike",
                  "canonicalReference": "stellar-tokenomics!~PendingDelegateChangeLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        action: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionLike",
                  "canonicalReference": "stellar-tokenomics!~PendingDelegateActionLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        dgtLink: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "change",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "delegateChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~PendingCharterChangeHelper#otherManifestChange:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingCharterChange.otherManifestChange\"***\n *\n * @remarks\n *\n * - ***PendingCharterChange$otherManifestChangeLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "otherManifestChange(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingCharterChange$otherManifestChangeLike",
                  "canonicalReference": "stellar-tokenomics!~PendingCharterChange$otherManifestChangeLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        activity: "
                },
                {
                  "kind": "Reference",
                  "text": "ManifestActivityLike",
                  "canonicalReference": "stellar-tokenomics!~ManifestActivityLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        remainingDelegateValidations: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "otherManifestChange"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~PendingCharterChangeLike:type",
          "docComment": "/**\n * PendingCharterChange enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **2 variant(s)** of the PendingCharterChange enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingCharterChangeHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingCharterChangeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    delegateChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateChangeLike",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateChangeLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    otherManifestChange: "
            },
            {
              "kind": "Reference",
              "text": "PendingCharterChange$otherManifestChangeLike",
              "canonicalReference": "stellar-tokenomics!~PendingCharterChange$otherManifestChangeLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingCharterChangeLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateAction:type",
          "docComment": "/**\n * PendingDelegateAction enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **3 variant(s)** of the PendingDelegateAction enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingDelegateActionHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction = "
            },
            {
              "kind": "Content",
              "text": "{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Add_2:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace_2:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Add_2:interface",
          "docComment": "/**\n * A strong type for the canonical form of PendingDelegateAction$Add\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see PendingDelegateAction$Ergo$Add instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PendingDelegateAction$Add "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Add_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Add_2#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Add_2#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Add_2#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Add:interface",
          "docComment": "/**\n * A strong type for the canonical form of PendingDelegateAction$Add\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see PendingDelegateAction$Ergo$Add instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PendingDelegateAction$Add "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Add",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Add#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Add#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Add#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$AddLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of PendingDelegateAction$Add\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PendingDelegateAction$AddLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$AddLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$AddLike#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$AddLike#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$AddLike#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Ergo$Add_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of PendingDelegateAction$Add\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the PendingDelegateAction$AddLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Add = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Add_2:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Add_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Ergo$Add:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of PendingDelegateAction$Add\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the PendingDelegateAction$AddLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Add = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Add",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Add:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Add",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Ergo$Replace_2:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of PendingDelegateAction$Replace\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the PendingDelegateAction$ReplaceLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Replace = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace_2:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Replace_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Ergo$Replace:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of PendingDelegateAction$Replace\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the PendingDelegateAction$ReplaceLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateAction$Ergo$Replace = "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$Replace",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Ergo$Replace",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace_2:interface",
          "docComment": "/**\n * A strong type for the canonical form of PendingDelegateAction$Replace\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see PendingDelegateAction$Ergo$Replace instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PendingDelegateAction$Replace "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Replace_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace_2#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace_2#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace_2#replacesDgt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "replacesDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace_2#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace:interface",
          "docComment": "/**\n * A strong type for the canonical form of PendingDelegateAction$Replace\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see PendingDelegateAction$Ergo$Replace instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PendingDelegateAction$Replace "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$Replace",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace#replacesDgt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "replacesDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$Replace#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$ReplaceLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of PendingDelegateAction$Replace\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PendingDelegateAction$ReplaceLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateAction$ReplaceLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$ReplaceLike#idPrefix:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idPrefix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$ReplaceLike#purpose:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "purpose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$ReplaceLike#replacesDgt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n        mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tokenName: string | number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "replacesDgt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$ReplaceLike#seed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "seed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateActionHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***PendingDelegateAction*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PendingDelegateActionHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "PendingDelegateActionHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateActionHelper#$seeded$Add:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$Add({ purpose, idPrefix })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string, idPrefix: string \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$Add: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n        idPrefix: string;\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n        idPrefix: string;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$Add",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateActionHelper#$seeded$Replace:member",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"***,\n *\n * @remarks\n *\n * ##### Seeded activity This activity uses the pattern of spending a utxo to provide a uniqueness seed. ##### Activity contains implied seed Creates a SeedActivity based on the provided args, reserving space for a seed to be provided implicitly by a SeedActivity-supporting library function.\n *\n * #### Usage 1. Call the `$seeded$Replace({ purpose, idPrefix, replacesDgt })` method with the indicated (non-seed) details. 2. Use the resulting activity in a seed-providing context, such as the delegated-data-controller's `mkTxnCreateRecord({activity})` method.\n *\n * @param fields - \\{ purpose: string, idPrefix: string, replacesDgt: AssetClass | string | [string | MintingPolicyHash | number[], string | number[]] | \\{mph: MintingPolicyHash | string | number[], tokenName: string | number[]\\} \\}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "$seeded$Replace: "
                },
                {
                  "kind": "Content",
                  "text": "(fields: {\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }) => import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "SeedActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!SeedActivity:class"
                },
                {
                  "kind": "Content",
                  "text": "<(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: {\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "$seeded$Replace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 20
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateActionHelper#Add:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$Add}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Add(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n        idPrefix: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Add"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateActionHelper#Add:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Add\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Add(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$AddLike",
                  "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$AddLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n        idPrefix: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Add"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateActionHelper#Remove:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Remove\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#1***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Remove(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Remove",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateActionHelper#Replace:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"***, given a transaction-context ***with a seed utxo*** and other field details\n *\n * @remarks\n *\n * See the `tcxWithSeedUtxo()` method in your contract's off-chain StellarContracts subclass to create a context satisfying `hasSeed`. See `$seeded$Replace}` for use in a context providing an implicit seed utxo.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Replace(value: "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeed",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeed:type"
                },
                {
                  "kind": "Content",
                  "text": ", fields: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Replace"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateActionHelper#Replace:member(2)",
              "docComment": "/**\n * generates UplcData for ***\"CapoDelegateHelpers::PendingDelegateAction.Replace\"*** with raw seed details included in fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Replace(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction$ReplaceLike",
                  "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$ReplaceLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        seed: "
                },
                {
                  "kind": "Reference",
                  "text": "TxOutputId",
                  "canonicalReference": "@helios-lang/ledger!TxOutputId:type"
                },
                {
                  "kind": "Content",
                  "text": " | string;\n        purpose: string;\n        idPrefix: string;\n        replacesDgt: "
                },
                {
                  "kind": "Reference",
                  "text": "AssetClass",
                  "canonicalReference": "@helios-lang/ledger!AssetClass:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | [string | "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | number[], string | number[]] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokenName: string | number[];\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Replace"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateActionLike:type",
          "docComment": "/**\n * PendingDelegateAction enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **3 variant(s)** of the PendingDelegateAction enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `PendingDelegateActionHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PendingDelegateActionLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    Add: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$AddLike",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$AddLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Remove: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Replace: "
            },
            {
              "kind": "Reference",
              "text": "PendingDelegateAction$ReplaceLike",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateAction$ReplaceLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateActionLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateChange:interface",
          "docComment": "/**\n * A strong type for the canonical form of PendingDelegateChange\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoPendingDelegateChange instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PendingDelegateChange "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateChange",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateChange#action:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "action: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateAction",
                  "canonicalReference": "stellar-tokenomics!~PendingDelegateAction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "action",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateChange#dgtLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dgtLink: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dgtLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateChange#role:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRole",
                  "canonicalReference": "stellar-tokenomics!~DelegateRole_2:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~PendingDelegateChangeLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of PendingDelegateChange\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PendingDelegateChangeLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "PendingDelegateChangeLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateChangeLike#action:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "action: "
                },
                {
                  "kind": "Reference",
                  "text": "PendingDelegateActionLike",
                  "canonicalReference": "stellar-tokenomics!~PendingDelegateActionLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "action",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateChangeLike#dgtLink:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dgtLink: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dgtLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~PendingDelegateChangeLike#role:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegateRoleLike",
                  "canonicalReference": "stellar-tokenomics!~DelegateRoleLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!PurchaseContext:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PurchaseContext = "
            },
            {
              "kind": "Content",
              "text": "{\n    prevSale: "
            },
            {
              "kind": "Reference",
              "text": "MarketSaleDataWrapper",
              "canonicalReference": "stellar-tokenomics!~MarketSaleDataWrapper:class"
            },
            {
              "kind": "Content",
              "text": ";\n    now: "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    unitCount: bigint;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSaleController.ts",
          "releaseTag": "Public",
          "name": "PurchaseContext",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface",
          "docComment": "/**\n * A strong type for the canonical form of RelativeDelegateLink\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoRelativeDelegateLink instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RelativeDelegateLink "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLink_2",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2#delegateValidatorHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateValidatorHash: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "ValidatorHash",
                  "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateValidatorHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2#uutName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uutName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "uutName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink:interface",
          "docComment": "/**\n * A strong type for the canonical form of RelativeDelegateLink\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoRelativeDelegateLink instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RelativeDelegateLink "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/STokMintDelegate.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLink",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink#delegateValidatorHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateValidatorHash: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "ValidatorHash",
                  "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateValidatorHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink#uutName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uutName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "uutName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of RelativeDelegateLink\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RelativeDelegateLinkLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "RelativeDelegateLinkLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike#delegateValidatorHash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "delegateValidatorHash: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "ValidatorHash",
                  "canonicalReference": "@helios-lang/ledger!ValidatorHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateValidatorHash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike#uutName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uutName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "uutName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!requiredMemberToken:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type requiredMemberToken<T extends "
            },
            {
              "kind": "Content",
              "text": "{\n    mbrTkn: string;\n} | {\n    memberToken: string;\n} | {\n    mbrTkn?: string;\n} | {\n    memberToken?: string;\n}"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<T, \"mbrTkn\" | \"memberToken\"> & (T extends {\n    mbrTkn: string;\n} ? {\n    mbrTkn: string;\n} : {\n    memberToken: string;\n})"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/StellarTokenomicsCapo.ts",
          "releaseTag": "Public",
          "name": "requiredMemberToken",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~SaleAssets:interface",
          "docComment": "/**\n * A strong type for the canonical form of SaleAssets\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoSaleAssets instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SaleAssets "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SaleAssets",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleAssets#primaryAssetMph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryAssetMph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "primaryAssetMph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleAssets#primaryAssetName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryAssetName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "primaryAssetName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleAssets#primaryAssetTargetCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryAssetTargetCount: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "primaryAssetTargetCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleAssets#saleUnitAssets:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "saleUnitAssets: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "saleUnitAssets",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleAssets#singleBuyMaxUnits:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "singleBuyMaxUnits: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "singleBuyMaxUnits",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleAssets#totalSaleUnits:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "totalSaleUnits: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "totalSaleUnits",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~SaleAssetsLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of SaleAssets\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SaleAssetsLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SaleAssetsLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleAssetsLike#primaryAssetMph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryAssetMph: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "primaryAssetMph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleAssetsLike#primaryAssetName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryAssetName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "primaryAssetName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleAssetsLike#primaryAssetTargetCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryAssetTargetCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "primaryAssetTargetCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleAssetsLike#saleUnitAssets:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "saleUnitAssets: /*minStructField*/ "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n        mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }[];\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "saleUnitAssets",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleAssetsLike#singleBuyMaxUnits:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "singleBuyMaxUnits: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "singleBuyMaxUnits",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleAssetsLike#totalSaleUnits:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "totalSaleUnits: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "totalSaleUnits",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~SaleProgressDetails:interface",
          "docComment": "/**\n * A strong type for the canonical form of SaleProgressDetails\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoSaleProgressDetails instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SaleProgressDetails "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SaleProgressDetails",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleProgressDetails#chunkUnitCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chunkUnitCount: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chunkUnitCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleProgressDetails#chunkUnitsSold:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chunkUnitsSold: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chunkUnitsSold",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleProgressDetails#lastPurchaseAt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastPurchaseAt: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastPurchaseAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleProgressDetails#prevPurchaseAt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prevPurchaseAt: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prevPurchaseAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~SaleProgressDetailsLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of SaleProgressDetails\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SaleProgressDetailsLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SaleProgressDetailsLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleProgressDetailsLike#chunkUnitCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chunkUnitCount: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chunkUnitCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleProgressDetailsLike#chunkUnitsSold:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chunkUnitsSold: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chunkUnitsSold",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleProgressDetailsLike#lastPurchaseAt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastPurchaseAt: "
                },
                {
                  "kind": "Reference",
                  "text": "TimeLike",
                  "canonicalReference": "stellar-tokenomics!~TimeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastPurchaseAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SaleProgressDetailsLike#prevPurchaseAt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prevPurchaseAt: "
                },
                {
                  "kind": "Reference",
                  "text": "TimeLike",
                  "canonicalReference": "stellar-tokenomics!~TimeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prevPurchaseAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~SpendingActivity:type",
          "docComment": "/**\n * SpendingActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **6 variant(s)** of the SpendingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `SpendingActivityHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    UpdatingRecord: number[];\n} | {\n    AddingToSale: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity$AddingToSale",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSale:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Activating: number[];\n} | {\n    SellingTokens: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity$SellingTokens",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokens:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MergingChildChunk: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity$MergingChildChunk",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$MergingChildChunk:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: number[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSale:interface",
          "docComment": "/**\n * A strong type for the canonical form of SpendingActivity$AddingToSale\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see SpendingActivity$Ergo$AddingToSale instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SpendingActivity$AddingToSale "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity$AddingToSale",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSale#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSale#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSale#tn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tn: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSaleLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of SpendingActivity$AddingToSale\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SpendingActivity$AddingToSaleLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity$AddingToSaleLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSaleLike#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSaleLike#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSaleLike#tn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tn: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~SpendingActivity$Ergo$AddingToSale:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of SpendingActivity$AddingToSale\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the SpendingActivity$AddingToSaleLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivity$Ergo$AddingToSale = "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity$AddingToSale",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSale:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity$Ergo$AddingToSale",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~SpendingActivity$Ergo$MergingChildChunk:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of SpendingActivity$MergingChildChunk\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the SpendingActivity$MergingChildChunkLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivity$Ergo$MergingChildChunk = "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity$MergingChildChunk",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$MergingChildChunk:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity$Ergo$MergingChildChunk",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~SpendingActivity$Ergo$SellingTokens:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of SpendingActivity$SellingTokens\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the SpendingActivity$SellingTokensLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivity$Ergo$SellingTokens = "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity$SellingTokens",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokens:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity$Ergo$SellingTokens",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~SpendingActivity$MergingChildChunk:interface",
          "docComment": "/**\n * A strong type for the canonical form of SpendingActivity$MergingChildChunk\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see SpendingActivity$Ergo$MergingChildChunk instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SpendingActivity$MergingChildChunk "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity$MergingChildChunk",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$MergingChildChunk#childChunkId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "childChunkId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "childChunkId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$MergingChildChunk#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~SpendingActivity$MergingChildChunkLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of SpendingActivity$MergingChildChunk\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SpendingActivity$MergingChildChunkLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity$MergingChildChunkLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$MergingChildChunkLike#childChunkId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "childChunkId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "childChunkId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$MergingChildChunkLike#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokens:interface",
          "docComment": "/**\n * A strong type for the canonical form of SpendingActivity$SellingTokens\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see SpendingActivity$Ergo$SellingTokens instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SpendingActivity$SellingTokens "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity$SellingTokens",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokens#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokens#salePrice:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "salePrice: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "salePrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokens#sellingUnitQuantity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sellingUnitQuantity: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sellingUnitQuantity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokensLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of SpendingActivity$SellingTokens\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SpendingActivity$SellingTokensLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SpendingActivity$SellingTokensLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokensLike#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokensLike#salePrice:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "salePrice: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n        mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tokens: {\n            name: number[] | string;\n            qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        }[];\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "salePrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokensLike#sellingUnitQuantity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sellingUnitQuantity: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sellingUnitQuantity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~SpendingActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***SpendingActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SpendingActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SpendingActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~SpendingActivityHelper#Activating:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::SpendingActivity.Activating\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Activating(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Activating"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~SpendingActivityHelper#AddingToSale:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::SpendingActivity.AddingToSale\"***\n *\n * @remarks\n *\n * - ***SpendingActivity$AddingToSaleLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AddingToSale(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivity$AddingToSaleLike",
                  "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSaleLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        id: number[];\n        mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tn: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AddingToSale"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~SpendingActivityHelper#MergingChildChunk:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::SpendingActivity.MergingChildChunk\"***\n *\n * @remarks\n *\n * - ***SpendingActivity$MergingChildChunkLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MergingChildChunk(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivity$MergingChildChunkLike",
                  "canonicalReference": "stellar-tokenomics!~SpendingActivity$MergingChildChunkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        id: number[];\n        childChunkId: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MergingChildChunk"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~SpendingActivityHelper#Retiring:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::SpendingActivity.Retiring\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Retiring(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Retiring"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~SpendingActivityHelper#SellingTokens:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::SpendingActivity.SellingTokens\"***\n *\n * @remarks\n *\n * - ***SpendingActivity$SellingTokensLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SellingTokens(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivity$SellingTokensLike",
                  "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokensLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        id: number[];\n        sellingUnitQuantity: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        salePrice: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokens: {\n                name: number[] | string;\n                qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            }[];\n        }[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SellingTokens"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~SpendingActivityHelper#UpdatingRecord:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"MarketSalePolicy::SpendingActivity.UpdatingRecord\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingRecord"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~SpendingActivityHelperNested:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***SpendingActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SpendingActivityHelperNested extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "isActivity",
              "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SpendingActivityHelperNested",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~SpendingActivityHelperNested#Activating:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::SpendingActivity.Activating\"***\n *\n * @remarks\n *\n * #### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Activating(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Activating"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~SpendingActivityHelperNested#AddingToSale:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::SpendingActivity.AddingToSale\"***\n *\n * @remarks\n *\n * - ***SpendingActivity$AddingToSaleLike*** is the same as the expanded field-types. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AddingToSale(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivity$AddingToSaleLike",
                  "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSaleLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        id: number[];\n        mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        tn: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AddingToSale"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~SpendingActivityHelperNested#MergingChildChunk:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::SpendingActivity.MergingChildChunk\"***\n *\n * @remarks\n *\n * - ***SpendingActivity$MergingChildChunkLike*** is the same as the expanded field-types. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "MergingChildChunk(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivity$MergingChildChunkLike",
                  "canonicalReference": "stellar-tokenomics!~SpendingActivity$MergingChildChunkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        id: number[];\n        childChunkId: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MergingChildChunk"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~SpendingActivityHelperNested#Retiring:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::SpendingActivity.Retiring\"***\n *\n * @remarks\n *\n * #### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Retiring(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Retiring"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~SpendingActivityHelperNested#SellingTokens:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::SpendingActivity.SellingTokens\"***\n *\n * @remarks\n *\n * - ***SpendingActivity$SellingTokensLike*** is the same as the expanded field-types. ##### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SellingTokens(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "SpendingActivity$SellingTokensLike",
                  "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokensLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        id: number[];\n        sellingUnitQuantity: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        salePrice: "
                },
                {
                  "kind": "Reference",
                  "text": "Value",
                  "canonicalReference": "@helios-lang/ledger!Value:type"
                },
                {
                  "kind": "Content",
                  "text": " | ["
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[], [number[] | string, "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": "][]][] | {\n            mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n            tokens: {\n                name: number[] | string;\n                qty: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n            }[];\n        }[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SellingTokens"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~SpendingActivityHelperNested#UpdatingRecord:member(1)",
              "docComment": "/**\n * generates isActivity/redeemer wrapper with UplcData for ***\"MarketSalePolicy::SpendingActivity.UpdatingRecord\"***\n *\n * @remarks\n *\n * #### Nested activity: this is connected to a nested-activity wrapper, so the details are piped through the parent's uplc-encoder, producing a single uplc object with a complete wrapper for this inner activity detail.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "UpdatingRecord(id: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "isActivity",
                  "canonicalReference": "@donecollectively/stellar-contracts!isActivity:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "UpdatingRecord"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~SpendingActivityLike:type",
          "docComment": "/**\n * SpendingActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **6 variant(s)** of the SpendingActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `SpendingActivityHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SpendingActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    UpdatingRecord: number[];\n} | {\n    AddingToSale: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity$AddingToSaleLike",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$AddingToSaleLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Activating: number[];\n} | {\n    SellingTokens: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity$SellingTokensLike",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$SellingTokensLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    MergingChildChunk: "
            },
            {
              "kind": "Reference",
              "text": "SpendingActivity$MergingChildChunkLike",
              "canonicalReference": "stellar-tokenomics!~SpendingActivity$MergingChildChunkLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Retiring: number[];\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "SpendingActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!StellarTokenomicsCapo:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class StellarTokenomicsCapo<SELF extends "
            },
            {
              "kind": "Reference",
              "text": "StellarTokenomicsCapo",
              "canonicalReference": "stellar-tokenomics!StellarTokenomicsCapo:class"
            },
            {
              "kind": "Content",
              "text": "<any, any>"
            },
            {
              "kind": "Content",
              "text": ", //= StellarTokenomics<any>\nF extends "
            },
            {
              "kind": "Reference",
              "text": "CapoFeatureFlags",
              "canonicalReference": "@donecollectively/stellar-contracts!CapoFeatureFlags:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "GenericTokenomicsFeatureFlags",
              "canonicalReference": "stellar-tokenomics!GenericTokenomicsFeatureFlags:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Capo",
              "canonicalReference": "@donecollectively/stellar-contracts!Capo:class"
            },
            {
              "kind": "Content",
              "text": "<SELF, F>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/StellarTokenomicsCapo.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "SELF",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              }
            }
          ],
          "isAbstract": true,
          "name": "StellarTokenomicsCapo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!StellarTokenomicsCapo.defaultParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static get defaultParams(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        rev: bigint;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "defaultParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!StellarTokenomicsCapo#findMemberInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findMemberInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FoundUut",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundUut:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "findMemberInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!StellarTokenomicsCapo#getMintDelegate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMintDelegate(charterData?: "
                },
                {
                  "kind": "Reference",
                  "text": "CapoDatum$Ergo$CharterData",
                  "canonicalReference": "stellar-tokenomics!~CapoDatum$Ergo$CharterData:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "STokMintDelegate",
                  "canonicalReference": "stellar-tokenomics!STokMintDelegate:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "charterData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getMintDelegate"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!StellarTokenomicsCapo#mkTxnMintParticipantToken:member(1)",
              "docComment": "/**\n * Creates a transaction minting a collaborator token\n *\n * @remarks\n *\n * Sends the collaborator token to the provided address\n *\n * @param address - recipient of the collaborator token\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnMintParticipantToken(addr: "
                },
                {
                  "kind": "Reference",
                  "text": "Address",
                  "canonicalReference": "@helios-lang/ledger!Address:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "hasUutContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasUutContext:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"member\"> & "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "anyState",
                  "canonicalReference": "@donecollectively/stellar-contracts!anyState:interface"
                },
                {
                  "kind": "Content",
                  "text": "> & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "addr",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnMintParticipantToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!StellarTokenomicsCapo#mkTxnWithMemberInfo:member(1)",
              "docComment": "/**\n * Finds the user's member token and adds it to the transaction context\n *\n * @remarks\n *\n * Includes a seed-utxo in the transaction context for use in any aspect of the transaction that may need it (i.e. minting a discount token or ?)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkTxnWithMemberInfo<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(skipReturningToken?: "
                },
                {
                  "kind": "Content",
                  "text": "\"skipTokenReturn\""
                },
                {
                  "kind": "Content",
                  "text": ", tcx?: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasMemberToken",
                  "canonicalReference": "stellar-tokenomics!hasMemberToken:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "skipReturningToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkTxnWithMemberInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!StellarTokenomicsCapo#mkUutName:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mkUutName(purpose: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", txin: "
                },
                {
                  "kind": "Reference",
                  "text": "TxInput",
                  "canonicalReference": "@helios-lang/ledger!TxInput:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UutName",
                  "canonicalReference": "@donecollectively/stellar-contracts!UutName:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "purpose",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "txin",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mkUutName"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!StellarTokenomicsCapo#mustFindMemberInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mustFindMemberInfo(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FoundUut",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundUut:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "mustFindMemberInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!StellarTokenomicsCapo#requirements:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requirements(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "ReqtsMap",
                  "canonicalReference": "@donecollectively/stellar-contracts!ReqtsMap:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"Provides a single entry point dApps can use to get tokenomics for their project\" | \"Uses the Capo (leader) to gather tokenomics-related contracts together\" | \"Defines a tokenomics minting delegate\" | \"Has a settings data structure where tokenomics plugins can store protocol parameters\" | \"issues 'membership card' tokens to participants\" | \"Can upgrade the Settings data\" | \"the settings data can be updated to have new details if backward compatible\" | \"Can find membership card tokens for participants\", never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "requirements"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!StellarTokenomicsCapo#txnAddMemberToken:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnAddMemberToken<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", memberInfo?: "
                },
                {
                  "kind": "Reference",
                  "text": "FoundUut",
                  "canonicalReference": "@donecollectively/stellar-contracts!FoundUut:type"
                },
                {
                  "kind": "Content",
                  "text": ", skipReturningToken?: "
                },
                {
                  "kind": "Content",
                  "text": "\"skipTokenReturn\""
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & "
                },
                {
                  "kind": "Reference",
                  "text": "hasMemberToken",
                  "canonicalReference": "stellar-tokenomics!hasMemberToken:type"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "hasSeedUtxo",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasSeedUtxo:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "memberInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "skipReturningToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnAddMemberToken"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!StellarTokenomicsCapo#txnMintingFungibleTokens:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "txnMintingFungibleTokens<TCX extends "
                },
                {
                  "kind": "Reference",
                  "text": "StellarTxnContext",
                  "canonicalReference": "@donecollectively/stellar-contracts!StellarTxnContext:class"
                },
                {
                  "kind": "Content",
                  "text": ">(tcx: "
                },
                {
                  "kind": "Content",
                  "text": "TCX"
                },
                {
                  "kind": "Content",
                  "text": ", tokenName: "
                },
                {
                  "kind": "Content",
                  "text": "string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ", tokenCount: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCX & import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "hasCharterRef",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasCharterRef:type"
                },
                {
                  "kind": "Content",
                  "text": " & import(\"@donecollectively/stellar-contracts\")."
                },
                {
                  "kind": "Reference",
                  "text": "hasGovAuthority",
                  "canonicalReference": "@donecollectively/stellar-contracts!hasGovAuthority:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "TCX",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tcx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "tokenCount",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "txnMintingFungibleTokens"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "stellar-tokenomics!~stmdbBase:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "stmdbBase: "
            },
            {
              "kind": "Reference",
              "text": "ConcreteCapoDelegateBundle",
              "canonicalReference": "@donecollectively/stellar-contracts!ConcreteCapoDelegateBundle:type"
            }
          ],
          "fileUrlPath": "src/STokMintDelegate.hlb.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "stmdbBase",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!STokMintDelegate:class",
          "docComment": "/**\n * Base class for mint/spend delegates\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class STokMintDelegate extends "
            },
            {
              "kind": "Reference",
              "text": "BasicMintDelegate",
              "canonicalReference": "@donecollectively/stellar-contracts!BasicMintDelegate:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/STokMintDelegate.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "STokMintDelegate",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "stellar-tokenomics!STokMintDelegate:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `STokMintDelegate` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(...args: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!STokMintDelegate#delegateName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!STokMintDelegate#scriptBundle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scriptBundle(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "scriptBundle"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~STokMintDelegateBundle:class",
          "docComment": "/**\n * A specialized minting delegate for testing purposes\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class STokMintDelegateBundle extends "
            },
            {
              "kind": "Reference",
              "text": "stmdbBase",
              "canonicalReference": "stellar-tokenomics!~stmdbBase"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/STokMintDelegate.hlb.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "STokMintDelegateBundle",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~STokMintDelegateBundle#delegateName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delegateName(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delegateName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~STokMintDelegateBundle#requiresGovAuthority:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requiresGovAuthority: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "requiresGovAuthority",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~STokMintDelegateBundle#specializedDelegateModule:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "specializedDelegateModule: "
                },
                {
                  "kind": "Reference",
                  "text": "Source",
                  "canonicalReference": "@helios-lang/compiler-utils!Source:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "specializedDelegateModule",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ThreadInfo:interface",
          "docComment": "/**\n * A strong type for the canonical form of ThreadInfo\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see ErgoThreadInfo instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ThreadInfo "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ThreadInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ThreadInfo#chunkForkedAt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chunkForkedAt: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chunkForkedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ThreadInfo#nestedThreads:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nestedThreads: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nestedThreads",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ThreadInfo#parentChunkId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentChunkId: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentChunkId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ThreadInfo#retiredThreads:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retiredThreads: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "retiredThreads",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ThreadInfo#saleId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "saleId: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "saleId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~ThreadInfoLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of ThreadInfo\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ThreadInfoLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "ThreadInfoLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ThreadInfoLike#chunkForkedAt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chunkForkedAt: "
                },
                {
                  "kind": "Reference",
                  "text": "TimeLike",
                  "canonicalReference": "stellar-tokenomics!~TimeLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chunkForkedAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ThreadInfoLike#nestedThreads:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nestedThreads: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nestedThreads",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ThreadInfoLike#parentChunkId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentChunkId: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentChunkId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ThreadInfoLike#retiredThreads:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "retiredThreads: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "retiredThreads",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~ThreadInfoLike#saleId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "saleId: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "saleId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~TimeLike_2:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TimeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "name": "TimeLike_2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~TimeLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type TimeLike = "
            },
            {
              "kind": "Reference",
              "text": "IntLike",
              "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "TimeLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~VxfDestination:type",
          "docComment": "/**\n * VxfDestination enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **5 variant(s)** of the VxfDestination enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `VxfDestinationHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type VxfDestination = "
            },
            {
              "kind": "Content",
              "text": "{\n    RelativeLink: "
            },
            {
              "kind": "Reference",
              "text": "VxfDestination$RelativeLink",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$RelativeLink:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    AnyTokenHolder: "
            },
            {
              "kind": "Reference",
              "text": "VxfDestination$AnyTokenHolder",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$AnyTokenHolder:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    PubKey: "
            },
            {
              "kind": "Reference",
              "text": "PubKeyHash",
              "canonicalReference": "@helios-lang/ledger!PubKeyHash:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    Anywhere: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    NotYetDefined: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfDestination",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~VxfDestination$AnyTokenHolder:interface",
          "docComment": "/**\n * A strong type for the canonical form of VxfDestination$AnyTokenHolder\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see VxfDestination$Ergo$AnyTokenHolder instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface VxfDestination$AnyTokenHolder "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfDestination$AnyTokenHolder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$AnyTokenHolder#assetName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assetName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "assetName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$AnyTokenHolder#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~VxfDestination$AnyTokenHolderLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of VxfDestination$AnyTokenHolder\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface VxfDestination$AnyTokenHolderLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfDestination$AnyTokenHolderLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$AnyTokenHolderLike#assetName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assetName: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "assetName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$AnyTokenHolderLike#mph:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mph",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~VxfDestination$Ergo$AnyTokenHolder:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of VxfDestination$AnyTokenHolder\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the VxfDestination$AnyTokenHolderLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type VxfDestination$Ergo$AnyTokenHolder = "
            },
            {
              "kind": "Reference",
              "text": "VxfDestination$AnyTokenHolder",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$AnyTokenHolder:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfDestination$Ergo$AnyTokenHolder",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~VxfDestination$Ergo$RelativeLink:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of VxfDestination$RelativeLink\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the VxfDestination$RelativeLinkLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type VxfDestination$Ergo$RelativeLink = "
            },
            {
              "kind": "Content",
              "text": "{\n    link: "
            },
            {
              "kind": "Reference",
              "text": "ErgoRelativeDelegateLink",
              "canonicalReference": "stellar-tokenomics!~ErgoRelativeDelegateLink_2:type"
            },
            {
              "kind": "Content",
              "text": ";\n    vxfActivity: "
            },
            {
              "kind": "Reference",
              "text": "ErgoVxfExpectedActivity",
              "canonicalReference": "stellar-tokenomics!~ErgoVxfExpectedActivity:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfDestination$Ergo$RelativeLink",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~VxfDestination$RelativeLink:interface",
          "docComment": "/**\n * A strong type for the canonical form of VxfDestination$RelativeLink\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see VxfDestination$Ergo$RelativeLink instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface VxfDestination$RelativeLink "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfDestination$RelativeLink",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$RelativeLink#link:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "link: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLink",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLink_2:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "link",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$RelativeLink#vxfActivity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "vxfActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "VxfExpectedActivity",
                  "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "vxfActivity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~VxfDestination$RelativeLinkLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of VxfDestination$RelativeLink\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface VxfDestination$RelativeLinkLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfDestination$RelativeLinkLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$RelativeLinkLike#link:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "link: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "link",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$RelativeLinkLike#vxfActivity:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "vxfActivity: "
                },
                {
                  "kind": "Reference",
                  "text": "VxfExpectedActivityLike",
                  "canonicalReference": "stellar-tokenomics!~VxfExpectedActivityLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "vxfActivity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~VxfDestinationHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***VxfDestination*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class VxfDestinationHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "VxfDestinationHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~VxfDestinationHelper#AnyTokenHolder:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"VxfProtocol::VxfDestination.AnyTokenHolder\"***\n *\n * @remarks\n *\n * - ***VxfDestination$AnyTokenHolderLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AnyTokenHolder(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "VxfDestination$AnyTokenHolderLike",
                  "canonicalReference": "stellar-tokenomics!~VxfDestination$AnyTokenHolderLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        mph: "
                },
                {
                  "kind": "Reference",
                  "text": "MintingPolicyHash",
                  "canonicalReference": "@helios-lang/ledger!MintingPolicyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[];\n        assetName: number[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AnyTokenHolder"
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~VxfDestinationHelper#Anywhere:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"VxfProtocol::VxfDestination.Anywhere\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#98***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get Anywhere(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Anywhere",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stellar-tokenomics!~VxfDestinationHelper#NotYetDefined:member",
              "docComment": "/**\n * (property getter): UplcData for ***\"VxfProtocol::VxfDestination.NotYetDefined\"***\n *\n * @remarks\n *\n * - ***tagOnly*** variant accessor returns an empty ***constrData#99***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get NotYetDefined(): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "NotYetDefined",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~VxfDestinationHelper#PubKey:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"VxfProtocol::VxfDestination.PubKey\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "PubKey(pkh: "
                },
                {
                  "kind": "Reference",
                  "text": "PubKeyHash",
                  "canonicalReference": "@helios-lang/ledger!PubKeyHash:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pkh",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PubKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~VxfDestinationHelper#RelativeLink:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"VxfProtocol::VxfDestination.RelativeLink\"***\n *\n * @remarks\n *\n * - ***VxfDestination$RelativeLinkLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "RelativeLink(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "VxfDestination$RelativeLinkLike",
                  "canonicalReference": "stellar-tokenomics!~VxfDestination$RelativeLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        link: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDelegateLinkLike",
                  "canonicalReference": "stellar-tokenomics!~RelativeDelegateLinkLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        vxfActivity: {\n            VxfTransfer: /* implied wrapper { appData: ... } for singleVariantField */ "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n        } | {\n            VxfStorage: /* implied wrapper { appData: ... } for singleVariantField */ "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n        } | {\n            SpecificRedeemerId: "
                },
                {
                  "kind": "Reference",
                  "text": "VxfExpectedActivity$SpecificRedeemerIdLike",
                  "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerIdLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        } | {\n            TaggedRedeemer: "
                },
                {
                  "kind": "Reference",
                  "text": "VxfExpectedActivity$TaggedRedeemerLike",
                  "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemerLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        } | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RelativeLink"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~VxfDestinationLike:type",
          "docComment": "/**\n * VxfDestination enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **5 variant(s)** of the VxfDestination enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `VxfDestinationHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type VxfDestinationLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    RelativeLink: "
            },
            {
              "kind": "Reference",
              "text": "VxfDestination$RelativeLinkLike",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$RelativeLinkLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    AnyTokenHolder: "
            },
            {
              "kind": "Reference",
              "text": "VxfDestination$AnyTokenHolderLike",
              "canonicalReference": "stellar-tokenomics!~VxfDestination$AnyTokenHolderLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    PubKey: /* implied wrapper { pkh: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "PubKeyHash",
              "canonicalReference": "@helios-lang/ledger!PubKeyHash:type"
            },
            {
              "kind": "Content",
              "text": " | string | number[];\n} | {\n    Anywhere: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    NotYetDefined: "
            },
            {
              "kind": "Reference",
              "text": "tagOnly",
              "canonicalReference": "@donecollectively/stellar-contracts!tagOnly:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfDestinationLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity:type",
          "docComment": "/**\n * VxfExpectedActivity enum variants\n *\n * @remarks\n *\n * - expresses the essential raw data structures supporting the **4 variant(s)** of the VxfExpectedActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `VxfExpectedActivityHelper` class for generating UPLC data for this enum type\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type VxfExpectedActivity = "
            },
            {
              "kind": "Content",
              "text": "{\n    VxfTransfer: /* implied wrapper { appData: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n} | {\n    VxfStorage: /* implied wrapper { appData: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n} | {\n    SpecificRedeemerId: "
            },
            {
              "kind": "Reference",
              "text": "VxfExpectedActivity$SpecificRedeemerId",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerId:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    TaggedRedeemer: "
            },
            {
              "kind": "Reference",
              "text": "VxfExpectedActivity$TaggedRedeemer",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemer:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfExpectedActivity",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$Ergo$SpecificRedeemerId:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of VxfExpectedActivity$SpecificRedeemerId\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the VxfExpectedActivity$SpecificRedeemerIdLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type VxfExpectedActivity$Ergo$SpecificRedeemerId = "
            },
            {
              "kind": "Reference",
              "text": "VxfExpectedActivity$SpecificRedeemerId",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerId:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfExpectedActivity$Ergo$SpecificRedeemerId",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$Ergo$TaggedRedeemer:type",
          "docComment": "/**\n * An ergonomic, though less strictly-safe form of VxfExpectedActivity$TaggedRedeemer\n *\n * @remarks\n *\n * This type can use enums expressed as merged unions of the enum variants. You might think of this type as being \"read-only\", in that it's possible to create data with this type that would not be suitable for conversion to on-chain use. For creating such data, use the VxfExpectedActivity$TaggedRedeemerLike type, or the on-chain data-building helpers instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type VxfExpectedActivity$Ergo$TaggedRedeemer = "
            },
            {
              "kind": "Reference",
              "text": "VxfExpectedActivity$TaggedRedeemer",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemer:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfExpectedActivity$Ergo$TaggedRedeemer",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerId:interface",
          "docComment": "/**\n * A strong type for the canonical form of VxfExpectedActivity$SpecificRedeemerId\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see VxfExpectedActivity$Ergo$SpecificRedeemerId instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface VxfExpectedActivity$SpecificRedeemerId "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfExpectedActivity$SpecificRedeemerId",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerId#appData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appData: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "appData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerId#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerId#inNestedList:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inNestedList: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inNestedList",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerId#nestedListRedeemerId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nestedListRedeemerId: "
                },
                {
                  "kind": "Content",
                  "text": "bigint | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nestedListRedeemerId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerIdLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of VxfExpectedActivity$SpecificRedeemerId\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface VxfExpectedActivity$SpecificRedeemerIdLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfExpectedActivity$SpecificRedeemerIdLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerIdLike#appData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appData: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "appData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerIdLike#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerIdLike#inNestedList:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inNestedList: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inNestedList",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerIdLike#nestedListRedeemerId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nestedListRedeemerId: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nestedListRedeemerId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemer:interface",
          "docComment": "/**\n * A strong type for the canonical form of VxfExpectedActivity$TaggedRedeemer\n *\n * @remarks\n *\n * Note that any enum fields in this type are expressed as a disjoint union of the enum variants. Processing enum data conforming to this type can be a bit of a pain. For a more ergonomic, though less strictly-safe form of this type, see VxfExpectedActivity$Ergo$TaggedRedeemer instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface VxfExpectedActivity$TaggedRedeemer "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfExpectedActivity$TaggedRedeemer",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemer#appData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appData: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "appData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemer#firstFieldConstrTag:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "firstFieldConstrTag: "
                },
                {
                  "kind": "Content",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "firstFieldConstrTag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemer#inNestedList:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inNestedList: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inNestedList",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemerLike:interface",
          "docComment": "/**\n * A strong type for the permissive form of VxfExpectedActivity$TaggedRedeemer\n *\n * @remarks\n *\n * The field types enable implicit conversion from various allowable input types (including the canonical form).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface VxfExpectedActivity$TaggedRedeemerLike "
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfExpectedActivity$TaggedRedeemerLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemerLike#appData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appData: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "appData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemerLike#firstFieldConstrTag:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "firstFieldConstrTag: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "firstFieldConstrTag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemerLike#inNestedList:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inNestedList: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inNestedList",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "stellar-tokenomics!~VxfExpectedActivityHelper:class",
          "docComment": "/**\n * Helper class for generating UplcData for variants of the ***VxfExpectedActivity*** enum type.\n *\n * @remarks\n *\n * this class is not intended to be used directly. Its methods are available through automatic accesors in the parent struct, contract-datum- or contract-activity-bridges.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class VxfExpectedActivityHelper extends "
            },
            {
              "kind": "Reference",
              "text": "EnumBridge",
              "canonicalReference": "@donecollectively/stellar-contracts!EnumBridge:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "JustAnEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!JustAnEnum:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/MarketSale/MarketSale.concrete.bridge.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "VxfExpectedActivityHelper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivityHelper#SpecificRedeemerId:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"VxfProtocol::VxfExpectedActivity.SpecificRedeemerId\"***\n *\n * @remarks\n *\n * - ***VxfExpectedActivity$SpecificRedeemerIdLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "SpecificRedeemerId(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "VxfExpectedActivity$SpecificRedeemerIdLike",
                  "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerIdLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        id: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        inNestedList: boolean;\n        nestedListRedeemerId: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n        appData: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SpecificRedeemerId"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivityHelper#TaggedRedeemer:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"VxfProtocol::VxfExpectedActivity.TaggedRedeemer\"***\n *\n * @remarks\n *\n * - ***VxfExpectedActivity$TaggedRedeemerLike*** is the same as the expanded field-types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TaggedRedeemer(fields: "
                },
                {
                  "kind": "Reference",
                  "text": "VxfExpectedActivity$TaggedRedeemerLike",
                  "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemerLike:interface"
                },
                {
                  "kind": "Content",
                  "text": " | {\n        firstFieldConstrTag: "
                },
                {
                  "kind": "Reference",
                  "text": "IntLike",
                  "canonicalReference": "@helios-lang/codec-utils!IntLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        inNestedList: boolean;\n        appData: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "TaggedRedeemer"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivityHelper#VxfStorage:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"VxfProtocol::VxfExpectedActivity.VxfStorage\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "VxfStorage(appData: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "appData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "VxfStorage"
            },
            {
              "kind": "Method",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivityHelper#VxfTransfer:member(1)",
              "docComment": "/**\n * generates UplcData for ***\"VxfProtocol::VxfExpectedActivity.VxfTransfer\"***\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "VxfTransfer(appData: "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "UplcData",
                  "canonicalReference": "@helios-lang/uplc!UplcData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "appData",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "VxfTransfer"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stellar-tokenomics!~VxfExpectedActivityLike:type",
          "docComment": "/**\n * VxfExpectedActivity enum variants (permissive)\n *\n * @remarks\n *\n * - expresses the allowable data structure for creating any of the **4 variant(s)** of the VxfExpectedActivity enum type\n *\n * - **Note**: Stellar Contracts provides a higher-level `VxfExpectedActivityHelper` class for generating UPLC data for this enum type\n *\n * #### Permissive Type This is a permissive type that allows additional input data types, which are converted by convention to the canonical types used in the on-chain context.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type VxfExpectedActivityLike = "
            },
            {
              "kind": "Reference",
              "text": "IntersectedEnum",
              "canonicalReference": "@donecollectively/stellar-contracts!IntersectedEnum:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    VxfTransfer: /* implied wrapper { appData: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n} | {\n    VxfStorage: /* implied wrapper { appData: ... } for singleVariantField */ "
            },
            {
              "kind": "Reference",
              "text": "UplcData",
              "canonicalReference": "@helios-lang/uplc!UplcData:type"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n} | {\n    SpecificRedeemerId: "
            },
            {
              "kind": "Reference",
              "text": "VxfExpectedActivity$SpecificRedeemerIdLike",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$SpecificRedeemerIdLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    TaggedRedeemer: "
            },
            {
              "kind": "Reference",
              "text": "VxfExpectedActivity$TaggedRedeemerLike",
              "canonicalReference": "stellar-tokenomics!~VxfExpectedActivity$TaggedRedeemerLike:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "doc-gen/d.ts/src/MarketSale/MarketSale.concrete.typeInfo.d.ts",
          "releaseTag": "Public",
          "name": "VxfExpectedActivityLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        }
      ]
    }
  ]
}
