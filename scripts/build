#!/usr/bin/env bash
startTime=$(date)

. ./node_modules/@donecollectively/stellar-contracts/scripts/support.sh

# set -e # exit on error
#//! EXPECTS to be run in context of `pnpm exec`

playStartSound

# echo "tsc --traceResolution -p ./tsconfig.dts.json"
# tsc --traceResolution -p ./tsconfig.dts.json
# exit

inBackground "typecheck all, prep for doc-gen and main .d.ts" \
    tsc -p ./tsconfig.dts.json  &
{
    rollup \
      --config rollup.config.ts \
      --importAttributesKey "with" \
      --configPlugin 'esbuild={sourcemap:true,supported:{"import-assertions":false},loaders:{".json": "json"}, target: "esnext", tsconfig:"./tsconfig.rollupconfig.json"}' \
      $* && playProgressSound
} || logProblemWith "dAPI build with rollup"

wait
find src -type d | tail -n +2 | while read a ; do { mkdir -p .stellar/api/$a ; } done
find src -name \*.typeInfo.d.ts | grep -v '/tests/' | while read a ; do { cp $a .stellar/api/$a ; } done

echo "build started at  $startTime"
date
exitIfError
playCheckpointSound


echo -n "build finished at "
date
# inBackground "dAPI docs" api-extractor run --local --verbose --diagnostics &
inBackground "dAPI docs" api-extractor run --local --verbose &

wait
echo "build started at  $startTime"
echo "build finished at $(date)"
exitIfError

playSuccessSound

# to debug rollup plugins:
#   pnpm exec node --inspect-brk \
#      node_modules/rollup/dist/bin/rollup \
#         --config rollup.config.ts \
#         --configPlugin 'esbuild={loaders:{".json": "json"}, target: "esnext", tsconfig:"./tsconfig.rollupconfig.json"}'
